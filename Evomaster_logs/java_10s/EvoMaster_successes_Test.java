import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import static org.evomaster.client.java.controller.db.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import  java.util.List;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2022-03-11T01:32:34.697742-08:00[America/Los_Angeles]
 * <br>
 * The generated test suite contains 8 tests
 * <br>
 * Covered targets: 232
 * <br>
 * Used time: 0h 0m 10s
 * <br>
 * Needed budget for current results: 99%
 * <br>
 * This file contains test cases that represent successful calls.
 */
public class EvoMaster_successes_Test {

    
    private static final SutHandler controller = new em.embedded.eu.fayder.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test
    public void test_0() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha/cU")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("Cuba"))
                .body("'topLevelDomain'.size()", equalTo(1))
                .body("'topLevelDomain'", hasItems(".cu"))
                .body("'alpha2Code'", containsString("CU"))
                .body("'alpha3Code'", containsString("CUB"))
                .body("'callingCodes'.size()", equalTo(1))
                .body("'callingCodes'", hasItems("53"))
                .body("'capital'", containsString("Havana"))
                .body("'altSpellings'.size()", equalTo(3))
                .body("'altSpellings'", hasItems("CU", "Republic of Cuba", "República de Cuba"))
                .body("'region'", containsString("Americas"))
                .body("'subregion'", containsString("Caribbean"))
                .body("'population'", numberMatches(1.1239004E7))
                .body("'latlng'.size()", equalTo(2))
                .body("'latlng'[0]", numberMatches(21.5))
                .body("'latlng'[1]", numberMatches(-80.0))
                .body("'demonym'", containsString("Cuban"))
                .body("'area'", numberMatches(109884.0))
                .body("'gini'", nullValue())
                .body("'timezones'.size()", equalTo(1))
                .body("'timezones'", hasItems("UTC-05:00"))
                .body("'borders'.size()", equalTo(0))
                .body("'nativeName'", containsString("Cuba"))
                .body("'numericCode'", containsString("192"))
                .body("'currencies'.size()", equalTo(2))
                .body("'currencies'[0].'code'", containsString("CUC"))
                .body("'currencies'[0].'name'", containsString("Cuban convertible peso"))
                .body("'currencies'[0].'symbol'", containsString("$"))
                .body("'currencies'[1].'code'", containsString("CUP"))
                .body("'currencies'[1].'name'", containsString("Cuban peso"))
                .body("'currencies'[1].'symbol'", containsString("$"))
                .body("'languages'.size()", equalTo(1))
                .body("'languages'[0].'iso639_1'", containsString("es"))
                .body("'languages'[0].'iso639_2'", containsString("spa"))
                .body("'languages'[0].'name'", containsString("Spanish"))
                .body("'languages'[0].'nativeName'", containsString("Español"))
                .body("'translations'.'de'", containsString("Kuba"))
                .body("'translations'.'es'", containsString("Cuba"))
                .body("'translations'.'fr'", containsString("Cuba"))
                .body("'translations'.'ja'", containsString("キューバ"))
                .body("'translations'.'it'", containsString("Cuba"))
                .body("'translations'.'br'", containsString("Cuba"))
                .body("'translations'.'pt'", containsString("Cuba"))
                .body("'translations'.'nl'", containsString("Cuba"))
                .body("'translations'.'hr'", containsString("Kuba"))
                .body("'translations'.'fa'", containsString("کوبا"))
                .body("'flag'", containsString("https://restcountries.eu/data/cub.svg"))
                .body("'regionalBlocs'.size()", equalTo(0))
                .body("'cioc'", containsString("CUB"));
        
    }
    
    
    @Test
    public void test_1() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha/Im")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("Isle of Man"))
                .body("'topLevelDomain'.size()", equalTo(1))
                .body("'topLevelDomain'", hasItems(".im"))
                .body("'alpha2Code'", containsString("IM"))
                .body("'alpha3Code'", containsString("IMN"))
                .body("'callingCodes'.size()", equalTo(1))
                .body("'callingCodes'", hasItems("44"))
                .body("'capital'", containsString("Douglas"))
                .body("'altSpellings'.size()", equalTo(4))
                .body("'altSpellings'", hasItems("IM", "Ellan Vannin", "Mann", "Mannin"))
                .body("'region'", containsString("Europe"))
                .body("'subregion'", containsString("Northern Europe"))
                .body("'population'", numberMatches(84497.0))
                .body("'latlng'.size()", equalTo(2))
                .body("'latlng'[0]", numberMatches(54.25))
                .body("'latlng'[1]", numberMatches(-4.5))
                .body("'demonym'", containsString("Manx"))
                .body("'area'", numberMatches(572.0))
                .body("'gini'", nullValue())
                .body("'timezones'.size()", equalTo(1))
                .body("'timezones'", hasItems("UTC+00:00"))
                .body("'borders'.size()", equalTo(0))
                .body("'nativeName'", containsString("Isle of Man"))
                .body("'numericCode'", containsString("833"))
                .body("'currencies'.size()", equalTo(1))
                .body("'currencies'", hasItems("GBP"))
                .body("'languages'.size()", equalTo(2))
                .body("'languages'", hasItems("en", "gv"))
                .body("'translations'.'de'", containsString("Insel Man"))
                .body("'translations'.'es'", containsString("Isla de Man"))
                .body("'translations'.'fr'", containsString("Île de Man"))
                .body("'translations'.'ja'", containsString("マン島"))
                .body("'translations'.'it'", containsString("Isola di Man"))
                .body("'relevance'", containsString("0.5"));
        
    }
    
    
    @Test
    public void test_2() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha?codes=rQ%40")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0]", nullValue());
        
    }
    
    
    @Test
    public void test_3() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/name/SUD?fullText=false")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(2))
                .body("[0].'name'", containsString("South Sudan"))
                .body("[0].'topLevelDomain'.size()", equalTo(1))
                .body("[0].'topLevelDomain'", hasItems(".ss"))
                .body("[0].'alpha2Code'", containsString("SS"))
                .body("[0].'alpha3Code'", containsString("SSD"))
                .body("[0].'callingCodes'.size()", equalTo(1))
                .body("[0].'callingCodes'", hasItems("211"))
                .body("[0].'capital'", containsString("Juba"))
                .body("[0].'altSpellings'.size()", equalTo(1))
                .body("[0].'altSpellings'", hasItems("SS"))
                .body("[0].'region'", containsString("Africa"))
                .body("[0].'subregion'", containsString("Middle Africa"))
                .body("[0].'population'", numberMatches(1.1892934E7))
                .body("[0].'latlng'.size()", equalTo(2))
                .body("[0].'latlng'[0]", numberMatches(7.0))
                .body("[0].'latlng'[1]", numberMatches(30.0))
                .body("[0].'demonym'", containsString("South Sudanese"))
                .body("[0].'area'", numberMatches(619745.0))
                .body("[0].'gini'", numberMatches(45.5))
                .body("[0].'timezones'.size()", equalTo(1))
                .body("[0].'timezones'", hasItems("UTC+03:00"))
                .body("[0].'borders'.size()", equalTo(6))
                .body("[0].'borders'", hasItems("CAF", "COD", "ETH", "KEN", "SDN", "UGA"))
                .body("[0].'nativeName'", containsString("South Sudan"))
                .body("[0].'numericCode'", containsString("728"))
                .body("[0].'currencies'.size()", equalTo(1))
                .body("[0].'currencies'", hasItems("SSP"))
                .body("[0].'languages'.size()", equalTo(1))
                .body("[0].'languages'", hasItems("en"))
                .body("[0].'translations'.'de'", containsString("Südsudan"))
                .body("[0].'translations'.'es'", containsString("Sudán del Sur"))
                .body("[0].'translations'.'fr'", containsString("Soudan du Sud"))
                .body("[0].'translations'.'ja'", containsString("南スーダン"))
                .body("[0].'translations'.'it'", containsString("Sudan del sud"))
                .body("[0].'relevance'", containsString("0"))
                .body("[1].'name'", containsString("Sudan"))
                .body("[1].'topLevelDomain'.size()", equalTo(1))
                .body("[1].'topLevelDomain'", hasItems(".sd"))
                .body("[1].'alpha2Code'", containsString("SD"))
                .body("[1].'alpha3Code'", containsString("SDN"))
                .body("[1].'callingCodes'.size()", equalTo(1))
                .body("[1].'callingCodes'", hasItems("249"))
                .body("[1].'capital'", containsString("Khartoum"))
                .body("[1].'altSpellings'.size()", equalTo(3))
                .body("[1].'altSpellings'", hasItems("SD", "Republic of the Sudan", "Jumhūrīyat as-Sūdān"))
                .body("[1].'region'", containsString("Africa"))
                .body("[1].'subregion'", containsString("Northern Africa"))
                .body("[1].'population'", numberMatches(3.8435252E7))
                .body("[1].'latlng'.size()", equalTo(2))
                .body("[1].'latlng'[0]", numberMatches(15.0))
                .body("[1].'latlng'[1]", numberMatches(30.0))
                .body("[1].'demonym'", containsString("Sudanese"))
                .body("[1].'area'", numberMatches(1886068.0))
                .body("[1].'gini'", numberMatches(35.3))
                .body("[1].'timezones'.size()", equalTo(1))
                .body("[1].'timezones'", hasItems("UTC+03:00"))
                .body("[1].'borders'.size()", equalTo(7))
                .body("[1].'borders'", hasItems("CAF", "TCD", "EGY", "ERI", "ETH", "LBY", "SSD"))
                .body("[1].'nativeName'", containsString("السودان"))
                .body("[1].'numericCode'", containsString("729"))
                .body("[1].'currencies'.size()", equalTo(1))
                .body("[1].'currencies'", hasItems("SDG"))
                .body("[1].'languages'.size()", equalTo(2))
                .body("[1].'languages'", hasItems("ar", "en"))
                .body("[1].'translations'.'de'", containsString("Sudan"))
                .body("[1].'translations'.'es'", containsString("Sudán"))
                .body("[1].'translations'.'fr'", containsString("Soudan"))
                .body("[1].'translations'.'ja'", containsString("スーダン"))
                .body("[1].'translations'.'it'", containsString("Sudan"))
                .body("[1].'relevance'", containsString("0"));
        
    }
    
    
    @Test
    public void test_4() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha/cU?fields=KIY")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("isEmpty()", is(true));
        
    }
    
    
    @Test
    public void test_5() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/all")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(250))
                .body("[0].'name'", containsString("Afghanistan"))
                .body("[0].'topLevelDomain'.size()", equalTo(1))
                .body("[0].'topLevelDomain'", hasItems(".af"))
                .body("[0].'alpha2Code'", containsString("AF"))
                .body("[0].'alpha3Code'", containsString("AFG"))
                .body("[0].'callingCodes'.size()", equalTo(1))
                .body("[0].'callingCodes'", hasItems("93"))
                .body("[0].'capital'", containsString("Kabul"))
                .body("[0].'altSpellings'.size()", equalTo(2))
                .body("[0].'altSpellings'", hasItems("AF", "Afġānistān"))
                .body("[0].'region'", containsString("Asia"))
                .body("[0].'subregion'", containsString("Southern Asia"))
                .body("[0].'population'", numberMatches(2.60231E7))
                .body("[0].'latlng'.size()", equalTo(2))
                .body("[0].'latlng'[0]", numberMatches(33.0))
                .body("[0].'latlng'[1]", numberMatches(65.0))
                .body("[0].'demonym'", containsString("Afghan"))
                .body("[0].'area'", numberMatches(652230.0))
                .body("[0].'gini'", numberMatches(27.8))
                .body("[0].'timezones'.size()", equalTo(1))
                .body("[0].'timezones'", hasItems("UTC+04:30"))
                .body("[0].'borders'.size()", equalTo(6))
                .body("[0].'borders'", hasItems("IRN", "PAK", "TKM", "UZB", "TJK", "CHN"))
                .body("[0].'nativeName'", containsString("افغانستان"))
                .body("[0].'numericCode'", containsString("004"))
                .body("[0].'currencies'.size()", equalTo(1))
                .body("[0].'currencies'", hasItems("AFN"))
                .body("[0].'languages'.size()", equalTo(3))
                .body("[0].'languages'", hasItems("ps", "uz", "tk"))
                .body("[0].'translations'.'de'", containsString("Afghanistan"))
                .body("[0].'translations'.'es'", containsString("Afganistán"))
                .body("[0].'translations'.'fr'", containsString("Afghanistan"))
                .body("[0].'translations'.'ja'", containsString("アフガニスタン"))
                .body("[0].'translations'.'it'", containsString("Afghanistan"))
                .body("[0].'relevance'", containsString("0"))
                .body("[1].'name'", containsString("Åland Islands"))
                .body("[1].'topLevelDomain'.size()", equalTo(1))
                .body("[1].'topLevelDomain'", hasItems(".ax"))
                .body("[1].'alpha2Code'", containsString("AX"))
                .body("[1].'alpha3Code'", containsString("ALA"))
                .body("[1].'callingCodes'.size()", equalTo(1))
                .body("[1].'callingCodes'", hasItems("358"))
                .body("[1].'capital'", containsString("Mariehamn"))
                .body("[1].'altSpellings'.size()", equalTo(4))
                .body("[1].'altSpellings'", hasItems("AX", "Aaland", "Aland", "Ahvenanmaa"))
                .body("[1].'region'", containsString("Europe"))
                .body("[1].'subregion'", containsString("Northern Europe"))
                .body("[1].'population'", numberMatches(28875.0))
                .body("[1].'latlng'.size()", equalTo(2))
                .body("[1].'latlng'[0]", numberMatches(60.116667))
                .body("[1].'latlng'[1]", numberMatches(19.9))
                .body("[1].'demonym'", containsString("Ålandish"))
                .body("[1].'area'", numberMatches(1580.0))
                .body("[1].'gini'", nullValue())
                .body("[1].'timezones'.size()", equalTo(1))
                .body("[1].'timezones'", hasItems("UTC+02:00"))
                .body("[1].'borders'.size()", equalTo(0))
                .body("[1].'nativeName'", containsString("Åland"))
                .body("[1].'numericCode'", containsString("248"))
                .body("[1].'currencies'.size()", equalTo(1))
                .body("[1].'currencies'", hasItems("EUR"))
                .body("[1].'languages'.size()", equalTo(1))
                .body("[1].'languages'", hasItems("sv"))
                .body("[1].'translations'.'de'", containsString("Åland"))
                .body("[1].'translations'.'es'", containsString("Alandia"))
                .body("[1].'translations'.'fr'", containsString("Åland"))
                .body("[1].'translations'.'ja'", containsString("オーランド諸島"))
                .body("[1].'translations'.'it'", containsString("Isole Aland"))
                .body("[1].'relevance'", containsString("0"))
                .body("[2].'name'", containsString("Albania"))
                .body("[2].'topLevelDomain'.size()", equalTo(1))
                .body("[2].'topLevelDomain'", hasItems(".al"))
                .body("[2].'alpha2Code'", containsString("AL"))
                .body("[2].'alpha3Code'", containsString("ALB"))
                .body("[2].'callingCodes'.size()", equalTo(1))
                .body("[2].'callingCodes'", hasItems("355"))
                .body("[2].'capital'", containsString("Tirana"))
                .body("[2].'altSpellings'.size()", equalTo(4))
                .body("[2].'altSpellings'", hasItems("AL", "Shqipëri", "Shqipëria", "Shqipnia"))
                .body("[2].'region'", containsString("Europe"))
                .body("[2].'subregion'", containsString("Southern Europe"))
                .body("[2].'population'", numberMatches(2893005.0))
                .body("[2].'latlng'.size()", equalTo(2))
                .body("[2].'latlng'[0]", numberMatches(41.0))
                .body("[2].'latlng'[1]", numberMatches(20.0))
                .body("[2].'demonym'", containsString("Albanian"))
                .body("[2].'area'", numberMatches(28748.0))
                .body("[2].'gini'", numberMatches(34.5))
                .body("[2].'timezones'.size()", equalTo(1))
                .body("[2].'timezones'", hasItems("UTC+01:00"))
                .body("[2].'borders'.size()", equalTo(4))
                .body("[2].'borders'", hasItems("MNE", "GRC", "MKD", "KOS"))
                .body("[2].'nativeName'", containsString("Shqipëria"))
                .body("[2].'numericCode'", containsString("008"))
                .body("[2].'currencies'.size()", equalTo(1))
                .body("[2].'currencies'", hasItems("ALL"))
                .body("[2].'languages'.size()", equalTo(1))
                .body("[2].'languages'", hasItems("sq"))
                .body("[2].'translations'.'de'", containsString("Albanien"))
                .body("[2].'translations'.'es'", containsString("Albania"))
                .body("[2].'translations'.'fr'", containsString("Albanie"))
                .body("[2].'translations'.'ja'", containsString("アルバニア"))
                .body("[2].'translations'.'it'", containsString("Albania"))
                .body("[2].'relevance'", containsString("0"))
                .body("[3].'name'", containsString("Algeria"))
                .body("[3].'topLevelDomain'.size()", equalTo(1))
                .body("[3].'topLevelDomain'", hasItems(".dz"))
                .body("[3].'alpha2Code'", containsString("DZ"))
                .body("[3].'alpha3Code'", containsString("DZA"))
                .body("[3].'callingCodes'.size()", equalTo(1))
                .body("[3].'callingCodes'", hasItems("213"))
                .body("[3].'capital'", containsString("Algiers"))
                .body("[3].'altSpellings'.size()", equalTo(3))
                .body("[3].'altSpellings'", hasItems("DZ", "Dzayer", "Algérie"))
                .body("[3].'region'", containsString("Africa"))
                .body("[3].'subregion'", containsString("Northern Africa"))
                .body("[3].'population'", numberMatches(3.95E7))
                .body("[3].'latlng'.size()", equalTo(2))
                .body("[3].'latlng'[0]", numberMatches(28.0))
                .body("[3].'latlng'[1]", numberMatches(3.0))
                .body("[3].'demonym'", containsString("Algerian"))
                .body("[3].'area'", numberMatches(2381741.0))
                .body("[3].'gini'", numberMatches(35.3))
                .body("[3].'timezones'.size()", equalTo(1))
                .body("[3].'timezones'", hasItems("UTC+01:00"))
                .body("[3].'borders'.size()", equalTo(7))
                .body("[3].'borders'", hasItems("TUN", "LBY", "NER", "ESH", "MRT", "MLI", "MAR"))
                .body("[3].'nativeName'", containsString("الجزائر"))
                .body("[3].'numericCode'", containsString("012"))
                .body("[3].'currencies'.size()", equalTo(1))
                .body("[3].'currencies'", hasItems("DZD"))
                .body("[3].'languages'.size()", equalTo(1))
                .body("[3].'languages'", hasItems("ar"))
                .body("[3].'translations'.'de'", containsString("Algerien"))
                .body("[3].'translations'.'es'", containsString("Argelia"))
                .body("[3].'translations'.'fr'", containsString("Algérie"))
                .body("[3].'translations'.'ja'", containsString("アルジェリア"))
                .body("[3].'translations'.'it'", containsString("Algeria"))
                .body("[3].'relevance'", containsString("0"))
                .body("[4].'name'", containsString("American Samoa"))
                .body("[4].'topLevelDomain'.size()", equalTo(1))
                .body("[4].'topLevelDomain'", hasItems(".as"))
                .body("[4].'alpha2Code'", containsString("AS"))
                .body("[4].'alpha3Code'", containsString("ASM"))
                .body("[4].'callingCodes'.size()", equalTo(1))
                .body("[4].'callingCodes'", hasItems("1"))
                .body("[4].'capital'", containsString("Pago Pago"))
                .body("[4].'altSpellings'.size()", equalTo(4))
                .body("[4].'altSpellings'", hasItems("AS", "Amerika Sāmoa", "Amelika Sāmoa", "Sāmoa Amelika"))
                .body("[4].'region'", containsString("Oceania"))
                .body("[4].'subregion'", containsString("Polynesia"))
                .body("[4].'population'", numberMatches(55519.0))
                .body("[4].'latlng'.size()", equalTo(2))
                .body("[4].'latlng'[0]", numberMatches(-14.33333333))
                .body("[4].'latlng'[1]", numberMatches(-170.0))
                .body("[4].'demonym'", containsString("American Samoan"))
                .body("[4].'area'", numberMatches(199.0))
                .body("[4].'gini'", nullValue())
                .body("[4].'timezones'.size()", equalTo(1))
                .body("[4].'timezones'", hasItems("UTC-11:00"))
                .body("[4].'borders'.size()", equalTo(0))
                .body("[4].'nativeName'", containsString("American Samoa"))
                .body("[4].'numericCode'", containsString("016"))
                .body("[4].'currencies'.size()", equalTo(1))
                .body("[4].'currencies'", hasItems("USD"))
                .body("[4].'languages'.size()", equalTo(2))
                .body("[4].'languages'", hasItems("en", "sm"))
                .body("[4].'translations'.'de'", containsString("Amerikanisch-Samoa"))
                .body("[4].'translations'.'es'", containsString("Samoa Americana"))
                .body("[4].'translations'.'fr'", containsString("Samoa américaines"))
                .body("[4].'translations'.'ja'", containsString("アメリカ領サモア"))
                .body("[4].'translations'.'it'", containsString("Samoa Americane"))
                .body("[4].'relevance'", containsString("0.5"))
                .body("[5].'name'", containsString("Andorra"))
                .body("[5].'topLevelDomain'.size()", equalTo(1))
                .body("[5].'topLevelDomain'", hasItems(".ad"))
                .body("[5].'alpha2Code'", containsString("AD"))
                .body("[5].'alpha3Code'", containsString("AND"))
                .body("[5].'callingCodes'.size()", equalTo(1))
                .body("[5].'callingCodes'", hasItems("376"))
                .body("[5].'capital'", containsString("Andorra la Vella"))
                .body("[5].'altSpellings'.size()", equalTo(3))
                .body("[5].'altSpellings'", hasItems("AD", "Principality of Andorra", "Principat d'Andorra"))
                .body("[5].'region'", containsString("Europe"))
                .body("[5].'subregion'", containsString("Southern Europe"))
                .body("[5].'population'", numberMatches(76949.0))
                .body("[5].'latlng'.size()", equalTo(2))
                .body("[5].'latlng'[0]", numberMatches(42.5))
                .body("[5].'latlng'[1]", numberMatches(1.5))
                .body("[5].'demonym'", containsString("Andorran"))
                .body("[5].'area'", numberMatches(468.0))
                .body("[5].'gini'", nullValue())
                .body("[5].'timezones'.size()", equalTo(1))
                .body("[5].'timezones'", hasItems("UTC+01:00"))
                .body("[5].'borders'.size()", equalTo(2))
                .body("[5].'borders'", hasItems("FRA", "ESP"))
                .body("[5].'nativeName'", containsString("Andorra"))
                .body("[5].'numericCode'", containsString("020"))
                .body("[5].'currencies'.size()", equalTo(1))
                .body("[5].'currencies'", hasItems("EUR"))
                .body("[5].'languages'.size()", equalTo(1))
                .body("[5].'languages'", hasItems("ca"))
                .body("[5].'translations'.'de'", containsString("Andorra"))
                .body("[5].'translations'.'es'", containsString("Andorra"))
                .body("[5].'translations'.'fr'", containsString("Andorre"))
                .body("[5].'translations'.'ja'", containsString("アンドラ"))
                .body("[5].'translations'.'it'", containsString("Andorra"))
                .body("[5].'relevance'", containsString("0.5"))
                .body("[6].'name'", containsString("Angola"))
                .body("[6].'topLevelDomain'.size()", equalTo(1))
                .body("[6].'topLevelDomain'", hasItems(".ao"))
                .body("[6].'alpha2Code'", containsString("AO"))
                .body("[6].'alpha3Code'", containsString("AGO"))
                .body("[6].'callingCodes'.size()", equalTo(1))
                .body("[6].'callingCodes'", hasItems("244"))
                .body("[6].'capital'", containsString("Luanda"))
                .body("[6].'altSpellings'.size()", equalTo(3))
                .body("[6].'altSpellings'", hasItems("AO", "República de Angola", "ʁɛpublika de an'ɡɔla"))
                .body("[6].'region'", containsString("Africa"))
                .body("[6].'subregion'", containsString("Middle Africa"))
                .body("[6].'population'", numberMatches(2.4383301E7))
                .body("[6].'latlng'.size()", equalTo(2))
                .body("[6].'latlng'[0]", numberMatches(-12.5))
                .body("[6].'latlng'[1]", numberMatches(18.5))
                .body("[6].'demonym'", containsString("Angolan"))
                .body("[6].'area'", numberMatches(1246700.0))
                .body("[6].'gini'", numberMatches(58.6))
                .body("[6].'timezones'.size()", equalTo(1))
                .body("[6].'timezones'", hasItems("UTC+01:00"))
                .body("[6].'borders'.size()", equalTo(4))
                .body("[6].'borders'", hasItems("COG", "COD", "ZMB", "NAM"))
                .body("[6].'nativeName'", containsString("Angola"))
                .body("[6].'numericCode'", containsString("024"))
                .body("[6].'currencies'.size()", equalTo(1))
                .body("[6].'currencies'", hasItems("AOA"))
                .body("[6].'languages'.size()", equalTo(1))
                .body("[6].'languages'", hasItems("pt"))
                .body("[6].'translations'.'de'", containsString("Angola"))
                .body("[6].'translations'.'es'", containsString("Angola"))
                .body("[6].'translations'.'fr'", containsString("Angola"))
                .body("[6].'translations'.'ja'", containsString("アンゴラ"))
                .body("[6].'translations'.'it'", containsString("Angola"))
                .body("[6].'relevance'", containsString("0"))
                .body("[7].'name'", containsString("Anguilla"))
                .body("[7].'topLevelDomain'.size()", equalTo(1))
                .body("[7].'topLevelDomain'", hasItems(".ai"))
                .body("[7].'alpha2Code'", containsString("AI"))
                .body("[7].'alpha3Code'", containsString("AIA"))
                .body("[7].'callingCodes'.size()", equalTo(1))
                .body("[7].'callingCodes'", hasItems("1"))
                .body("[7].'capital'", containsString("The Valley"))
                .body("[7].'altSpellings'.size()", equalTo(1))
                .body("[7].'altSpellings'", hasItems("AI"))
                .body("[7].'region'", containsString("Americas"))
                .body("[7].'subregion'", containsString("Caribbean"))
                .body("[7].'population'", numberMatches(13452.0))
                .body("[7].'latlng'.size()", equalTo(2))
                .body("[7].'latlng'[0]", numberMatches(18.25))
                .body("[7].'latlng'[1]", numberMatches(-63.16666666))
                .body("[7].'demonym'", containsString("Anguillian"))
                .body("[7].'area'", numberMatches(91.0))
                .body("[7].'gini'", nullValue())
                .body("[7].'timezones'.size()", equalTo(1))
                .body("[7].'timezones'", hasItems("UTC-04:00"))
                .body("[7].'borders'.size()", equalTo(0))
                .body("[7].'nativeName'", containsString("Anguilla"))
                .body("[7].'numericCode'", containsString("660"))
                .body("[7].'currencies'.size()", equalTo(1))
                .body("[7].'currencies'", hasItems("XCD"))
                .body("[7].'languages'.size()", equalTo(1))
                .body("[7].'languages'", hasItems("en"))
                .body("[7].'translations'.'de'", containsString("Anguilla"))
                .body("[7].'translations'.'es'", containsString("Anguilla"))
                .body("[7].'translations'.'fr'", containsString("Anguilla"))
                .body("[7].'translations'.'ja'", containsString("アンギラ"))
                .body("[7].'translations'.'it'", containsString("Anguilla"))
                .body("[7].'relevance'", containsString("0.5"))
                .body("[8].'name'", containsString("Antarctica"))
                .body("[8].'topLevelDomain'.size()", equalTo(1))
                .body("[8].'topLevelDomain'", hasItems(".aq"))
                .body("[8].'alpha2Code'", containsString("AQ"))
                .body("[8].'alpha3Code'", containsString("ATA"))
                .body("[8].'callingCodes'.size()", equalTo(1))
                .body("[8].'callingCodes'", hasItems("672"))
                .body("[8].'capital'", containsString(""))
                .body("[8].'altSpellings'.size()", equalTo(0))
                .body("[8].'region'", containsString("Polar"))
                .body("[8].'subregion'", containsString(""))
                .body("[8].'population'", numberMatches(1000.0))
                .body("[8].'latlng'.size()", equalTo(2))
                .body("[8].'latlng'[0]", numberMatches(-74.65))
                .body("[8].'latlng'[1]", numberMatches(4.48))
                .body("[8].'demonym'", containsString(""))
                .body("[8].'area'", numberMatches(1.4E7))
                .body("[8].'gini'", nullValue())
                .body("[8].'timezones'.size()", equalTo(8))
                .body("[8].'timezones'", hasItems("UTC-03:00", "UTC+03:00", "UTC+05:00", "UTC+06:00", "UTC+07:00", "UTC+08:00", "UTC+10:00", "UTC+12:00"))
                .body("[8].'borders'.size()", equalTo(0))
                .body("[8].'nativeName'", containsString("Antarctica"))
                .body("[8].'numericCode'", containsString("010"))
                .body("[8].'currencies'.size()", equalTo(2))
                .body("[8].'currencies'", hasItems("AUD", "GBP"))
                .body("[8].'languages'.size()", equalTo(1))
                .body("[8].'languages'", hasItems("en"))
                .body("[8].'translations'.'de'", containsString("Antarktika"))
                .body("[8].'translations'.'es'", containsString("Antártida"))
                .body("[8].'translations'.'fr'", containsString("Antarctique"))
                .body("[8].'translations'.'ja'", containsString("南極大陸"))
                .body("[8].'translations'.'it'", containsString("Antartide"))
                .body("[8].'relevance'", containsString("0"))
                .body("[9].'name'", containsString("Antigua and Barbuda"))
                .body("[9].'topLevelDomain'.size()", equalTo(1))
                .body("[9].'topLevelDomain'", hasItems(".ag"))
                .body("[9].'alpha2Code'", containsString("AG"))
                .body("[9].'alpha3Code'", containsString("ATG"))
                .body("[9].'callingCodes'.size()", equalTo(1))
                .body("[9].'callingCodes'", hasItems("1"))
                .body("[9].'capital'", containsString("Saint John's"))
                .body("[9].'altSpellings'.size()", equalTo(1))
                .body("[9].'altSpellings'", hasItems("AG"))
                .body("[9].'region'", containsString("Americas"))
                .body("[9].'subregion'", containsString("Caribbean"))
                .body("[9].'population'", numberMatches(86295.0))
                .body("[9].'latlng'.size()", equalTo(2))
                .body("[9].'latlng'[0]", numberMatches(17.05))
                .body("[9].'latlng'[1]", numberMatches(-61.8))
                .body("[9].'demonym'", containsString("Antiguan, Barbudan"))
                .body("[9].'area'", numberMatches(442.0))
                .body("[9].'gini'", nullValue())
                .body("[9].'timezones'.size()", equalTo(1))
                .body("[9].'timezones'", hasItems("UTC-04:00"))
                .body("[9].'borders'.size()", equalTo(0))
                .body("[9].'nativeName'", containsString("Antigua and Barbuda"))
                .body("[9].'numericCode'", containsString("028"))
                .body("[9].'currencies'.size()", equalTo(1))
                .body("[9].'currencies'", hasItems("XCD"))
                .body("[9].'languages'.size()", equalTo(1))
                .body("[9].'languages'", hasItems("en"))
                .body("[9].'translations'.'de'", containsString("Antigua und Barbuda"))
                .body("[9].'translations'.'es'", containsString("Antigua y Barbuda"))
                .body("[9].'translations'.'fr'", containsString("Antigua-et-Barbuda"))
                .body("[9].'translations'.'ja'", containsString("アンティグア・バーブーダ"))
                .body("[9].'translations'.'it'", containsString("Antigua e Barbuda"))
                .body("[9].'relevance'", containsString("0.5"))
                .body("[10].'name'", containsString("Argentina"))
                .body("[10].'topLevelDomain'.size()", equalTo(1))
                .body("[10].'topLevelDomain'", hasItems(".ar"))
                .body("[10].'alpha2Code'", containsString("AR"))
                .body("[10].'alpha3Code'", containsString("ARG"))
                .body("[10].'callingCodes'.size()", equalTo(1))
                .body("[10].'callingCodes'", hasItems("54"))
                .body("[10].'capital'", containsString("Buenos Aires"))
                .body("[10].'altSpellings'.size()", equalTo(3))
                .body("[10].'altSpellings'", hasItems("AR", "Argentine Republic", "República Argentina"))
                .body("[10].'region'", containsString("Americas"))
                .body("[10].'subregion'", containsString("South America"))
                .body("[10].'population'", numberMatches(4.3131966E7))
                .body("[10].'latlng'.size()", equalTo(2))
                .body("[10].'latlng'[0]", numberMatches(-34.0))
                .body("[10].'latlng'[1]", numberMatches(-64.0))
                .body("[10].'demonym'", containsString("Argentinean"))
                .body("[10].'area'", numberMatches(2780400.0))
                .body("[10].'gini'", numberMatches(44.5))
                .body("[10].'timezones'.size()", equalTo(1))
                .body("[10].'timezones'", hasItems("UTC-03:00"))
                .body("[10].'borders'.size()", equalTo(5))
                .body("[10].'borders'", hasItems("BOL", "BRA", "CHL", "PRY", "URY"))
                .body("[10].'nativeName'", containsString("Argentina"))
                .body("[10].'numericCode'", containsString("032"))
                .body("[10].'currencies'.size()", equalTo(1))
                .body("[10].'currencies'", hasItems("ARS"))
                .body("[10].'languages'.size()", equalTo(2))
                .body("[10].'languages'", hasItems("es", "gn"))
                .body("[10].'translations'.'de'", containsString("Argentinien"))
                .body("[10].'translations'.'es'", containsString("Argentina"))
                .body("[10].'translations'.'fr'", containsString("Argentine"))
                .body("[10].'translations'.'ja'", containsString("アルゼンチン"))
                .body("[10].'translations'.'it'", containsString("Argentina"))
                .body("[10].'relevance'", containsString("0"))
                .body("[11].'name'", containsString("Armenia"))
                .body("[11].'topLevelDomain'.size()", equalTo(1))
                .body("[11].'topLevelDomain'", hasItems(".am"))
                .body("[11].'alpha2Code'", containsString("AM"))
                .body("[11].'alpha3Code'", containsString("ARM"))
                .body("[11].'callingCodes'.size()", equalTo(1))
                .body("[11].'callingCodes'", hasItems("374"))
                .body("[11].'capital'", containsString("Yerevan"))
                .body("[11].'altSpellings'.size()", equalTo(4))
                .body("[11].'altSpellings'", hasItems("AM", "Hayastan", "Republic of Armenia", "Հայաստանի Հանրապետություն"))
                .body("[11].'region'", containsString("Asia"))
                .body("[11].'subregion'", containsString("Western Asia"))
                .body("[11].'population'", numberMatches(3006800.0))
                .body("[11].'latlng'.size()", equalTo(2))
                .body("[11].'latlng'[0]", numberMatches(40.0))
                .body("[11].'latlng'[1]", numberMatches(45.0))
                .body("[11].'demonym'", containsString("Armenian"))
                .body("[11].'area'", numberMatches(29743.0))
                .body("[11].'gini'", numberMatches(30.9))
                .body("[11].'timezones'.size()", equalTo(1))
                .body("[11].'timezones'", hasItems("UTC+04:00"))
                .body("[11].'borders'.size()", equalTo(4))
                .body("[11].'borders'", hasItems("AZE", "GEO", "IRN", "TUR"))
                .body("[11].'nativeName'", containsString("Հայաստան"))
                .body("[11].'numericCode'", containsString("051"))
                .body("[11].'currencies'.size()", equalTo(1))
                .body("[11].'currencies'", hasItems("AMD"))
                .body("[11].'languages'.size()", equalTo(2))
                .body("[11].'languages'", hasItems("hy", "ru"))
                .body("[11].'translations'.'de'", containsString("Armenien"))
                .body("[11].'translations'.'es'", containsString("Armenia"))
                .body("[11].'translations'.'fr'", containsString("Arménie"))
                .body("[11].'translations'.'ja'", containsString("アルメニア"))
                .body("[11].'translations'.'it'", containsString("Armenia"))
                .body("[11].'relevance'", containsString("0"))
                .body("[12].'name'", containsString("Aruba"))
                .body("[12].'topLevelDomain'.size()", equalTo(1))
                .body("[12].'topLevelDomain'", hasItems(".aw"))
                .body("[12].'alpha2Code'", containsString("AW"))
                .body("[12].'alpha3Code'", containsString("ABW"))
                .body("[12].'callingCodes'.size()", equalTo(1))
                .body("[12].'callingCodes'", hasItems("297"))
                .body("[12].'capital'", containsString("Oranjestad"))
                .body("[12].'altSpellings'.size()", equalTo(1))
                .body("[12].'altSpellings'", hasItems("AW"))
                .body("[12].'region'", containsString("Americas"))
                .body("[12].'subregion'", containsString("Caribbean"))
                .body("[12].'population'", numberMatches(107394.0))
                .body("[12].'latlng'.size()", equalTo(2))
                .body("[12].'latlng'[0]", numberMatches(12.5))
                .body("[12].'latlng'[1]", numberMatches(-69.96666666))
                .body("[12].'demonym'", containsString("Aruban"))
                .body("[12].'area'", numberMatches(180.0))
                .body("[12].'gini'", nullValue())
                .body("[12].'timezones'.size()", equalTo(1))
                .body("[12].'timezones'", hasItems("UTC-04:00"))
                .body("[12].'borders'.size()", equalTo(0))
                .body("[12].'nativeName'", containsString("Aruba"))
                .body("[12].'numericCode'", containsString("533"))
                .body("[12].'currencies'.size()", equalTo(1))
                .body("[12].'currencies'", hasItems("AWG"))
                .body("[12].'languages'.size()", equalTo(2))
                .body("[12].'languages'", hasItems("nl", "pa"))
                .body("[12].'translations'.'de'", containsString("Aruba"))
                .body("[12].'translations'.'es'", containsString("Aruba"))
                .body("[12].'translations'.'fr'", containsString("Aruba"))
                .body("[12].'translations'.'ja'", containsString("アルバ"))
                .body("[12].'translations'.'it'", containsString("Aruba"))
                .body("[12].'relevance'", containsString("0.5"))
                .body("[13].'name'", containsString("Australia"))
                .body("[13].'topLevelDomain'.size()", equalTo(1))
                .body("[13].'topLevelDomain'", hasItems(".au"))
                .body("[13].'alpha2Code'", containsString("AU"))
                .body("[13].'alpha3Code'", containsString("AUS"))
                .body("[13].'callingCodes'.size()", equalTo(1))
                .body("[13].'callingCodes'", hasItems("61"))
                .body("[13].'capital'", containsString("Canberra"))
                .body("[13].'altSpellings'.size()", equalTo(1))
                .body("[13].'altSpellings'", hasItems("AU"))
                .body("[13].'region'", containsString("Oceania"))
                .body("[13].'subregion'", containsString("Australia and New Zealand"))
                .body("[13].'population'", numberMatches(2.38688E7))
                .body("[13].'latlng'.size()", equalTo(2))
                .body("[13].'latlng'[0]", numberMatches(-27.0))
                .body("[13].'latlng'[1]", numberMatches(133.0))
                .body("[13].'demonym'", containsString("Australian"))
                .body("[13].'area'", numberMatches(7692024.0))
                .body("[13].'gini'", numberMatches(30.5))
                .body("[13].'timezones'.size()", equalTo(8))
                .body("[13].'timezones'", hasItems("UTC+05:00", "UTC+06:30", "UTC+07:00", "UTC+08:00", "UTC+09:30", "UTC+10:00", "UTC+10:30", "UTC+11:30"))
                .body("[13].'borders'.size()", equalTo(0))
                .body("[13].'nativeName'", containsString("Australia"))
                .body("[13].'numericCode'", containsString("036"))
                .body("[13].'currencies'.size()", equalTo(1))
                .body("[13].'currencies'", hasItems("AUD"))
                .body("[13].'languages'.size()", equalTo(1))
                .body("[13].'languages'", hasItems("en"))
                .body("[13].'translations'.'de'", containsString("Australien"))
                .body("[13].'translations'.'es'", containsString("Australia"))
                .body("[13].'translations'.'fr'", containsString("Australie"))
                .body("[13].'translations'.'ja'", containsString("オーストラリア"))
                .body("[13].'translations'.'it'", containsString("Australia"))
                .body("[13].'relevance'", containsString("1.5"))
                .body("[14].'name'", containsString("Austria"))
                .body("[14].'topLevelDomain'.size()", equalTo(1))
                .body("[14].'topLevelDomain'", hasItems(".at"))
                .body("[14].'alpha2Code'", containsString("AT"))
                .body("[14].'alpha3Code'", containsString("AUT"))
                .body("[14].'callingCodes'.size()", equalTo(1))
                .body("[14].'callingCodes'", hasItems("43"))
                .body("[14].'capital'", containsString("Vienna"))
                .body("[14].'altSpellings'.size()", equalTo(4))
                .body("[14].'altSpellings'", hasItems("AT", "Österreich", "Osterreich", "Oesterreich"))
                .body("[14].'region'", containsString("Europe"))
                .body("[14].'subregion'", containsString("Western Europe"))
                .body("[14].'population'", numberMatches(8602112.0))
                .body("[14].'latlng'.size()", equalTo(2))
                .body("[14].'latlng'[0]", numberMatches(47.33333333))
                .body("[14].'latlng'[1]", numberMatches(13.33333333))
                .body("[14].'demonym'", containsString("Austrian"))
                .body("[14].'area'", numberMatches(83871.0))
                .body("[14].'gini'", numberMatches(26.0))
                .body("[14].'timezones'.size()", equalTo(1))
                .body("[14].'timezones'", hasItems("UTC+01:00"))
                .body("[14].'borders'.size()", equalTo(8))
                .body("[14].'borders'", hasItems("CZE", "DEU", "HUN", "ITA", "LIE", "SVK", "SVN", "CHE"))
                .body("[14].'nativeName'", containsString("Österreich"))
                .body("[14].'numericCode'", containsString("040"))
                .body("[14].'currencies'.size()", equalTo(1))
                .body("[14].'currencies'", hasItems("EUR"))
                .body("[14].'languages'.size()", equalTo(1))
                .body("[14].'languages'", hasItems("de"))
                .body("[14].'translations'.'de'", containsString("Österreich"))
                .body("[14].'translations'.'es'", containsString("Austria"))
                .body("[14].'translations'.'fr'", containsString("Autriche"))
                .body("[14].'translations'.'ja'", containsString("オーストリア"))
                .body("[14].'translations'.'it'", containsString("Austria"))
                .body("[14].'relevance'", containsString("0"))
                .body("[15].'name'", containsString("Azerbaijan"))
                .body("[15].'topLevelDomain'.size()", equalTo(1))
                .body("[15].'topLevelDomain'", hasItems(".az"))
                .body("[15].'alpha2Code'", containsString("AZ"))
                .body("[15].'alpha3Code'", containsString("AZE"))
                .body("[15].'callingCodes'.size()", equalTo(1))
                .body("[15].'callingCodes'", hasItems("994"))
                .body("[15].'capital'", containsString("Baku"))
                .body("[15].'altSpellings'.size()", equalTo(3))
                .body("[15].'altSpellings'", hasItems("AZ", "Republic of Azerbaijan", "Azərbaycan Respublikası"))
                .body("[15].'region'", containsString("Asia"))
                .body("[15].'subregion'", containsString("Western Asia"))
                .body("[15].'population'", numberMatches(9636300.0))
                .body("[15].'latlng'.size()", equalTo(2))
                .body("[15].'latlng'[0]", numberMatches(40.5))
                .body("[15].'latlng'[1]", numberMatches(47.5))
                .body("[15].'demonym'", containsString("Azerbaijani"))
                .body("[15].'area'", numberMatches(86600.0))
                .body("[15].'gini'", numberMatches(33.7))
                .body("[15].'timezones'.size()", equalTo(1))
                .body("[15].'timezones'", hasItems("UTC+04:00"))
                .body("[15].'borders'.size()", equalTo(5))
                .body("[15].'borders'", hasItems("ARM", "GEO", "IRN", "RUS", "TUR"))
                .body("[15].'nativeName'", containsString("Azərbaycan"))
                .body("[15].'numericCode'", containsString("031"))
                .body("[15].'currencies'.size()", equalTo(1))
                .body("[15].'currencies'", hasItems("AZN"))
                .body("[15].'languages'.size()", equalTo(1))
                .body("[15].'languages'", hasItems("az"))
                .body("[15].'translations'.'de'", containsString("Aserbaidschan"))
                .body("[15].'translations'.'es'", containsString("Azerbaiyán"))
                .body("[15].'translations'.'fr'", containsString("Azerbaïdjan"))
                .body("[15].'translations'.'ja'", containsString("アゼルバイジャン"))
                .body("[15].'translations'.'it'", containsString("Azerbaijan"))
                .body("[15].'relevance'", containsString("0"))
                .body("[16].'name'", containsString("The Bahamas"))
                .body("[16].'topLevelDomain'.size()", equalTo(1))
                .body("[16].'topLevelDomain'", hasItems(".bs"))
                .body("[16].'alpha2Code'", containsString("BS"))
                .body("[16].'alpha3Code'", containsString("BHS"))
                .body("[16].'callingCodes'.size()", equalTo(1))
                .body("[16].'callingCodes'", hasItems("1"))
                .body("[16].'capital'", containsString("Nassau"))
                .body("[16].'altSpellings'.size()", equalTo(2))
                .body("[16].'altSpellings'", hasItems("BS", "Commonwealth of the Bahamas"))
                .body("[16].'region'", containsString("Americas"))
                .body("[16].'subregion'", containsString("Caribbean"))
                .body("[16].'population'", numberMatches(368390.0))
                .body("[16].'latlng'.size()", equalTo(2))
                .body("[16].'latlng'[0]", numberMatches(24.25))
                .body("[16].'latlng'[1]", numberMatches(-76.0))
                .body("[16].'demonym'", containsString("Bahamian"))
                .body("[16].'area'", numberMatches(13943.0))
                .body("[16].'gini'", nullValue())
                .body("[16].'timezones'.size()", equalTo(1))
                .body("[16].'timezones'", hasItems("UTC-05:00"))
                .body("[16].'borders'.size()", equalTo(0))
                .body("[16].'nativeName'", containsString("Bahamas"))
                .body("[16].'numericCode'", containsString("044"))
                .body("[16].'currencies'.size()", equalTo(1))
                .body("[16].'currencies'", hasItems("BSD"))
                .body("[16].'languages'.size()", equalTo(1))
                .body("[16].'languages'", hasItems("en"))
                .body("[16].'translations'.'de'", containsString("Bahamas"))
                .body("[16].'translations'.'es'", containsString("Bahamas"))
                .body("[16].'translations'.'fr'", containsString("Bahamas"))
                .body("[16].'translations'.'ja'", containsString("バハマ"))
                .body("[16].'translations'.'it'", containsString("Bahamas"))
                .body("[16].'relevance'", containsString("0"))
                .body("[17].'name'", containsString("Bahrain"))
                .body("[17].'topLevelDomain'.size()", equalTo(1))
                .body("[17].'topLevelDomain'", hasItems(".bh"))
                .body("[17].'alpha2Code'", containsString("BH"))
                .body("[17].'alpha3Code'", containsString("BHR"))
                .body("[17].'callingCodes'.size()", equalTo(1))
                .body("[17].'callingCodes'", hasItems("973"))
                .body("[17].'capital'", containsString("Manama"))
                .body("[17].'altSpellings'.size()", equalTo(3))
                .body("[17].'altSpellings'", hasItems("BH", "Kingdom of Bahrain", "Mamlakat al-Baḥrayn"))
                .body("[17].'region'", containsString("Asia"))
                .body("[17].'subregion'", containsString("Western Asia"))
                .body("[17].'population'", numberMatches(1359800.0))
                .body("[17].'latlng'.size()", equalTo(2))
                .body("[17].'latlng'[0]", numberMatches(26.0))
                .body("[17].'latlng'[1]", numberMatches(50.55))
                .body("[17].'demonym'", containsString("Bahraini"))
                .body("[17].'area'", numberMatches(765.0))
                .body("[17].'gini'", nullValue())
                .body("[17].'timezones'.size()", equalTo(1))
                .body("[17].'timezones'", hasItems("UTC+03:00"))
                .body("[17].'borders'.size()", equalTo(0))
                .body("[17].'nativeName'", containsString("‏البحرين"))
                .body("[17].'numericCode'", containsString("048"))
                .body("[17].'currencies'.size()", equalTo(1))
                .body("[17].'currencies'", hasItems("BHD"))
                .body("[17].'languages'.size()", equalTo(1))
                .body("[17].'languages'", hasItems("ar"))
                .body("[17].'translations'.'de'", containsString("Bahrain"))
                .body("[17].'translations'.'es'", containsString("Bahrein"))
                .body("[17].'translations'.'fr'", containsString("Bahreïn"))
                .body("[17].'translations'.'ja'", containsString("バーレーン"))
                .body("[17].'translations'.'it'", containsString("Bahrein"))
                .body("[17].'relevance'", containsString("0"))
                .body("[18].'name'", containsString("Bangladesh"))
                .body("[18].'topLevelDomain'.size()", equalTo(1))
                .body("[18].'topLevelDomain'", hasItems(".bd"))
                .body("[18].'alpha2Code'", containsString("BD"))
                .body("[18].'alpha3Code'", containsString("BGD"))
                .body("[18].'callingCodes'.size()", equalTo(1))
                .body("[18].'callingCodes'", hasItems("880"))
                .body("[18].'capital'", containsString("Dhaka"))
                .body("[18].'altSpellings'.size()", equalTo(3))
                .body("[18].'altSpellings'", hasItems("BD", "People's Republic of Bangladesh", "Gônôprôjatôntri Bangladesh"))
                .body("[18].'region'", containsString("Asia"))
                .body("[18].'subregion'", containsString("Southern Asia"))
                .body("[18].'population'", numberMatches(1.58875E8))
                .body("[18].'latlng'.size()", equalTo(2))
                .body("[18].'latlng'[0]", numberMatches(24.0))
                .body("[18].'latlng'[1]", numberMatches(90.0))
                .body("[18].'demonym'", containsString("Bangladeshi"))
                .body("[18].'area'", numberMatches(147570.0))
                .body("[18].'gini'", numberMatches(32.1))
                .body("[18].'timezones'.size()", equalTo(1))
                .body("[18].'timezones'", hasItems("UTC+06:00"))
                .body("[18].'borders'.size()", equalTo(2))
                .body("[18].'borders'", hasItems("MMR", "IND"))
                .body("[18].'nativeName'", containsString("Bangladesh"))
                .body("[18].'numericCode'", containsString("050"))
                .body("[18].'currencies'.size()", equalTo(1))
                .body("[18].'currencies'", hasItems("BDT"))
                .body("[18].'languages'.size()", equalTo(1))
                .body("[18].'languages'", hasItems("bn"))
                .body("[18].'translations'.'de'", containsString("Bangladesch"))
                .body("[18].'translations'.'es'", containsString("Bangladesh"))
                .body("[18].'translations'.'fr'", containsString("Bangladesh"))
                .body("[18].'translations'.'ja'", containsString("バングラデシュ"))
                .body("[18].'translations'.'it'", containsString("Bangladesh"))
                .body("[18].'relevance'", containsString("2"))
                .body("[19].'name'", containsString("Barbados"))
                .body("[19].'topLevelDomain'.size()", equalTo(1))
                .body("[19].'topLevelDomain'", hasItems(".bb"))
                .body("[19].'alpha2Code'", containsString("BB"))
                .body("[19].'alpha3Code'", containsString("BRB"))
                .body("[19].'callingCodes'.size()", equalTo(1))
                .body("[19].'callingCodes'", hasItems("1"))
                .body("[19].'capital'", containsString("Bridgetown"))
                .body("[19].'altSpellings'.size()", equalTo(1))
                .body("[19].'altSpellings'", hasItems("BB"))
                .body("[19].'region'", containsString("Americas"))
                .body("[19].'subregion'", containsString("Caribbean"))
                .body("[19].'population'", numberMatches(285000.0))
                .body("[19].'latlng'.size()", equalTo(2))
                .body("[19].'latlng'[0]", numberMatches(13.16666666))
                .body("[19].'latlng'[1]", numberMatches(-59.53333333))
                .body("[19].'demonym'", containsString("Barbadian"))
                .body("[19].'area'", numberMatches(430.0))
                .body("[19].'gini'", nullValue())
                .body("[19].'timezones'.size()", equalTo(1))
                .body("[19].'timezones'", hasItems("UTC-04:00"))
                .body("[19].'borders'.size()", equalTo(0))
                .body("[19].'nativeName'", containsString("Barbados"))
                .body("[19].'numericCode'", containsString("052"))
                .body("[19].'currencies'.size()", equalTo(1))
                .body("[19].'currencies'", hasItems("BBD"))
                .body("[19].'languages'.size()", equalTo(1))
                .body("[19].'languages'", hasItems("en"))
                .body("[19].'translations'.'de'", containsString("Barbados"))
                .body("[19].'translations'.'es'", containsString("Barbados"))
                .body("[19].'translations'.'fr'", containsString("Barbade"))
                .body("[19].'translations'.'ja'", containsString("バルバドス"))
                .body("[19].'translations'.'it'", containsString("Barbados"))
                .body("[19].'relevance'", containsString("0"))
                .body("[20].'name'", containsString("Belarus"))
                .body("[20].'topLevelDomain'.size()", equalTo(1))
                .body("[20].'topLevelDomain'", hasItems(".by"))
                .body("[20].'alpha2Code'", containsString("BY"))
                .body("[20].'alpha3Code'", containsString("BLR"))
                .body("[20].'callingCodes'.size()", equalTo(1))
                .body("[20].'callingCodes'", hasItems("375"))
                .body("[20].'capital'", containsString("Minsk"))
                .body("[20].'altSpellings'.size()", equalTo(7))
                .body("[20].'altSpellings'", hasItems("BY", "Bielaruś", "Republic of Belarus", "Белоруссия", "Республика Беларусь", "Belorussiya", "Respublika Belarus’"))
                .body("[20].'region'", containsString("Europe"))
                .body("[20].'subregion'", containsString("Eastern Europe"))
                .body("[20].'population'", numberMatches(9485300.0))
                .body("[20].'latlng'.size()", equalTo(2))
                .body("[20].'latlng'[0]", numberMatches(53.0))
                .body("[20].'latlng'[1]", numberMatches(28.0))
                .body("[20].'demonym'", containsString("Belarusian"))
                .body("[20].'area'", numberMatches(207600.0))
                .body("[20].'gini'", numberMatches(26.5))
                .body("[20].'timezones'.size()", equalTo(1))
                .body("[20].'timezones'", hasItems("UTC+03:00"))
                .body("[20].'borders'.size()", equalTo(5))
                .body("[20].'borders'", hasItems("LVA", "LTU", "POL", "RUS", "UKR"))
                .body("[20].'nativeName'", containsString("Белару́сь"))
                .body("[20].'numericCode'", containsString("112"))
                .body("[20].'currencies'.size()", equalTo(1))
                .body("[20].'currencies'", hasItems("BYR"))
                .body("[20].'languages'.size()", equalTo(2))
                .body("[20].'languages'", hasItems("be", "ru"))
                .body("[20].'translations'.'de'", containsString("Weißrussland"))
                .body("[20].'translations'.'es'", containsString("Bielorrusia"))
                .body("[20].'translations'.'fr'", containsString("Biélorussie"))
                .body("[20].'translations'.'ja'", containsString("ベラルーシ"))
                .body("[20].'translations'.'it'", containsString("Bielorussia"))
                .body("[20].'relevance'", containsString("0"))
                .body("[21].'name'", containsString("Belgium"))
                .body("[21].'topLevelDomain'.size()", equalTo(1))
                .body("[21].'topLevelDomain'", hasItems(".be"))
                .body("[21].'alpha2Code'", containsString("BE"))
                .body("[21].'alpha3Code'", containsString("BEL"))
                .body("[21].'callingCodes'.size()", equalTo(1))
                .body("[21].'callingCodes'", hasItems("32"))
                .body("[21].'capital'", containsString("Brussels"))
                .body("[21].'altSpellings'.size()", equalTo(9))
                .body("[21].'altSpellings'", hasItems("BE", "België", "Belgie", "Belgien", "Belgique", "Kingdom of Belgium", "Koninkrijk België", "Royaume de Belgique", "Königreich Belgien"))
                .body("[21].'region'", containsString("Europe"))
                .body("[21].'subregion'", containsString("Western Europe"))
                .body("[21].'population'", numberMatches(1.124833E7))
                .body("[21].'latlng'.size()", equalTo(2))
                .body("[21].'latlng'[0]", numberMatches(50.83333333))
                .body("[21].'latlng'[1]", numberMatches(4.0))
                .body("[21].'demonym'", containsString("Belgian"))
                .body("[21].'area'", numberMatches(30528.0))
                .body("[21].'gini'", numberMatches(33.0))
                .body("[21].'timezones'.size()", equalTo(1))
                .body("[21].'timezones'", hasItems("UTC+01:00"))
                .body("[21].'borders'.size()", equalTo(4))
                .body("[21].'borders'", hasItems("FRA", "DEU", "LUX", "NLD"))
                .body("[21].'nativeName'", containsString("België"))
                .body("[21].'numericCode'", containsString("056"))
                .body("[21].'currencies'.size()", equalTo(1))
                .body("[21].'currencies'", hasItems("EUR"))
                .body("[21].'languages'.size()", equalTo(3))
                .body("[21].'languages'", hasItems("nl", "fr", "de"))
                .body("[21].'translations'.'de'", containsString("Belgien"))
                .body("[21].'translations'.'es'", containsString("Bélgica"))
                .body("[21].'translations'.'fr'", containsString("Belgique"))
                .body("[21].'translations'.'ja'", containsString("ベルギー"))
                .body("[21].'translations'.'it'", containsString("Belgio"))
                .body("[21].'relevance'", containsString("1.5"))
                .body("[22].'name'", containsString("Belize"))
                .body("[22].'topLevelDomain'.size()", equalTo(1))
                .body("[22].'topLevelDomain'", hasItems(".bz"))
                .body("[22].'alpha2Code'", containsString("BZ"))
                .body("[22].'alpha3Code'", containsString("BLZ"))
                .body("[22].'callingCodes'.size()", equalTo(1))
                .body("[22].'callingCodes'", hasItems("501"))
                .body("[22].'capital'", containsString("Belmopan"))
                .body("[22].'altSpellings'.size()", equalTo(1))
                .body("[22].'altSpellings'", hasItems("BZ"))
                .body("[22].'region'", containsString("Americas"))
                .body("[22].'subregion'", containsString("Central America"))
                .body("[22].'population'", numberMatches(368310.0))
                .body("[22].'latlng'.size()", equalTo(2))
                .body("[22].'latlng'[0]", numberMatches(17.25))
                .body("[22].'latlng'[1]", numberMatches(-88.75))
                .body("[22].'demonym'", containsString("Belizean"))
                .body("[22].'area'", numberMatches(22966.0))
                .body("[22].'gini'", numberMatches(53.1))
                .body("[22].'timezones'.size()", equalTo(1))
                .body("[22].'timezones'", hasItems("UTC-06:00"))
                .body("[22].'borders'.size()", equalTo(2))
                .body("[22].'borders'", hasItems("GTM", "MEX"))
                .body("[22].'nativeName'", containsString("Belize"))
                .body("[22].'numericCode'", containsString("084"))
                .body("[22].'currencies'.size()", equalTo(1))
                .body("[22].'currencies'", hasItems("BZD"))
                .body("[22].'languages'.size()", equalTo(2))
                .body("[22].'languages'", hasItems("en", "es"))
                .body("[22].'translations'.'de'", containsString("Belize"))
                .body("[22].'translations'.'es'", containsString("Belice"))
                .body("[22].'translations'.'fr'", containsString("Belize"))
                .body("[22].'translations'.'ja'", containsString("ベリーズ"))
                .body("[22].'translations'.'it'", containsString("Belize"))
                .body("[22].'relevance'", containsString("0"))
                .body("[23].'name'", containsString("Benin"))
                .body("[23].'topLevelDomain'.size()", equalTo(1))
                .body("[23].'topLevelDomain'", hasItems(".bj"))
                .body("[23].'alpha2Code'", containsString("BJ"))
                .body("[23].'alpha3Code'", containsString("BEN"))
                .body("[23].'callingCodes'.size()", equalTo(1))
                .body("[23].'callingCodes'", hasItems("229"))
                .body("[23].'capital'", containsString("Porto-Novo"))
                .body("[23].'altSpellings'.size()", equalTo(3))
                .body("[23].'altSpellings'", hasItems("BJ", "Republic of Benin", "République du Bénin"))
                .body("[23].'region'", containsString("Africa"))
                .body("[23].'subregion'", containsString("Western Africa"))
                .body("[23].'population'", numberMatches(1.0315244E7))
                .body("[23].'latlng'.size()", equalTo(2))
                .body("[23].'latlng'[0]", numberMatches(9.5))
                .body("[23].'latlng'[1]", numberMatches(2.25))
                .body("[23].'demonym'", containsString("Beninese"))
                .body("[23].'area'", numberMatches(112622.0))
                .body("[23].'gini'", numberMatches(38.6))
                .body("[23].'timezones'.size()", equalTo(1))
                .body("[23].'timezones'", hasItems("UTC+01:00"))
                .body("[23].'borders'.size()", equalTo(4))
                .body("[23].'borders'", hasItems("BFA", "NER", "NGA", "TGO"))
                .body("[23].'nativeName'", containsString("Bénin"))
                .body("[23].'numericCode'", containsString("204"))
                .body("[23].'currencies'.size()", equalTo(1))
                .body("[23].'currencies'", hasItems("XOF"))
                .body("[23].'languages'.size()", equalTo(1))
                .body("[23].'languages'", hasItems("fr"))
                .body("[23].'translations'.'de'", containsString("Benin"))
                .body("[23].'translations'.'es'", containsString("Benín"))
                .body("[23].'translations'.'fr'", containsString("Bénin"))
                .body("[23].'translations'.'ja'", containsString("ベナン"))
                .body("[23].'translations'.'it'", containsString("Benin"))
                .body("[23].'relevance'", containsString("0"))
                .body("[24].'name'", containsString("Bermuda"))
                .body("[24].'topLevelDomain'.size()", equalTo(1))
                .body("[24].'topLevelDomain'", hasItems(".bm"))
                .body("[24].'alpha2Code'", containsString("BM"))
                .body("[24].'alpha3Code'", containsString("BMU"))
                .body("[24].'callingCodes'.size()", equalTo(1))
                .body("[24].'callingCodes'", hasItems("1"))
                .body("[24].'capital'", containsString("Hamilton"))
                .body("[24].'altSpellings'.size()", equalTo(4))
                .body("[24].'altSpellings'", hasItems("BM", "The Islands of Bermuda", "The Bermudas", "Somers Isles"))
                .body("[24].'region'", containsString("Americas"))
                .body("[24].'subregion'", containsString("Northern America"))
                .body("[24].'population'", numberMatches(64237.0))
                .body("[24].'latlng'.size()", equalTo(2))
                .body("[24].'latlng'[0]", numberMatches(32.33333333))
                .body("[24].'latlng'[1]", numberMatches(-64.75))
                .body("[24].'demonym'", containsString("Bermudian"))
                .body("[24].'area'", numberMatches(54.0))
                .body("[24].'gini'", nullValue())
                .body("[24].'timezones'.size()", equalTo(1))
                .body("[24].'timezones'", hasItems("UTC-04:00"))
                .body("[24].'borders'.size()", equalTo(0))
                .body("[24].'nativeName'", containsString("Bermuda"))
                .body("[24].'numericCode'", containsString("060"))
                .body("[24].'currencies'.size()", equalTo(1))
                .body("[24].'currencies'", hasItems("BMD"))
                .body("[24].'languages'.size()", equalTo(1))
                .body("[24].'languages'", hasItems("en"))
                .body("[24].'translations'.'de'", containsString("Bermuda"))
                .body("[24].'translations'.'es'", containsString("Bermudas"))
                .body("[24].'translations'.'fr'", containsString("Bermudes"))
                .body("[24].'translations'.'ja'", containsString("バミューダ"))
                .body("[24].'translations'.'it'", containsString("Bermuda"))
                .body("[24].'relevance'", containsString("0.5"))
                .body("[25].'name'", containsString("Bhutan"))
                .body("[25].'topLevelDomain'.size()", equalTo(1))
                .body("[25].'topLevelDomain'", hasItems(".bt"))
                .body("[25].'alpha2Code'", containsString("BT"))
                .body("[25].'alpha3Code'", containsString("BTN"))
                .body("[25].'callingCodes'.size()", equalTo(1))
                .body("[25].'callingCodes'", hasItems("975"))
                .body("[25].'capital'", containsString("Thimphu"))
                .body("[25].'altSpellings'.size()", equalTo(2))
                .body("[25].'altSpellings'", hasItems("BT", "Kingdom of Bhutan"))
                .body("[25].'region'", containsString("Asia"))
                .body("[25].'subregion'", containsString("Southern Asia"))
                .body("[25].'population'", numberMatches(763920.0))
                .body("[25].'latlng'.size()", equalTo(2))
                .body("[25].'latlng'[0]", numberMatches(27.5))
                .body("[25].'latlng'[1]", numberMatches(90.5))
                .body("[25].'demonym'", containsString("Bhutanese"))
                .body("[25].'area'", numberMatches(38394.0))
                .body("[25].'gini'", numberMatches(38.1))
                .body("[25].'timezones'.size()", equalTo(1))
                .body("[25].'timezones'", hasItems("UTC+06:00"))
                .body("[25].'borders'.size()", equalTo(2))
                .body("[25].'borders'", hasItems("CHN", "IND"))
                .body("[25].'nativeName'", containsString("ʼbrug-yul"))
                .body("[25].'numericCode'", containsString("064"))
                .body("[25].'currencies'.size()", equalTo(2))
                .body("[25].'currencies'", hasItems("BTN", "INR"))
                .body("[25].'languages'.size()", equalTo(1))
                .body("[25].'languages'", hasItems("dz"))
                .body("[25].'translations'.'de'", containsString("Bhutan"))
                .body("[25].'translations'.'es'", containsString("Bután"))
                .body("[25].'translations'.'fr'", containsString("Bhoutan"))
                .body("[25].'translations'.'ja'", containsString("ブータン"))
                .body("[25].'translations'.'it'", containsString("Bhutan"))
                .body("[25].'relevance'", containsString("0"))
                .body("[26].'name'", containsString("Bolivia"))
                .body("[26].'topLevelDomain'.size()", equalTo(1))
                .body("[26].'topLevelDomain'", hasItems(".bo"))
                .body("[26].'alpha2Code'", containsString("BO"))
                .body("[26].'alpha3Code'", containsString("BOL"))
                .body("[26].'callingCodes'.size()", equalTo(1))
                .body("[26].'callingCodes'", hasItems("591"))
                .body("[26].'capital'", containsString("Sucre"))
                .body("[26].'altSpellings'.size()", equalTo(8))
                .body("[26].'altSpellings'", hasItems("BO", "Buliwya", "Wuliwya", "Plurinational State of Bolivia", "Estado Plurinacional de Bolivia", "Buliwya Mamallaqta", "Wuliwya Suyu", "Tetã Volívia"))
                .body("[26].'region'", containsString("Americas"))
                .body("[26].'subregion'", containsString("South America"))
                .body("[26].'population'", numberMatches(1.1410651E7))
                .body("[26].'latlng'.size()", equalTo(2))
                .body("[26].'latlng'[0]", numberMatches(-17.0))
                .body("[26].'latlng'[1]", numberMatches(-65.0))
                .body("[26].'demonym'", containsString("Bolivian"))
                .body("[26].'area'", numberMatches(1098581.0))
                .body("[26].'gini'", numberMatches(56.3))
                .body("[26].'timezones'.size()", equalTo(1))
                .body("[26].'timezones'", hasItems("UTC-04:00"))
                .body("[26].'borders'.size()", equalTo(5))
                .body("[26].'borders'", hasItems("ARG", "BRA", "CHL", "PRY", "PER"))
                .body("[26].'nativeName'", containsString("Bolivia"))
                .body("[26].'numericCode'", containsString("068"))
                .body("[26].'currencies'.size()", equalTo(2))
                .body("[26].'currencies'", hasItems("BOB", "BOV"))
                .body("[26].'languages'.size()", equalTo(3))
                .body("[26].'languages'", hasItems("es", "ay", "qu"))
                .body("[26].'translations'.'de'", containsString("Bolivien"))
                .body("[26].'translations'.'es'", containsString("Bolivia"))
                .body("[26].'translations'.'fr'", containsString("Bolivie"))
                .body("[26].'translations'.'ja'", containsString("ボリビア多民族国"))
                .body("[26].'translations'.'it'", containsString("Bolivia"))
                .body("[26].'relevance'", containsString("0"))
                .body("[27].'name'", containsString("Bonaire"))
                .body("[27].'topLevelDomain'.size()", equalTo(2))
                .body("[27].'topLevelDomain'", hasItems(".an", ".nl"))
                .body("[27].'alpha2Code'", containsString("BQ"))
                .body("[27].'alpha3Code'", containsString("BES"))
                .body("[27].'callingCodes'.size()", equalTo(1))
                .body("[27].'callingCodes'", hasItems("599"))
                .body("[27].'capital'", containsString("Kralendijk"))
                .body("[27].'altSpellings'.size()", equalTo(2))
                .body("[27].'altSpellings'", hasItems("BQ", "Boneiru"))
                .body("[27].'region'", containsString("Americas"))
                .body("[27].'subregion'", containsString("Caribbean"))
                .body("[27].'population'", numberMatches(17408.0))
                .body("[27].'latlng'.size()", equalTo(2))
                .body("[27].'latlng'[0]", numberMatches(12.15))
                .body("[27].'latlng'[1]", numberMatches(-68.266667))
                .body("[27].'demonym'", containsString("Dutch"))
                .body("[27].'area'", numberMatches(294.0))
                .body("[27].'gini'", nullValue())
                .body("[27].'timezones'.size()", equalTo(1))
                .body("[27].'timezones'", hasItems("UTC-04:00"))
                .body("[27].'borders'.size()", equalTo(0))
                .body("[27].'nativeName'", containsString("Bonaire"))
                .body("[27].'numericCode'", containsString("535"))
                .body("[27].'currencies'.size()", equalTo(1))
                .body("[27].'currencies'", hasItems("USD"))
                .body("[27].'languages'.size()", equalTo(1))
                .body("[27].'languages'", hasItems("nl"))
                .body("[27].'translations'.'de'", nullValue())
                .body("[27].'translations'.'es'", nullValue())
                .body("[27].'translations'.'fr'", nullValue())
                .body("[27].'translations'.'ja'", nullValue())
                .body("[27].'translations'.'it'", nullValue())
                .body("[27].'relevance'", containsString("0"))
                .body("[28].'name'", containsString("Bosnia and Herzegovina"))
                .body("[28].'topLevelDomain'.size()", equalTo(1))
                .body("[28].'topLevelDomain'", hasItems(".ba"))
                .body("[28].'alpha2Code'", containsString("BA"))
                .body("[28].'alpha3Code'", containsString("BIH"))
                .body("[28].'callingCodes'.size()", equalTo(1))
                .body("[28].'callingCodes'", hasItems("387"))
                .body("[28].'capital'", containsString("Sarajevo"))
                .body("[28].'altSpellings'.size()", equalTo(3))
                .body("[28].'altSpellings'", hasItems("BA", "Bosnia-Herzegovina", "Босна и Херцеговина"))
                .body("[28].'region'", containsString("Europe"))
                .body("[28].'subregion'", containsString("Southern Europe"))
                .body("[28].'population'", numberMatches(3791622.0))
                .body("[28].'latlng'.size()", equalTo(2))
                .body("[28].'latlng'[0]", numberMatches(44.0))
                .body("[28].'latlng'[1]", numberMatches(18.0))
                .body("[28].'demonym'", containsString("Bosnian, Herzegovinian"))
                .body("[28].'area'", numberMatches(51209.0))
                .body("[28].'gini'", numberMatches(36.2))
                .body("[28].'timezones'.size()", equalTo(1))
                .body("[28].'timezones'", hasItems("UTC+01:00"))
                .body("[28].'borders'.size()", equalTo(3))
                .body("[28].'borders'", hasItems("HRV", "MNE", "SRB"))
                .body("[28].'nativeName'", containsString("Bosna i Hercegovina"))
                .body("[28].'numericCode'", containsString("070"))
                .body("[28].'currencies'.size()", equalTo(1))
                .body("[28].'currencies'", hasItems("BAM"))
                .body("[28].'languages'.size()", equalTo(3))
                .body("[28].'languages'", hasItems("bs", "hr", "sr"))
                .body("[28].'translations'.'de'", containsString("Bosnien und Herzegowina"))
                .body("[28].'translations'.'es'", containsString("Bosnia y Herzegovina"))
                .body("[28].'translations'.'fr'", containsString("Bosnie-Herzégovine"))
                .body("[28].'translations'.'ja'", containsString("ボスニア・ヘルツェゴビナ"))
                .body("[28].'translations'.'it'", containsString("Bosnia ed Erzegovina"))
                .body("[28].'relevance'", containsString("0"))
                .body("[29].'name'", containsString("Botswana"))
                .body("[29].'topLevelDomain'.size()", equalTo(1))
                .body("[29].'topLevelDomain'", hasItems(".bw"))
                .body("[29].'alpha2Code'", containsString("BW"))
                .body("[29].'alpha3Code'", containsString("BWA"))
                .body("[29].'callingCodes'.size()", equalTo(1))
                .body("[29].'callingCodes'", hasItems("267"))
                .body("[29].'capital'", containsString("Gaborone"))
                .body("[29].'altSpellings'.size()", equalTo(3))
                .body("[29].'altSpellings'", hasItems("BW", "Republic of Botswana", "Lefatshe la Botswana"))
                .body("[29].'region'", containsString("Africa"))
                .body("[29].'subregion'", containsString("Southern Africa"))
                .body("[29].'population'", numberMatches(2070984.0))
                .body("[29].'latlng'.size()", equalTo(2))
                .body("[29].'latlng'[0]", numberMatches(-22.0))
                .body("[29].'latlng'[1]", numberMatches(24.0))
                .body("[29].'demonym'", containsString("Motswana"))
                .body("[29].'area'", numberMatches(582000.0))
                .body("[29].'gini'", numberMatches(61.0))
                .body("[29].'timezones'.size()", equalTo(1))
                .body("[29].'timezones'", hasItems("UTC+02:00"))
                .body("[29].'borders'.size()", equalTo(4))
                .body("[29].'borders'", hasItems("NAM", "ZAF", "ZMB", "ZWE"))
                .body("[29].'nativeName'", containsString("Botswana"))
                .body("[29].'numericCode'", containsString("072"))
                .body("[29].'currencies'.size()", equalTo(1))
                .body("[29].'currencies'", hasItems("BWP"))
                .body("[29].'languages'.size()", equalTo(2))
                .body("[29].'languages'", hasItems("en", "tn"))
                .body("[29].'translations'.'de'", containsString("Botswana"))
                .body("[29].'translations'.'es'", containsString("Botswana"))
                .body("[29].'translations'.'fr'", containsString("Botswana"))
                .body("[29].'translations'.'ja'", containsString("ボツワナ"))
                .body("[29].'translations'.'it'", containsString("Botswana"))
                .body("[29].'relevance'", containsString("0"))
                .body("[30].'name'", containsString("Bouvet Island"))
                .body("[30].'topLevelDomain'.size()", equalTo(1))
                .body("[30].'topLevelDomain'", hasItems(".bv"))
                .body("[30].'alpha2Code'", containsString("BV"))
                .body("[30].'alpha3Code'", containsString("BVT"))
                .body("[30].'callingCodes'.size()", equalTo(1))
                .body("[30].'callingCodes'", hasItems("47"))
                .body("[30].'capital'", containsString(""))
                .body("[30].'altSpellings'.size()", equalTo(3))
                .body("[30].'altSpellings'", hasItems("BV", "Bouvetøya", "Bouvet-øya"))
                .body("[30].'region'", containsString(""))
                .body("[30].'subregion'", containsString(""))
                .body("[30].'population'", numberMatches(0.0))
                .body("[30].'latlng'.size()", equalTo(2))
                .body("[30].'latlng'[0]", numberMatches(-54.43333333))
                .body("[30].'latlng'[1]", numberMatches(3.4))
                .body("[30].'demonym'", containsString(""))
                .body("[30].'area'", numberMatches(49.0))
                .body("[30].'gini'", nullValue())
                .body("[30].'timezones'.size()", equalTo(1))
                .body("[30].'timezones'", hasItems("UTC+01:00"))
                .body("[30].'borders'.size()", equalTo(0))
                .body("[30].'nativeName'", containsString("Bouvetøya"))
                .body("[30].'numericCode'", containsString("074"))
                .body("[30].'currencies'.size()", equalTo(1))
                .body("[30].'currencies'", hasItems("NOK"))
                .body("[30].'languages'.size()", equalTo(0))
                .body("[30].'translations'.'de'", containsString("Bouvetinsel"))
                .body("[30].'translations'.'es'", containsString("Isla Bouvet"))
                .body("[30].'translations'.'fr'", containsString("Île Bouvet"))
                .body("[30].'translations'.'ja'", containsString("ブーベ島"))
                .body("[30].'translations'.'it'", containsString("Isola Bouvet"))
                .body("[30].'relevance'", containsString("0"))
                .body("[31].'name'", containsString("Brazil"))
                .body("[31].'topLevelDomain'.size()", equalTo(1))
                .body("[31].'topLevelDomain'", hasItems(".br"))
                .body("[31].'alpha2Code'", containsString("BR"))
                .body("[31].'alpha3Code'", containsString("BRA"))
                .body("[31].'callingCodes'.size()", equalTo(1))
                .body("[31].'callingCodes'", hasItems("55"))
                .body("[31].'capital'", containsString("Brasília"))
                .body("[31].'altSpellings'.size()", equalTo(4))
                .body("[31].'altSpellings'", hasItems("BR", "Brasil", "Federative Republic of Brazil", "República Federativa do Brasil"))
                .body("[31].'region'", containsString("Americas"))
                .body("[31].'subregion'", containsString("South America"))
                .body("[31].'population'", numberMatches(2.04772E8))
                .body("[31].'latlng'.size()", equalTo(2))
                .body("[31].'latlng'[0]", numberMatches(-10.0))
                .body("[31].'latlng'[1]", numberMatches(-55.0))
                .body("[31].'demonym'", containsString("Brazilian"))
                .body("[31].'area'", numberMatches(8515767.0))
                .body("[31].'gini'", numberMatches(54.7))
                .body("[31].'timezones'.size()", equalTo(4))
                .body("[31].'timezones'", hasItems("UTC-05:00", "UTC-04:00", "UTC-03:00", "UTC-02:00"))
                .body("[31].'borders'.size()", equalTo(10))
                .body("[31].'borders'", hasItems("ARG", "BOL", "COL", "GUF", "GUY", "PRY", "PER", "SUR", "URY", "VEN"))
                .body("[31].'nativeName'", containsString("Brasil"))
                .body("[31].'numericCode'", containsString("076"))
                .body("[31].'currencies'.size()", equalTo(1))
                .body("[31].'currencies'", hasItems("BRL"))
                .body("[31].'languages'.size()", equalTo(1))
                .body("[31].'languages'", hasItems("pt"))
                .body("[31].'translations'.'de'", containsString("Brasilien"))
                .body("[31].'translations'.'es'", containsString("Brasil"))
                .body("[31].'translations'.'fr'", containsString("Brésil"))
                .body("[31].'translations'.'ja'", containsString("ブラジル"))
                .body("[31].'translations'.'it'", containsString("Brasile"))
                .body("[31].'relevance'", containsString("2"))
                .body("[32].'name'", containsString("British Indian Ocean Territory"))
                .body("[32].'topLevelDomain'.size()", equalTo(1))
                .body("[32].'topLevelDomain'", hasItems(".io"))
                .body("[32].'alpha2Code'", containsString("IO"))
                .body("[32].'alpha3Code'", containsString("IOT"))
                .body("[32].'callingCodes'.size()", equalTo(1))
                .body("[32].'callingCodes'", hasItems("246"))
                .body("[32].'capital'", containsString("Diego Garcia"))
                .body("[32].'altSpellings'.size()", equalTo(1))
                .body("[32].'altSpellings'", hasItems("IO"))
                .body("[32].'region'", containsString("Africa"))
                .body("[32].'subregion'", containsString("Eastern Africa"))
                .body("[32].'population'", numberMatches(3000.0))
                .body("[32].'latlng'.size()", equalTo(2))
                .body("[32].'latlng'[0]", numberMatches(-6.0))
                .body("[32].'latlng'[1]", numberMatches(71.5))
                .body("[32].'demonym'", containsString("Indian"))
                .body("[32].'area'", numberMatches(60.0))
                .body("[32].'gini'", nullValue())
                .body("[32].'timezones'.size()", equalTo(1))
                .body("[32].'timezones'", hasItems("UTC+06:00"))
                .body("[32].'borders'.size()", equalTo(0))
                .body("[32].'nativeName'", containsString("British Indian Ocean Territory"))
                .body("[32].'numericCode'", containsString("086"))
                .body("[32].'currencies'.size()", equalTo(1))
                .body("[32].'currencies'", hasItems("USD"))
                .body("[32].'languages'.size()", equalTo(1))
                .body("[32].'languages'", hasItems("en"))
                .body("[32].'translations'.'de'", containsString("Britisches Territorium im Indischen Ozean"))
                .body("[32].'translations'.'es'", containsString("Territorio Británico del Océano Índico"))
                .body("[32].'translations'.'fr'", containsString("Territoire britannique de l'océan Indien"))
                .body("[32].'translations'.'ja'", containsString("イギリス領インド洋地域"))
                .body("[32].'translations'.'it'", containsString("Territorio britannico dell'oceano indiano"))
                .body("[32].'relevance'", containsString("0"))
                .body("[33].'name'", containsString("United States Minor Outlying Islands"))
                .body("[33].'topLevelDomain'.size()", equalTo(1))
                .body("[33].'topLevelDomain'", hasItems(".us"))
                .body("[33].'alpha2Code'", containsString("UM"))
                .body("[33].'alpha3Code'", containsString("UMI"))
                .body("[33].'callingCodes'.size()", equalTo(1))
                .body("[33].'callingCodes'", hasItems("1"))
                .body("[33].'capital'", containsString(""))
                .body("[33].'altSpellings'.size()", equalTo(1))
                .body("[33].'altSpellings'", hasItems("UM"))
                .body("[33].'region'", containsString("Americas"))
                .body("[33].'subregion'", containsString("Northern America"))
                .body("[33].'population'", numberMatches(300.0))
                .body("[33].'latlng'.size()", equalTo(0))
                .body("[33].'demonym'", containsString("American"))
                .body("[33].'area'", nullValue())
                .body("[33].'gini'", nullValue())
                .body("[33].'timezones'.size()", equalTo(3))
                .body("[33].'timezones'", hasItems("UTC-11:00", "UTC-10:00", "UTC+12:00"))
                .body("[33].'borders'.size()", equalTo(0))
                .body("[33].'nativeName'", containsString("United States Minor Outlying Islands"))
                .body("[33].'numericCode'", containsString("581"))
                .body("[33].'currencies'.size()", equalTo(1))
                .body("[33].'currencies'", hasItems("USD"))
                .body("[33].'languages'.size()", equalTo(1))
                .body("[33].'languages'", hasItems("en"))
                .body("[33].'translations'.'de'", containsString("Kleinere Inselbesitzungen der Vereinigten Staaten"))
                .body("[33].'translations'.'es'", containsString("Islas Ultramarinas Menores de Estados Unidos"))
                .body("[33].'translations'.'fr'", containsString("Îles mineures éloignées des États-Unis"))
                .body("[33].'translations'.'ja'", containsString("合衆国領有小離島"))
                .body("[33].'translations'.'it'", containsString("Isole minori esterne degli Stati Uniti d'America"))
                .body("[33].'relevance'", containsString("0"))
                .body("[34].'name'", containsString("Virgin Islands (British)"))
                .body("[34].'topLevelDomain'.size()", equalTo(1))
                .body("[34].'topLevelDomain'", hasItems(".vg"))
                .body("[34].'alpha2Code'", containsString("VG"))
                .body("[34].'alpha3Code'", containsString("VGB"))
                .body("[34].'callingCodes'.size()", equalTo(1))
                .body("[34].'callingCodes'", hasItems("1"))
                .body("[34].'capital'", containsString("Road Town"))
                .body("[34].'altSpellings'.size()", equalTo(1))
                .body("[34].'altSpellings'", hasItems("VG"))
                .body("[34].'region'", containsString("Americas"))
                .body("[34].'subregion'", containsString("Caribbean"))
                .body("[34].'population'", numberMatches(28054.0))
                .body("[34].'latlng'.size()", equalTo(2))
                .body("[34].'latlng'[0]", numberMatches(18.431383))
                .body("[34].'latlng'[1]", numberMatches(-64.62305))
                .body("[34].'demonym'", containsString("Virgin Islander"))
                .body("[34].'area'", numberMatches(151.0))
                .body("[34].'gini'", nullValue())
                .body("[34].'timezones'.size()", equalTo(1))
                .body("[34].'timezones'", hasItems("UTC-04:00"))
                .body("[34].'borders'.size()", equalTo(0))
                .body("[34].'nativeName'", containsString("British Virgin Islands"))
                .body("[34].'numericCode'", containsString("092"))
                .body("[34].'currencies'.size()", equalTo(1))
                .body("[34].'currencies'", hasItems("USD"))
                .body("[34].'languages'.size()", equalTo(1))
                .body("[34].'languages'", hasItems("en"))
                .body("[34].'translations'.'de'", containsString("Britische Jungferninseln"))
                .body("[34].'translations'.'es'", containsString("Islas Vírgenes del Reino Unido"))
                .body("[34].'translations'.'fr'", containsString("Îles Vierges britanniques"))
                .body("[34].'translations'.'ja'", containsString("イギリス領ヴァージン諸島"))
                .body("[34].'translations'.'it'", containsString("Isole Vergini Britanniche"))
                .body("[34].'relevance'", containsString("0.5"))
                .body("[35].'name'", containsString("Virgin Islands (U.S.)"))
                .body("[35].'topLevelDomain'.size()", equalTo(1))
                .body("[35].'topLevelDomain'", hasItems(".vi"))
                .body("[35].'alpha2Code'", containsString("VI"))
                .body("[35].'alpha3Code'", containsString("VIR"))
                .body("[35].'callingCodes'.size()", equalTo(1))
                .body("[35].'callingCodes'", hasItems("1"))
                .body("[35].'capital'", containsString("Charlotte Amalie"))
                .body("[35].'altSpellings'.size()", equalTo(4))
                .body("[35].'altSpellings'", hasItems("VI", "USVI", "American Virgin Islands", "U.S. Virgin Islands"))
                .body("[35].'region'", containsString("Americas"))
                .body("[35].'subregion'", containsString("Caribbean"))
                .body("[35].'population'", numberMatches(114743.0))
                .body("[35].'latlng'.size()", equalTo(2))
                .body("[35].'latlng'[0]", numberMatches(18.34))
                .body("[35].'latlng'[1]", numberMatches(-64.93))
                .body("[35].'demonym'", containsString("Virgin Islander"))
                .body("[35].'area'", numberMatches(346.36))
                .body("[35].'gini'", nullValue())
                .body("[35].'timezones'.size()", equalTo(1))
                .body("[35].'timezones'", hasItems("UTC-04:00"))
                .body("[35].'borders'.size()", equalTo(0))
                .body("[35].'nativeName'", containsString("Virgin Islands of the United States"))
                .body("[35].'numericCode'", containsString("850"))
                .body("[35].'currencies'.size()", equalTo(1))
                .body("[35].'currencies'", hasItems("USD"))
                .body("[35].'languages'.size()", equalTo(1))
                .body("[35].'languages'", hasItems("en"))
                .body("[35].'translations'.'de'", containsString("Amerikanische Jungferninseln"))
                .body("[35].'translations'.'es'", containsString("Islas Vírgenes de los Estados Unidos"))
                .body("[35].'translations'.'fr'", containsString("Îles Vierges des États-Unis"))
                .body("[35].'translations'.'ja'", containsString("アメリカ領ヴァージン諸島"))
                .body("[35].'translations'.'it'", containsString("Isole Vergini americane"))
                .body("[35].'relevance'", containsString("0.5"))
                .body("[36].'name'", containsString("Brunei"))
                .body("[36].'topLevelDomain'.size()", equalTo(1))
                .body("[36].'topLevelDomain'", hasItems(".bn"))
                .body("[36].'alpha2Code'", containsString("BN"))
                .body("[36].'alpha3Code'", containsString("BRN"))
                .body("[36].'callingCodes'.size()", equalTo(1))
                .body("[36].'callingCodes'", hasItems("673"))
                .body("[36].'capital'", containsString("Bandar Seri Begawan"))
                .body("[36].'altSpellings'.size()", equalTo(3))
                .body("[36].'altSpellings'", hasItems("BN", "Nation of Brunei", " the Abode of Peace"))
                .body("[36].'region'", containsString("Asia"))
                .body("[36].'subregion'", containsString("South-Eastern Asia"))
                .body("[36].'population'", numberMatches(393372.0))
                .body("[36].'latlng'.size()", equalTo(2))
                .body("[36].'latlng'[0]", numberMatches(4.5))
                .body("[36].'latlng'[1]", numberMatches(114.66666666))
                .body("[36].'demonym'", containsString("Bruneian"))
                .body("[36].'area'", numberMatches(5765.0))
                .body("[36].'gini'", nullValue())
                .body("[36].'timezones'.size()", equalTo(1))
                .body("[36].'timezones'", hasItems("UTC+08:00"))
                .body("[36].'borders'.size()", equalTo(1))
                .body("[36].'borders'", hasItems("MYS"))
                .body("[36].'nativeName'", containsString("Negara Brunei Darussalam"))
                .body("[36].'numericCode'", containsString("096"))
                .body("[36].'currencies'.size()", equalTo(1))
                .body("[36].'currencies'", hasItems("BND"))
                .body("[36].'languages'.size()", equalTo(1))
                .body("[36].'languages'", hasItems("ms"))
                .body("[36].'translations'.'de'", containsString("Brunei"))
                .body("[36].'translations'.'es'", containsString("Brunei"))
                .body("[36].'translations'.'fr'", containsString("Brunei"))
                .body("[36].'translations'.'ja'", containsString("ブルネイ・ダルサラーム"))
                .body("[36].'translations'.'it'", containsString("Brunei"))
                .body("[36].'relevance'", containsString("0"))
                .body("[37].'name'", containsString("Bulgaria"))
                .body("[37].'topLevelDomain'.size()", equalTo(1))
                .body("[37].'topLevelDomain'", hasItems(".bg"))
                .body("[37].'alpha2Code'", containsString("BG"))
                .body("[37].'alpha3Code'", containsString("BGR"))
                .body("[37].'callingCodes'.size()", equalTo(1))
                .body("[37].'callingCodes'", hasItems("359"))
                .body("[37].'capital'", containsString("Sofia"))
                .body("[37].'altSpellings'.size()", equalTo(3))
                .body("[37].'altSpellings'", hasItems("BG", "Republic of Bulgaria", "Република България"))
                .body("[37].'region'", containsString("Europe"))
                .body("[37].'subregion'", containsString("Eastern Europe"))
                .body("[37].'population'", numberMatches(7202198.0))
                .body("[37].'latlng'.size()", equalTo(2))
                .body("[37].'latlng'[0]", numberMatches(43.0))
                .body("[37].'latlng'[1]", numberMatches(25.0))
                .body("[37].'demonym'", containsString("Bulgarian"))
                .body("[37].'area'", numberMatches(110879.0))
                .body("[37].'gini'", numberMatches(28.2))
                .body("[37].'timezones'.size()", equalTo(1))
                .body("[37].'timezones'", hasItems("UTC+02:00"))
                .body("[37].'borders'.size()", equalTo(5))
                .body("[37].'borders'", hasItems("GRC", "MKD", "ROU", "SRB", "TUR"))
                .body("[37].'nativeName'", containsString("България"))
                .body("[37].'numericCode'", containsString("100"))
                .body("[37].'currencies'.size()", equalTo(1))
                .body("[37].'currencies'", hasItems("BGN"))
                .body("[37].'languages'.size()", equalTo(1))
                .body("[37].'languages'", hasItems("bg"))
                .body("[37].'translations'.'de'", containsString("Bulgarien"))
                .body("[37].'translations'.'es'", containsString("Bulgaria"))
                .body("[37].'translations'.'fr'", containsString("Bulgarie"))
                .body("[37].'translations'.'ja'", containsString("ブルガリア"))
                .body("[37].'translations'.'it'", containsString("Bulgaria"))
                .body("[37].'relevance'", containsString("0"))
                .body("[38].'name'", containsString("Burkina Faso"))
                .body("[38].'topLevelDomain'.size()", equalTo(1))
                .body("[38].'topLevelDomain'", hasItems(".bf"))
                .body("[38].'alpha2Code'", containsString("BF"))
                .body("[38].'alpha3Code'", containsString("BFA"))
                .body("[38].'callingCodes'.size()", equalTo(1))
                .body("[38].'callingCodes'", hasItems("226"))
                .body("[38].'capital'", containsString("Ouagadougou"))
                .body("[38].'altSpellings'.size()", equalTo(1))
                .body("[38].'altSpellings'", hasItems("BF"))
                .body("[38].'region'", containsString("Africa"))
                .body("[38].'subregion'", containsString("Western Africa"))
                .body("[38].'population'", numberMatches(1.8450494E7))
                .body("[38].'latlng'.size()", equalTo(2))
                .body("[38].'latlng'[0]", numberMatches(13.0))
                .body("[38].'latlng'[1]", numberMatches(-2.0))
                .body("[38].'demonym'", containsString("Burkinabe"))
                .body("[38].'area'", numberMatches(272967.0))
                .body("[38].'gini'", numberMatches(39.8))
                .body("[38].'timezones'.size()", equalTo(1))
                .body("[38].'timezones'", hasItems("UTC"))
                .body("[38].'borders'.size()", equalTo(6))
                .body("[38].'borders'", hasItems("BEN", "CIV", "GHA", "MLI", "NER", "TGO"))
                .body("[38].'nativeName'", containsString("Burkina Faso"))
                .body("[38].'numericCode'", containsString("854"))
                .body("[38].'currencies'.size()", equalTo(1))
                .body("[38].'currencies'", hasItems("XOF"))
                .body("[38].'languages'.size()", equalTo(2))
                .body("[38].'languages'", hasItems("fr", "ff"))
                .body("[38].'translations'.'de'", containsString("Burkina Faso"))
                .body("[38].'translations'.'es'", containsString("Burkina Faso"))
                .body("[38].'translations'.'fr'", containsString("Burkina Faso"))
                .body("[38].'translations'.'ja'", containsString("ブルキナファソ"))
                .body("[38].'translations'.'it'", containsString("Burkina Faso"))
                .body("[38].'relevance'", containsString("0"))
                .body("[39].'name'", containsString("Burundi"))
                .body("[39].'topLevelDomain'.size()", equalTo(1))
                .body("[39].'topLevelDomain'", hasItems(".bi"))
                .body("[39].'alpha2Code'", containsString("BI"))
                .body("[39].'alpha3Code'", containsString("BDI"))
                .body("[39].'callingCodes'.size()", equalTo(1))
                .body("[39].'callingCodes'", hasItems("257"))
                .body("[39].'capital'", containsString("Bujumbura"))
                .body("[39].'altSpellings'.size()", equalTo(4))
                .body("[39].'altSpellings'", hasItems("BI", "Republic of Burundi", "Republika y'Uburundi", "République du Burundi"))
                .body("[39].'region'", containsString("Africa"))
                .body("[39].'subregion'", containsString("Eastern Africa"))
                .body("[39].'population'", numberMatches(9823827.0))
                .body("[39].'latlng'.size()", equalTo(2))
                .body("[39].'latlng'[0]", numberMatches(-3.5))
                .body("[39].'latlng'[1]", numberMatches(30.0))
                .body("[39].'demonym'", containsString("Burundian"))
                .body("[39].'area'", numberMatches(27834.0))
                .body("[39].'gini'", numberMatches(33.3))
                .body("[39].'timezones'.size()", equalTo(1))
                .body("[39].'timezones'", hasItems("UTC+02:00"))
                .body("[39].'borders'.size()", equalTo(3))
                .body("[39].'borders'", hasItems("COD", "RWA", "TZA"))
                .body("[39].'nativeName'", containsString("Burundi"))
                .body("[39].'numericCode'", containsString("108"))
                .body("[39].'currencies'.size()", equalTo(1))
                .body("[39].'currencies'", hasItems("BIF"))
                .body("[39].'languages'.size()", equalTo(2))
                .body("[39].'languages'", hasItems("fr", "rn"))
                .body("[39].'translations'.'de'", containsString("Burundi"))
                .body("[39].'translations'.'es'", containsString("Burundi"))
                .body("[39].'translations'.'fr'", containsString("Burundi"))
                .body("[39].'translations'.'ja'", containsString("ブルンジ"))
                .body("[39].'translations'.'it'", containsString("Burundi"))
                .body("[39].'relevance'", containsString("0"))
                .body("[40].'name'", containsString("Cambodia"))
                .body("[40].'topLevelDomain'.size()", equalTo(1))
                .body("[40].'topLevelDomain'", hasItems(".kh"))
                .body("[40].'alpha2Code'", containsString("KH"))
                .body("[40].'alpha3Code'", containsString("KHM"))
                .body("[40].'callingCodes'.size()", equalTo(1))
                .body("[40].'callingCodes'", hasItems("855"))
                .body("[40].'capital'", containsString("Phnom Penh"))
                .body("[40].'altSpellings'.size()", equalTo(2))
                .body("[40].'altSpellings'", hasItems("KH", "Kingdom of Cambodia"))
                .body("[40].'region'", containsString("Asia"))
                .body("[40].'subregion'", containsString("South-Eastern Asia"))
                .body("[40].'population'", numberMatches(1.5405157E7))
                .body("[40].'latlng'.size()", equalTo(2))
                .body("[40].'latlng'[0]", numberMatches(13.0))
                .body("[40].'latlng'[1]", numberMatches(105.0))
                .body("[40].'demonym'", containsString("Cambodian"))
                .body("[40].'area'", numberMatches(181035.0))
                .body("[40].'gini'", numberMatches(37.9))
                .body("[40].'timezones'.size()", equalTo(1))
                .body("[40].'timezones'", hasItems("UTC+07:00"))
                .body("[40].'borders'.size()", equalTo(3))
                .body("[40].'borders'", hasItems("LAO", "THA", "VNM"))
                .body("[40].'nativeName'", containsString("Kâmpŭchéa"))
                .body("[40].'numericCode'", containsString("116"))
                .body("[40].'currencies'.size()", equalTo(1))
                .body("[40].'currencies'", hasItems("KHR"))
                .body("[40].'languages'.size()", equalTo(1))
                .body("[40].'languages'", hasItems("km"))
                .body("[40].'translations'.'de'", containsString("Kambodscha"))
                .body("[40].'translations'.'es'", containsString("Camboya"))
                .body("[40].'translations'.'fr'", containsString("Cambodge"))
                .body("[40].'translations'.'ja'", containsString("カンボジア"))
                .body("[40].'translations'.'it'", containsString("Cambogia"))
                .body("[40].'relevance'", containsString("0"))
                .body("[41].'name'", containsString("Cameroon"))
                .body("[41].'topLevelDomain'.size()", equalTo(1))
                .body("[41].'topLevelDomain'", hasItems(".cm"))
                .body("[41].'alpha2Code'", containsString("CM"))
                .body("[41].'alpha3Code'", containsString("CMR"))
                .body("[41].'callingCodes'.size()", equalTo(1))
                .body("[41].'callingCodes'", hasItems("237"))
                .body("[41].'capital'", containsString("Yaoundé"))
                .body("[41].'altSpellings'.size()", equalTo(3))
                .body("[41].'altSpellings'", hasItems("CM", "Republic of Cameroon", "République du Cameroun"))
                .body("[41].'region'", containsString("Africa"))
                .body("[41].'subregion'", containsString("Middle Africa"))
                .body("[41].'population'", numberMatches(2.3344E7))
                .body("[41].'latlng'.size()", equalTo(2))
                .body("[41].'latlng'[0]", numberMatches(6.0))
                .body("[41].'latlng'[1]", numberMatches(12.0))
                .body("[41].'demonym'", containsString("Cameroonian"))
                .body("[41].'area'", numberMatches(475442.0))
                .body("[41].'gini'", numberMatches(38.9))
                .body("[41].'timezones'.size()", equalTo(1))
                .body("[41].'timezones'", hasItems("UTC+01:00"))
                .body("[41].'borders'.size()", equalTo(6))
                .body("[41].'borders'", hasItems("CAF", "TCD", "COG", "GNQ", "GAB", "NGA"))
                .body("[41].'nativeName'", containsString("Cameroon"))
                .body("[41].'numericCode'", containsString("120"))
                .body("[41].'currencies'.size()", equalTo(1))
                .body("[41].'currencies'", hasItems("XAF"))
                .body("[41].'languages'.size()", equalTo(2))
                .body("[41].'languages'", hasItems("en", "fr"))
                .body("[41].'translations'.'de'", containsString("Kamerun"))
                .body("[41].'translations'.'es'", containsString("Camerún"))
                .body("[41].'translations'.'fr'", containsString("Cameroun"))
                .body("[41].'translations'.'ja'", containsString("カメルーン"))
                .body("[41].'translations'.'it'", containsString("Camerun"))
                .body("[41].'relevance'", containsString("0"))
                .body("[42].'name'", containsString("Canada"))
                .body("[42].'topLevelDomain'.size()", equalTo(1))
                .body("[42].'topLevelDomain'", hasItems(".ca"))
                .body("[42].'alpha2Code'", containsString("CA"))
                .body("[42].'alpha3Code'", containsString("CAN"))
                .body("[42].'callingCodes'.size()", equalTo(1))
                .body("[42].'callingCodes'", hasItems("1"))
                .body("[42].'capital'", containsString("Ottawa"))
                .body("[42].'altSpellings'.size()", equalTo(1))
                .body("[42].'altSpellings'", hasItems("CA"))
                .body("[42].'region'", containsString("Americas"))
                .body("[42].'subregion'", containsString("Northern America"))
                .body("[42].'population'", numberMatches(3.57496E7))
                .body("[42].'latlng'.size()", equalTo(2))
                .body("[42].'latlng'[0]", numberMatches(60.0))
                .body("[42].'latlng'[1]", numberMatches(-95.0))
                .body("[42].'demonym'", containsString("Canadian"))
                .body("[42].'area'", numberMatches(9984670.0))
                .body("[42].'gini'", numberMatches(32.6))
                .body("[42].'timezones'.size()", equalTo(6))
                .body("[42].'timezones'", hasItems("UTC-08:00", "UTC-07:00", "UTC-06:00", "UTC-05:00", "UTC-04:00", "UTC-03:30"))
                .body("[42].'borders'.size()", equalTo(1))
                .body("[42].'borders'", hasItems("USA"))
                .body("[42].'nativeName'", containsString("Canada"))
                .body("[42].'numericCode'", containsString("124"))
                .body("[42].'currencies'.size()", equalTo(1))
                .body("[42].'currencies'", hasItems("CAD"))
                .body("[42].'languages'.size()", equalTo(2))
                .body("[42].'languages'", hasItems("en", "fr"))
                .body("[42].'translations'.'de'", containsString("Kanada"))
                .body("[42].'translations'.'es'", containsString("Canadá"))
                .body("[42].'translations'.'fr'", containsString("Canada"))
                .body("[42].'translations'.'ja'", containsString("カナダ"))
                .body("[42].'translations'.'it'", containsString("Canada"))
                .body("[42].'relevance'", containsString("2"))
                .body("[43].'name'", containsString("Cape Verde"))
                .body("[43].'topLevelDomain'.size()", equalTo(1))
                .body("[43].'topLevelDomain'", hasItems(".cv"))
                .body("[43].'alpha2Code'", containsString("CV"))
                .body("[43].'alpha3Code'", containsString("CPV"))
                .body("[43].'callingCodes'.size()", equalTo(1))
                .body("[43].'callingCodes'", hasItems("238"))
                .body("[43].'capital'", containsString("Praia"))
                .body("[43].'altSpellings'.size()", equalTo(3))
                .body("[43].'altSpellings'", hasItems("CV", "Republic of Cabo Verde", "República de Cabo Verde"))
                .body("[43].'region'", containsString("Africa"))
                .body("[43].'subregion'", containsString("Western Africa"))
                .body("[43].'population'", numberMatches(524833.0))
                .body("[43].'latlng'.size()", equalTo(2))
                .body("[43].'latlng'[0]", numberMatches(16.0))
                .body("[43].'latlng'[1]", numberMatches(-24.0))
                .body("[43].'demonym'", containsString("Cape Verdian"))
                .body("[43].'area'", numberMatches(4033.0))
                .body("[43].'gini'", numberMatches(50.5))
                .body("[43].'timezones'.size()", equalTo(1))
                .body("[43].'timezones'", hasItems("UTC-01:00"))
                .body("[43].'borders'.size()", equalTo(0))
                .body("[43].'nativeName'", containsString("Cabo Verde"))
                .body("[43].'numericCode'", containsString("132"))
                .body("[43].'currencies'.size()", equalTo(1))
                .body("[43].'currencies'", hasItems("CVE"))
                .body("[43].'languages'.size()", equalTo(1))
                .body("[43].'languages'", hasItems("pt"))
                .body("[43].'translations'.'de'", containsString("Kap Verde"))
                .body("[43].'translations'.'es'", containsString("Cabo Verde"))
                .body("[43].'translations'.'fr'", containsString("Cap Vert"))
                .body("[43].'translations'.'ja'", containsString("カーボベルデ"))
                .body("[43].'translations'.'it'", containsString("Capo Verde"))
                .body("[43].'relevance'", containsString("0"))
                .body("[44].'name'", containsString("Cayman Islands"))
                .body("[44].'topLevelDomain'.size()", equalTo(1))
                .body("[44].'topLevelDomain'", hasItems(".ky"))
                .body("[44].'alpha2Code'", containsString("KY"))
                .body("[44].'alpha3Code'", containsString("CYM"))
                .body("[44].'callingCodes'.size()", equalTo(1))
                .body("[44].'callingCodes'", hasItems("1"))
                .body("[44].'capital'", containsString("George Town"))
                .body("[44].'altSpellings'.size()", equalTo(1))
                .body("[44].'altSpellings'", hasItems("KY"))
                .body("[44].'region'", containsString("Americas"))
                .body("[44].'subregion'", containsString("Caribbean"))
                .body("[44].'population'", numberMatches(58238.0))
                .body("[44].'latlng'.size()", equalTo(2))
                .body("[44].'latlng'[0]", numberMatches(19.5))
                .body("[44].'latlng'[1]", numberMatches(-80.5))
                .body("[44].'demonym'", containsString("Caymanian"))
                .body("[44].'area'", numberMatches(264.0))
                .body("[44].'gini'", nullValue())
                .body("[44].'timezones'.size()", equalTo(1))
                .body("[44].'timezones'", hasItems("UTC-05:00"))
                .body("[44].'borders'.size()", equalTo(0))
                .body("[44].'nativeName'", containsString("Cayman Islands"))
                .body("[44].'numericCode'", containsString("136"))
                .body("[44].'currencies'.size()", equalTo(1))
                .body("[44].'currencies'", hasItems("KYD"))
                .body("[44].'languages'.size()", equalTo(1))
                .body("[44].'languages'", hasItems("en"))
                .body("[44].'translations'.'de'", containsString("Kaimaninseln"))
                .body("[44].'translations'.'es'", containsString("Islas Caimán"))
                .body("[44].'translations'.'fr'", containsString("Îles Caïmans"))
                .body("[44].'translations'.'ja'", containsString("ケイマン諸島"))
                .body("[44].'translations'.'it'", containsString("Isole Cayman"))
                .body("[44].'relevance'", containsString("0.5"))
                .body("[45].'name'", containsString("Central African Republic"))
                .body("[45].'topLevelDomain'.size()", equalTo(1))
                .body("[45].'topLevelDomain'", hasItems(".cf"))
                .body("[45].'alpha2Code'", containsString("CF"))
                .body("[45].'alpha3Code'", containsString("CAF"))
                .body("[45].'callingCodes'.size()", equalTo(1))
                .body("[45].'callingCodes'", hasItems("236"))
                .body("[45].'capital'", containsString("Bangui"))
                .body("[45].'altSpellings'.size()", equalTo(3))
                .body("[45].'altSpellings'", hasItems("CF", "Central African Republic", "République centrafricaine"))
                .body("[45].'region'", containsString("Africa"))
                .body("[45].'subregion'", containsString("Middle Africa"))
                .body("[45].'population'", numberMatches(4900000.0))
                .body("[45].'latlng'.size()", equalTo(2))
                .body("[45].'latlng'[0]", numberMatches(7.0))
                .body("[45].'latlng'[1]", numberMatches(21.0))
                .body("[45].'demonym'", containsString("Central African"))
                .body("[45].'area'", numberMatches(622984.0))
                .body("[45].'gini'", numberMatches(56.3))
                .body("[45].'timezones'.size()", equalTo(1))
                .body("[45].'timezones'", hasItems("UTC+01:00"))
                .body("[45].'borders'.size()", equalTo(6))
                .body("[45].'borders'", hasItems("CMR", "TCD", "COD", "COG", "SSD", "SDN"))
                .body("[45].'nativeName'", containsString("Ködörösêse tî Bêafrîka"))
                .body("[45].'numericCode'", containsString("140"))
                .body("[45].'currencies'.size()", equalTo(1))
                .body("[45].'currencies'", hasItems("XAF"))
                .body("[45].'languages'.size()", equalTo(2))
                .body("[45].'languages'", hasItems("fr", "sg"))
                .body("[45].'translations'.'de'", containsString("Zentralafrikanische Republik"))
                .body("[45].'translations'.'es'", containsString("República Centroafricana"))
                .body("[45].'translations'.'fr'", containsString("République centrafricaine"))
                .body("[45].'translations'.'ja'", containsString("中央アフリカ共和国"))
                .body("[45].'translations'.'it'", containsString("Repubblica Centrafricana"))
                .body("[45].'relevance'", containsString("0"))
                .body("[46].'name'", containsString("Chad"))
                .body("[46].'topLevelDomain'.size()", equalTo(1))
                .body("[46].'topLevelDomain'", hasItems(".td"))
                .body("[46].'alpha2Code'", containsString("TD"))
                .body("[46].'alpha3Code'", containsString("TCD"))
                .body("[46].'callingCodes'.size()", equalTo(1))
                .body("[46].'callingCodes'", hasItems("235"))
                .body("[46].'capital'", containsString("N'Djamena"))
                .body("[46].'altSpellings'.size()", equalTo(4))
                .body("[46].'altSpellings'", hasItems("TD", "Tchad", "Republic of Chad", "République du Tchad"))
                .body("[46].'region'", containsString("Africa"))
                .body("[46].'subregion'", containsString("Middle Africa"))
                .body("[46].'population'", numberMatches(1.4037E7))
                .body("[46].'latlng'.size()", equalTo(2))
                .body("[46].'latlng'[0]", numberMatches(15.0))
                .body("[46].'latlng'[1]", numberMatches(19.0))
                .body("[46].'demonym'", containsString("Chadian"))
                .body("[46].'area'", numberMatches(1284000.0))
                .body("[46].'gini'", numberMatches(39.8))
                .body("[46].'timezones'.size()", equalTo(1))
                .body("[46].'timezones'", hasItems("UTC+01:00"))
                .body("[46].'borders'.size()", equalTo(6))
                .body("[46].'borders'", hasItems("CMR", "CAF", "LBY", "NER", "NGA", "SSD"))
                .body("[46].'nativeName'", containsString("Tchad"))
                .body("[46].'numericCode'", containsString("148"))
                .body("[46].'currencies'.size()", equalTo(1))
                .body("[46].'currencies'", hasItems("XAF"))
                .body("[46].'languages'.size()", equalTo(2))
                .body("[46].'languages'", hasItems("fr", "ar"))
                .body("[46].'translations'.'de'", containsString("Tschad"))
                .body("[46].'translations'.'es'", containsString("Chad"))
                .body("[46].'translations'.'fr'", containsString("Tchad"))
                .body("[46].'translations'.'ja'", containsString("チャド"))
                .body("[46].'translations'.'it'", containsString("Ciad"))
                .body("[46].'relevance'", containsString("0"))
                .body("[47].'name'", containsString("Chile"))
                .body("[47].'topLevelDomain'.size()", equalTo(1))
                .body("[47].'topLevelDomain'", hasItems(".cl"))
                .body("[47].'alpha2Code'", containsString("CL"))
                .body("[47].'alpha3Code'", containsString("CHL"))
                .body("[47].'callingCodes'.size()", equalTo(1))
                .body("[47].'callingCodes'", hasItems("56"))
                .body("[47].'capital'", containsString("Santiago"))
                .body("[47].'altSpellings'.size()", equalTo(3))
                .body("[47].'altSpellings'", hasItems("CL", "Republic of Chile", "República de Chile"))
                .body("[47].'region'", containsString("Americas"))
                .body("[47].'subregion'", containsString("South America"))
                .body("[47].'population'", numberMatches(1.8006407E7))
                .body("[47].'latlng'.size()", equalTo(2))
                .body("[47].'latlng'[0]", numberMatches(-30.0))
                .body("[47].'latlng'[1]", numberMatches(-71.0))
                .body("[47].'demonym'", containsString("Chilean"))
                .body("[47].'area'", numberMatches(756102.0))
                .body("[47].'gini'", numberMatches(52.1))
                .body("[47].'timezones'.size()", equalTo(2))
                .body("[47].'timezones'", hasItems("UTC-06:00", "UTC-04:00"))
                .body("[47].'borders'.size()", equalTo(3))
                .body("[47].'borders'", hasItems("ARG", "BOL", "PER"))
                .body("[47].'nativeName'", containsString("Chile"))
                .body("[47].'numericCode'", containsString("152"))
                .body("[47].'currencies'.size()", equalTo(2))
                .body("[47].'currencies'", hasItems("CLF", "CLP"))
                .body("[47].'languages'.size()", equalTo(1))
                .body("[47].'languages'", hasItems("es"))
                .body("[47].'translations'.'de'", containsString("Chile"))
                .body("[47].'translations'.'es'", containsString("Chile"))
                .body("[47].'translations'.'fr'", containsString("Chili"))
                .body("[47].'translations'.'ja'", containsString("チリ"))
                .body("[47].'translations'.'it'", containsString("Cile"))
                .body("[47].'relevance'", containsString("0"))
                .body("[48].'name'", containsString("China"))
                .body("[48].'topLevelDomain'.size()", equalTo(1))
                .body("[48].'topLevelDomain'", hasItems(".cn"))
                .body("[48].'alpha2Code'", containsString("CN"))
                .body("[48].'alpha3Code'", containsString("CHN"))
                .body("[48].'callingCodes'.size()", equalTo(1))
                .body("[48].'callingCodes'", hasItems("86"))
                .body("[48].'capital'", containsString("Beijing"))
                .body("[48].'altSpellings'.size()", equalTo(7))
                .body("[48].'altSpellings'", hasItems("CN", "Zhōngguó", "Zhongguo", "Zhonghua", "People's Republic of China", "中华人民共和国", "Zhōnghuá Rénmín Gònghéguó"))
                .body("[48].'region'", containsString("Asia"))
                .body("[48].'subregion'", containsString("Eastern Asia"))
                .body("[48].'population'", numberMatches(1.37159E9))
                .body("[48].'latlng'.size()", equalTo(2))
                .body("[48].'latlng'[0]", numberMatches(35.0))
                .body("[48].'latlng'[1]", numberMatches(105.0))
                .body("[48].'demonym'", containsString("Chinese"))
                .body("[48].'area'", numberMatches(9640011.0))
                .body("[48].'gini'", numberMatches(47.0))
                .body("[48].'timezones'.size()", equalTo(1))
                .body("[48].'timezones'", hasItems("UTC+08:00"))
                .body("[48].'borders'.size()", equalTo(15))
                .body("[48].'borders'", hasItems("AFG", "BTN", "MMR", "HKG", "IND", "KAZ", "PRK", "KGZ", "LAO", "MAC", "MNG", "PAK", "RUS", "TJK", "VNM"))
                .body("[48].'nativeName'", containsString("中国"))
                .body("[48].'numericCode'", containsString("156"))
                .body("[48].'currencies'.size()", equalTo(1))
                .body("[48].'currencies'", hasItems("CNY"))
                .body("[48].'languages'.size()", equalTo(1))
                .body("[48].'languages'", hasItems("zh"))
                .body("[48].'translations'.'de'", containsString("China"))
                .body("[48].'translations'.'es'", containsString("China"))
                .body("[48].'translations'.'fr'", containsString("Chine"))
                .body("[48].'translations'.'ja'", containsString("中国"))
                .body("[48].'translations'.'it'", containsString("Cina"))
                .body("[48].'relevance'", containsString("0"))
                .body("[49].'name'", containsString("Christmas Island"))
                .body("[49].'topLevelDomain'.size()", equalTo(1))
                .body("[49].'topLevelDomain'", hasItems(".cx"))
                .body("[49].'alpha2Code'", containsString("CX"))
                .body("[49].'alpha3Code'", containsString("CXR"))
                .body("[49].'callingCodes'.size()", equalTo(1))
                .body("[49].'callingCodes'", hasItems("61"))
                .body("[49].'capital'", containsString("Flying Fish Cove"))
                .body("[49].'altSpellings'.size()", equalTo(2))
                .body("[49].'altSpellings'", hasItems("CX", "Territory of Christmas Island"))
                .body("[49].'region'", containsString("Oceania"))
                .body("[49].'subregion'", containsString("Australia and New Zealand"))
                .body("[49].'population'", numberMatches(2072.0))
                .body("[49].'latlng'.size()", equalTo(2))
                .body("[49].'latlng'[0]", numberMatches(-10.5))
                .body("[49].'latlng'[1]", numberMatches(105.66666666))
                .body("[49].'demonym'", containsString("Christmas Island"))
                .body("[49].'area'", numberMatches(135.0))
                .body("[49].'gini'", nullValue())
                .body("[49].'timezones'.size()", equalTo(1))
                .body("[49].'timezones'", hasItems("UTC+07:00"))
                .body("[49].'borders'.size()", equalTo(0))
                .body("[49].'nativeName'", containsString("Christmas Island"))
                .body("[49].'numericCode'", containsString("162"))
                .body("[49].'currencies'.size()", equalTo(1))
                .body("[49].'currencies'", hasItems("AUD"))
                .body("[49].'languages'.size()", equalTo(1))
                .body("[49].'languages'", hasItems("en"))
                .body("[49].'translations'.'de'", containsString("Weihnachtsinsel"))
                .body("[49].'translations'.'es'", containsString("Isla de Navidad"))
                .body("[49].'translations'.'fr'", containsString("Île Christmas"))
                .body("[49].'translations'.'ja'", containsString("クリスマス島"))
                .body("[49].'translations'.'it'", containsString("Isola di Natale"))
                .body("[49].'relevance'", containsString("0.5"))
                .body("[50].'name'", containsString("Cocos (Keeling) Islands"))
                .body("[50].'topLevelDomain'.size()", equalTo(1))
                .body("[50].'topLevelDomain'", hasItems(".cc"))
                .body("[50].'alpha2Code'", containsString("CC"))
                .body("[50].'alpha3Code'", containsString("CCK"))
                .body("[50].'callingCodes'.size()", equalTo(1))
                .body("[50].'callingCodes'", hasItems("61"))
                .body("[50].'capital'", containsString("West Island"))
                .body("[50].'altSpellings'.size()", equalTo(3))
                .body("[50].'altSpellings'", hasItems("CC", "Territory of the Cocos (Keeling) Islands", "Keeling Islands"))
                .body("[50].'region'", containsString("Oceania"))
                .body("[50].'subregion'", containsString("Australia and New Zealand"))
                .body("[50].'population'", numberMatches(550.0))
                .body("[50].'latlng'.size()", equalTo(2))
                .body("[50].'latlng'[0]", numberMatches(-12.5))
                .body("[50].'latlng'[1]", numberMatches(96.83333333))
                .body("[50].'demonym'", containsString("Cocos Islander"))
                .body("[50].'area'", numberMatches(14.0))
                .body("[50].'gini'", nullValue())
                .body("[50].'timezones'.size()", equalTo(1))
                .body("[50].'timezones'", hasItems("UTC+06:30"))
                .body("[50].'borders'.size()", equalTo(0))
                .body("[50].'nativeName'", containsString("Cocos (Keeling) Islands"))
                .body("[50].'numericCode'", containsString("166"))
                .body("[50].'currencies'.size()", equalTo(1))
                .body("[50].'currencies'", hasItems("AUD"))
                .body("[50].'languages'.size()", equalTo(1))
                .body("[50].'languages'", hasItems("en"))
                .body("[50].'translations'.'de'", containsString("Kokosinseln"))
                .body("[50].'translations'.'es'", containsString("Islas Cocos o Islas Keeling"))
                .body("[50].'translations'.'fr'", containsString("Îles Cocos"))
                .body("[50].'translations'.'ja'", containsString("ココス（キーリング）諸島"))
                .body("[50].'translations'.'it'", containsString("Isole Cocos e Keeling"))
                .body("[50].'relevance'", containsString("0"))
                .body("[51].'name'", containsString("Colombia"))
                .body("[51].'topLevelDomain'.size()", equalTo(1))
                .body("[51].'topLevelDomain'", hasItems(".co"))
                .body("[51].'alpha2Code'", containsString("CO"))
                .body("[51].'alpha3Code'", containsString("COL"))
                .body("[51].'callingCodes'.size()", equalTo(1))
                .body("[51].'callingCodes'", hasItems("57"))
                .body("[51].'capital'", containsString("Bogotá"))
                .body("[51].'altSpellings'.size()", equalTo(3))
                .body("[51].'altSpellings'", hasItems("CO", "Republic of Colombia", "República de Colombia"))
                .body("[51].'region'", containsString("Americas"))
                .body("[51].'subregion'", containsString("South America"))
                .body("[51].'population'", numberMatches(4.82666E7))
                .body("[51].'latlng'.size()", equalTo(2))
                .body("[51].'latlng'[0]", numberMatches(4.0))
                .body("[51].'latlng'[1]", numberMatches(-72.0))
                .body("[51].'demonym'", containsString("Colombian"))
                .body("[51].'area'", numberMatches(1141748.0))
                .body("[51].'gini'", numberMatches(55.9))
                .body("[51].'timezones'.size()", equalTo(1))
                .body("[51].'timezones'", hasItems("UTC-05:00"))
                .body("[51].'borders'.size()", equalTo(5))
                .body("[51].'borders'", hasItems("BRA", "ECU", "PAN", "PER", "VEN"))
                .body("[51].'nativeName'", containsString("Colombia"))
                .body("[51].'numericCode'", containsString("170"))
                .body("[51].'currencies'.size()", equalTo(1))
                .body("[51].'currencies'", hasItems("COP"))
                .body("[51].'languages'.size()", equalTo(1))
                .body("[51].'languages'", hasItems("es"))
                .body("[51].'translations'.'de'", containsString("Kolumbien"))
                .body("[51].'translations'.'es'", containsString("Colombia"))
                .body("[51].'translations'.'fr'", containsString("Colombie"))
                .body("[51].'translations'.'ja'", containsString("コロンビア"))
                .body("[51].'translations'.'it'", containsString("Colombia"))
                .body("[51].'relevance'", containsString("0"))
                .body("[52].'name'", containsString("Comoros"))
                .body("[52].'topLevelDomain'.size()", equalTo(1))
                .body("[52].'topLevelDomain'", hasItems(".km"))
                .body("[52].'alpha2Code'", containsString("KM"))
                .body("[52].'alpha3Code'", containsString("COM"))
                .body("[52].'callingCodes'.size()", equalTo(1))
                .body("[52].'callingCodes'", hasItems("269"))
                .body("[52].'capital'", containsString("Moroni"))
                .body("[52].'altSpellings'.size()", equalTo(5))
                .body("[52].'altSpellings'", hasItems("KM", "Union of the Comoros", "Union des Comores", "Udzima wa Komori", "al-Ittiḥād al-Qumurī"))
                .body("[52].'region'", containsString("Africa"))
                .body("[52].'subregion'", containsString("Eastern Africa"))
                .body("[52].'population'", numberMatches(784745.0))
                .body("[52].'latlng'.size()", equalTo(2))
                .body("[52].'latlng'[0]", numberMatches(-12.16666666))
                .body("[52].'latlng'[1]", numberMatches(44.25))
                .body("[52].'demonym'", containsString("Comoran"))
                .body("[52].'area'", numberMatches(1862.0))
                .body("[52].'gini'", numberMatches(64.3))
                .body("[52].'timezones'.size()", equalTo(1))
                .body("[52].'timezones'", hasItems("UTC+03:00"))
                .body("[52].'borders'.size()", equalTo(0))
                .body("[52].'nativeName'", containsString("Komori"))
                .body("[52].'numericCode'", containsString("174"))
                .body("[52].'currencies'.size()", equalTo(1))
                .body("[52].'currencies'", hasItems("KMF"))
                .body("[52].'languages'.size()", equalTo(2))
                .body("[52].'languages'", hasItems("ar", "fr"))
                .body("[52].'translations'.'de'", containsString("Union der Komoren"))
                .body("[52].'translations'.'es'", containsString("Comoras"))
                .body("[52].'translations'.'fr'", containsString("Comores"))
                .body("[52].'translations'.'ja'", containsString("コモロ"))
                .body("[52].'translations'.'it'", containsString("Comore"))
                .body("[52].'relevance'", containsString("0"))
                .body("[53].'name'", containsString("Republic of the Congo"))
                .body("[53].'topLevelDomain'.size()", equalTo(1))
                .body("[53].'topLevelDomain'", hasItems(".cg"))
                .body("[53].'alpha2Code'", containsString("CG"))
                .body("[53].'alpha3Code'", containsString("COG"))
                .body("[53].'callingCodes'.size()", equalTo(1))
                .body("[53].'callingCodes'", hasItems("242"))
                .body("[53].'capital'", containsString("Brazzaville"))
                .body("[53].'altSpellings'.size()", equalTo(2))
                .body("[53].'altSpellings'", hasItems("CG", "Congo-Brazzaville"))
                .body("[53].'region'", containsString("Africa"))
                .body("[53].'subregion'", containsString("Middle Africa"))
                .body("[53].'population'", numberMatches(4620000.0))
                .body("[53].'latlng'.size()", equalTo(2))
                .body("[53].'latlng'[0]", numberMatches(-1.0))
                .body("[53].'latlng'[1]", numberMatches(15.0))
                .body("[53].'demonym'", containsString("Congolese"))
                .body("[53].'area'", numberMatches(342000.0))
                .body("[53].'gini'", numberMatches(47.3))
                .body("[53].'timezones'.size()", equalTo(1))
                .body("[53].'timezones'", hasItems("UTC+01:00"))
                .body("[53].'borders'.size()", equalTo(5))
                .body("[53].'borders'", hasItems("AGO", "CMR", "CAF", "COD", "GAB"))
                .body("[53].'nativeName'", containsString("République du Congo"))
                .body("[53].'numericCode'", containsString("178"))
                .body("[53].'currencies'.size()", equalTo(1))
                .body("[53].'currencies'", hasItems("XAF"))
                .body("[53].'languages'.size()", equalTo(2))
                .body("[53].'languages'", hasItems("fr", "ln"))
                .body("[53].'translations'.'de'", containsString("Kongo"))
                .body("[53].'translations'.'es'", containsString("Congo"))
                .body("[53].'translations'.'fr'", containsString("Congo"))
                .body("[53].'translations'.'ja'", containsString("コンゴ共和国"))
                .body("[53].'translations'.'it'", containsString("Congo"))
                .body("[53].'relevance'", containsString("0"))
                .body("[54].'name'", containsString("Democratic Republic of the Congo"))
                .body("[54].'topLevelDomain'.size()", equalTo(1))
                .body("[54].'topLevelDomain'", hasItems(".cd"))
                .body("[54].'alpha2Code'", containsString("CD"))
                .body("[54].'alpha3Code'", containsString("COD"))
                .body("[54].'callingCodes'.size()", equalTo(1))
                .body("[54].'callingCodes'", hasItems("243"))
                .body("[54].'capital'", containsString("Kinshasa"))
                .body("[54].'altSpellings'.size()", equalTo(4))
                .body("[54].'altSpellings'", hasItems("CD", "DR Congo", "Congo-Kinshasa", "DRC"))
                .body("[54].'region'", containsString("Africa"))
                .body("[54].'subregion'", containsString("Middle Africa"))
                .body("[54].'population'", numberMatches(7.7267E7))
                .body("[54].'latlng'.size()", equalTo(2))
                .body("[54].'latlng'[0]", numberMatches(0.0))
                .body("[54].'latlng'[1]", numberMatches(25.0))
                .body("[54].'demonym'", containsString("Congolese"))
                .body("[54].'area'", numberMatches(2344858.0))
                .body("[54].'gini'", nullValue())
                .body("[54].'timezones'.size()", equalTo(2))
                .body("[54].'timezones'", hasItems("UTC+01:00", "UTC+02:00"))
                .body("[54].'borders'.size()", equalTo(9))
                .body("[54].'borders'", hasItems("AGO", "BDI", "CAF", "COG", "RWA", "SSD", "TZA", "UGA", "ZMB"))
                .body("[54].'nativeName'", containsString("République démocratique du Congo"))
                .body("[54].'numericCode'", containsString("180"))
                .body("[54].'currencies'.size()", equalTo(1))
                .body("[54].'currencies'", hasItems("CDF"))
                .body("[54].'languages'.size()", equalTo(5))
                .body("[54].'languages'", hasItems("fr", "ln", "kg", "sw", "lu"))
                .body("[54].'translations'.'de'", containsString("Kongo (Dem. Rep.)"))
                .body("[54].'translations'.'es'", containsString("Congo (Rep. Dem.)"))
                .body("[54].'translations'.'fr'", containsString("Congo (Rép. dém.)"))
                .body("[54].'translations'.'ja'", containsString("コンゴ民主共和国"))
                .body("[54].'translations'.'it'", containsString("Congo (Rep. Dem.)"))
                .body("[54].'relevance'", containsString("0"))
                .body("[55].'name'", containsString("Cook Islands"))
                .body("[55].'topLevelDomain'.size()", equalTo(1))
                .body("[55].'topLevelDomain'", hasItems(".ck"))
                .body("[55].'alpha2Code'", containsString("CK"))
                .body("[55].'alpha3Code'", containsString("COK"))
                .body("[55].'callingCodes'.size()", equalTo(1))
                .body("[55].'callingCodes'", hasItems("682"))
                .body("[55].'capital'", containsString("Avarua"))
                .body("[55].'altSpellings'.size()", equalTo(2))
                .body("[55].'altSpellings'", hasItems("CK", "Kūki 'Āirani"))
                .body("[55].'region'", containsString("Oceania"))
                .body("[55].'subregion'", containsString("Polynesia"))
                .body("[55].'population'", numberMatches(14974.0))
                .body("[55].'latlng'.size()", equalTo(2))
                .body("[55].'latlng'[0]", numberMatches(-21.23333333))
                .body("[55].'latlng'[1]", numberMatches(-159.76666666))
                .body("[55].'demonym'", containsString("Cook Islander"))
                .body("[55].'area'", numberMatches(236.0))
                .body("[55].'gini'", nullValue())
                .body("[55].'timezones'.size()", equalTo(1))
                .body("[55].'timezones'", hasItems("UTC-10:00"))
                .body("[55].'borders'.size()", equalTo(0))
                .body("[55].'nativeName'", containsString("Cook Islands"))
                .body("[55].'numericCode'", containsString("184"))
                .body("[55].'currencies'.size()", equalTo(1))
                .body("[55].'currencies'", hasItems("NZD"))
                .body("[55].'languages'.size()", equalTo(1))
                .body("[55].'languages'", hasItems("en"))
                .body("[55].'translations'.'de'", containsString("Cookinseln"))
                .body("[55].'translations'.'es'", containsString("Islas Cook"))
                .body("[55].'translations'.'fr'", containsString("Îles Cook"))
                .body("[55].'translations'.'ja'", containsString("クック諸島"))
                .body("[55].'translations'.'it'", containsString("Isole Cook"))
                .body("[55].'relevance'", containsString("0.5"))
                .body("[56].'name'", containsString("Costa Rica"))
                .body("[56].'topLevelDomain'.size()", equalTo(1))
                .body("[56].'topLevelDomain'", hasItems(".cr"))
                .body("[56].'alpha2Code'", containsString("CR"))
                .body("[56].'alpha3Code'", containsString("CRI"))
                .body("[56].'callingCodes'.size()", equalTo(1))
                .body("[56].'callingCodes'", hasItems("506"))
                .body("[56].'capital'", containsString("San José"))
                .body("[56].'altSpellings'.size()", equalTo(3))
                .body("[56].'altSpellings'", hasItems("CR", "Republic of Costa Rica", "República de Costa Rica"))
                .body("[56].'region'", containsString("Americas"))
                .body("[56].'subregion'", containsString("Central America"))
                .body("[56].'population'", numberMatches(4773130.0))
                .body("[56].'latlng'.size()", equalTo(2))
                .body("[56].'latlng'[0]", numberMatches(10.0))
                .body("[56].'latlng'[1]", numberMatches(-84.0))
                .body("[56].'demonym'", containsString("Costa Rican"))
                .body("[56].'area'", numberMatches(51100.0))
                .body("[56].'gini'", numberMatches(50.7))
                .body("[56].'timezones'.size()", equalTo(1))
                .body("[56].'timezones'", hasItems("UTC-06:00"))
                .body("[56].'borders'.size()", equalTo(2))
                .body("[56].'borders'", hasItems("NIC", "PAN"))
                .body("[56].'nativeName'", containsString("Costa Rica"))
                .body("[56].'numericCode'", containsString("188"))
                .body("[56].'currencies'.size()", equalTo(1))
                .body("[56].'currencies'", hasItems("CRC"))
                .body("[56].'languages'.size()", equalTo(1))
                .body("[56].'languages'", hasItems("es"))
                .body("[56].'translations'.'de'", containsString("Costa Rica"))
                .body("[56].'translations'.'es'", containsString("Costa Rica"))
                .body("[56].'translations'.'fr'", containsString("Costa Rica"))
                .body("[56].'translations'.'ja'", containsString("コスタリカ"))
                .body("[56].'translations'.'it'", containsString("Costa Rica"))
                .body("[56].'relevance'", containsString("0"))
                .body("[57].'name'", containsString("Croatia"))
                .body("[57].'topLevelDomain'.size()", equalTo(1))
                .body("[57].'topLevelDomain'", hasItems(".hr"))
                .body("[57].'alpha2Code'", containsString("HR"))
                .body("[57].'alpha3Code'", containsString("HRV"))
                .body("[57].'callingCodes'.size()", equalTo(1))
                .body("[57].'callingCodes'", hasItems("385"))
                .body("[57].'capital'", containsString("Zagreb"))
                .body("[57].'altSpellings'.size()", equalTo(4))
                .body("[57].'altSpellings'", hasItems("HR", "Hrvatska", "Republic of Croatia", "Republika Hrvatska"))
                .body("[57].'region'", containsString("Europe"))
                .body("[57].'subregion'", containsString("Southern Europe"))
                .body("[57].'population'", numberMatches(4246800.0))
                .body("[57].'latlng'.size()", equalTo(2))
                .body("[57].'latlng'[0]", numberMatches(45.16666666))
                .body("[57].'latlng'[1]", numberMatches(15.5))
                .body("[57].'demonym'", containsString("Croatian"))
                .body("[57].'area'", numberMatches(56594.0))
                .body("[57].'gini'", numberMatches(33.7))
                .body("[57].'timezones'.size()", equalTo(1))
                .body("[57].'timezones'", hasItems("UTC+01:00"))
                .body("[57].'borders'.size()", equalTo(5))
                .body("[57].'borders'", hasItems("BIH", "HUN", "MNE", "SRB", "SVN"))
                .body("[57].'nativeName'", containsString("Hrvatska"))
                .body("[57].'numericCode'", containsString("191"))
                .body("[57].'currencies'.size()", equalTo(1))
                .body("[57].'currencies'", hasItems("HRK"))
                .body("[57].'languages'.size()", equalTo(1))
                .body("[57].'languages'", hasItems("hr"))
                .body("[57].'translations'.'de'", containsString("Kroatien"))
                .body("[57].'translations'.'es'", containsString("Croacia"))
                .body("[57].'translations'.'fr'", containsString("Croatie"))
                .body("[57].'translations'.'ja'", containsString("クロアチア"))
                .body("[57].'translations'.'it'", containsString("Croazia"))
                .body("[57].'relevance'", containsString("0"))
                .body("[58].'name'", containsString("Cuba"))
                .body("[58].'topLevelDomain'.size()", equalTo(1))
                .body("[58].'topLevelDomain'", hasItems(".cu"))
                .body("[58].'alpha2Code'", containsString("CU"))
                .body("[58].'alpha3Code'", containsString("CUB"))
                .body("[58].'callingCodes'.size()", equalTo(1))
                .body("[58].'callingCodes'", hasItems("53"))
                .body("[58].'capital'", containsString("Havana"))
                .body("[58].'altSpellings'.size()", equalTo(3))
                .body("[58].'altSpellings'", hasItems("CU", "Republic of Cuba", "República de Cuba"))
                .body("[58].'region'", containsString("Americas"))
                .body("[58].'subregion'", containsString("Caribbean"))
                .body("[58].'population'", numberMatches(1.1238317E7))
                .body("[58].'latlng'.size()", equalTo(2))
                .body("[58].'latlng'[0]", numberMatches(21.5))
                .body("[58].'latlng'[1]", numberMatches(-80.0))
                .body("[58].'demonym'", containsString("Cuban"))
                .body("[58].'area'", numberMatches(109884.0))
                .body("[58].'gini'", nullValue())
                .body("[58].'timezones'.size()", equalTo(1))
                .body("[58].'timezones'", hasItems("UTC-05:00"))
                .body("[58].'borders'.size()", equalTo(0))
                .body("[58].'nativeName'", containsString("Cuba"))
                .body("[58].'numericCode'", containsString("192"))
                .body("[58].'currencies'.size()", equalTo(2))
                .body("[58].'currencies'", hasItems("CUC", "CUP"))
                .body("[58].'languages'.size()", equalTo(1))
                .body("[58].'languages'", hasItems("es"))
                .body("[58].'translations'.'de'", containsString("Kuba"))
                .body("[58].'translations'.'es'", containsString("Cuba"))
                .body("[58].'translations'.'fr'", containsString("Cuba"))
                .body("[58].'translations'.'ja'", containsString("キューバ"))
                .body("[58].'translations'.'it'", containsString("Cuba"))
                .body("[58].'relevance'", containsString("0"))
                .body("[59].'name'", containsString("Curaçao"))
                .body("[59].'topLevelDomain'.size()", equalTo(1))
                .body("[59].'topLevelDomain'", hasItems(".cw"))
                .body("[59].'alpha2Code'", containsString("CW"))
                .body("[59].'alpha3Code'", containsString("CUW"))
                .body("[59].'callingCodes'.size()", equalTo(1))
                .body("[59].'callingCodes'", hasItems("599"))
                .body("[59].'capital'", containsString("Willemstad"))
                .body("[59].'altSpellings'.size()", equalTo(6))
                .body("[59].'altSpellings'", hasItems("CW", "Curacao", "Kòrsou", "Country of Curaçao", "Land Curaçao", "Pais Kòrsou"))
                .body("[59].'region'", containsString("Americas"))
                .body("[59].'subregion'", containsString("Caribbean"))
                .body("[59].'population'", numberMatches(154843.0))
                .body("[59].'latlng'.size()", equalTo(2))
                .body("[59].'latlng'[0]", numberMatches(12.116667))
                .body("[59].'latlng'[1]", numberMatches(-68.933333))
                .body("[59].'demonym'", containsString("Dutch"))
                .body("[59].'area'", numberMatches(444.0))
                .body("[59].'gini'", nullValue())
                .body("[59].'timezones'.size()", equalTo(1))
                .body("[59].'timezones'", hasItems("UTC-04:00"))
                .body("[59].'borders'.size()", equalTo(0))
                .body("[59].'nativeName'", containsString("Curaçao"))
                .body("[59].'numericCode'", containsString("531"))
                .body("[59].'currencies'.size()", equalTo(1))
                .body("[59].'currencies'", hasItems("ANG"))
                .body("[59].'languages'.size()", equalTo(3))
                .body("[59].'languages'", hasItems("nl", "pa", "en"))
                .body("[59].'translations'.'de'", nullValue())
                .body("[59].'translations'.'es'", nullValue())
                .body("[59].'translations'.'fr'", nullValue())
                .body("[59].'translations'.'ja'", nullValue())
                .body("[59].'translations'.'it'", nullValue())
                .body("[59].'relevance'", containsString("0"))
                .body("[60].'name'", containsString("Cyprus"))
                .body("[60].'topLevelDomain'.size()", equalTo(1))
                .body("[60].'topLevelDomain'", hasItems(".cy"))
                .body("[60].'alpha2Code'", containsString("CY"))
                .body("[60].'alpha3Code'", containsString("CYP"))
                .body("[60].'callingCodes'.size()", equalTo(1))
                .body("[60].'callingCodes'", hasItems("357"))
                .body("[60].'capital'", containsString("Nicosia"))
                .body("[60].'altSpellings'.size()", equalTo(6))
                .body("[60].'altSpellings'", hasItems("CY", "Kýpros", "Kıbrıs", "Republic of Cyprus", "Κυπριακή Δημοκρατία", "Kıbrıs Cumhuriyeti"))
                .body("[60].'region'", containsString("Europe"))
                .body("[60].'subregion'", containsString("Southern Europe"))
                .body("[60].'population'", numberMatches(858000.0))
                .body("[60].'latlng'.size()", equalTo(2))
                .body("[60].'latlng'[0]", numberMatches(35.0))
                .body("[60].'latlng'[1]", numberMatches(33.0))
                .body("[60].'demonym'", containsString("Cypriot"))
                .body("[60].'area'", numberMatches(9251.0))
                .body("[60].'gini'", nullValue())
                .body("[60].'timezones'.size()", equalTo(1))
                .body("[60].'timezones'", hasItems("UTC+02:00"))
                .body("[60].'borders'.size()", equalTo(1))
                .body("[60].'borders'", hasItems("GBR"))
                .body("[60].'nativeName'", containsString("Κύπρος"))
                .body("[60].'numericCode'", containsString("196"))
                .body("[60].'currencies'.size()", equalTo(1))
                .body("[60].'currencies'", hasItems("EUR"))
                .body("[60].'languages'.size()", equalTo(3))
                .body("[60].'languages'", hasItems("el", "tr", "hy"))
                .body("[60].'translations'.'de'", containsString("Zypern"))
                .body("[60].'translations'.'es'", containsString("Chipre"))
                .body("[60].'translations'.'fr'", containsString("Chypre"))
                .body("[60].'translations'.'ja'", containsString("キプロス"))
                .body("[60].'translations'.'it'", containsString("Cipro"))
                .body("[60].'relevance'", containsString("0"))
                .body("[61].'name'", containsString("Czech Republic"))
                .body("[61].'topLevelDomain'.size()", equalTo(1))
                .body("[61].'topLevelDomain'", hasItems(".cz"))
                .body("[61].'alpha2Code'", containsString("CZ"))
                .body("[61].'alpha3Code'", containsString("CZE"))
                .body("[61].'callingCodes'.size()", equalTo(1))
                .body("[61].'callingCodes'", hasItems("420"))
                .body("[61].'capital'", containsString("Prague"))
                .body("[61].'altSpellings'.size()", equalTo(3))
                .body("[61].'altSpellings'", hasItems("CZ", "Česká republika", "Česko"))
                .body("[61].'region'", containsString("Europe"))
                .body("[61].'subregion'", containsString("Eastern Europe"))
                .body("[61].'population'", numberMatches(1.0537818E7))
                .body("[61].'latlng'.size()", equalTo(2))
                .body("[61].'latlng'[0]", numberMatches(49.75))
                .body("[61].'latlng'[1]", numberMatches(15.5))
                .body("[61].'demonym'", containsString("Czech"))
                .body("[61].'area'", numberMatches(78865.0))
                .body("[61].'gini'", numberMatches(26.0))
                .body("[61].'timezones'.size()", equalTo(1))
                .body("[61].'timezones'", hasItems("UTC+01:00"))
                .body("[61].'borders'.size()", equalTo(4))
                .body("[61].'borders'", hasItems("AUT", "DEU", "POL", "SVK"))
                .body("[61].'nativeName'", containsString("Česká republika"))
                .body("[61].'numericCode'", containsString("203"))
                .body("[61].'currencies'.size()", equalTo(1))
                .body("[61].'currencies'", hasItems("CZK"))
                .body("[61].'languages'.size()", equalTo(2))
                .body("[61].'languages'", hasItems("cs", "sk"))
                .body("[61].'translations'.'de'", containsString("Tschechische Republik"))
                .body("[61].'translations'.'es'", containsString("República Checa"))
                .body("[61].'translations'.'fr'", containsString("République tchèque"))
                .body("[61].'translations'.'ja'", containsString("チェコ"))
                .body("[61].'translations'.'it'", containsString("Repubblica Ceca"))
                .body("[61].'relevance'", containsString("0"))
                .body("[62].'name'", containsString("Denmark"))
                .body("[62].'topLevelDomain'.size()", equalTo(1))
                .body("[62].'topLevelDomain'", hasItems(".dk"))
                .body("[62].'alpha2Code'", containsString("DK"))
                .body("[62].'alpha3Code'", containsString("DNK"))
                .body("[62].'callingCodes'.size()", equalTo(1))
                .body("[62].'callingCodes'", hasItems("45"))
                .body("[62].'capital'", containsString("Copenhagen"))
                .body("[62].'altSpellings'.size()", equalTo(4))
                .body("[62].'altSpellings'", hasItems("DK", "Danmark", "Kingdom of Denmark", "Kongeriget Danmark"))
                .body("[62].'region'", containsString("Europe"))
                .body("[62].'subregion'", containsString("Northern Europe"))
                .body("[62].'population'", numberMatches(5678348.0))
                .body("[62].'latlng'.size()", equalTo(2))
                .body("[62].'latlng'[0]", numberMatches(56.0))
                .body("[62].'latlng'[1]", numberMatches(10.0))
                .body("[62].'demonym'", containsString("Danish"))
                .body("[62].'area'", numberMatches(43094.0))
                .body("[62].'gini'", numberMatches(24.0))
                .body("[62].'timezones'.size()", equalTo(5))
                .body("[62].'timezones'", hasItems("UTC-04:00", "UTC-03:00", "UTC-01:00", "UTC", "UTC+01:00"))
                .body("[62].'borders'.size()", equalTo(1))
                .body("[62].'borders'", hasItems("DEU"))
                .body("[62].'nativeName'", containsString("Danmark"))
                .body("[62].'numericCode'", containsString("208"))
                .body("[62].'currencies'.size()", equalTo(1))
                .body("[62].'currencies'", hasItems("DKK"))
                .body("[62].'languages'.size()", equalTo(1))
                .body("[62].'languages'", hasItems("da"))
                .body("[62].'translations'.'de'", containsString("Dänemark"))
                .body("[62].'translations'.'es'", containsString("Dinamarca"))
                .body("[62].'translations'.'fr'", containsString("Danemark"))
                .body("[62].'translations'.'ja'", containsString("デンマーク"))
                .body("[62].'translations'.'it'", containsString("Danimarca"))
                .body("[62].'relevance'", containsString("1.5"))
                .body("[63].'name'", containsString("Djibouti"))
                .body("[63].'topLevelDomain'.size()", equalTo(1))
                .body("[63].'topLevelDomain'", hasItems(".dj"))
                .body("[63].'alpha2Code'", containsString("DJ"))
                .body("[63].'alpha3Code'", containsString("DJI"))
                .body("[63].'callingCodes'.size()", equalTo(1))
                .body("[63].'callingCodes'", hasItems("253"))
                .body("[63].'capital'", containsString("Djibouti"))
                .body("[63].'altSpellings'.size()", equalTo(7))
                .body("[63].'altSpellings'", hasItems("DJ", "Jabuuti", "Gabuuti", "Republic of Djibouti", "République de Djibouti", "Gabuutih Ummuuno", "Jamhuuriyadda Jabuuti"))
                .body("[63].'region'", containsString("Africa"))
                .body("[63].'subregion'", containsString("Eastern Africa"))
                .body("[63].'population'", numberMatches(888000.0))
                .body("[63].'latlng'.size()", equalTo(2))
                .body("[63].'latlng'[0]", numberMatches(11.5))
                .body("[63].'latlng'[1]", numberMatches(43.0))
                .body("[63].'demonym'", containsString("Djibouti"))
                .body("[63].'area'", numberMatches(23200.0))
                .body("[63].'gini'", numberMatches(40.0))
                .body("[63].'timezones'.size()", equalTo(1))
                .body("[63].'timezones'", hasItems("UTC+03:00"))
                .body("[63].'borders'.size()", equalTo(3))
                .body("[63].'borders'", hasItems("ERI", "ETH", "SOM"))
                .body("[63].'nativeName'", containsString("Djibouti"))
                .body("[63].'numericCode'", containsString("262"))
                .body("[63].'currencies'.size()", equalTo(1))
                .body("[63].'currencies'", hasItems("DJF"))
                .body("[63].'languages'.size()", equalTo(2))
                .body("[63].'languages'", hasItems("fr", "ar"))
                .body("[63].'translations'.'de'", containsString("Dschibuti"))
                .body("[63].'translations'.'es'", containsString("Yibuti"))
                .body("[63].'translations'.'fr'", containsString("Djibouti"))
                .body("[63].'translations'.'ja'", containsString("ジブチ"))
                .body("[63].'translations'.'it'", containsString("Gibuti"))
                .body("[63].'relevance'", containsString("0"))
                .body("[64].'name'", containsString("Dominica"))
                .body("[64].'topLevelDomain'.size()", equalTo(1))
                .body("[64].'topLevelDomain'", hasItems(".dm"))
                .body("[64].'alpha2Code'", containsString("DM"))
                .body("[64].'alpha3Code'", containsString("DMA"))
                .body("[64].'callingCodes'.size()", equalTo(1))
                .body("[64].'callingCodes'", hasItems("1"))
                .body("[64].'capital'", containsString("Roseau"))
                .body("[64].'altSpellings'.size()", equalTo(4))
                .body("[64].'altSpellings'", hasItems("DM", "Dominique", "Wai‘tu kubuli", "Commonwealth of Dominica"))
                .body("[64].'region'", containsString("Americas"))
                .body("[64].'subregion'", containsString("Caribbean"))
                .body("[64].'population'", numberMatches(71293.0))
                .body("[64].'latlng'.size()", equalTo(2))
                .body("[64].'latlng'[0]", numberMatches(15.41666666))
                .body("[64].'latlng'[1]", numberMatches(-61.33333333))
                .body("[64].'demonym'", containsString("Dominican"))
                .body("[64].'area'", numberMatches(751.0))
                .body("[64].'gini'", nullValue())
                .body("[64].'timezones'.size()", equalTo(1))
                .body("[64].'timezones'", hasItems("UTC-04:00"))
                .body("[64].'borders'.size()", equalTo(0))
                .body("[64].'nativeName'", containsString("Dominica"))
                .body("[64].'numericCode'", containsString("212"))
                .body("[64].'currencies'.size()", equalTo(1))
                .body("[64].'currencies'", hasItems("XCD"))
                .body("[64].'languages'.size()", equalTo(1))
                .body("[64].'languages'", hasItems("en"))
                .body("[64].'translations'.'de'", containsString("Dominica"))
                .body("[64].'translations'.'es'", containsString("Dominica"))
                .body("[64].'translations'.'fr'", containsString("Dominique"))
                .body("[64].'translations'.'ja'", containsString("ドミニカ国"))
                .body("[64].'translations'.'it'", containsString("Dominica"))
                .body("[64].'relevance'", containsString("0.5"))
                .body("[65].'name'", containsString("Dominican Republic"))
                .body("[65].'topLevelDomain'.size()", equalTo(1))
                .body("[65].'topLevelDomain'", hasItems(".do"))
                .body("[65].'alpha2Code'", containsString("DO"))
                .body("[65].'alpha3Code'", containsString("DOM"))
                .body("[65].'callingCodes'.size()", equalTo(1))
                .body("[65].'callingCodes'", hasItems("1"))
                .body("[65].'capital'", containsString("Santo Domingo"))
                .body("[65].'altSpellings'.size()", equalTo(1))
                .body("[65].'altSpellings'", hasItems("DO"))
                .body("[65].'region'", containsString("Americas"))
                .body("[65].'subregion'", containsString("Caribbean"))
                .body("[65].'population'", numberMatches(1.0528E7))
                .body("[65].'latlng'.size()", equalTo(2))
                .body("[65].'latlng'[0]", numberMatches(19.0))
                .body("[65].'latlng'[1]", numberMatches(-70.66666666))
                .body("[65].'demonym'", containsString("Dominican"))
                .body("[65].'area'", numberMatches(48671.0))
                .body("[65].'gini'", numberMatches(47.2))
                .body("[65].'timezones'.size()", equalTo(1))
                .body("[65].'timezones'", hasItems("UTC-04:00"))
                .body("[65].'borders'.size()", equalTo(1))
                .body("[65].'borders'", hasItems("HTI"))
                .body("[65].'nativeName'", containsString("República Dominicana"))
                .body("[65].'numericCode'", containsString("214"))
                .body("[65].'currencies'.size()", equalTo(1))
                .body("[65].'currencies'", hasItems("DOP"))
                .body("[65].'languages'.size()", equalTo(1))
                .body("[65].'languages'", hasItems("es"))
                .body("[65].'translations'.'de'", containsString("Dominikanische Republik"))
                .body("[65].'translations'.'es'", containsString("República Dominicana"))
                .body("[65].'translations'.'fr'", containsString("République dominicaine"))
                .body("[65].'translations'.'ja'", containsString("ドミニカ共和国"))
                .body("[65].'translations'.'it'", containsString("Repubblica Dominicana"))
                .body("[65].'relevance'", containsString("0"))
                .body("[66].'name'", containsString("Ecuador"))
                .body("[66].'topLevelDomain'.size()", equalTo(1))
                .body("[66].'topLevelDomain'", hasItems(".ec"))
                .body("[66].'alpha2Code'", containsString("EC"))
                .body("[66].'alpha3Code'", containsString("ECU"))
                .body("[66].'callingCodes'.size()", equalTo(1))
                .body("[66].'callingCodes'", hasItems("593"))
                .body("[66].'capital'", containsString("Quito"))
                .body("[66].'altSpellings'.size()", equalTo(3))
                .body("[66].'altSpellings'", hasItems("EC", "Republic of Ecuador", "República del Ecuador"))
                .body("[66].'region'", containsString("Americas"))
                .body("[66].'subregion'", containsString("South America"))
                .body("[66].'population'", numberMatches(1.60275E7))
                .body("[66].'latlng'.size()", equalTo(2))
                .body("[66].'latlng'[0]", numberMatches(-2.0))
                .body("[66].'latlng'[1]", numberMatches(-77.5))
                .body("[66].'demonym'", containsString("Ecuadorean"))
                .body("[66].'area'", numberMatches(276841.0))
                .body("[66].'gini'", numberMatches(49.3))
                .body("[66].'timezones'.size()", equalTo(2))
                .body("[66].'timezones'", hasItems("UTC-06:00", "UTC-05:00"))
                .body("[66].'borders'.size()", equalTo(2))
                .body("[66].'borders'", hasItems("COL", "PER"))
                .body("[66].'nativeName'", containsString("Ecuador"))
                .body("[66].'numericCode'", containsString("218"))
                .body("[66].'currencies'.size()", equalTo(1))
                .body("[66].'currencies'", hasItems("USD"))
                .body("[66].'languages'.size()", equalTo(1))
                .body("[66].'languages'", hasItems("es"))
                .body("[66].'translations'.'de'", containsString("Ecuador"))
                .body("[66].'translations'.'es'", containsString("Ecuador"))
                .body("[66].'translations'.'fr'", containsString("Équateur"))
                .body("[66].'translations'.'ja'", containsString("エクアドル"))
                .body("[66].'translations'.'it'", containsString("Ecuador"))
                .body("[66].'relevance'", containsString("0"))
                .body("[67].'name'", containsString("Egypt"))
                .body("[67].'topLevelDomain'.size()", equalTo(1))
                .body("[67].'topLevelDomain'", hasItems(".eg"))
                .body("[67].'alpha2Code'", containsString("EG"))
                .body("[67].'alpha3Code'", containsString("EGY"))
                .body("[67].'callingCodes'.size()", equalTo(1))
                .body("[67].'callingCodes'", hasItems("20"))
                .body("[67].'capital'", containsString("Cairo"))
                .body("[67].'altSpellings'.size()", equalTo(2))
                .body("[67].'altSpellings'", hasItems("EG", "Arab Republic of Egypt"))
                .body("[67].'region'", containsString("Africa"))
                .body("[67].'subregion'", containsString("Northern Africa"))
                .body("[67].'population'", numberMatches(8.93356E7))
                .body("[67].'latlng'.size()", equalTo(2))
                .body("[67].'latlng'[0]", numberMatches(27.0))
                .body("[67].'latlng'[1]", numberMatches(30.0))
                .body("[67].'demonym'", containsString("Egyptian"))
                .body("[67].'area'", numberMatches(1002450.0))
                .body("[67].'gini'", numberMatches(30.8))
                .body("[67].'timezones'.size()", equalTo(1))
                .body("[67].'timezones'", hasItems("UTC+02:00"))
                .body("[67].'borders'.size()", equalTo(3))
                .body("[67].'borders'", hasItems("ISR", "LBY", "SDN"))
                .body("[67].'nativeName'", containsString("مصر‎"))
                .body("[67].'numericCode'", containsString("818"))
                .body("[67].'currencies'.size()", equalTo(1))
                .body("[67].'currencies'", hasItems("EGP"))
                .body("[67].'languages'.size()", equalTo(1))
                .body("[67].'languages'", hasItems("ar"))
                .body("[67].'translations'.'de'", containsString("Ägypten"))
                .body("[67].'translations'.'es'", containsString("Egipto"))
                .body("[67].'translations'.'fr'", containsString("Égypte"))
                .body("[67].'translations'.'ja'", containsString("エジプト"))
                .body("[67].'translations'.'it'", containsString("Egitto"))
                .body("[67].'relevance'", containsString("1.5"))
                .body("[68].'name'", containsString("El Salvador"))
                .body("[68].'topLevelDomain'.size()", equalTo(1))
                .body("[68].'topLevelDomain'", hasItems(".sv"))
                .body("[68].'alpha2Code'", containsString("SV"))
                .body("[68].'alpha3Code'", containsString("SLV"))
                .body("[68].'callingCodes'.size()", equalTo(1))
                .body("[68].'callingCodes'", hasItems("503"))
                .body("[68].'capital'", containsString("San Salvador"))
                .body("[68].'altSpellings'.size()", equalTo(3))
                .body("[68].'altSpellings'", hasItems("SV", "Republic of El Salvador", "República de El Salvador"))
                .body("[68].'region'", containsString("Americas"))
                .body("[68].'subregion'", containsString("Central America"))
                .body("[68].'population'", numberMatches(6401240.0))
                .body("[68].'latlng'.size()", equalTo(2))
                .body("[68].'latlng'[0]", numberMatches(13.83333333))
                .body("[68].'latlng'[1]", numberMatches(-88.91666666))
                .body("[68].'demonym'", containsString("Salvadoran"))
                .body("[68].'area'", numberMatches(21041.0))
                .body("[68].'gini'", numberMatches(48.3))
                .body("[68].'timezones'.size()", equalTo(1))
                .body("[68].'timezones'", hasItems("UTC-06:00"))
                .body("[68].'borders'.size()", equalTo(2))
                .body("[68].'borders'", hasItems("GTM", "HND"))
                .body("[68].'nativeName'", containsString("El Salvador"))
                .body("[68].'numericCode'", containsString("222"))
                .body("[68].'currencies'.size()", equalTo(2))
                .body("[68].'currencies'", hasItems("SVC", "USD"))
                .body("[68].'languages'.size()", equalTo(1))
                .body("[68].'languages'", hasItems("es"))
                .body("[68].'translations'.'de'", containsString("El Salvador"))
                .body("[68].'translations'.'es'", containsString("El Salvador"))
                .body("[68].'translations'.'fr'", containsString("Salvador"))
                .body("[68].'translations'.'ja'", containsString("エルサルバドル"))
                .body("[68].'translations'.'it'", containsString("El Salvador"))
                .body("[68].'relevance'", containsString("0"))
                .body("[69].'name'", containsString("Equatorial Guinea"))
                .body("[69].'topLevelDomain'.size()", equalTo(1))
                .body("[69].'topLevelDomain'", hasItems(".gq"))
                .body("[69].'alpha2Code'", containsString("GQ"))
                .body("[69].'alpha3Code'", containsString("GNQ"))
                .body("[69].'callingCodes'.size()", equalTo(1))
                .body("[69].'callingCodes'", hasItems("240"))
                .body("[69].'capital'", containsString("Malabo"))
                .body("[69].'altSpellings'.size()", equalTo(5))
                .body("[69].'altSpellings'", hasItems("GQ", "Republic of Equatorial Guinea", "República de Guinea Ecuatorial", "République de Guinée équatoriale", "República da Guiné Equatorial"))
                .body("[69].'region'", containsString("Africa"))
                .body("[69].'subregion'", containsString("Middle Africa"))
                .body("[69].'population'", numberMatches(1430000.0))
                .body("[69].'latlng'.size()", equalTo(2))
                .body("[69].'latlng'[0]", numberMatches(2.0))
                .body("[69].'latlng'[1]", numberMatches(10.0))
                .body("[69].'demonym'", containsString("Equatorial Guinean"))
                .body("[69].'area'", numberMatches(28051.0))
                .body("[69].'gini'", nullValue())
                .body("[69].'timezones'.size()", equalTo(1))
                .body("[69].'timezones'", hasItems("UTC+01:00"))
                .body("[69].'borders'.size()", equalTo(2))
                .body("[69].'borders'", hasItems("CMR", "GAB"))
                .body("[69].'nativeName'", containsString("Guinea Ecuatorial"))
                .body("[69].'numericCode'", containsString("226"))
                .body("[69].'currencies'.size()", equalTo(1))
                .body("[69].'currencies'", hasItems("XAF"))
                .body("[69].'languages'.size()", equalTo(2))
                .body("[69].'languages'", hasItems("es", "fr"))
                .body("[69].'translations'.'de'", containsString("Äquatorial-Guinea"))
                .body("[69].'translations'.'es'", containsString("Guinea Ecuatorial"))
                .body("[69].'translations'.'fr'", containsString("Guinée-Équatoriale"))
                .body("[69].'translations'.'ja'", containsString("赤道ギニア"))
                .body("[69].'translations'.'it'", containsString("Guinea Equatoriale"))
                .body("[69].'relevance'", containsString("0"))
                .body("[70].'name'", containsString("Eritrea"))
                .body("[70].'topLevelDomain'.size()", equalTo(1))
                .body("[70].'topLevelDomain'", hasItems(".er"))
                .body("[70].'alpha2Code'", containsString("ER"))
                .body("[70].'alpha3Code'", containsString("ERI"))
                .body("[70].'callingCodes'.size()", equalTo(1))
                .body("[70].'callingCodes'", hasItems("291"))
                .body("[70].'capital'", containsString("Asmara"))
                .body("[70].'altSpellings'.size()", equalTo(7))
                .body("[70].'altSpellings'", hasItems("ER", "State of Eritrea", "ሃገረ ኤርትራ", "Dawlat Iritriyá", "ʾErtrā", "Iritriyā", ""))
                .body("[70].'region'", containsString("Africa"))
                .body("[70].'subregion'", containsString("Eastern Africa"))
                .body("[70].'population'", numberMatches(5228000.0))
                .body("[70].'latlng'.size()", equalTo(2))
                .body("[70].'latlng'[0]", numberMatches(15.0))
                .body("[70].'latlng'[1]", numberMatches(39.0))
                .body("[70].'demonym'", containsString("Eritrean"))
                .body("[70].'area'", numberMatches(117600.0))
                .body("[70].'gini'", nullValue())
                .body("[70].'timezones'.size()", equalTo(1))
                .body("[70].'timezones'", hasItems("UTC+03:00"))
                .body("[70].'borders'.size()", equalTo(3))
                .body("[70].'borders'", hasItems("DJI", "ETH", "SDN"))
                .body("[70].'nativeName'", containsString("ኤርትራ"))
                .body("[70].'numericCode'", containsString("232"))
                .body("[70].'currencies'.size()", equalTo(1))
                .body("[70].'currencies'", hasItems("ERN"))
                .body("[70].'languages'.size()", equalTo(3))
                .body("[70].'languages'", hasItems("ti", "ar", "en"))
                .body("[70].'translations'.'de'", containsString("Eritrea"))
                .body("[70].'translations'.'es'", containsString("Eritrea"))
                .body("[70].'translations'.'fr'", containsString("Érythrée"))
                .body("[70].'translations'.'ja'", containsString("エリトリア"))
                .body("[70].'translations'.'it'", containsString("Eritrea"))
                .body("[70].'relevance'", containsString("0"))
                .body("[71].'name'", containsString("Estonia"))
                .body("[71].'topLevelDomain'.size()", equalTo(1))
                .body("[71].'topLevelDomain'", hasItems(".ee"))
                .body("[71].'alpha2Code'", containsString("EE"))
                .body("[71].'alpha3Code'", containsString("EST"))
                .body("[71].'callingCodes'.size()", equalTo(1))
                .body("[71].'callingCodes'", hasItems("372"))
                .body("[71].'capital'", containsString("Tallinn"))
                .body("[71].'altSpellings'.size()", equalTo(4))
                .body("[71].'altSpellings'", hasItems("EE", "Eesti", "Republic of Estonia", "Eesti Vabariik"))
                .body("[71].'region'", containsString("Europe"))
                .body("[71].'subregion'", containsString("Northern Europe"))
                .body("[71].'population'", numberMatches(1313271.0))
                .body("[71].'latlng'.size()", equalTo(2))
                .body("[71].'latlng'[0]", numberMatches(59.0))
                .body("[71].'latlng'[1]", numberMatches(26.0))
                .body("[71].'demonym'", containsString("Estonian"))
                .body("[71].'area'", numberMatches(45227.0))
                .body("[71].'gini'", numberMatches(36.0))
                .body("[71].'timezones'.size()", equalTo(1))
                .body("[71].'timezones'", hasItems("UTC+02:00"))
                .body("[71].'borders'.size()", equalTo(2))
                .body("[71].'borders'", hasItems("LVA", "RUS"))
                .body("[71].'nativeName'", containsString("Eesti"))
                .body("[71].'numericCode'", containsString("233"))
                .body("[71].'currencies'.size()", equalTo(1))
                .body("[71].'currencies'", hasItems("EUR"))
                .body("[71].'languages'.size()", equalTo(1))
                .body("[71].'languages'", hasItems("et"))
                .body("[71].'translations'.'de'", containsString("Estland"))
                .body("[71].'translations'.'es'", containsString("Estonia"))
                .body("[71].'translations'.'fr'", containsString("Estonie"))
                .body("[71].'translations'.'ja'", containsString("エストニア"))
                .body("[71].'translations'.'it'", containsString("Estonia"))
                .body("[71].'relevance'", containsString("0"))
                .body("[72].'name'", containsString("Ethiopia"))
                .body("[72].'topLevelDomain'.size()", equalTo(1))
                .body("[72].'topLevelDomain'", hasItems(".et"))
                .body("[72].'alpha2Code'", containsString("ET"))
                .body("[72].'alpha3Code'", containsString("ETH"))
                .body("[72].'callingCodes'.size()", equalTo(1))
                .body("[72].'callingCodes'", hasItems("251"))
                .body("[72].'capital'", containsString("Addis Ababa"))
                .body("[72].'altSpellings'.size()", equalTo(4))
                .body("[72].'altSpellings'", hasItems("ET", "ʾĪtyōṗṗyā", "Federal Democratic Republic of Ethiopia", "የኢትዮጵያ ፌዴራላዊ ዲሞክራሲያዊ ሪፐብሊክ"))
                .body("[72].'region'", containsString("Africa"))
                .body("[72].'subregion'", containsString("Eastern Africa"))
                .body("[72].'population'", numberMatches(9.0076012E7))
                .body("[72].'latlng'.size()", equalTo(2))
                .body("[72].'latlng'[0]", numberMatches(8.0))
                .body("[72].'latlng'[1]", numberMatches(38.0))
                .body("[72].'demonym'", containsString("Ethiopian"))
                .body("[72].'area'", numberMatches(1104300.0))
                .body("[72].'gini'", numberMatches(29.8))
                .body("[72].'timezones'.size()", equalTo(1))
                .body("[72].'timezones'", hasItems("UTC+03:00"))
                .body("[72].'borders'.size()", equalTo(6))
                .body("[72].'borders'", hasItems("DJI", "ERI", "KEN", "SOM", "SSD", "SDN"))
                .body("[72].'nativeName'", containsString("ኢትዮጵያ"))
                .body("[72].'numericCode'", containsString("231"))
                .body("[72].'currencies'.size()", equalTo(1))
                .body("[72].'currencies'", hasItems("ETB"))
                .body("[72].'languages'.size()", equalTo(1))
                .body("[72].'languages'", hasItems("am"))
                .body("[72].'translations'.'de'", containsString("Äthiopien"))
                .body("[72].'translations'.'es'", containsString("Etiopía"))
                .body("[72].'translations'.'fr'", containsString("Éthiopie"))
                .body("[72].'translations'.'ja'", containsString("エチオピア"))
                .body("[72].'translations'.'it'", containsString("Etiopia"))
                .body("[72].'relevance'", containsString("0"))
                .body("[73].'name'", containsString("Falkland Islands"))
                .body("[73].'topLevelDomain'.size()", equalTo(1))
                .body("[73].'topLevelDomain'", hasItems(".fk"))
                .body("[73].'alpha2Code'", containsString("FK"))
                .body("[73].'alpha3Code'", containsString("FLK"))
                .body("[73].'callingCodes'.size()", equalTo(1))
                .body("[73].'callingCodes'", hasItems("500"))
                .body("[73].'capital'", containsString("Stanley"))
                .body("[73].'altSpellings'.size()", equalTo(2))
                .body("[73].'altSpellings'", hasItems("FK", "Islas Malvinas"))
                .body("[73].'region'", containsString("Americas"))
                .body("[73].'subregion'", containsString("South America"))
                .body("[73].'population'", numberMatches(3000.0))
                .body("[73].'latlng'.size()", equalTo(2))
                .body("[73].'latlng'[0]", numberMatches(-51.75))
                .body("[73].'latlng'[1]", numberMatches(-59.0))
                .body("[73].'demonym'", containsString("Falkland Islander"))
                .body("[73].'area'", numberMatches(12173.0))
                .body("[73].'gini'", nullValue())
                .body("[73].'timezones'.size()", equalTo(1))
                .body("[73].'timezones'", hasItems("UTC-04:00"))
                .body("[73].'borders'.size()", equalTo(0))
                .body("[73].'nativeName'", containsString("Falkland Islands"))
                .body("[73].'numericCode'", containsString("238"))
                .body("[73].'currencies'.size()", equalTo(1))
                .body("[73].'currencies'", hasItems("FKP"))
                .body("[73].'languages'.size()", equalTo(1))
                .body("[73].'languages'", hasItems("en"))
                .body("[73].'translations'.'de'", containsString("Falklandinseln"))
                .body("[73].'translations'.'es'", containsString("Islas Malvinas"))
                .body("[73].'translations'.'fr'", containsString("Îles Malouines"))
                .body("[73].'translations'.'ja'", containsString("フォークランド（マルビナス）諸島"))
                .body("[73].'translations'.'it'", containsString("Isole Falkland o Isole Malvine"))
                .body("[73].'relevance'", containsString("0.5"))
                .body("[74].'name'", containsString("Faroe Islands"))
                .body("[74].'topLevelDomain'.size()", equalTo(1))
                .body("[74].'topLevelDomain'", hasItems(".fo"))
                .body("[74].'alpha2Code'", containsString("FO"))
                .body("[74].'alpha3Code'", containsString("FRO"))
                .body("[74].'callingCodes'.size()", equalTo(1))
                .body("[74].'callingCodes'", hasItems("298"))
                .body("[74].'capital'", containsString("Tórshavn"))
                .body("[74].'altSpellings'.size()", equalTo(3))
                .body("[74].'altSpellings'", hasItems("FO", "Føroyar", "Færøerne"))
                .body("[74].'region'", containsString("Europe"))
                .body("[74].'subregion'", containsString("Northern Europe"))
                .body("[74].'population'", numberMatches(48846.0))
                .body("[74].'latlng'.size()", equalTo(2))
                .body("[74].'latlng'[0]", numberMatches(62.0))
                .body("[74].'latlng'[1]", numberMatches(-7.0))
                .body("[74].'demonym'", containsString("Faroese"))
                .body("[74].'area'", numberMatches(1393.0))
                .body("[74].'gini'", nullValue())
                .body("[74].'timezones'.size()", equalTo(1))
                .body("[74].'timezones'", hasItems("UTC+00:00"))
                .body("[74].'borders'.size()", equalTo(0))
                .body("[74].'nativeName'", containsString("Føroyar"))
                .body("[74].'numericCode'", containsString("234"))
                .body("[74].'currencies'.size()", equalTo(1))
                .body("[74].'currencies'", hasItems("DKK"))
                .body("[74].'languages'.size()", equalTo(1))
                .body("[74].'languages'", hasItems("fo"))
                .body("[74].'translations'.'de'", containsString("Färöer-Inseln"))
                .body("[74].'translations'.'es'", containsString("Islas Faroe"))
                .body("[74].'translations'.'fr'", containsString("Îles Féroé"))
                .body("[74].'translations'.'ja'", containsString("フェロー諸島"))
                .body("[74].'translations'.'it'", containsString("Isole Far Oer"))
                .body("[74].'relevance'", containsString("0.5"))
                .body("[75].'name'", containsString("Fiji"))
                .body("[75].'topLevelDomain'.size()", equalTo(1))
                .body("[75].'topLevelDomain'", hasItems(".fj"))
                .body("[75].'alpha2Code'", containsString("FJ"))
                .body("[75].'alpha3Code'", containsString("FJI"))
                .body("[75].'callingCodes'.size()", equalTo(1))
                .body("[75].'callingCodes'", hasItems("679"))
                .body("[75].'capital'", containsString("Suva"))
                .body("[75].'altSpellings'.size()", equalTo(5))
                .body("[75].'altSpellings'", hasItems("FJ", "Viti", "Republic of Fiji", "Matanitu ko Viti", "Fijī Gaṇarājya"))
                .body("[75].'region'", containsString("Oceania"))
                .body("[75].'subregion'", containsString("Melanesia"))
                .body("[75].'population'", numberMatches(859178.0))
                .body("[75].'latlng'.size()", equalTo(2))
                .body("[75].'latlng'[0]", numberMatches(-18.0))
                .body("[75].'latlng'[1]", numberMatches(175.0))
                .body("[75].'demonym'", containsString("Fijian"))
                .body("[75].'area'", numberMatches(18272.0))
                .body("[75].'gini'", numberMatches(42.8))
                .body("[75].'timezones'.size()", equalTo(1))
                .body("[75].'timezones'", hasItems("UTC+12:00"))
                .body("[75].'borders'.size()", equalTo(0))
                .body("[75].'nativeName'", containsString("Fiji"))
                .body("[75].'numericCode'", containsString("242"))
                .body("[75].'currencies'.size()", equalTo(1))
                .body("[75].'currencies'", hasItems("FJD"))
                .body("[75].'languages'.size()", equalTo(4))
                .body("[75].'languages'", hasItems("en", "fj", "hi", "ur"))
                .body("[75].'translations'.'de'", containsString("Fidschi"))
                .body("[75].'translations'.'es'", containsString("Fiyi"))
                .body("[75].'translations'.'fr'", containsString("Fidji"))
                .body("[75].'translations'.'ja'", containsString("フィジー"))
                .body("[75].'translations'.'it'", containsString("Figi"))
                .body("[75].'relevance'", containsString("0"))
                .body("[76].'name'", containsString("Finland"))
                .body("[76].'topLevelDomain'.size()", equalTo(1))
                .body("[76].'topLevelDomain'", hasItems(".fi"))
                .body("[76].'alpha2Code'", containsString("FI"))
                .body("[76].'alpha3Code'", containsString("FIN"))
                .body("[76].'callingCodes'.size()", equalTo(1))
                .body("[76].'callingCodes'", hasItems("358"))
                .body("[76].'capital'", containsString("Helsinki"))
                .body("[76].'altSpellings'.size()", equalTo(5))
                .body("[76].'altSpellings'", hasItems("FI", "Suomi", "Republic of Finland", "Suomen tasavalta", "Republiken Finland"))
                .body("[76].'region'", containsString("Europe"))
                .body("[76].'subregion'", containsString("Northern Europe"))
                .body("[76].'population'", numberMatches(5485215.0))
                .body("[76].'latlng'.size()", equalTo(2))
                .body("[76].'latlng'[0]", numberMatches(64.0))
                .body("[76].'latlng'[1]", numberMatches(26.0))
                .body("[76].'demonym'", containsString("Finnish"))
                .body("[76].'area'", numberMatches(338424.0))
                .body("[76].'gini'", numberMatches(26.9))
                .body("[76].'timezones'.size()", equalTo(1))
                .body("[76].'timezones'", hasItems("UTC+02:00"))
                .body("[76].'borders'.size()", equalTo(3))
                .body("[76].'borders'", hasItems("NOR", "SWE", "RUS"))
                .body("[76].'nativeName'", containsString("Suomi"))
                .body("[76].'numericCode'", containsString("246"))
                .body("[76].'currencies'.size()", equalTo(1))
                .body("[76].'currencies'", hasItems("EUR"))
                .body("[76].'languages'.size()", equalTo(2))
                .body("[76].'languages'", hasItems("fi", "sv"))
                .body("[76].'translations'.'de'", containsString("Finnland"))
                .body("[76].'translations'.'es'", containsString("Finlandia"))
                .body("[76].'translations'.'fr'", containsString("Finlande"))
                .body("[76].'translations'.'ja'", containsString("フィンランド"))
                .body("[76].'translations'.'it'", containsString("Finlandia"))
                .body("[76].'relevance'", containsString("0.5"))
                .body("[77].'name'", containsString("France"))
                .body("[77].'topLevelDomain'.size()", equalTo(1))
                .body("[77].'topLevelDomain'", hasItems(".fr"))
                .body("[77].'alpha2Code'", containsString("FR"))
                .body("[77].'alpha3Code'", containsString("FRA"))
                .body("[77].'callingCodes'.size()", equalTo(1))
                .body("[77].'callingCodes'", hasItems("33"))
                .body("[77].'capital'", containsString("Paris"))
                .body("[77].'altSpellings'.size()", equalTo(3))
                .body("[77].'altSpellings'", hasItems("FR", "French Republic", "République française"))
                .body("[77].'region'", containsString("Europe"))
                .body("[77].'subregion'", containsString("Western Europe"))
                .body("[77].'population'", numberMatches(6.6186E7))
                .body("[77].'latlng'.size()", equalTo(2))
                .body("[77].'latlng'[0]", numberMatches(46.0))
                .body("[77].'latlng'[1]", numberMatches(2.0))
                .body("[77].'demonym'", containsString("French"))
                .body("[77].'area'", numberMatches(640679.0))
                .body("[77].'gini'", numberMatches(32.7))
                .body("[77].'timezones'.size()", equalTo(12))
                .body("[77].'timezones'", hasItems("UTC-10:00", "UTC-09:30", "UTC-09:00", "UTC-08:00", "UTC-04:00", "UTC-03:00", "UTC+01:00", "UTC+03:00", "UTC+04:00", "UTC+05:00", "UTC+11:00", "UTC+12:00"))
                .body("[77].'borders'.size()", equalTo(8))
                .body("[77].'borders'", hasItems("AND", "BEL", "DEU", "ITA", "LUX", "MCO", "ESP", "CHE"))
                .body("[77].'nativeName'", containsString("France"))
                .body("[77].'numericCode'", containsString("250"))
                .body("[77].'currencies'.size()", equalTo(1))
                .body("[77].'currencies'", hasItems("EUR"))
                .body("[77].'languages'.size()", equalTo(1))
                .body("[77].'languages'", hasItems("fr"))
                .body("[77].'translations'.'de'", containsString("Frankreich"))
                .body("[77].'translations'.'es'", containsString("Francia"))
                .body("[77].'translations'.'fr'", containsString("France"))
                .body("[77].'translations'.'ja'", containsString("フランス"))
                .body("[77].'translations'.'it'", containsString("Francia"))
                .body("[77].'relevance'", containsString("2.5"))
                .body("[78].'name'", containsString("French Guiana"))
                .body("[78].'topLevelDomain'.size()", equalTo(1))
                .body("[78].'topLevelDomain'", hasItems(".gf"))
                .body("[78].'alpha2Code'", containsString("GF"))
                .body("[78].'alpha3Code'", containsString("GUF"))
                .body("[78].'callingCodes'.size()", equalTo(1))
                .body("[78].'callingCodes'", hasItems("594"))
                .body("[78].'capital'", containsString("Cayenne"))
                .body("[78].'altSpellings'.size()", equalTo(3))
                .body("[78].'altSpellings'", hasItems("GF", "Guiana", "Guyane"))
                .body("[78].'region'", containsString("Americas"))
                .body("[78].'subregion'", containsString("South America"))
                .body("[78].'population'", numberMatches(239648.0))
                .body("[78].'latlng'.size()", equalTo(2))
                .body("[78].'latlng'[0]", numberMatches(4.0))
                .body("[78].'latlng'[1]", numberMatches(-53.0))
                .body("[78].'demonym'", containsString(""))
                .body("[78].'area'", nullValue())
                .body("[78].'gini'", nullValue())
                .body("[78].'timezones'.size()", equalTo(1))
                .body("[78].'timezones'", hasItems("UTC-03:00"))
                .body("[78].'borders'.size()", equalTo(2))
                .body("[78].'borders'", hasItems("BRA", "SUR"))
                .body("[78].'nativeName'", containsString("Guyane française"))
                .body("[78].'numericCode'", containsString("254"))
                .body("[78].'currencies'.size()", equalTo(1))
                .body("[78].'currencies'", hasItems("EUR"))
                .body("[78].'languages'.size()", equalTo(1))
                .body("[78].'languages'", hasItems("fr"))
                .body("[78].'translations'.'de'", containsString("Französisch Guyana"))
                .body("[78].'translations'.'es'", containsString("Guayana Francesa"))
                .body("[78].'translations'.'fr'", containsString("Guayane"))
                .body("[78].'translations'.'ja'", containsString("フランス領ギアナ"))
                .body("[78].'translations'.'it'", containsString("Guyana francese"))
                .body("[78].'relevance'", containsString("0"))
                .body("[79].'name'", containsString("French Polynesia"))
                .body("[79].'topLevelDomain'.size()", equalTo(1))
                .body("[79].'topLevelDomain'", hasItems(".pf"))
                .body("[79].'alpha2Code'", containsString("PF"))
                .body("[79].'alpha3Code'", containsString("PYF"))
                .body("[79].'callingCodes'.size()", equalTo(1))
                .body("[79].'callingCodes'", hasItems("689"))
                .body("[79].'capital'", containsString("Papeetē"))
                .body("[79].'altSpellings'.size()", equalTo(4))
                .body("[79].'altSpellings'", hasItems("PF", "Polynésie française", "French Polynesia", "Pōrīnetia Farāni"))
                .body("[79].'region'", containsString("Oceania"))
                .body("[79].'subregion'", containsString("Polynesia"))
                .body("[79].'population'", numberMatches(268270.0))
                .body("[79].'latlng'.size()", equalTo(2))
                .body("[79].'latlng'[0]", numberMatches(-15.0))
                .body("[79].'latlng'[1]", numberMatches(-140.0))
                .body("[79].'demonym'", containsString("French Polynesian"))
                .body("[79].'area'", numberMatches(4167.0))
                .body("[79].'gini'", nullValue())
                .body("[79].'timezones'.size()", equalTo(3))
                .body("[79].'timezones'", hasItems("UTC-10:00", "UTC-09:30", "UTC-09:00"))
                .body("[79].'borders'.size()", equalTo(0))
                .body("[79].'nativeName'", containsString("Polynésie française"))
                .body("[79].'numericCode'", containsString("258"))
                .body("[79].'currencies'.size()", equalTo(1))
                .body("[79].'currencies'", hasItems("XPF"))
                .body("[79].'languages'.size()", equalTo(1))
                .body("[79].'languages'", hasItems("fr"))
                .body("[79].'translations'.'de'", containsString("Französisch-Polynesien"))
                .body("[79].'translations'.'es'", containsString("Polinesia Francesa"))
                .body("[79].'translations'.'fr'", containsString("Polynésie française"))
                .body("[79].'translations'.'ja'", containsString("フランス領ポリネシア"))
                .body("[79].'translations'.'it'", containsString("Polinesia Francese"))
                .body("[79].'relevance'", containsString("0"))
                .body("[80].'name'", containsString("French Southern and Antarctic Lands"))
                .body("[80].'topLevelDomain'.size()", equalTo(1))
                .body("[80].'topLevelDomain'", hasItems(".tf"))
                .body("[80].'alpha2Code'", containsString("TF"))
                .body("[80].'alpha3Code'", containsString("ATF"))
                .body("[80].'callingCodes'.size()", equalTo(1))
                .body("[80].'callingCodes'", hasItems("262"))
                .body("[80].'capital'", containsString("Port-aux-Français"))
                .body("[80].'altSpellings'.size()", equalTo(1))
                .body("[80].'altSpellings'", hasItems("TF"))
                .body("[80].'region'", containsString("Africa"))
                .body("[80].'subregion'", containsString("Southern Africa"))
                .body("[80].'population'", numberMatches(140.0))
                .body("[80].'latlng'.size()", equalTo(2))
                .body("[80].'latlng'[0]", numberMatches(-49.25))
                .body("[80].'latlng'[1]", numberMatches(69.167))
                .body("[80].'demonym'", containsString("French"))
                .body("[80].'area'", numberMatches(7747.0))
                .body("[80].'gini'", nullValue())
                .body("[80].'timezones'.size()", equalTo(1))
                .body("[80].'timezones'", hasItems("UTC+05:00"))
                .body("[80].'borders'.size()", equalTo(0))
                .body("[80].'nativeName'", containsString("Territoire des Terres australes et antarctiques françaises"))
                .body("[80].'numericCode'", containsString("260"))
                .body("[80].'currencies'.size()", equalTo(1))
                .body("[80].'currencies'", hasItems("EUR"))
                .body("[80].'languages'.size()", equalTo(1))
                .body("[80].'languages'", hasItems("fr"))
                .body("[80].'translations'.'de'", containsString("Französische Süd- und Antarktisgebiete"))
                .body("[80].'translations'.'es'", containsString("Tierras Australes y Antárticas Francesas"))
                .body("[80].'translations'.'fr'", containsString("Terres australes et antarctiques françaises"))
                .body("[80].'translations'.'ja'", containsString("フランス領南方・南極地域"))
                .body("[80].'translations'.'it'", containsString("Territori Francesi del Sud"))
                .body("[80].'relevance'", containsString("0"))
                .body("[81].'name'", containsString("Gabon"))
                .body("[81].'topLevelDomain'.size()", equalTo(1))
                .body("[81].'topLevelDomain'", hasItems(".ga"))
                .body("[81].'alpha2Code'", containsString("GA"))
                .body("[81].'alpha3Code'", containsString("GAB"))
                .body("[81].'callingCodes'.size()", equalTo(1))
                .body("[81].'callingCodes'", hasItems("241"))
                .body("[81].'capital'", containsString("Libreville"))
                .body("[81].'altSpellings'.size()", equalTo(3))
                .body("[81].'altSpellings'", hasItems("GA", "Gabonese Republic", "République Gabonaise"))
                .body("[81].'region'", containsString("Africa"))
                .body("[81].'subregion'", containsString("Middle Africa"))
                .body("[81].'population'", numberMatches(1725000.0))
                .body("[81].'latlng'.size()", equalTo(2))
                .body("[81].'latlng'[0]", numberMatches(-1.0))
                .body("[81].'latlng'[1]", numberMatches(11.75))
                .body("[81].'demonym'", containsString("Gabonese"))
                .body("[81].'area'", numberMatches(267668.0))
                .body("[81].'gini'", numberMatches(41.5))
                .body("[81].'timezones'.size()", equalTo(1))
                .body("[81].'timezones'", hasItems("UTC+01:00"))
                .body("[81].'borders'.size()", equalTo(3))
                .body("[81].'borders'", hasItems("CMR", "COG", "GNQ"))
                .body("[81].'nativeName'", containsString("Gabon"))
                .body("[81].'numericCode'", containsString("266"))
                .body("[81].'currencies'.size()", equalTo(1))
                .body("[81].'currencies'", hasItems("XAF"))
                .body("[81].'languages'.size()", equalTo(1))
                .body("[81].'languages'", hasItems("fr"))
                .body("[81].'translations'.'de'", containsString("Gabun"))
                .body("[81].'translations'.'es'", containsString("Gabón"))
                .body("[81].'translations'.'fr'", containsString("Gabon"))
                .body("[81].'translations'.'ja'", containsString("ガボン"))
                .body("[81].'translations'.'it'", containsString("Gabon"))
                .body("[81].'relevance'", containsString("0"))
                .body("[82].'name'", containsString("The Gambia"))
                .body("[82].'topLevelDomain'.size()", equalTo(1))
                .body("[82].'topLevelDomain'", hasItems(".gm"))
                .body("[82].'alpha2Code'", containsString("GM"))
                .body("[82].'alpha3Code'", containsString("GMB"))
                .body("[82].'callingCodes'.size()", equalTo(1))
                .body("[82].'callingCodes'", hasItems("220"))
                .body("[82].'capital'", containsString("Banjul"))
                .body("[82].'altSpellings'.size()", equalTo(2))
                .body("[82].'altSpellings'", hasItems("GM", "Republic of the Gambia"))
                .body("[82].'region'", containsString("Africa"))
                .body("[82].'subregion'", containsString("Western Africa"))
                .body("[82].'population'", numberMatches(1882450.0))
                .body("[82].'latlng'.size()", equalTo(2))
                .body("[82].'latlng'[0]", numberMatches(13.46666666))
                .body("[82].'latlng'[1]", numberMatches(-16.56666666))
                .body("[82].'demonym'", containsString("Gambian"))
                .body("[82].'area'", numberMatches(11295.0))
                .body("[82].'gini'", nullValue())
                .body("[82].'timezones'.size()", equalTo(1))
                .body("[82].'timezones'", hasItems("UTC+00:00"))
                .body("[82].'borders'.size()", equalTo(1))
                .body("[82].'borders'", hasItems("SEN"))
                .body("[82].'nativeName'", containsString("Gambia"))
                .body("[82].'numericCode'", containsString("270"))
                .body("[82].'currencies'.size()", equalTo(1))
                .body("[82].'currencies'", hasItems("GMD"))
                .body("[82].'languages'.size()", equalTo(1))
                .body("[82].'languages'", hasItems("en"))
                .body("[82].'translations'.'de'", containsString("Gambia"))
                .body("[82].'translations'.'es'", containsString("Gambia"))
                .body("[82].'translations'.'fr'", containsString("Gambie"))
                .body("[82].'translations'.'ja'", containsString("ガンビア"))
                .body("[82].'translations'.'it'", containsString("Gambia"))
                .body("[82].'relevance'", containsString("0"))
                .body("[83].'name'", containsString("Georgia"))
                .body("[83].'topLevelDomain'.size()", equalTo(1))
                .body("[83].'topLevelDomain'", hasItems(".ge"))
                .body("[83].'alpha2Code'", containsString("GE"))
                .body("[83].'alpha3Code'", containsString("GEO"))
                .body("[83].'callingCodes'.size()", equalTo(1))
                .body("[83].'callingCodes'", hasItems("995"))
                .body("[83].'capital'", containsString("Tbilisi"))
                .body("[83].'altSpellings'.size()", equalTo(2))
                .body("[83].'altSpellings'", hasItems("GE", "Sakartvelo"))
                .body("[83].'region'", containsString("Asia"))
                .body("[83].'subregion'", containsString("Western Asia"))
                .body("[83].'population'", numberMatches(3729500.0))
                .body("[83].'latlng'.size()", equalTo(2))
                .body("[83].'latlng'[0]", numberMatches(42.0))
                .body("[83].'latlng'[1]", numberMatches(43.5))
                .body("[83].'demonym'", containsString("Georgian"))
                .body("[83].'area'", numberMatches(69700.0))
                .body("[83].'gini'", numberMatches(41.3))
                .body("[83].'timezones'.size()", equalTo(1))
                .body("[83].'timezones'", hasItems("UTC-05:00"))
                .body("[83].'borders'.size()", equalTo(4))
                .body("[83].'borders'", hasItems("ARM", "AZE", "RUS", "TUR"))
                .body("[83].'nativeName'", containsString("საქართველო"))
                .body("[83].'numericCode'", containsString("268"))
                .body("[83].'currencies'.size()", equalTo(1))
                .body("[83].'currencies'", hasItems("GEL"))
                .body("[83].'languages'.size()", equalTo(1))
                .body("[83].'languages'", hasItems("ka"))
                .body("[83].'translations'.'de'", containsString("Georgien"))
                .body("[83].'translations'.'es'", containsString("Georgia"))
                .body("[83].'translations'.'fr'", containsString("Géorgie"))
                .body("[83].'translations'.'ja'", containsString("グルジア"))
                .body("[83].'translations'.'it'", containsString("Georgia"))
                .body("[83].'relevance'", containsString("0"))
                .body("[84].'name'", containsString("Germany"))
                .body("[84].'topLevelDomain'.size()", equalTo(1))
                .body("[84].'topLevelDomain'", hasItems(".de"))
                .body("[84].'alpha2Code'", containsString("DE"))
                .body("[84].'alpha3Code'", containsString("DEU"))
                .body("[84].'callingCodes'.size()", equalTo(1))
                .body("[84].'callingCodes'", hasItems("49"))
                .body("[84].'capital'", containsString("Berlin"))
                .body("[84].'altSpellings'.size()", equalTo(3))
                .body("[84].'altSpellings'", hasItems("DE", "Federal Republic of Germany", "Bundesrepublik Deutschland"))
                .body("[84].'region'", containsString("Europe"))
                .body("[84].'subregion'", containsString("Western Europe"))
                .body("[84].'population'", numberMatches(8.10836E7))
                .body("[84].'latlng'.size()", equalTo(2))
                .body("[84].'latlng'[0]", numberMatches(51.0))
                .body("[84].'latlng'[1]", numberMatches(9.0))
                .body("[84].'demonym'", containsString("German"))
                .body("[84].'area'", numberMatches(357114.0))
                .body("[84].'gini'", numberMatches(28.3))
                .body("[84].'timezones'.size()", equalTo(1))
                .body("[84].'timezones'", hasItems("UTC+01:00"))
                .body("[84].'borders'.size()", equalTo(9))
                .body("[84].'borders'", hasItems("AUT", "BEL", "CZE", "DNK", "FRA", "LUX", "NLD", "POL", "CHE"))
                .body("[84].'nativeName'", containsString("Deutschland"))
                .body("[84].'numericCode'", containsString("276"))
                .body("[84].'currencies'.size()", equalTo(1))
                .body("[84].'currencies'", hasItems("EUR"))
                .body("[84].'languages'.size()", equalTo(1))
                .body("[84].'languages'", hasItems("de"))
                .body("[84].'translations'.'de'", containsString("Deutschland"))
                .body("[84].'translations'.'es'", containsString("Alemania"))
                .body("[84].'translations'.'fr'", containsString("Allemagne"))
                .body("[84].'translations'.'ja'", containsString("ドイツ"))
                .body("[84].'translations'.'it'", containsString("Germania"))
                .body("[84].'relevance'", containsString("3"))
                .body("[85].'name'", containsString("Ghana"))
                .body("[85].'topLevelDomain'.size()", equalTo(1))
                .body("[85].'topLevelDomain'", hasItems(".gh"))
                .body("[85].'alpha2Code'", containsString("GH"))
                .body("[85].'alpha3Code'", containsString("GHA"))
                .body("[85].'callingCodes'.size()", equalTo(1))
                .body("[85].'callingCodes'", hasItems("233"))
                .body("[85].'capital'", containsString("Accra"))
                .body("[85].'altSpellings'.size()", equalTo(1))
                .body("[85].'altSpellings'", hasItems("GH"))
                .body("[85].'region'", containsString("Africa"))
                .body("[85].'subregion'", containsString("Western Africa"))
                .body("[85].'population'", numberMatches(2.7043093E7))
                .body("[85].'latlng'.size()", equalTo(2))
                .body("[85].'latlng'[0]", numberMatches(8.0))
                .body("[85].'latlng'[1]", numberMatches(-2.0))
                .body("[85].'demonym'", containsString("Ghanaian"))
                .body("[85].'area'", numberMatches(238533.0))
                .body("[85].'gini'", numberMatches(42.8))
                .body("[85].'timezones'.size()", equalTo(1))
                .body("[85].'timezones'", hasItems("UTC"))
                .body("[85].'borders'.size()", equalTo(3))
                .body("[85].'borders'", hasItems("BFA", "CIV", "TGO"))
                .body("[85].'nativeName'", containsString("Ghana"))
                .body("[85].'numericCode'", containsString("288"))
                .body("[85].'currencies'.size()", equalTo(1))
                .body("[85].'currencies'", hasItems("GHS"))
                .body("[85].'languages'.size()", equalTo(1))
                .body("[85].'languages'", hasItems("en"))
                .body("[85].'translations'.'de'", containsString("Ghana"))
                .body("[85].'translations'.'es'", containsString("Ghana"))
                .body("[85].'translations'.'fr'", containsString("Ghana"))
                .body("[85].'translations'.'ja'", containsString("ガーナ"))
                .body("[85].'translations'.'it'", containsString("Ghana"))
                .body("[85].'relevance'", containsString("0"))
                .body("[86].'name'", containsString("Gibraltar"))
                .body("[86].'topLevelDomain'.size()", equalTo(1))
                .body("[86].'topLevelDomain'", hasItems(".gi"))
                .body("[86].'alpha2Code'", containsString("GI"))
                .body("[86].'alpha3Code'", containsString("GIB"))
                .body("[86].'callingCodes'.size()", equalTo(1))
                .body("[86].'callingCodes'", hasItems("350"))
                .body("[86].'capital'", containsString("Gibraltar"))
                .body("[86].'altSpellings'.size()", equalTo(1))
                .body("[86].'altSpellings'", hasItems("GI"))
                .body("[86].'region'", containsString("Europe"))
                .body("[86].'subregion'", containsString("Southern Europe"))
                .body("[86].'population'", numberMatches(32734.0))
                .body("[86].'latlng'.size()", equalTo(2))
                .body("[86].'latlng'[0]", numberMatches(36.13333333))
                .body("[86].'latlng'[1]", numberMatches(-5.35))
                .body("[86].'demonym'", containsString("Gibraltar"))
                .body("[86].'area'", numberMatches(6.0))
                .body("[86].'gini'", nullValue())
                .body("[86].'timezones'.size()", equalTo(1))
                .body("[86].'timezones'", hasItems("UTC+01:00"))
                .body("[86].'borders'.size()", equalTo(1))
                .body("[86].'borders'", hasItems("ESP"))
                .body("[86].'nativeName'", containsString("Gibraltar"))
                .body("[86].'numericCode'", containsString("292"))
                .body("[86].'currencies'.size()", equalTo(1))
                .body("[86].'currencies'", hasItems("GIP"))
                .body("[86].'languages'.size()", equalTo(1))
                .body("[86].'languages'", hasItems("en"))
                .body("[86].'translations'.'de'", containsString("Gibraltar"))
                .body("[86].'translations'.'es'", containsString("Gibraltar"))
                .body("[86].'translations'.'fr'", containsString("Gibraltar"))
                .body("[86].'translations'.'ja'", containsString("ジブラルタル"))
                .body("[86].'translations'.'it'", containsString("Gibilterra"))
                .body("[86].'relevance'", containsString("0.5"))
                .body("[87].'name'", containsString("Greece"))
                .body("[87].'topLevelDomain'.size()", equalTo(1))
                .body("[87].'topLevelDomain'", hasItems(".gr"))
                .body("[87].'alpha2Code'", containsString("GR"))
                .body("[87].'alpha3Code'", containsString("GRC"))
                .body("[87].'callingCodes'.size()", equalTo(1))
                .body("[87].'callingCodes'", hasItems("30"))
                .body("[87].'capital'", containsString("Athens"))
                .body("[87].'altSpellings'.size()", equalTo(4))
                .body("[87].'altSpellings'", hasItems("GR", "Elláda", "Hellenic Republic", "Ελληνική Δημοκρατία"))
                .body("[87].'region'", containsString("Europe"))
                .body("[87].'subregion'", containsString("Southern Europe"))
                .body("[87].'population'", numberMatches(1.0846979E7))
                .body("[87].'latlng'.size()", equalTo(2))
                .body("[87].'latlng'[0]", numberMatches(39.0))
                .body("[87].'latlng'[1]", numberMatches(22.0))
                .body("[87].'demonym'", containsString("Greek"))
                .body("[87].'area'", numberMatches(131990.0))
                .body("[87].'gini'", numberMatches(34.3))
                .body("[87].'timezones'.size()", equalTo(1))
                .body("[87].'timezones'", hasItems("UTC+02:00"))
                .body("[87].'borders'.size()", equalTo(4))
                .body("[87].'borders'", hasItems("ALB", "BGR", "TUR", "MKD"))
                .body("[87].'nativeName'", containsString("Ελλάδα"))
                .body("[87].'numericCode'", containsString("300"))
                .body("[87].'currencies'.size()", equalTo(1))
                .body("[87].'currencies'", hasItems("EUR"))
                .body("[87].'languages'.size()", equalTo(1))
                .body("[87].'languages'", hasItems("el"))
                .body("[87].'translations'.'de'", containsString("Griechenland"))
                .body("[87].'translations'.'es'", containsString("Grecia"))
                .body("[87].'translations'.'fr'", containsString("Grèce"))
                .body("[87].'translations'.'ja'", containsString("ギリシャ"))
                .body("[87].'translations'.'it'", containsString("Grecia"))
                .body("[87].'relevance'", containsString("1.5"))
                .body("[88].'name'", containsString("Greenland"))
                .body("[88].'topLevelDomain'.size()", equalTo(1))
                .body("[88].'topLevelDomain'", hasItems(".gl"))
                .body("[88].'alpha2Code'", containsString("GL"))
                .body("[88].'alpha3Code'", containsString("GRL"))
                .body("[88].'callingCodes'.size()", equalTo(1))
                .body("[88].'callingCodes'", hasItems("299"))
                .body("[88].'capital'", containsString("Nuuk"))
                .body("[88].'altSpellings'.size()", equalTo(2))
                .body("[88].'altSpellings'", hasItems("GL", "Grønland"))
                .body("[88].'region'", containsString("Americas"))
                .body("[88].'subregion'", containsString("Northern America"))
                .body("[88].'population'", numberMatches(56114.0))
                .body("[88].'latlng'.size()", equalTo(2))
                .body("[88].'latlng'[0]", numberMatches(72.0))
                .body("[88].'latlng'[1]", numberMatches(-40.0))
                .body("[88].'demonym'", containsString("Greenlandic"))
                .body("[88].'area'", numberMatches(2166086.0))
                .body("[88].'gini'", nullValue())
                .body("[88].'timezones'.size()", equalTo(4))
                .body("[88].'timezones'", hasItems("UTC-04:00", "UTC-03:00", "UTC-01:00", "UTC+00:00"))
                .body("[88].'borders'.size()", equalTo(0))
                .body("[88].'nativeName'", containsString("Kalaallit Nunaat"))
                .body("[88].'numericCode'", containsString("304"))
                .body("[88].'currencies'.size()", equalTo(1))
                .body("[88].'currencies'", hasItems("DKK"))
                .body("[88].'languages'.size()", equalTo(1))
                .body("[88].'languages'", hasItems("kl"))
                .body("[88].'translations'.'de'", containsString("Grönland"))
                .body("[88].'translations'.'es'", containsString("Groenlandia"))
                .body("[88].'translations'.'fr'", containsString("Groenland"))
                .body("[88].'translations'.'ja'", containsString("グリーンランド"))
                .body("[88].'translations'.'it'", containsString("Groenlandia"))
                .body("[88].'relevance'", containsString("0.5"))
                .body("[89].'name'", containsString("Grenada"))
                .body("[89].'topLevelDomain'.size()", equalTo(1))
                .body("[89].'topLevelDomain'", hasItems(".gd"))
                .body("[89].'alpha2Code'", containsString("GD"))
                .body("[89].'alpha3Code'", containsString("GRD"))
                .body("[89].'callingCodes'.size()", equalTo(1))
                .body("[89].'callingCodes'", hasItems("1"))
                .body("[89].'capital'", containsString("St. George's"))
                .body("[89].'altSpellings'.size()", equalTo(1))
                .body("[89].'altSpellings'", hasItems("GD"))
                .body("[89].'region'", containsString("Americas"))
                .body("[89].'subregion'", containsString("Caribbean"))
                .body("[89].'population'", numberMatches(103328.0))
                .body("[89].'latlng'.size()", equalTo(2))
                .body("[89].'latlng'[0]", numberMatches(12.11666666))
                .body("[89].'latlng'[1]", numberMatches(-61.66666666))
                .body("[89].'demonym'", containsString("Grenadian"))
                .body("[89].'area'", numberMatches(344.0))
                .body("[89].'gini'", nullValue())
                .body("[89].'timezones'.size()", equalTo(1))
                .body("[89].'timezones'", hasItems("UTC-04:00"))
                .body("[89].'borders'.size()", equalTo(0))
                .body("[89].'nativeName'", containsString("Grenada"))
                .body("[89].'numericCode'", containsString("308"))
                .body("[89].'currencies'.size()", equalTo(1))
                .body("[89].'currencies'", hasItems("XCD"))
                .body("[89].'languages'.size()", equalTo(1))
                .body("[89].'languages'", hasItems("en"))
                .body("[89].'translations'.'de'", containsString("Grenada"))
                .body("[89].'translations'.'es'", containsString("Grenada"))
                .body("[89].'translations'.'fr'", containsString("Grenade"))
                .body("[89].'translations'.'ja'", containsString("グレナダ"))
                .body("[89].'translations'.'it'", containsString("Grenada"))
                .body("[89].'relevance'", containsString("0"))
                .body("[90].'name'", containsString("Guadeloupe"))
                .body("[90].'topLevelDomain'.size()", equalTo(1))
                .body("[90].'topLevelDomain'", hasItems(".gp"))
                .body("[90].'alpha2Code'", containsString("GP"))
                .body("[90].'alpha3Code'", containsString("GLP"))
                .body("[90].'callingCodes'.size()", equalTo(1))
                .body("[90].'callingCodes'", hasItems("590"))
                .body("[90].'capital'", containsString("Basse-Terre"))
                .body("[90].'altSpellings'.size()", equalTo(2))
                .body("[90].'altSpellings'", hasItems("GP", "Gwadloup"))
                .body("[90].'region'", containsString("Americas"))
                .body("[90].'subregion'", containsString("Caribbean"))
                .body("[90].'population'", numberMatches(403750.0))
                .body("[90].'latlng'.size()", equalTo(2))
                .body("[90].'latlng'[0]", numberMatches(16.25))
                .body("[90].'latlng'[1]", numberMatches(-61.583333))
                .body("[90].'demonym'", containsString("Guadeloupian"))
                .body("[90].'area'", nullValue())
                .body("[90].'gini'", nullValue())
                .body("[90].'timezones'.size()", equalTo(1))
                .body("[90].'timezones'", hasItems("UTC-04:00"))
                .body("[90].'borders'.size()", equalTo(0))
                .body("[90].'nativeName'", containsString("Guadeloupe"))
                .body("[90].'numericCode'", containsString("312"))
                .body("[90].'currencies'.size()", equalTo(1))
                .body("[90].'currencies'", hasItems("EUR"))
                .body("[90].'languages'.size()", equalTo(1))
                .body("[90].'languages'", hasItems("fr"))
                .body("[90].'translations'.'de'", containsString("Guadeloupe"))
                .body("[90].'translations'.'es'", containsString("Guadalupe"))
                .body("[90].'translations'.'fr'", containsString("Guadeloupe"))
                .body("[90].'translations'.'ja'", containsString("グアドループ"))
                .body("[90].'translations'.'it'", containsString("Guadeloupa"))
                .body("[90].'relevance'", containsString("0"))
                .body("[91].'name'", containsString("Guam"))
                .body("[91].'topLevelDomain'.size()", equalTo(1))
                .body("[91].'topLevelDomain'", hasItems(".gu"))
                .body("[91].'alpha2Code'", containsString("GU"))
                .body("[91].'alpha3Code'", containsString("GUM"))
                .body("[91].'callingCodes'.size()", equalTo(1))
                .body("[91].'callingCodes'", hasItems("1"))
                .body("[91].'capital'", containsString("Hagåtña"))
                .body("[91].'altSpellings'.size()", equalTo(2))
                .body("[91].'altSpellings'", hasItems("GU", "Guåhån"))
                .body("[91].'region'", containsString("Oceania"))
                .body("[91].'subregion'", containsString("Micronesia"))
                .body("[91].'population'", numberMatches(159358.0))
                .body("[91].'latlng'.size()", equalTo(2))
                .body("[91].'latlng'[0]", numberMatches(13.46666666))
                .body("[91].'latlng'[1]", numberMatches(144.78333333))
                .body("[91].'demonym'", containsString("Guamanian"))
                .body("[91].'area'", numberMatches(549.0))
                .body("[91].'gini'", nullValue())
                .body("[91].'timezones'.size()", equalTo(1))
                .body("[91].'timezones'", hasItems("UTC+10:00"))
                .body("[91].'borders'.size()", equalTo(0))
                .body("[91].'nativeName'", containsString("Guam"))
                .body("[91].'numericCode'", containsString("316"))
                .body("[91].'currencies'.size()", equalTo(1))
                .body("[91].'currencies'", hasItems("USD"))
                .body("[91].'languages'.size()", equalTo(3))
                .body("[91].'languages'", hasItems("en", "ch", "es"))
                .body("[91].'translations'.'de'", containsString("Guam"))
                .body("[91].'translations'.'es'", containsString("Guam"))
                .body("[91].'translations'.'fr'", containsString("Guam"))
                .body("[91].'translations'.'ja'", containsString("グアム"))
                .body("[91].'translations'.'it'", containsString("Guam"))
                .body("[91].'relevance'", containsString("0"))
                .body("[92].'name'", containsString("Guatemala"))
                .body("[92].'topLevelDomain'.size()", equalTo(1))
                .body("[92].'topLevelDomain'", hasItems(".gt"))
                .body("[92].'alpha2Code'", containsString("GT"))
                .body("[92].'alpha3Code'", containsString("GTM"))
                .body("[92].'callingCodes'.size()", equalTo(1))
                .body("[92].'callingCodes'", hasItems("502"))
                .body("[92].'capital'", containsString("Guatemala City"))
                .body("[92].'altSpellings'.size()", equalTo(1))
                .body("[92].'altSpellings'", hasItems("GT"))
                .body("[92].'region'", containsString("Americas"))
                .body("[92].'subregion'", containsString("Central America"))
                .body("[92].'population'", numberMatches(1.6176133E7))
                .body("[92].'latlng'.size()", equalTo(2))
                .body("[92].'latlng'[0]", numberMatches(15.5))
                .body("[92].'latlng'[1]", numberMatches(-90.25))
                .body("[92].'demonym'", containsString("Guatemalan"))
                .body("[92].'area'", numberMatches(108889.0))
                .body("[92].'gini'", numberMatches(55.9))
                .body("[92].'timezones'.size()", equalTo(1))
                .body("[92].'timezones'", hasItems("UTC-06:00"))
                .body("[92].'borders'.size()", equalTo(4))
                .body("[92].'borders'", hasItems("BLZ", "SLV", "HND", "MEX"))
                .body("[92].'nativeName'", containsString("Guatemala"))
                .body("[92].'numericCode'", containsString("320"))
                .body("[92].'currencies'.size()", equalTo(1))
                .body("[92].'currencies'", hasItems("GTQ"))
                .body("[92].'languages'.size()", equalTo(1))
                .body("[92].'languages'", hasItems("es"))
                .body("[92].'translations'.'de'", containsString("Guatemala"))
                .body("[92].'translations'.'es'", containsString("Guatemala"))
                .body("[92].'translations'.'fr'", containsString("Guatemala"))
                .body("[92].'translations'.'ja'", containsString("グアテマラ"))
                .body("[92].'translations'.'it'", containsString("Guatemala"))
                .body("[92].'relevance'", containsString("0"))
                .body("[93].'name'", containsString("Guernsey"))
                .body("[93].'topLevelDomain'.size()", equalTo(1))
                .body("[93].'topLevelDomain'", hasItems(".gg"))
                .body("[93].'alpha2Code'", containsString("GG"))
                .body("[93].'alpha3Code'", containsString("GGY"))
                .body("[93].'callingCodes'.size()", equalTo(1))
                .body("[93].'callingCodes'", hasItems("44"))
                .body("[93].'capital'", containsString("St. Peter Port"))
                .body("[93].'altSpellings'.size()", equalTo(3))
                .body("[93].'altSpellings'", hasItems("GG", "Bailiwick of Guernsey", "Bailliage de Guernesey"))
                .body("[93].'region'", containsString("Europe"))
                .body("[93].'subregion'", containsString("Northern Europe"))
                .body("[93].'population'", numberMatches(65150.0))
                .body("[93].'latlng'.size()", equalTo(2))
                .body("[93].'latlng'[0]", numberMatches(49.46666666))
                .body("[93].'latlng'[1]", numberMatches(-2.58333333))
                .body("[93].'demonym'", containsString("Channel Islander"))
                .body("[93].'area'", numberMatches(78.0))
                .body("[93].'gini'", nullValue())
                .body("[93].'timezones'.size()", equalTo(1))
                .body("[93].'timezones'", hasItems("UTC+00:00"))
                .body("[93].'borders'.size()", equalTo(0))
                .body("[93].'nativeName'", containsString("Guernsey"))
                .body("[93].'numericCode'", containsString("831"))
                .body("[93].'currencies'.size()", equalTo(1))
                .body("[93].'currencies'", hasItems("GBP"))
                .body("[93].'languages'.size()", equalTo(2))
                .body("[93].'languages'", hasItems("en", "fr"))
                .body("[93].'translations'.'de'", containsString("Guernsey"))
                .body("[93].'translations'.'es'", containsString("Guernsey"))
                .body("[93].'translations'.'fr'", containsString("Guernesey"))
                .body("[93].'translations'.'ja'", containsString("ガーンジー"))
                .body("[93].'translations'.'it'", containsString("Guernsey"))
                .body("[93].'relevance'", containsString("0.5"))
                .body("[94].'name'", containsString("Guinea"))
                .body("[94].'topLevelDomain'.size()", equalTo(1))
                .body("[94].'topLevelDomain'", hasItems(".gn"))
                .body("[94].'alpha2Code'", containsString("GN"))
                .body("[94].'alpha3Code'", containsString("GIN"))
                .body("[94].'callingCodes'.size()", equalTo(1))
                .body("[94].'callingCodes'", hasItems("224"))
                .body("[94].'capital'", containsString("Conakry"))
                .body("[94].'altSpellings'.size()", equalTo(3))
                .body("[94].'altSpellings'", hasItems("GN", "Republic of Guinea", "République de Guinée"))
                .body("[94].'region'", containsString("Africa"))
                .body("[94].'subregion'", containsString("Western Africa"))
                .body("[94].'population'", numberMatches(1.0628972E7))
                .body("[94].'latlng'.size()", equalTo(2))
                .body("[94].'latlng'[0]", numberMatches(11.0))
                .body("[94].'latlng'[1]", numberMatches(-10.0))
                .body("[94].'demonym'", containsString("Guinean"))
                .body("[94].'area'", numberMatches(245857.0))
                .body("[94].'gini'", numberMatches(39.4))
                .body("[94].'timezones'.size()", equalTo(1))
                .body("[94].'timezones'", hasItems("UTC"))
                .body("[94].'borders'.size()", equalTo(6))
                .body("[94].'borders'", hasItems("CIV", "GNB", "LBR", "MLI", "SEN", "SLE"))
                .body("[94].'nativeName'", containsString("Guinée"))
                .body("[94].'numericCode'", containsString("324"))
                .body("[94].'currencies'.size()", equalTo(1))
                .body("[94].'currencies'", hasItems("GNF"))
                .body("[94].'languages'.size()", equalTo(2))
                .body("[94].'languages'", hasItems("fr", "ff"))
                .body("[94].'translations'.'de'", containsString("Guinea"))
                .body("[94].'translations'.'es'", containsString("Guinea"))
                .body("[94].'translations'.'fr'", containsString("Guinée"))
                .body("[94].'translations'.'ja'", containsString("ギニア"))
                .body("[94].'translations'.'it'", containsString("Guinea"))
                .body("[94].'relevance'", containsString("0"))
                .body("[95].'name'", containsString("Guinea-Bissau"))
                .body("[95].'topLevelDomain'.size()", equalTo(1))
                .body("[95].'topLevelDomain'", hasItems(".gw"))
                .body("[95].'alpha2Code'", containsString("GW"))
                .body("[95].'alpha3Code'", containsString("GNB"))
                .body("[95].'callingCodes'.size()", equalTo(1))
                .body("[95].'callingCodes'", hasItems("245"))
                .body("[95].'capital'", containsString("Bissau"))
                .body("[95].'altSpellings'.size()", equalTo(3))
                .body("[95].'altSpellings'", hasItems("GW", "Republic of Guinea-Bissau", "República da Guiné-Bissau"))
                .body("[95].'region'", containsString("Africa"))
                .body("[95].'subregion'", containsString("Western Africa"))
                .body("[95].'population'", numberMatches(1844000.0))
                .body("[95].'latlng'.size()", equalTo(2))
                .body("[95].'latlng'[0]", numberMatches(12.0))
                .body("[95].'latlng'[1]", numberMatches(-15.0))
                .body("[95].'demonym'", containsString("Guinea-Bissauan"))
                .body("[95].'area'", numberMatches(36125.0))
                .body("[95].'gini'", numberMatches(35.5))
                .body("[95].'timezones'.size()", equalTo(1))
                .body("[95].'timezones'", hasItems("UTC"))
                .body("[95].'borders'.size()", equalTo(2))
                .body("[95].'borders'", hasItems("GIN", "SEN"))
                .body("[95].'nativeName'", containsString("Guiné-Bissau"))
                .body("[95].'numericCode'", containsString("624"))
                .body("[95].'currencies'.size()", equalTo(1))
                .body("[95].'currencies'", hasItems("XOF"))
                .body("[95].'languages'.size()", equalTo(1))
                .body("[95].'languages'", hasItems("pt"))
                .body("[95].'translations'.'de'", containsString("Guinea-Bissau"))
                .body("[95].'translations'.'es'", containsString("Guinea-Bisáu"))
                .body("[95].'translations'.'fr'", containsString("Guinée-Bissau"))
                .body("[95].'translations'.'ja'", containsString("ギニアビサウ"))
                .body("[95].'translations'.'it'", containsString("Guinea-Bissau"))
                .body("[95].'relevance'", containsString("0"))
                .body("[96].'name'", containsString("Guyana"))
                .body("[96].'topLevelDomain'.size()", equalTo(1))
                .body("[96].'topLevelDomain'", hasItems(".gy"))
                .body("[96].'alpha2Code'", containsString("GY"))
                .body("[96].'alpha3Code'", containsString("GUY"))
                .body("[96].'callingCodes'.size()", equalTo(1))
                .body("[96].'callingCodes'", hasItems("592"))
                .body("[96].'capital'", containsString("Georgetown"))
                .body("[96].'altSpellings'.size()", equalTo(2))
                .body("[96].'altSpellings'", hasItems("GY", "Co-operative Republic of Guyana"))
                .body("[96].'region'", containsString("Americas"))
                .body("[96].'subregion'", containsString("South America"))
                .body("[96].'population'", numberMatches(746900.0))
                .body("[96].'latlng'.size()", equalTo(2))
                .body("[96].'latlng'[0]", numberMatches(5.0))
                .body("[96].'latlng'[1]", numberMatches(-59.0))
                .body("[96].'demonym'", containsString("Guyanese"))
                .body("[96].'area'", numberMatches(214969.0))
                .body("[96].'gini'", numberMatches(44.5))
                .body("[96].'timezones'.size()", equalTo(1))
                .body("[96].'timezones'", hasItems("UTC-04:00"))
                .body("[96].'borders'.size()", equalTo(3))
                .body("[96].'borders'", hasItems("BRA", "SUR", "VEN"))
                .body("[96].'nativeName'", containsString("Guyana"))
                .body("[96].'numericCode'", containsString("328"))
                .body("[96].'currencies'.size()", equalTo(1))
                .body("[96].'currencies'", hasItems("GYD"))
                .body("[96].'languages'.size()", equalTo(1))
                .body("[96].'languages'", hasItems("en"))
                .body("[96].'translations'.'de'", containsString("Guyana"))
                .body("[96].'translations'.'es'", containsString("Guyana"))
                .body("[96].'translations'.'fr'", containsString("Guyane"))
                .body("[96].'translations'.'ja'", containsString("ガイアナ"))
                .body("[96].'translations'.'it'", containsString("Guyana"))
                .body("[96].'relevance'", containsString("0"))
                .body("[97].'name'", containsString("Haiti"))
                .body("[97].'topLevelDomain'.size()", equalTo(1))
                .body("[97].'topLevelDomain'", hasItems(".ht"))
                .body("[97].'alpha2Code'", containsString("HT"))
                .body("[97].'alpha3Code'", containsString("HTI"))
                .body("[97].'callingCodes'.size()", equalTo(1))
                .body("[97].'callingCodes'", hasItems("509"))
                .body("[97].'capital'", containsString("Port-au-Prince"))
                .body("[97].'altSpellings'.size()", equalTo(4))
                .body("[97].'altSpellings'", hasItems("HT", "Republic of Haiti", "République d'Haïti", "Repiblik Ayiti"))
                .body("[97].'region'", containsString("Americas"))
                .body("[97].'subregion'", containsString("Caribbean"))
                .body("[97].'population'", numberMatches(1.0911819E7))
                .body("[97].'latlng'.size()", equalTo(2))
                .body("[97].'latlng'[0]", numberMatches(19.0))
                .body("[97].'latlng'[1]", numberMatches(-72.41666666))
                .body("[97].'demonym'", containsString("Haitian"))
                .body("[97].'area'", numberMatches(27750.0))
                .body("[97].'gini'", numberMatches(59.2))
                .body("[97].'timezones'.size()", equalTo(1))
                .body("[97].'timezones'", hasItems("UTC-05:00"))
                .body("[97].'borders'.size()", equalTo(1))
                .body("[97].'borders'", hasItems("DOM"))
                .body("[97].'nativeName'", containsString("Haïti"))
                .body("[97].'numericCode'", containsString("332"))
                .body("[97].'currencies'.size()", equalTo(2))
                .body("[97].'currencies'", hasItems("HTG", "USD"))
                .body("[97].'languages'.size()", equalTo(2))
                .body("[97].'languages'", hasItems("fr", "ht"))
                .body("[97].'translations'.'de'", containsString("Haiti"))
                .body("[97].'translations'.'es'", containsString("Haiti"))
                .body("[97].'translations'.'fr'", containsString("Haïti"))
                .body("[97].'translations'.'ja'", containsString("ハイチ"))
                .body("[97].'translations'.'it'", containsString("Haiti"))
                .body("[97].'relevance'", containsString("0"))
                .body("[98].'name'", containsString("Heard Island and McDonald Islands"))
                .body("[98].'topLevelDomain'.size()", equalTo(2))
                .body("[98].'topLevelDomain'", hasItems(".hm", ".aq"))
                .body("[98].'alpha2Code'", containsString("HM"))
                .body("[98].'alpha3Code'", containsString("HMD"))
                .body("[98].'callingCodes'.size()", equalTo(1))
                .body("[98].'callingCodes'", hasItems("672"))
                .body("[98].'capital'", containsString(""))
                .body("[98].'altSpellings'.size()", equalTo(1))
                .body("[98].'altSpellings'", hasItems("HM"))
                .body("[98].'region'", containsString(""))
                .body("[98].'subregion'", containsString(""))
                .body("[98].'population'", numberMatches(0.0))
                .body("[98].'latlng'.size()", equalTo(2))
                .body("[98].'latlng'[0]", numberMatches(-53.1))
                .body("[98].'latlng'[1]", numberMatches(72.51666666))
                .body("[98].'demonym'", containsString("Heard and McDonald Islander"))
                .body("[98].'area'", numberMatches(412.0))
                .body("[98].'gini'", nullValue())
                .body("[98].'timezones'.size()", equalTo(1))
                .body("[98].'timezones'", hasItems("UTC+05:00"))
                .body("[98].'borders'.size()", equalTo(0))
                .body("[98].'nativeName'", containsString("Heard Island and McDonald Islands"))
                .body("[98].'numericCode'", containsString("334"))
                .body("[98].'currencies'.size()", equalTo(1))
                .body("[98].'currencies'", hasItems("AUD"))
                .body("[98].'languages'.size()", equalTo(1))
                .body("[98].'languages'", hasItems("en"))
                .body("[98].'translations'.'de'", containsString("Heard und die McDonaldinseln"))
                .body("[98].'translations'.'es'", containsString("Islas Heard y McDonald"))
                .body("[98].'translations'.'fr'", containsString("Îles Heard-et-MacDonald"))
                .body("[98].'translations'.'ja'", containsString("ハード島とマクドナルド諸島"))
                .body("[98].'translations'.'it'", containsString("Isole Heard e McDonald"))
                .body("[98].'relevance'", containsString("0"))
                .body("[99].'name'", containsString("Holy See"))
                .body("[99].'topLevelDomain'.size()", equalTo(1))
                .body("[99].'topLevelDomain'", hasItems(".va"))
                .body("[99].'alpha2Code'", containsString("VA"))
                .body("[99].'alpha3Code'", containsString("VAT"))
                .body("[99].'callingCodes'.size()", equalTo(1))
                .body("[99].'callingCodes'", hasItems("379"))
                .body("[99].'capital'", containsString("Rome"))
                .body("[99].'altSpellings'.size()", equalTo(3))
                .body("[99].'altSpellings'", hasItems("Sancta Sedes", "Vatican", "The Vatican"))
                .body("[99].'region'", containsString("Europe"))
                .body("[99].'subregion'", containsString("Southern Europe"))
                .body("[99].'population'", numberMatches(451.0))
                .body("[99].'latlng'.size()", equalTo(2))
                .body("[99].'latlng'[0]", numberMatches(41.9))
                .body("[99].'latlng'[1]", numberMatches(12.45))
                .body("[99].'demonym'", containsString(""))
                .body("[99].'area'", numberMatches(0.44))
                .body("[99].'gini'", nullValue())
                .body("[99].'timezones'.size()", equalTo(1))
                .body("[99].'timezones'", hasItems("UTC+01:00"))
                .body("[99].'borders'.size()", equalTo(1))
                .body("[99].'borders'", hasItems("ITA"))
                .body("[99].'nativeName'", containsString("Sancta Sedes"))
                .body("[99].'numericCode'", nullValue())
                .body("[99].'currencies'.size()", equalTo(1))
                .body("[99].'currencies'", hasItems("EUR"))
                .body("[99].'languages'.size()", equalTo(4))
                .body("[99].'languages'", hasItems("la", "it", "fr", "de"))
                .body("[99].'translations'.'de'", containsString("Heiliger Stuhl"))
                .body("[99].'translations'.'es'", containsString("Santa Sede"))
                .body("[99].'translations'.'fr'", containsString("voir Saint"))
                .body("[99].'translations'.'ja'", containsString("聖座"))
                .body("[99].'translations'.'it'", containsString("Santa Sede"))
                .body("[99].'relevance'", nullValue())
                .body("[100].'name'", containsString("Honduras"))
                .body("[100].'topLevelDomain'.size()", equalTo(1))
                .body("[100].'topLevelDomain'", hasItems(".hn"))
                .body("[100].'alpha2Code'", containsString("HN"))
                .body("[100].'alpha3Code'", containsString("HND"))
                .body("[100].'callingCodes'.size()", equalTo(1))
                .body("[100].'callingCodes'", hasItems("504"))
                .body("[100].'capital'", containsString("Tegucigalpa"))
                .body("[100].'altSpellings'.size()", equalTo(3))
                .body("[100].'altSpellings'", hasItems("HN", "Republic of Honduras", "República de Honduras"))
                .body("[100].'region'", containsString("Americas"))
                .body("[100].'subregion'", containsString("Central America"))
                .body("[100].'population'", numberMatches(8725111.0))
                .body("[100].'latlng'.size()", equalTo(2))
                .body("[100].'latlng'[0]", numberMatches(15.0))
                .body("[100].'latlng'[1]", numberMatches(-86.5))
                .body("[100].'demonym'", containsString("Honduran"))
                .body("[100].'area'", numberMatches(112492.0))
                .body("[100].'gini'", numberMatches(57.0))
                .body("[100].'timezones'.size()", equalTo(1))
                .body("[100].'timezones'", hasItems("UTC-06:00"))
                .body("[100].'borders'.size()", equalTo(3))
                .body("[100].'borders'", hasItems("GTM", "SLV", "NIC"))
                .body("[100].'nativeName'", containsString("Honduras"))
                .body("[100].'numericCode'", containsString("340"))
                .body("[100].'currencies'.size()", equalTo(1))
                .body("[100].'currencies'", hasItems("HNL"))
                .body("[100].'languages'.size()", equalTo(1))
                .body("[100].'languages'", hasItems("es"))
                .body("[100].'translations'.'de'", containsString("Honduras"))
                .body("[100].'translations'.'es'", containsString("Honduras"))
                .body("[100].'translations'.'fr'", containsString("Honduras"))
                .body("[100].'translations'.'ja'", containsString("ホンジュラス"))
                .body("[100].'translations'.'it'", containsString("Honduras"))
                .body("[100].'relevance'", containsString("0"))
                .body("[101].'name'", containsString("Hong Kong"))
                .body("[101].'topLevelDomain'.size()", equalTo(1))
                .body("[101].'topLevelDomain'", hasItems(".hk"))
                .body("[101].'alpha2Code'", containsString("HK"))
                .body("[101].'alpha3Code'", containsString("HKG"))
                .body("[101].'callingCodes'.size()", equalTo(1))
                .body("[101].'callingCodes'", hasItems("852"))
                .body("[101].'capital'", containsString("City of Victoria"))
                .body("[101].'altSpellings'.size()", equalTo(2))
                .body("[101].'altSpellings'", hasItems("HK", "香港"))
                .body("[101].'region'", containsString("Asia"))
                .body("[101].'subregion'", containsString("Eastern Asia"))
                .body("[101].'population'", numberMatches(7298600.0))
                .body("[101].'latlng'.size()", equalTo(2))
                .body("[101].'latlng'[0]", numberMatches(22.25))
                .body("[101].'latlng'[1]", numberMatches(114.16666666))
                .body("[101].'demonym'", containsString("Chinese"))
                .body("[101].'area'", numberMatches(1104.0))
                .body("[101].'gini'", numberMatches(53.3))
                .body("[101].'timezones'.size()", equalTo(1))
                .body("[101].'timezones'", hasItems("UTC+08:00"))
                .body("[101].'borders'.size()", equalTo(1))
                .body("[101].'borders'", hasItems("CHN"))
                .body("[101].'nativeName'", containsString("香港"))
                .body("[101].'numericCode'", containsString("344"))
                .body("[101].'currencies'.size()", equalTo(1))
                .body("[101].'currencies'", hasItems("HKD"))
                .body("[101].'languages'.size()", equalTo(2))
                .body("[101].'languages'", hasItems("en", "zh"))
                .body("[101].'translations'.'de'", containsString("Hong Kong"))
                .body("[101].'translations'.'es'", containsString("Hong Kong"))
                .body("[101].'translations'.'fr'", containsString("Hong Kong"))
                .body("[101].'translations'.'ja'", containsString("香港"))
                .body("[101].'translations'.'it'", containsString("Hong Kong"))
                .body("[101].'relevance'", containsString("0"))
                .body("[102].'name'", containsString("Hungary"))
                .body("[102].'topLevelDomain'.size()", equalTo(1))
                .body("[102].'topLevelDomain'", hasItems(".hu"))
                .body("[102].'alpha2Code'", containsString("HU"))
                .body("[102].'alpha3Code'", containsString("HUN"))
                .body("[102].'callingCodes'.size()", equalTo(1))
                .body("[102].'callingCodes'", hasItems("36"))
                .body("[102].'capital'", containsString("Budapest"))
                .body("[102].'altSpellings'.size()", equalTo(1))
                .body("[102].'altSpellings'", hasItems("HU"))
                .body("[102].'region'", containsString("Europe"))
                .body("[102].'subregion'", containsString("Eastern Europe"))
                .body("[102].'population'", numberMatches(9849000.0))
                .body("[102].'latlng'.size()", equalTo(2))
                .body("[102].'latlng'[0]", numberMatches(47.0))
                .body("[102].'latlng'[1]", numberMatches(20.0))
                .body("[102].'demonym'", containsString("Hungarian"))
                .body("[102].'area'", numberMatches(93028.0))
                .body("[102].'gini'", numberMatches(31.2))
                .body("[102].'timezones'.size()", equalTo(1))
                .body("[102].'timezones'", hasItems("UTC+01:00"))
                .body("[102].'borders'.size()", equalTo(7))
                .body("[102].'borders'", hasItems("AUT", "HRV", "ROU", "SRB", "SVK", "SVN", "UKR"))
                .body("[102].'nativeName'", containsString("Magyarország"))
                .body("[102].'numericCode'", containsString("348"))
                .body("[102].'currencies'.size()", equalTo(1))
                .body("[102].'currencies'", hasItems("HUF"))
                .body("[102].'languages'.size()", equalTo(1))
                .body("[102].'languages'", hasItems("hu"))
                .body("[102].'translations'.'de'", containsString("Ungarn"))
                .body("[102].'translations'.'es'", containsString("Hungría"))
                .body("[102].'translations'.'fr'", containsString("Hongrie"))
                .body("[102].'translations'.'ja'", containsString("ハンガリー"))
                .body("[102].'translations'.'it'", containsString("Ungheria"))
                .body("[102].'relevance'", containsString("0"))
                .body("[103].'name'", containsString("Iceland"))
                .body("[103].'topLevelDomain'.size()", equalTo(1))
                .body("[103].'topLevelDomain'", hasItems(".is"))
                .body("[103].'alpha2Code'", containsString("IS"))
                .body("[103].'alpha3Code'", containsString("ISL"))
                .body("[103].'callingCodes'.size()", equalTo(1))
                .body("[103].'callingCodes'", hasItems("354"))
                .body("[103].'capital'", containsString("Reykjavík"))
                .body("[103].'altSpellings'.size()", equalTo(4))
                .body("[103].'altSpellings'", hasItems("IS", "Island", "Republic of Iceland", "Lýðveldið Ísland"))
                .body("[103].'region'", containsString("Europe"))
                .body("[103].'subregion'", containsString("Northern Europe"))
                .body("[103].'population'", numberMatches(330610.0))
                .body("[103].'latlng'.size()", equalTo(2))
                .body("[103].'latlng'[0]", numberMatches(65.0))
                .body("[103].'latlng'[1]", numberMatches(-18.0))
                .body("[103].'demonym'", containsString("Icelander"))
                .body("[103].'area'", numberMatches(103000.0))
                .body("[103].'gini'", nullValue())
                .body("[103].'timezones'.size()", equalTo(1))
                .body("[103].'timezones'", hasItems("UTC"))
                .body("[103].'borders'.size()", equalTo(0))
                .body("[103].'nativeName'", containsString("Ísland"))
                .body("[103].'numericCode'", containsString("352"))
                .body("[103].'currencies'.size()", equalTo(1))
                .body("[103].'currencies'", hasItems("ISK"))
                .body("[103].'languages'.size()", equalTo(1))
                .body("[103].'languages'", hasItems("is"))
                .body("[103].'translations'.'de'", containsString("Island"))
                .body("[103].'translations'.'es'", containsString("Islandia"))
                .body("[103].'translations'.'fr'", containsString("Islande"))
                .body("[103].'translations'.'ja'", containsString("アイスランド"))
                .body("[103].'translations'.'it'", containsString("Islanda"))
                .body("[103].'relevance'", containsString("0"))
                .body("[104].'name'", containsString("India"))
                .body("[104].'topLevelDomain'.size()", equalTo(1))
                .body("[104].'topLevelDomain'", hasItems(".in"))
                .body("[104].'alpha2Code'", containsString("IN"))
                .body("[104].'alpha3Code'", containsString("IND"))
                .body("[104].'callingCodes'.size()", equalTo(1))
                .body("[104].'callingCodes'", hasItems("91"))
                .body("[104].'capital'", containsString("New Delhi"))
                .body("[104].'altSpellings'.size()", equalTo(4))
                .body("[104].'altSpellings'", hasItems("IN", "Bhārat", "Republic of India", "Bharat Ganrajya"))
                .body("[104].'region'", containsString("Asia"))
                .body("[104].'subregion'", containsString("Southern Asia"))
                .body("[104].'population'", numberMatches(1.27584E9))
                .body("[104].'latlng'.size()", equalTo(2))
                .body("[104].'latlng'[0]", numberMatches(20.0))
                .body("[104].'latlng'[1]", numberMatches(77.0))
                .body("[104].'demonym'", containsString("Indian"))
                .body("[104].'area'", numberMatches(3287590.0))
                .body("[104].'gini'", numberMatches(33.4))
                .body("[104].'timezones'.size()", equalTo(1))
                .body("[104].'timezones'", hasItems("UTC+05:30"))
                .body("[104].'borders'.size()", equalTo(8))
                .body("[104].'borders'", hasItems("AFG", "BGD", "BTN", "MMR", "CHN", "NPL", "PAK", "LKA"))
                .body("[104].'nativeName'", containsString("भारत"))
                .body("[104].'numericCode'", containsString("356"))
                .body("[104].'currencies'.size()", equalTo(1))
                .body("[104].'currencies'", hasItems("INR"))
                .body("[104].'languages'.size()", equalTo(2))
                .body("[104].'languages'", hasItems("hi", "en"))
                .body("[104].'translations'.'de'", containsString("Indien"))
                .body("[104].'translations'.'es'", containsString("India"))
                .body("[104].'translations'.'fr'", containsString("Inde"))
                .body("[104].'translations'.'ja'", containsString("インド"))
                .body("[104].'translations'.'it'", containsString("India"))
                .body("[104].'relevance'", containsString("3"))
                .body("[105].'name'", containsString("Indonesia"))
                .body("[105].'topLevelDomain'.size()", equalTo(1))
                .body("[105].'topLevelDomain'", hasItems(".id"))
                .body("[105].'alpha2Code'", containsString("ID"))
                .body("[105].'alpha3Code'", containsString("IDN"))
                .body("[105].'callingCodes'.size()", equalTo(1))
                .body("[105].'callingCodes'", hasItems("62"))
                .body("[105].'capital'", containsString("Jakarta"))
                .body("[105].'altSpellings'.size()", equalTo(3))
                .body("[105].'altSpellings'", hasItems("ID", "Republic of Indonesia", "Republik Indonesia"))
                .body("[105].'region'", containsString("Asia"))
                .body("[105].'subregion'", containsString("South-Eastern Asia"))
                .body("[105].'population'", numberMatches(2.554617E8))
                .body("[105].'latlng'.size()", equalTo(2))
                .body("[105].'latlng'[0]", numberMatches(-5.0))
                .body("[105].'latlng'[1]", numberMatches(120.0))
                .body("[105].'demonym'", containsString("Indonesian"))
                .body("[105].'area'", numberMatches(1904569.0))
                .body("[105].'gini'", numberMatches(34.0))
                .body("[105].'timezones'.size()", equalTo(3))
                .body("[105].'timezones'", hasItems("UTC+07:00", "UTC+08:00", "UTC+09:00"))
                .body("[105].'borders'.size()", equalTo(3))
                .body("[105].'borders'", hasItems("TLS", "MYS", "PNG"))
                .body("[105].'nativeName'", containsString("Indonesia"))
                .body("[105].'numericCode'", containsString("360"))
                .body("[105].'currencies'.size()", equalTo(1))
                .body("[105].'currencies'", hasItems("IDR"))
                .body("[105].'languages'.size()", equalTo(1))
                .body("[105].'languages'", hasItems("id"))
                .body("[105].'translations'.'de'", containsString("Indonesien"))
                .body("[105].'translations'.'es'", containsString("Indonesia"))
                .body("[105].'translations'.'fr'", containsString("Indonésie"))
                .body("[105].'translations'.'ja'", containsString("インドネシア"))
                .body("[105].'translations'.'it'", containsString("Indonesia"))
                .body("[105].'relevance'", containsString("2"))
                .body("[106].'name'", containsString("Ivory Coast"))
                .body("[106].'topLevelDomain'.size()", equalTo(1))
                .body("[106].'topLevelDomain'", hasItems(".ci"))
                .body("[106].'alpha2Code'", containsString("CI"))
                .body("[106].'alpha3Code'", containsString("CIV"))
                .body("[106].'callingCodes'.size()", equalTo(1))
                .body("[106].'callingCodes'", hasItems("225"))
                .body("[106].'capital'", containsString("Yamoussoukro"))
                .body("[106].'altSpellings'.size()", equalTo(4))
                .body("[106].'altSpellings'", hasItems("CI", "Ivory Coast", "Republic of Côte d'Ivoire", "République de Côte d'Ivoire"))
                .body("[106].'region'", containsString("Africa"))
                .body("[106].'subregion'", containsString("Western Africa"))
                .body("[106].'population'", numberMatches(2.2671331E7))
                .body("[106].'latlng'.size()", equalTo(2))
                .body("[106].'latlng'[0]", numberMatches(8.0))
                .body("[106].'latlng'[1]", numberMatches(-5.0))
                .body("[106].'demonym'", containsString("Ivorian"))
                .body("[106].'area'", numberMatches(322463.0))
                .body("[106].'gini'", numberMatches(41.5))
                .body("[106].'timezones'.size()", equalTo(1))
                .body("[106].'timezones'", hasItems("UTC"))
                .body("[106].'borders'.size()", equalTo(5))
                .body("[106].'borders'", hasItems("BFA", "GHA", "GIN", "LBR", "MLI"))
                .body("[106].'nativeName'", containsString("Côte d'Ivoire"))
                .body("[106].'numericCode'", containsString("384"))
                .body("[106].'currencies'.size()", equalTo(1))
                .body("[106].'currencies'", hasItems("XOF"))
                .body("[106].'languages'.size()", equalTo(1))
                .body("[106].'languages'", hasItems("fr"))
                .body("[106].'translations'.'de'", containsString("Elfenbeinküste"))
                .body("[106].'translations'.'es'", containsString("Costa de Marfil"))
                .body("[106].'translations'.'fr'", containsString("Côte d'Ivoire"))
                .body("[106].'translations'.'ja'", containsString("コートジボワール"))
                .body("[106].'translations'.'it'", containsString("Costa D'Avorio"))
                .body("[106].'relevance'", containsString("0"))
                .body("[107].'name'", containsString("Iran"))
                .body("[107].'topLevelDomain'.size()", equalTo(1))
                .body("[107].'topLevelDomain'", hasItems(".ir"))
                .body("[107].'alpha2Code'", containsString("IR"))
                .body("[107].'alpha3Code'", containsString("IRN"))
                .body("[107].'callingCodes'.size()", equalTo(1))
                .body("[107].'callingCodes'", hasItems("98"))
                .body("[107].'capital'", containsString("Tehran"))
                .body("[107].'altSpellings'.size()", equalTo(3))
                .body("[107].'altSpellings'", hasItems("IR", "Islamic Republic of Iran", "Jomhuri-ye Eslāmi-ye Irān"))
                .body("[107].'region'", containsString("Asia"))
                .body("[107].'subregion'", containsString("Southern Asia"))
                .body("[107].'population'", numberMatches(7.85725E7))
                .body("[107].'latlng'.size()", equalTo(2))
                .body("[107].'latlng'[0]", numberMatches(32.0))
                .body("[107].'latlng'[1]", numberMatches(53.0))
                .body("[107].'demonym'", containsString("Iranian"))
                .body("[107].'area'", numberMatches(1648195.0))
                .body("[107].'gini'", numberMatches(38.3))
                .body("[107].'timezones'.size()", equalTo(1))
                .body("[107].'timezones'", hasItems("UTC+03:30"))
                .body("[107].'borders'.size()", equalTo(7))
                .body("[107].'borders'", hasItems("AFG", "ARM", "AZE", "IRQ", "PAK", "TUR", "TKM"))
                .body("[107].'nativeName'", containsString("ایران"))
                .body("[107].'numericCode'", containsString("364"))
                .body("[107].'currencies'.size()", equalTo(1))
                .body("[107].'currencies'", hasItems("IRR"))
                .body("[107].'languages'.size()", equalTo(1))
                .body("[107].'languages'", hasItems("fa"))
                .body("[107].'translations'.'de'", containsString("Iran"))
                .body("[107].'translations'.'es'", containsString("Iran"))
                .body("[107].'translations'.'fr'", containsString("Iran"))
                .body("[107].'translations'.'ja'", containsString("イラン・イスラム共和国"))
                .body("[107].'translations'.'it'", nullValue())
                .body("[107].'relevance'", containsString("0"))
                .body("[108].'name'", containsString("Iraq"))
                .body("[108].'topLevelDomain'.size()", equalTo(1))
                .body("[108].'topLevelDomain'", hasItems(".iq"))
                .body("[108].'alpha2Code'", containsString("IQ"))
                .body("[108].'alpha3Code'", containsString("IRQ"))
                .body("[108].'callingCodes'.size()", equalTo(1))
                .body("[108].'callingCodes'", hasItems("964"))
                .body("[108].'capital'", containsString("Baghdad"))
                .body("[108].'altSpellings'.size()", equalTo(3))
                .body("[108].'altSpellings'", hasItems("IQ", "Republic of Iraq", "Jumhūriyyat al-‘Irāq"))
                .body("[108].'region'", containsString("Asia"))
                .body("[108].'subregion'", containsString("Western Asia"))
                .body("[108].'population'", numberMatches(3.6004552E7))
                .body("[108].'latlng'.size()", equalTo(2))
                .body("[108].'latlng'[0]", numberMatches(33.0))
                .body("[108].'latlng'[1]", numberMatches(44.0))
                .body("[108].'demonym'", containsString("Iraqi"))
                .body("[108].'area'", numberMatches(438317.0))
                .body("[108].'gini'", numberMatches(30.9))
                .body("[108].'timezones'.size()", equalTo(1))
                .body("[108].'timezones'", hasItems("UTC+03:00"))
                .body("[108].'borders'.size()", equalTo(6))
                .body("[108].'borders'", hasItems("IRN", "JOR", "KWT", "SAU", "SYR", "TUR"))
                .body("[108].'nativeName'", containsString("العراق"))
                .body("[108].'numericCode'", containsString("368"))
                .body("[108].'currencies'.size()", equalTo(1))
                .body("[108].'currencies'", hasItems("IQD"))
                .body("[108].'languages'.size()", equalTo(2))
                .body("[108].'languages'", hasItems("ar", "ku"))
                .body("[108].'translations'.'de'", containsString("Irak"))
                .body("[108].'translations'.'es'", containsString("Irak"))
                .body("[108].'translations'.'fr'", containsString("Irak"))
                .body("[108].'translations'.'ja'", containsString("イラク"))
                .body("[108].'translations'.'it'", containsString("Iraq"))
                .body("[108].'relevance'", containsString("0"))
                .body("[109].'name'", containsString("Republic of Ireland"))
                .body("[109].'topLevelDomain'.size()", equalTo(1))
                .body("[109].'topLevelDomain'", hasItems(".ie"))
                .body("[109].'alpha2Code'", containsString("IE"))
                .body("[109].'alpha3Code'", containsString("IRL"))
                .body("[109].'callingCodes'.size()", equalTo(1))
                .body("[109].'callingCodes'", hasItems("353"))
                .body("[109].'capital'", containsString("Dublin"))
                .body("[109].'altSpellings'.size()", equalTo(4))
                .body("[109].'altSpellings'", hasItems("IE", "Éire", "Republic of Ireland", "Poblacht na hÉireann"))
                .body("[109].'region'", containsString("Europe"))
                .body("[109].'subregion'", containsString("Northern Europe"))
                .body("[109].'population'", numberMatches(6378000.0))
                .body("[109].'latlng'.size()", equalTo(2))
                .body("[109].'latlng'[0]", numberMatches(53.0))
                .body("[109].'latlng'[1]", numberMatches(-8.0))
                .body("[109].'demonym'", containsString("Irish"))
                .body("[109].'area'", numberMatches(70273.0))
                .body("[109].'gini'", numberMatches(34.3))
                .body("[109].'timezones'.size()", equalTo(1))
                .body("[109].'timezones'", hasItems("UTC"))
                .body("[109].'borders'.size()", equalTo(1))
                .body("[109].'borders'", hasItems("GBR"))
                .body("[109].'nativeName'", containsString("Éire"))
                .body("[109].'numericCode'", containsString("372"))
                .body("[109].'currencies'.size()", equalTo(1))
                .body("[109].'currencies'", hasItems("EUR"))
                .body("[109].'languages'.size()", equalTo(2))
                .body("[109].'languages'", hasItems("ga", "en"))
                .body("[109].'translations'.'de'", containsString("Irland"))
                .body("[109].'translations'.'es'", containsString("Irlanda"))
                .body("[109].'translations'.'fr'", containsString("Irlande"))
                .body("[109].'translations'.'ja'", containsString("アイルランド"))
                .body("[109].'translations'.'it'", containsString("Irlanda"))
                .body("[109].'relevance'", containsString("1.2"))
                .body("[110].'name'", containsString("Isle of Man"))
                .body("[110].'topLevelDomain'.size()", equalTo(1))
                .body("[110].'topLevelDomain'", hasItems(".im"))
                .body("[110].'alpha2Code'", containsString("IM"))
                .body("[110].'alpha3Code'", containsString("IMN"))
                .body("[110].'callingCodes'.size()", equalTo(1))
                .body("[110].'callingCodes'", hasItems("44"))
                .body("[110].'capital'", containsString("Douglas"))
                .body("[110].'altSpellings'.size()", equalTo(4))
                .body("[110].'altSpellings'", hasItems("IM", "Ellan Vannin", "Mann", "Mannin"))
                .body("[110].'region'", containsString("Europe"))
                .body("[110].'subregion'", containsString("Northern Europe"))
                .body("[110].'population'", numberMatches(84497.0))
                .body("[110].'latlng'.size()", equalTo(2))
                .body("[110].'latlng'[0]", numberMatches(54.25))
                .body("[110].'latlng'[1]", numberMatches(-4.5))
                .body("[110].'demonym'", containsString("Manx"))
                .body("[110].'area'", numberMatches(572.0))
                .body("[110].'gini'", nullValue())
                .body("[110].'timezones'.size()", equalTo(1))
                .body("[110].'timezones'", hasItems("UTC+00:00"))
                .body("[110].'borders'.size()", equalTo(0))
                .body("[110].'nativeName'", containsString("Isle of Man"))
                .body("[110].'numericCode'", containsString("833"))
                .body("[110].'currencies'.size()", equalTo(1))
                .body("[110].'currencies'", hasItems("GBP"))
                .body("[110].'languages'.size()", equalTo(2))
                .body("[110].'languages'", hasItems("en", "gv"))
                .body("[110].'translations'.'de'", containsString("Insel Man"))
                .body("[110].'translations'.'es'", containsString("Isla de Man"))
                .body("[110].'translations'.'fr'", containsString("Île de Man"))
                .body("[110].'translations'.'ja'", containsString("マン島"))
                .body("[110].'translations'.'it'", containsString("Isola di Man"))
                .body("[110].'relevance'", containsString("0.5"))
                .body("[111].'name'", containsString("Israel"))
                .body("[111].'topLevelDomain'.size()", equalTo(1))
                .body("[111].'topLevelDomain'", hasItems(".il"))
                .body("[111].'alpha2Code'", containsString("IL"))
                .body("[111].'alpha3Code'", containsString("ISR"))
                .body("[111].'callingCodes'.size()", equalTo(1))
                .body("[111].'callingCodes'", hasItems("972"))
                .body("[111].'capital'", containsString("Jerusalem"))
                .body("[111].'altSpellings'.size()", equalTo(3))
                .body("[111].'altSpellings'", hasItems("IL", "State of Israel", "Medīnat Yisrā'el"))
                .body("[111].'region'", containsString("Asia"))
                .body("[111].'subregion'", containsString("Western Asia"))
                .body("[111].'population'", numberMatches(8371600.0))
                .body("[111].'latlng'.size()", equalTo(2))
                .body("[111].'latlng'[0]", numberMatches(31.5))
                .body("[111].'latlng'[1]", numberMatches(34.75))
                .body("[111].'demonym'", containsString("Israeli"))
                .body("[111].'area'", numberMatches(20770.0))
                .body("[111].'gini'", numberMatches(39.2))
                .body("[111].'timezones'.size()", equalTo(1))
                .body("[111].'timezones'", hasItems("UTC+02:00"))
                .body("[111].'borders'.size()", equalTo(4))
                .body("[111].'borders'", hasItems("EGY", "JOR", "LBN", "SYR"))
                .body("[111].'nativeName'", containsString("יִשְׂרָאֵל"))
                .body("[111].'numericCode'", containsString("376"))
                .body("[111].'currencies'.size()", equalTo(1))
                .body("[111].'currencies'", hasItems("ILS"))
                .body("[111].'languages'.size()", equalTo(2))
                .body("[111].'languages'", hasItems("he", "ar"))
                .body("[111].'translations'.'de'", containsString("Israel"))
                .body("[111].'translations'.'es'", containsString("Israel"))
                .body("[111].'translations'.'fr'", containsString("Israël"))
                .body("[111].'translations'.'ja'", containsString("イスラエル"))
                .body("[111].'translations'.'it'", containsString("Israele"))
                .body("[111].'relevance'", containsString("0"))
                .body("[112].'name'", containsString("Italy"))
                .body("[112].'topLevelDomain'.size()", equalTo(1))
                .body("[112].'topLevelDomain'", hasItems(".it"))
                .body("[112].'alpha2Code'", containsString("IT"))
                .body("[112].'alpha3Code'", containsString("ITA"))
                .body("[112].'callingCodes'.size()", equalTo(1))
                .body("[112].'callingCodes'", hasItems("39"))
                .body("[112].'capital'", containsString("Rome"))
                .body("[112].'altSpellings'.size()", equalTo(3))
                .body("[112].'altSpellings'", hasItems("IT", "Italian Republic", "Repubblica italiana"))
                .body("[112].'region'", containsString("Europe"))
                .body("[112].'subregion'", containsString("Southern Europe"))
                .body("[112].'population'", numberMatches(6.0753794E7))
                .body("[112].'latlng'.size()", equalTo(2))
                .body("[112].'latlng'[0]", numberMatches(42.83333333))
                .body("[112].'latlng'[1]", numberMatches(12.83333333))
                .body("[112].'demonym'", containsString("Italian"))
                .body("[112].'area'", numberMatches(301336.0))
                .body("[112].'gini'", numberMatches(36.0))
                .body("[112].'timezones'.size()", equalTo(1))
                .body("[112].'timezones'", hasItems("UTC+01:00"))
                .body("[112].'borders'.size()", equalTo(6))
                .body("[112].'borders'", hasItems("AUT", "FRA", "SMR", "SVN", "CHE", "VAT"))
                .body("[112].'nativeName'", containsString("Italia"))
                .body("[112].'numericCode'", containsString("380"))
                .body("[112].'currencies'.size()", equalTo(1))
                .body("[112].'currencies'", hasItems("EUR"))
                .body("[112].'languages'.size()", equalTo(1))
                .body("[112].'languages'", hasItems("it"))
                .body("[112].'translations'.'de'", containsString("Italien"))
                .body("[112].'translations'.'es'", containsString("Italia"))
                .body("[112].'translations'.'fr'", containsString("Italie"))
                .body("[112].'translations'.'ja'", containsString("イタリア"))
                .body("[112].'translations'.'it'", containsString("Italia"))
                .body("[112].'relevance'", containsString("2"))
                .body("[113].'name'", containsString("Jamaica"))
                .body("[113].'topLevelDomain'.size()", equalTo(1))
                .body("[113].'topLevelDomain'", hasItems(".jm"))
                .body("[113].'alpha2Code'", containsString("JM"))
                .body("[113].'alpha3Code'", containsString("JAM"))
                .body("[113].'callingCodes'.size()", equalTo(1))
                .body("[113].'callingCodes'", hasItems("1"))
                .body("[113].'capital'", containsString("Kingston"))
                .body("[113].'altSpellings'.size()", equalTo(1))
                .body("[113].'altSpellings'", hasItems("JM"))
                .body("[113].'region'", containsString("Americas"))
                .body("[113].'subregion'", containsString("Caribbean"))
                .body("[113].'population'", numberMatches(2717991.0))
                .body("[113].'latlng'.size()", equalTo(2))
                .body("[113].'latlng'[0]", numberMatches(18.25))
                .body("[113].'latlng'[1]", numberMatches(-77.5))
                .body("[113].'demonym'", containsString("Jamaican"))
                .body("[113].'area'", numberMatches(10991.0))
                .body("[113].'gini'", numberMatches(45.5))
                .body("[113].'timezones'.size()", equalTo(1))
                .body("[113].'timezones'", hasItems("UTC-05:00"))
                .body("[113].'borders'.size()", equalTo(0))
                .body("[113].'nativeName'", containsString("Jamaica"))
                .body("[113].'numericCode'", containsString("388"))
                .body("[113].'currencies'.size()", equalTo(1))
                .body("[113].'currencies'", hasItems("JMD"))
                .body("[113].'languages'.size()", equalTo(1))
                .body("[113].'languages'", hasItems("en"))
                .body("[113].'translations'.'de'", containsString("Jamaika"))
                .body("[113].'translations'.'es'", containsString("Jamaica"))
                .body("[113].'translations'.'fr'", containsString("Jamaïque"))
                .body("[113].'translations'.'ja'", containsString("ジャマイカ"))
                .body("[113].'translations'.'it'", containsString("Giamaica"))
                .body("[113].'relevance'", containsString("0"))
                .body("[114].'name'", containsString("Japan"))
                .body("[114].'topLevelDomain'.size()", equalTo(1))
                .body("[114].'topLevelDomain'", hasItems(".jp"))
                .body("[114].'alpha2Code'", containsString("JP"))
                .body("[114].'alpha3Code'", containsString("JPN"))
                .body("[114].'callingCodes'.size()", equalTo(1))
                .body("[114].'callingCodes'", hasItems("81"))
                .body("[114].'capital'", containsString("Tokyo"))
                .body("[114].'altSpellings'.size()", equalTo(3))
                .body("[114].'altSpellings'", hasItems("JP", "Nippon", "Nihon"))
                .body("[114].'region'", containsString("Asia"))
                .body("[114].'subregion'", containsString("Eastern Asia"))
                .body("[114].'population'", numberMatches(1.26865E8))
                .body("[114].'latlng'.size()", equalTo(2))
                .body("[114].'latlng'[0]", numberMatches(36.0))
                .body("[114].'latlng'[1]", numberMatches(138.0))
                .body("[114].'demonym'", containsString("Japanese"))
                .body("[114].'area'", numberMatches(377930.0))
                .body("[114].'gini'", numberMatches(38.1))
                .body("[114].'timezones'.size()", equalTo(1))
                .body("[114].'timezones'", hasItems("UTC+09:00"))
                .body("[114].'borders'.size()", equalTo(0))
                .body("[114].'nativeName'", containsString("日本"))
                .body("[114].'numericCode'", containsString("392"))
                .body("[114].'currencies'.size()", equalTo(1))
                .body("[114].'currencies'", hasItems("JPY"))
                .body("[114].'languages'.size()", equalTo(1))
                .body("[114].'languages'", hasItems("ja"))
                .body("[114].'translations'.'de'", containsString("Japan"))
                .body("[114].'translations'.'es'", containsString("Japón"))
                .body("[114].'translations'.'fr'", containsString("Japon"))
                .body("[114].'translations'.'ja'", containsString("日本"))
                .body("[114].'translations'.'it'", containsString("Giappone"))
                .body("[114].'relevance'", containsString("2.5"))
                .body("[115].'name'", containsString("Jersey"))
                .body("[115].'topLevelDomain'.size()", equalTo(1))
                .body("[115].'topLevelDomain'", hasItems(".je"))
                .body("[115].'alpha2Code'", containsString("JE"))
                .body("[115].'alpha3Code'", containsString("JEY"))
                .body("[115].'callingCodes'.size()", equalTo(1))
                .body("[115].'callingCodes'", hasItems("44"))
                .body("[115].'capital'", containsString("Saint Helier"))
                .body("[115].'altSpellings'.size()", equalTo(4))
                .body("[115].'altSpellings'", hasItems("JE", "Bailiwick of Jersey", "Bailliage de Jersey", "Bailliage dé Jèrri"))
                .body("[115].'region'", containsString("Europe"))
                .body("[115].'subregion'", containsString("Northern Europe"))
                .body("[115].'population'", numberMatches(99000.0))
                .body("[115].'latlng'.size()", equalTo(2))
                .body("[115].'latlng'[0]", numberMatches(49.25))
                .body("[115].'latlng'[1]", numberMatches(-2.16666666))
                .body("[115].'demonym'", containsString("Channel Islander"))
                .body("[115].'area'", numberMatches(116.0))
                .body("[115].'gini'", nullValue())
                .body("[115].'timezones'.size()", equalTo(1))
                .body("[115].'timezones'", hasItems("UTC+01:00"))
                .body("[115].'borders'.size()", equalTo(0))
                .body("[115].'nativeName'", containsString("Jersey"))
                .body("[115].'numericCode'", containsString("832"))
                .body("[115].'currencies'.size()", equalTo(1))
                .body("[115].'currencies'", hasItems("GBP"))
                .body("[115].'languages'.size()", equalTo(2))
                .body("[115].'languages'", hasItems("en", "fr"))
                .body("[115].'translations'.'de'", containsString("Jersey"))
                .body("[115].'translations'.'es'", containsString("Jersey"))
                .body("[115].'translations'.'fr'", containsString("Jersey"))
                .body("[115].'translations'.'ja'", containsString("ジャージー"))
                .body("[115].'translations'.'it'", containsString("Isola di Jersey"))
                .body("[115].'relevance'", containsString("0.5"))
                .body("[116].'name'", containsString("Jordan"))
                .body("[116].'topLevelDomain'.size()", equalTo(1))
                .body("[116].'topLevelDomain'", hasItems(".jo"))
                .body("[116].'alpha2Code'", containsString("JO"))
                .body("[116].'alpha3Code'", containsString("JOR"))
                .body("[116].'callingCodes'.size()", equalTo(1))
                .body("[116].'callingCodes'", hasItems("962"))
                .body("[116].'capital'", containsString("Amman"))
                .body("[116].'altSpellings'.size()", equalTo(3))
                .body("[116].'altSpellings'", hasItems("JO", "Hashemite Kingdom of Jordan", "al-Mamlakah al-Urdunīyah al-Hāshimīyah"))
                .body("[116].'region'", containsString("Asia"))
                .body("[116].'subregion'", containsString("Western Asia"))
                .body("[116].'population'", numberMatches(6767600.0))
                .body("[116].'latlng'.size()", equalTo(2))
                .body("[116].'latlng'[0]", numberMatches(31.0))
                .body("[116].'latlng'[1]", numberMatches(36.0))
                .body("[116].'demonym'", containsString("Jordanian"))
                .body("[116].'area'", numberMatches(89342.0))
                .body("[116].'gini'", numberMatches(35.4))
                .body("[116].'timezones'.size()", equalTo(1))
                .body("[116].'timezones'", hasItems("UTC+03:00"))
                .body("[116].'borders'.size()", equalTo(4))
                .body("[116].'borders'", hasItems("IRQ", "ISR", "SAU", "SYR"))
                .body("[116].'nativeName'", containsString("الأردن"))
                .body("[116].'numericCode'", containsString("400"))
                .body("[116].'currencies'.size()", equalTo(1))
                .body("[116].'currencies'", hasItems("JOD"))
                .body("[116].'languages'.size()", equalTo(1))
                .body("[116].'languages'", hasItems("ar"))
                .body("[116].'translations'.'de'", containsString("Jordanien"))
                .body("[116].'translations'.'es'", containsString("Jordania"))
                .body("[116].'translations'.'fr'", containsString("Jordanie"))
                .body("[116].'translations'.'ja'", containsString("ヨルダン"))
                .body("[116].'translations'.'it'", containsString("Giordania"))
                .body("[116].'relevance'", containsString("0"))
                .body("[117].'name'", containsString("Kazakhstan"))
                .body("[117].'topLevelDomain'.size()", equalTo(2))
                .body("[117].'topLevelDomain'", hasItems(".kz", ".қаз"))
                .body("[117].'alpha2Code'", containsString("KZ"))
                .body("[117].'alpha3Code'", containsString("KAZ"))
                .body("[117].'callingCodes'.size()", equalTo(2))
                .body("[117].'callingCodes'", hasItems("76", "77"))
                .body("[117].'capital'", containsString("Astana"))
                .body("[117].'altSpellings'.size()", equalTo(8))
                .body("[117].'altSpellings'", hasItems("KZ", "Qazaqstan", "Казахстан", "Republic of Kazakhstan", "Қазақстан Республикасы", "Qazaqstan Respublïkası", "Республика Казахстан", "Respublika Kazakhstan"))
                .body("[117].'region'", containsString("Asia"))
                .body("[117].'subregion'", containsString("Central Asia"))
                .body("[117].'population'", numberMatches(1.75412E7))
                .body("[117].'latlng'.size()", equalTo(2))
                .body("[117].'latlng'[0]", numberMatches(48.0))
                .body("[117].'latlng'[1]", numberMatches(68.0))
                .body("[117].'demonym'", containsString("Kazakhstani"))
                .body("[117].'area'", numberMatches(2724900.0))
                .body("[117].'gini'", numberMatches(29.0))
                .body("[117].'timezones'.size()", equalTo(2))
                .body("[117].'timezones'", hasItems("UTC+05:00", "UTC+06:00"))
                .body("[117].'borders'.size()", equalTo(5))
                .body("[117].'borders'", hasItems("CHN", "KGZ", "RUS", "TKM", "UZB"))
                .body("[117].'nativeName'", containsString("Қазақстан"))
                .body("[117].'numericCode'", containsString("398"))
                .body("[117].'currencies'.size()", equalTo(1))
                .body("[117].'currencies'", hasItems("KZT"))
                .body("[117].'languages'.size()", equalTo(2))
                .body("[117].'languages'", hasItems("kk", "ru"))
                .body("[117].'translations'.'de'", containsString("Kasachstan"))
                .body("[117].'translations'.'es'", containsString("Kazajistán"))
                .body("[117].'translations'.'fr'", containsString("Kazakhstan"))
                .body("[117].'translations'.'ja'", containsString("カザフスタン"))
                .body("[117].'translations'.'it'", containsString("Kazakistan"))
                .body("[117].'relevance'", containsString("0"))
                .body("[118].'name'", containsString("Kenya"))
                .body("[118].'topLevelDomain'.size()", equalTo(1))
                .body("[118].'topLevelDomain'", hasItems(".ke"))
                .body("[118].'alpha2Code'", containsString("KE"))
                .body("[118].'alpha3Code'", containsString("KEN"))
                .body("[118].'callingCodes'.size()", equalTo(1))
                .body("[118].'callingCodes'", hasItems("254"))
                .body("[118].'capital'", containsString("Nairobi"))
                .body("[118].'altSpellings'.size()", equalTo(3))
                .body("[118].'altSpellings'", hasItems("KE", "Republic of Kenya", "Jamhuri ya Kenya"))
                .body("[118].'region'", containsString("Africa"))
                .body("[118].'subregion'", containsString("Eastern Africa"))
                .body("[118].'population'", numberMatches(4.605E7))
                .body("[118].'latlng'.size()", equalTo(2))
                .body("[118].'latlng'[0]", numberMatches(1.0))
                .body("[118].'latlng'[1]", numberMatches(38.0))
                .body("[118].'demonym'", containsString("Kenyan"))
                .body("[118].'area'", numberMatches(580367.0))
                .body("[118].'gini'", numberMatches(47.7))
                .body("[118].'timezones'.size()", equalTo(1))
                .body("[118].'timezones'", hasItems("UTC+03:00"))
                .body("[118].'borders'.size()", equalTo(5))
                .body("[118].'borders'", hasItems("ETH", "SOM", "SSD", "TZA", "UGA"))
                .body("[118].'nativeName'", containsString("Kenya"))
                .body("[118].'numericCode'", containsString("404"))
                .body("[118].'currencies'.size()", equalTo(1))
                .body("[118].'currencies'", hasItems("KES"))
                .body("[118].'languages'.size()", equalTo(2))
                .body("[118].'languages'", hasItems("en", "sw"))
                .body("[118].'translations'.'de'", containsString("Kenia"))
                .body("[118].'translations'.'es'", containsString("Kenia"))
                .body("[118].'translations'.'fr'", containsString("Kenya"))
                .body("[118].'translations'.'ja'", containsString("ケニア"))
                .body("[118].'translations'.'it'", containsString("Kenya"))
                .body("[118].'relevance'", containsString("0"))
                .body("[119].'name'", containsString("Kiribati"))
                .body("[119].'topLevelDomain'.size()", equalTo(1))
                .body("[119].'topLevelDomain'", hasItems(".ki"))
                .body("[119].'alpha2Code'", containsString("KI"))
                .body("[119].'alpha3Code'", containsString("KIR"))
                .body("[119].'callingCodes'.size()", equalTo(1))
                .body("[119].'callingCodes'", hasItems("686"))
                .body("[119].'capital'", containsString("South Tarawa"))
                .body("[119].'altSpellings'.size()", equalTo(3))
                .body("[119].'altSpellings'", hasItems("KI", "Republic of Kiribati", "Ribaberiki Kiribati"))
                .body("[119].'region'", containsString("Oceania"))
                .body("[119].'subregion'", containsString("Micronesia"))
                .body("[119].'population'", numberMatches(106461.0))
                .body("[119].'latlng'.size()", equalTo(2))
                .body("[119].'latlng'[0]", numberMatches(1.41666666))
                .body("[119].'latlng'[1]", numberMatches(173.0))
                .body("[119].'demonym'", containsString("I-Kiribati"))
                .body("[119].'area'", numberMatches(811.0))
                .body("[119].'gini'", nullValue())
                .body("[119].'timezones'.size()", equalTo(3))
                .body("[119].'timezones'", hasItems("UTC+12:00", "UTC+13:00", "UTC+14:00"))
                .body("[119].'borders'.size()", equalTo(0))
                .body("[119].'nativeName'", containsString("Kiribati"))
                .body("[119].'numericCode'", containsString("296"))
                .body("[119].'currencies'.size()", equalTo(1))
                .body("[119].'currencies'", hasItems("AUD"))
                .body("[119].'languages'.size()", equalTo(1))
                .body("[119].'languages'", hasItems("en"))
                .body("[119].'translations'.'de'", containsString("Kiribati"))
                .body("[119].'translations'.'es'", containsString("Kiribati"))
                .body("[119].'translations'.'fr'", containsString("Kiribati"))
                .body("[119].'translations'.'ja'", containsString("キリバス"))
                .body("[119].'translations'.'it'", containsString("Kiribati"))
                .body("[119].'relevance'", containsString("0"))
                .body("[120].'name'", containsString("Kuwait"))
                .body("[120].'topLevelDomain'.size()", equalTo(1))
                .body("[120].'topLevelDomain'", hasItems(".kw"))
                .body("[120].'alpha2Code'", containsString("KW"))
                .body("[120].'alpha3Code'", containsString("KWT"))
                .body("[120].'callingCodes'.size()", equalTo(1))
                .body("[120].'callingCodes'", hasItems("965"))
                .body("[120].'capital'", containsString("Kuwait City"))
                .body("[120].'altSpellings'.size()", equalTo(3))
                .body("[120].'altSpellings'", hasItems("KW", "State of Kuwait", "Dawlat al-Kuwait"))
                .body("[120].'region'", containsString("Asia"))
                .body("[120].'subregion'", containsString("Western Asia"))
                .body("[120].'population'", numberMatches(3268431.0))
                .body("[120].'latlng'.size()", equalTo(2))
                .body("[120].'latlng'[0]", numberMatches(29.5))
                .body("[120].'latlng'[1]", numberMatches(45.75))
                .body("[120].'demonym'", containsString("Kuwaiti"))
                .body("[120].'area'", numberMatches(17818.0))
                .body("[120].'gini'", nullValue())
                .body("[120].'timezones'.size()", equalTo(1))
                .body("[120].'timezones'", hasItems("UTC+03:00"))
                .body("[120].'borders'.size()", equalTo(2))
                .body("[120].'borders'", hasItems("IRN", "SAU"))
                .body("[120].'nativeName'", containsString("الكويت"))
                .body("[120].'numericCode'", containsString("414"))
                .body("[120].'currencies'.size()", equalTo(1))
                .body("[120].'currencies'", hasItems("KWD"))
                .body("[120].'languages'.size()", equalTo(1))
                .body("[120].'languages'", hasItems("ar"))
                .body("[120].'translations'.'de'", containsString("Kuwait"))
                .body("[120].'translations'.'es'", containsString("Kuwait"))
                .body("[120].'translations'.'fr'", containsString("Koweït"))
                .body("[120].'translations'.'ja'", containsString("クウェート"))
                .body("[120].'translations'.'it'", containsString("Kuwait"))
                .body("[120].'relevance'", containsString("0"))
                .body("[121].'name'", containsString("Kyrgyzstan"))
                .body("[121].'topLevelDomain'.size()", equalTo(1))
                .body("[121].'topLevelDomain'", hasItems(".kg"))
                .body("[121].'alpha2Code'", containsString("KG"))
                .body("[121].'alpha3Code'", containsString("KGZ"))
                .body("[121].'callingCodes'.size()", equalTo(1))
                .body("[121].'callingCodes'", hasItems("996"))
                .body("[121].'capital'", containsString("Bishkek"))
                .body("[121].'altSpellings'.size()", equalTo(5))
                .body("[121].'altSpellings'", hasItems("KG", "Киргизия", "Kyrgyz Republic", "Кыргыз Республикасы", "Kyrgyz Respublikasy"))
                .body("[121].'region'", containsString("Asia"))
                .body("[121].'subregion'", containsString("Central Asia"))
                .body("[121].'population'", numberMatches(5944400.0))
                .body("[121].'latlng'.size()", equalTo(2))
                .body("[121].'latlng'[0]", numberMatches(41.0))
                .body("[121].'latlng'[1]", numberMatches(75.0))
                .body("[121].'demonym'", containsString("Kirghiz"))
                .body("[121].'area'", numberMatches(199951.0))
                .body("[121].'gini'", numberMatches(36.2))
                .body("[121].'timezones'.size()", equalTo(1))
                .body("[121].'timezones'", hasItems("UTC+06:00"))
                .body("[121].'borders'.size()", equalTo(4))
                .body("[121].'borders'", hasItems("CHN", "KAZ", "TJK", "UZB"))
                .body("[121].'nativeName'", containsString("Кыргызстан"))
                .body("[121].'numericCode'", containsString("417"))
                .body("[121].'currencies'.size()", equalTo(1))
                .body("[121].'currencies'", hasItems("KGS"))
                .body("[121].'languages'.size()", equalTo(2))
                .body("[121].'languages'", hasItems("ky", "ru"))
                .body("[121].'translations'.'de'", containsString("Kirgisistan"))
                .body("[121].'translations'.'es'", containsString("Kirguizistán"))
                .body("[121].'translations'.'fr'", containsString("Kirghizistan"))
                .body("[121].'translations'.'ja'", containsString("キルギス"))
                .body("[121].'translations'.'it'", containsString("Kirghizistan"))
                .body("[121].'relevance'", containsString("0"))
                .body("[122].'name'", containsString("Laos"))
                .body("[122].'topLevelDomain'.size()", equalTo(1))
                .body("[122].'topLevelDomain'", hasItems(".la"))
                .body("[122].'alpha2Code'", containsString("LA"))
                .body("[122].'alpha3Code'", containsString("LAO"))
                .body("[122].'callingCodes'.size()", equalTo(1))
                .body("[122].'callingCodes'", hasItems("856"))
                .body("[122].'capital'", containsString("Vientiane"))
                .body("[122].'altSpellings'.size()", equalTo(4))
                .body("[122].'altSpellings'", hasItems("LA", "Lao", "Lao People's Democratic Republic", "Sathalanalat Paxathipatai Paxaxon Lao"))
                .body("[122].'region'", containsString("Asia"))
                .body("[122].'subregion'", containsString("South-Eastern Asia"))
                .body("[122].'population'", numberMatches(6802000.0))
                .body("[122].'latlng'.size()", equalTo(2))
                .body("[122].'latlng'[0]", numberMatches(18.0))
                .body("[122].'latlng'[1]", numberMatches(105.0))
                .body("[122].'demonym'", containsString("Laotian"))
                .body("[122].'area'", numberMatches(236800.0))
                .body("[122].'gini'", numberMatches(36.7))
                .body("[122].'timezones'.size()", equalTo(1))
                .body("[122].'timezones'", hasItems("UTC+07:00"))
                .body("[122].'borders'.size()", equalTo(5))
                .body("[122].'borders'", hasItems("MMR", "KHM", "CHN", "THA", "VNM"))
                .body("[122].'nativeName'", containsString("ສປປລາວ"))
                .body("[122].'numericCode'", containsString("418"))
                .body("[122].'currencies'.size()", equalTo(1))
                .body("[122].'currencies'", hasItems("LAK"))
                .body("[122].'languages'.size()", equalTo(1))
                .body("[122].'languages'", hasItems("lo"))
                .body("[122].'translations'.'de'", containsString("Laos"))
                .body("[122].'translations'.'es'", containsString("Laos"))
                .body("[122].'translations'.'fr'", containsString("Laos"))
                .body("[122].'translations'.'ja'", containsString("ラオス人民民主共和国"))
                .body("[122].'translations'.'it'", containsString("Laos"))
                .body("[122].'relevance'", containsString("0"))
                .body("[123].'name'", containsString("Latvia"))
                .body("[123].'topLevelDomain'.size()", equalTo(1))
                .body("[123].'topLevelDomain'", hasItems(".lv"))
                .body("[123].'alpha2Code'", containsString("LV"))
                .body("[123].'alpha3Code'", containsString("LVA"))
                .body("[123].'callingCodes'.size()", equalTo(1))
                .body("[123].'callingCodes'", hasItems("371"))
                .body("[123].'capital'", containsString("Riga"))
                .body("[123].'altSpellings'.size()", equalTo(3))
                .body("[123].'altSpellings'", hasItems("LV", "Republic of Latvia", "Latvijas Republika"))
                .body("[123].'region'", containsString("Europe"))
                .body("[123].'subregion'", containsString("Northern Europe"))
                .body("[123].'population'", numberMatches(1980700.0))
                .body("[123].'latlng'.size()", equalTo(2))
                .body("[123].'latlng'[0]", numberMatches(57.0))
                .body("[123].'latlng'[1]", numberMatches(25.0))
                .body("[123].'demonym'", containsString("Latvian"))
                .body("[123].'area'", numberMatches(64559.0))
                .body("[123].'gini'", numberMatches(36.6))
                .body("[123].'timezones'.size()", equalTo(1))
                .body("[123].'timezones'", hasItems("UTC+02:00"))
                .body("[123].'borders'.size()", equalTo(4))
                .body("[123].'borders'", hasItems("BLR", "EST", "LTU", "RUS"))
                .body("[123].'nativeName'", containsString("Latvija"))
                .body("[123].'numericCode'", containsString("428"))
                .body("[123].'currencies'.size()", equalTo(1))
                .body("[123].'currencies'", hasItems("EUR"))
                .body("[123].'languages'.size()", equalTo(1))
                .body("[123].'languages'", hasItems("lv"))
                .body("[123].'translations'.'de'", containsString("Lettland"))
                .body("[123].'translations'.'es'", containsString("Letonia"))
                .body("[123].'translations'.'fr'", containsString("Lettonie"))
                .body("[123].'translations'.'ja'", containsString("ラトビア"))
                .body("[123].'translations'.'it'", containsString("Lettonia"))
                .body("[123].'relevance'", containsString("0"))
                .body("[124].'name'", containsString("Lebanon"))
                .body("[124].'topLevelDomain'.size()", equalTo(1))
                .body("[124].'topLevelDomain'", hasItems(".lb"))
                .body("[124].'alpha2Code'", containsString("LB"))
                .body("[124].'alpha3Code'", containsString("LBN"))
                .body("[124].'callingCodes'.size()", equalTo(1))
                .body("[124].'callingCodes'", hasItems("961"))
                .body("[124].'capital'", containsString("Beirut"))
                .body("[124].'altSpellings'.size()", equalTo(3))
                .body("[124].'altSpellings'", hasItems("LB", "Lebanese Republic", "Al-Jumhūrīyah Al-Libnānīyah"))
                .body("[124].'region'", containsString("Asia"))
                .body("[124].'subregion'", containsString("Western Asia"))
                .body("[124].'population'", numberMatches(4104000.0))
                .body("[124].'latlng'.size()", equalTo(2))
                .body("[124].'latlng'[0]", numberMatches(33.83333333))
                .body("[124].'latlng'[1]", numberMatches(35.83333333))
                .body("[124].'demonym'", containsString("Lebanese"))
                .body("[124].'area'", numberMatches(10452.0))
                .body("[124].'gini'", nullValue())
                .body("[124].'timezones'.size()", equalTo(1))
                .body("[124].'timezones'", hasItems("UTC+02:00"))
                .body("[124].'borders'.size()", equalTo(2))
                .body("[124].'borders'", hasItems("ISR", "SYR"))
                .body("[124].'nativeName'", containsString("لبنان"))
                .body("[124].'numericCode'", containsString("422"))
                .body("[124].'currencies'.size()", equalTo(1))
                .body("[124].'currencies'", hasItems("LBP"))
                .body("[124].'languages'.size()", equalTo(2))
                .body("[124].'languages'", hasItems("ar", "fr"))
                .body("[124].'translations'.'de'", containsString("Libanon"))
                .body("[124].'translations'.'es'", containsString("Líbano"))
                .body("[124].'translations'.'fr'", containsString("Liban"))
                .body("[124].'translations'.'ja'", containsString("レバノン"))
                .body("[124].'translations'.'it'", containsString("Libano"))
                .body("[124].'relevance'", containsString("0"))
                .body("[125].'name'", containsString("Lesotho"))
                .body("[125].'topLevelDomain'.size()", equalTo(1))
                .body("[125].'topLevelDomain'", hasItems(".ls"))
                .body("[125].'alpha2Code'", containsString("LS"))
                .body("[125].'alpha3Code'", containsString("LSO"))
                .body("[125].'callingCodes'.size()", equalTo(1))
                .body("[125].'callingCodes'", hasItems("266"))
                .body("[125].'capital'", containsString("Maseru"))
                .body("[125].'altSpellings'.size()", equalTo(3))
                .body("[125].'altSpellings'", hasItems("LS", "Kingdom of Lesotho", "Muso oa Lesotho"))
                .body("[125].'region'", containsString("Africa"))
                .body("[125].'subregion'", containsString("Southern Africa"))
                .body("[125].'population'", numberMatches(2135000.0))
                .body("[125].'latlng'.size()", equalTo(2))
                .body("[125].'latlng'[0]", numberMatches(-29.5))
                .body("[125].'latlng'[1]", numberMatches(28.5))
                .body("[125].'demonym'", containsString("Mosotho"))
                .body("[125].'area'", numberMatches(30355.0))
                .body("[125].'gini'", numberMatches(52.5))
                .body("[125].'timezones'.size()", equalTo(1))
                .body("[125].'timezones'", hasItems("UTC+02:00"))
                .body("[125].'borders'.size()", equalTo(1))
                .body("[125].'borders'", hasItems("ZAF"))
                .body("[125].'nativeName'", containsString("Lesotho"))
                .body("[125].'numericCode'", containsString("426"))
                .body("[125].'currencies'.size()", equalTo(2))
                .body("[125].'currencies'", hasItems("LSL", "ZAR"))
                .body("[125].'languages'.size()", equalTo(2))
                .body("[125].'languages'", hasItems("en", "st"))
                .body("[125].'translations'.'de'", containsString("Lesotho"))
                .body("[125].'translations'.'es'", containsString("Lesotho"))
                .body("[125].'translations'.'fr'", containsString("Lesotho"))
                .body("[125].'translations'.'ja'", containsString("レソト"))
                .body("[125].'translations'.'it'", containsString("Lesotho"))
                .body("[125].'relevance'", containsString("0"))
                .body("[126].'name'", containsString("Liberia"))
                .body("[126].'topLevelDomain'.size()", equalTo(1))
                .body("[126].'topLevelDomain'", hasItems(".lr"))
                .body("[126].'alpha2Code'", containsString("LR"))
                .body("[126].'alpha3Code'", containsString("LBR"))
                .body("[126].'callingCodes'.size()", equalTo(1))
                .body("[126].'callingCodes'", hasItems("231"))
                .body("[126].'capital'", containsString("Monrovia"))
                .body("[126].'altSpellings'.size()", equalTo(2))
                .body("[126].'altSpellings'", hasItems("LR", "Republic of Liberia"))
                .body("[126].'region'", containsString("Africa"))
                .body("[126].'subregion'", containsString("Western Africa"))
                .body("[126].'population'", numberMatches(4503000.0))
                .body("[126].'latlng'.size()", equalTo(2))
                .body("[126].'latlng'[0]", numberMatches(6.5))
                .body("[126].'latlng'[1]", numberMatches(-9.5))
                .body("[126].'demonym'", containsString("Liberian"))
                .body("[126].'area'", numberMatches(111369.0))
                .body("[126].'gini'", numberMatches(38.2))
                .body("[126].'timezones'.size()", equalTo(1))
                .body("[126].'timezones'", hasItems("UTC"))
                .body("[126].'borders'.size()", equalTo(3))
                .body("[126].'borders'", hasItems("GIN", "CIV", "SLE"))
                .body("[126].'nativeName'", containsString("Liberia"))
                .body("[126].'numericCode'", containsString("430"))
                .body("[126].'currencies'.size()", equalTo(1))
                .body("[126].'currencies'", hasItems("LRD"))
                .body("[126].'languages'.size()", equalTo(1))
                .body("[126].'languages'", hasItems("en"))
                .body("[126].'translations'.'de'", containsString("Liberia"))
                .body("[126].'translations'.'es'", containsString("Liberia"))
                .body("[126].'translations'.'fr'", containsString("Liberia"))
                .body("[126].'translations'.'ja'", containsString("リベリア"))
                .body("[126].'translations'.'it'", containsString("Liberia"))
                .body("[126].'relevance'", containsString("0"))
                .body("[127].'name'", containsString("Libya"))
                .body("[127].'topLevelDomain'.size()", equalTo(1))
                .body("[127].'topLevelDomain'", hasItems(".ly"))
                .body("[127].'alpha2Code'", containsString("LY"))
                .body("[127].'alpha3Code'", containsString("LBY"))
                .body("[127].'callingCodes'.size()", equalTo(1))
                .body("[127].'callingCodes'", hasItems("218"))
                .body("[127].'capital'", containsString("Tripoli"))
                .body("[127].'altSpellings'.size()", equalTo(3))
                .body("[127].'altSpellings'", hasItems("LY", "State of Libya", "Dawlat Libya"))
                .body("[127].'region'", containsString("Africa"))
                .body("[127].'subregion'", containsString("Northern Africa"))
                .body("[127].'population'", numberMatches(6278000.0))
                .body("[127].'latlng'.size()", equalTo(2))
                .body("[127].'latlng'[0]", numberMatches(25.0))
                .body("[127].'latlng'[1]", numberMatches(17.0))
                .body("[127].'demonym'", containsString("Libyan"))
                .body("[127].'area'", numberMatches(1759540.0))
                .body("[127].'gini'", nullValue())
                .body("[127].'timezones'.size()", equalTo(1))
                .body("[127].'timezones'", hasItems("UTC+01:00"))
                .body("[127].'borders'.size()", equalTo(6))
                .body("[127].'borders'", hasItems("DZA", "TCD", "EGY", "NER", "SDN", "TUN"))
                .body("[127].'nativeName'", containsString("‏ليبيا"))
                .body("[127].'numericCode'", containsString("434"))
                .body("[127].'currencies'.size()", equalTo(1))
                .body("[127].'currencies'", hasItems("LYD"))
                .body("[127].'languages'.size()", equalTo(1))
                .body("[127].'languages'", hasItems("ar"))
                .body("[127].'translations'.'de'", containsString("Libyen"))
                .body("[127].'translations'.'es'", containsString("Libia"))
                .body("[127].'translations'.'fr'", containsString("Libye"))
                .body("[127].'translations'.'ja'", containsString("リビア"))
                .body("[127].'translations'.'it'", containsString("Libia"))
                .body("[127].'relevance'", containsString("0"))
                .body("[128].'name'", containsString("Liechtenstein"))
                .body("[128].'topLevelDomain'.size()", equalTo(1))
                .body("[128].'topLevelDomain'", hasItems(".li"))
                .body("[128].'alpha2Code'", containsString("LI"))
                .body("[128].'alpha3Code'", containsString("LIE"))
                .body("[128].'callingCodes'.size()", equalTo(1))
                .body("[128].'callingCodes'", hasItems("423"))
                .body("[128].'capital'", containsString("Vaduz"))
                .body("[128].'altSpellings'.size()", equalTo(3))
                .body("[128].'altSpellings'", hasItems("LI", "Principality of Liechtenstein", "Fürstentum Liechtenstein"))
                .body("[128].'region'", containsString("Europe"))
                .body("[128].'subregion'", containsString("Western Europe"))
                .body("[128].'population'", numberMatches(37370.0))
                .body("[128].'latlng'.size()", equalTo(2))
                .body("[128].'latlng'[0]", numberMatches(47.26666666))
                .body("[128].'latlng'[1]", numberMatches(9.53333333))
                .body("[128].'demonym'", containsString("Liechtensteiner"))
                .body("[128].'area'", numberMatches(160.0))
                .body("[128].'gini'", nullValue())
                .body("[128].'timezones'.size()", equalTo(1))
                .body("[128].'timezones'", hasItems("UTC+01:00"))
                .body("[128].'borders'.size()", equalTo(2))
                .body("[128].'borders'", hasItems("AUT", "CHE"))
                .body("[128].'nativeName'", containsString("Liechtenstein"))
                .body("[128].'numericCode'", containsString("438"))
                .body("[128].'currencies'.size()", equalTo(1))
                .body("[128].'currencies'", hasItems("CHF"))
                .body("[128].'languages'.size()", equalTo(1))
                .body("[128].'languages'", hasItems("de"))
                .body("[128].'translations'.'de'", containsString("Liechtenstein"))
                .body("[128].'translations'.'es'", containsString("Liechtenstein"))
                .body("[128].'translations'.'fr'", containsString("Liechtenstein"))
                .body("[128].'translations'.'ja'", containsString("リヒテンシュタイン"))
                .body("[128].'translations'.'it'", containsString("Liechtenstein"))
                .body("[128].'relevance'", containsString("0"))
                .body("[129].'name'", containsString("Lithuania"))
                .body("[129].'topLevelDomain'.size()", equalTo(1))
                .body("[129].'topLevelDomain'", hasItems(".lt"))
                .body("[129].'alpha2Code'", containsString("LT"))
                .body("[129].'alpha3Code'", containsString("LTU"))
                .body("[129].'callingCodes'.size()", equalTo(1))
                .body("[129].'callingCodes'", hasItems("370"))
                .body("[129].'capital'", containsString("Vilnius"))
                .body("[129].'altSpellings'.size()", equalTo(3))
                .body("[129].'altSpellings'", hasItems("LT", "Republic of Lithuania", "Lietuvos Respublika"))
                .body("[129].'region'", containsString("Europe"))
                .body("[129].'subregion'", containsString("Northern Europe"))
                .body("[129].'population'", numberMatches(2900787.0))
                .body("[129].'latlng'.size()", equalTo(2))
                .body("[129].'latlng'[0]", numberMatches(56.0))
                .body("[129].'latlng'[1]", numberMatches(24.0))
                .body("[129].'demonym'", containsString("Lithuanian"))
                .body("[129].'area'", numberMatches(65300.0))
                .body("[129].'gini'", numberMatches(37.6))
                .body("[129].'timezones'.size()", equalTo(1))
                .body("[129].'timezones'", hasItems("UTC+02:00"))
                .body("[129].'borders'.size()", equalTo(4))
                .body("[129].'borders'", hasItems("BLR", "LVA", "POL", "RUS"))
                .body("[129].'nativeName'", containsString("Lietuva"))
                .body("[129].'numericCode'", containsString("440"))
                .body("[129].'currencies'.size()", equalTo(1))
                .body("[129].'currencies'", hasItems("EUR"))
                .body("[129].'languages'.size()", equalTo(1))
                .body("[129].'languages'", hasItems("lt"))
                .body("[129].'translations'.'de'", containsString("Litauen"))
                .body("[129].'translations'.'es'", containsString("Lituania"))
                .body("[129].'translations'.'fr'", containsString("Lituanie"))
                .body("[129].'translations'.'ja'", containsString("リトアニア"))
                .body("[129].'translations'.'it'", containsString("Lituania"))
                .body("[129].'relevance'", containsString("0"))
                .body("[130].'name'", containsString("Luxembourg"))
                .body("[130].'topLevelDomain'.size()", equalTo(1))
                .body("[130].'topLevelDomain'", hasItems(".lu"))
                .body("[130].'alpha2Code'", containsString("LU"))
                .body("[130].'alpha3Code'", containsString("LUX"))
                .body("[130].'callingCodes'.size()", equalTo(1))
                .body("[130].'callingCodes'", hasItems("352"))
                .body("[130].'capital'", containsString("Luxembourg"))
                .body("[130].'altSpellings'.size()", equalTo(5))
                .body("[130].'altSpellings'", hasItems("LU", "Grand Duchy of Luxembourg", "Grand-Duché de Luxembourg", "Großherzogtum Luxemburg", "Groussherzogtum Lëtzebuerg"))
                .body("[130].'region'", containsString("Europe"))
                .body("[130].'subregion'", containsString("Western Europe"))
                .body("[130].'population'", numberMatches(562958.0))
                .body("[130].'latlng'.size()", equalTo(2))
                .body("[130].'latlng'[0]", numberMatches(49.75))
                .body("[130].'latlng'[1]", numberMatches(6.16666666))
                .body("[130].'demonym'", containsString("Luxembourger"))
                .body("[130].'area'", numberMatches(2586.0))
                .body("[130].'gini'", numberMatches(30.8))
                .body("[130].'timezones'.size()", equalTo(1))
                .body("[130].'timezones'", hasItems("UTC+01:00"))
                .body("[130].'borders'.size()", equalTo(3))
                .body("[130].'borders'", hasItems("BEL", "FRA", "DEU"))
                .body("[130].'nativeName'", containsString("Luxembourg"))
                .body("[130].'numericCode'", containsString("442"))
                .body("[130].'currencies'.size()", equalTo(1))
                .body("[130].'currencies'", hasItems("EUR"))
                .body("[130].'languages'.size()", equalTo(3))
                .body("[130].'languages'", hasItems("fr", "de", "lb"))
                .body("[130].'translations'.'de'", containsString("Luxemburg"))
                .body("[130].'translations'.'es'", containsString("Luxemburgo"))
                .body("[130].'translations'.'fr'", containsString("Luxembourg"))
                .body("[130].'translations'.'ja'", containsString("ルクセンブルク"))
                .body("[130].'translations'.'it'", containsString("Lussemburgo"))
                .body("[130].'relevance'", containsString("0"))
                .body("[131].'name'", containsString("Macau"))
                .body("[131].'topLevelDomain'.size()", equalTo(1))
                .body("[131].'topLevelDomain'", hasItems(".mo"))
                .body("[131].'alpha2Code'", containsString("MO"))
                .body("[131].'alpha3Code'", containsString("MAC"))
                .body("[131].'callingCodes'.size()", equalTo(1))
                .body("[131].'callingCodes'", hasItems("853"))
                .body("[131].'capital'", containsString(""))
                .body("[131].'altSpellings'.size()", equalTo(5))
                .body("[131].'altSpellings'", hasItems("MO", "澳门", "Macao Special Administrative Region of the People's Republic of China", "中華人民共和國澳門特別行政區", "Região Administrativa Especial de Macau da República Popular da China"))
                .body("[131].'region'", containsString("Asia"))
                .body("[131].'subregion'", containsString("Eastern Asia"))
                .body("[131].'population'", numberMatches(642900.0))
                .body("[131].'latlng'.size()", equalTo(2))
                .body("[131].'latlng'[0]", numberMatches(22.16666666))
                .body("[131].'latlng'[1]", numberMatches(113.55))
                .body("[131].'demonym'", containsString("Chinese"))
                .body("[131].'area'", numberMatches(30.0))
                .body("[131].'gini'", nullValue())
                .body("[131].'timezones'.size()", equalTo(1))
                .body("[131].'timezones'", hasItems("UTC+08:00"))
                .body("[131].'borders'.size()", equalTo(1))
                .body("[131].'borders'", hasItems("CHN"))
                .body("[131].'nativeName'", containsString("澳門"))
                .body("[131].'numericCode'", containsString("446"))
                .body("[131].'currencies'.size()", equalTo(1))
                .body("[131].'currencies'", hasItems("MOP"))
                .body("[131].'languages'.size()", equalTo(2))
                .body("[131].'languages'", hasItems("zh", "pt"))
                .body("[131].'translations'.'de'", containsString("Macao"))
                .body("[131].'translations'.'es'", containsString("Macao"))
                .body("[131].'translations'.'fr'", containsString("Macao"))
                .body("[131].'translations'.'ja'", containsString("マカオ"))
                .body("[131].'translations'.'it'", containsString("Macao"))
                .body("[131].'relevance'", containsString("0"))
                .body("[132].'name'", containsString("Republic of Macedonia"))
                .body("[132].'topLevelDomain'.size()", equalTo(1))
                .body("[132].'topLevelDomain'", hasItems(".mk"))
                .body("[132].'alpha2Code'", containsString("MK"))
                .body("[132].'alpha3Code'", containsString("MKD"))
                .body("[132].'callingCodes'.size()", equalTo(1))
                .body("[132].'callingCodes'", hasItems("389"))
                .body("[132].'capital'", containsString("Skopje"))
                .body("[132].'altSpellings'.size()", equalTo(3))
                .body("[132].'altSpellings'", hasItems("MK", "Republic of Macedonia", "Република Македонија"))
                .body("[132].'region'", containsString("Europe"))
                .body("[132].'subregion'", containsString("Southern Europe"))
                .body("[132].'population'", numberMatches(2058539.0))
                .body("[132].'latlng'.size()", equalTo(2))
                .body("[132].'latlng'[0]", numberMatches(41.83333333))
                .body("[132].'latlng'[1]", numberMatches(22.0))
                .body("[132].'demonym'", containsString("Macedonian"))
                .body("[132].'area'", numberMatches(25713.0))
                .body("[132].'gini'", numberMatches(43.2))
                .body("[132].'timezones'.size()", equalTo(1))
                .body("[132].'timezones'", hasItems("UTC+01:00"))
                .body("[132].'borders'.size()", equalTo(5))
                .body("[132].'borders'", hasItems("ALB", "BGR", "GRC", "KOS", "SRB"))
                .body("[132].'nativeName'", containsString("Македонија"))
                .body("[132].'numericCode'", containsString("807"))
                .body("[132].'currencies'.size()", equalTo(1))
                .body("[132].'currencies'", hasItems("MKD"))
                .body("[132].'languages'.size()", equalTo(1))
                .body("[132].'languages'", hasItems("mk"))
                .body("[132].'translations'.'de'", containsString("Mazedonien"))
                .body("[132].'translations'.'es'", containsString("Macedonia"))
                .body("[132].'translations'.'fr'", containsString("Macédoine"))
                .body("[132].'translations'.'ja'", containsString("マケドニア旧ユーゴスラビア共和国"))
                .body("[132].'translations'.'it'", containsString("Macedonia"))
                .body("[132].'relevance'", containsString("0"))
                .body("[133].'name'", containsString("Madagascar"))
                .body("[133].'topLevelDomain'.size()", equalTo(1))
                .body("[133].'topLevelDomain'", hasItems(".mg"))
                .body("[133].'alpha2Code'", containsString("MG"))
                .body("[133].'alpha3Code'", containsString("MDG"))
                .body("[133].'callingCodes'.size()", equalTo(1))
                .body("[133].'callingCodes'", hasItems("261"))
                .body("[133].'capital'", containsString("Antananarivo"))
                .body("[133].'altSpellings'.size()", equalTo(4))
                .body("[133].'altSpellings'", hasItems("MG", "Republic of Madagascar", "Repoblikan'i Madagasikara", "République de Madagascar"))
                .body("[133].'region'", containsString("Africa"))
                .body("[133].'subregion'", containsString("Eastern Africa"))
                .body("[133].'population'", numberMatches(2.2434363E7))
                .body("[133].'latlng'.size()", equalTo(2))
                .body("[133].'latlng'[0]", numberMatches(-20.0))
                .body("[133].'latlng'[1]", numberMatches(47.0))
                .body("[133].'demonym'", containsString("Malagasy"))
                .body("[133].'area'", numberMatches(587041.0))
                .body("[133].'gini'", numberMatches(44.1))
                .body("[133].'timezones'.size()", equalTo(1))
                .body("[133].'timezones'", hasItems("UTC+03:00"))
                .body("[133].'borders'.size()", equalTo(0))
                .body("[133].'nativeName'", containsString("Madagasikara"))
                .body("[133].'numericCode'", containsString("450"))
                .body("[133].'currencies'.size()", equalTo(1))
                .body("[133].'currencies'", hasItems("MGA"))
                .body("[133].'languages'.size()", equalTo(2))
                .body("[133].'languages'", hasItems("fr", "mg"))
                .body("[133].'translations'.'de'", containsString("Madagaskar"))
                .body("[133].'translations'.'es'", containsString("Madagascar"))
                .body("[133].'translations'.'fr'", containsString("Madagascar"))
                .body("[133].'translations'.'ja'", containsString("マダガスカル"))
                .body("[133].'translations'.'it'", containsString("Madagascar"))
                .body("[133].'relevance'", containsString("0"))
                .body("[134].'name'", containsString("Malawi"))
                .body("[134].'topLevelDomain'.size()", equalTo(1))
                .body("[134].'topLevelDomain'", hasItems(".mw"))
                .body("[134].'alpha2Code'", containsString("MW"))
                .body("[134].'alpha3Code'", containsString("MWI"))
                .body("[134].'callingCodes'.size()", equalTo(1))
                .body("[134].'callingCodes'", hasItems("265"))
                .body("[134].'capital'", containsString("Lilongwe"))
                .body("[134].'altSpellings'.size()", equalTo(2))
                .body("[134].'altSpellings'", hasItems("MW", "Republic of Malawi"))
                .body("[134].'region'", containsString("Africa"))
                .body("[134].'subregion'", containsString("Eastern Africa"))
                .body("[134].'population'", numberMatches(1.6310431E7))
                .body("[134].'latlng'.size()", equalTo(2))
                .body("[134].'latlng'[0]", numberMatches(-13.5))
                .body("[134].'latlng'[1]", numberMatches(34.0))
                .body("[134].'demonym'", containsString("Malawian"))
                .body("[134].'area'", numberMatches(118484.0))
                .body("[134].'gini'", numberMatches(39.0))
                .body("[134].'timezones'.size()", equalTo(1))
                .body("[134].'timezones'", hasItems("UTC+02:00"))
                .body("[134].'borders'.size()", equalTo(3))
                .body("[134].'borders'", hasItems("MOZ", "TZA", "ZMB"))
                .body("[134].'nativeName'", containsString("Malawi"))
                .body("[134].'numericCode'", containsString("454"))
                .body("[134].'currencies'.size()", equalTo(1))
                .body("[134].'currencies'", hasItems("MWK"))
                .body("[134].'languages'.size()", equalTo(2))
                .body("[134].'languages'", hasItems("en", "ny"))
                .body("[134].'translations'.'de'", containsString("Malawi"))
                .body("[134].'translations'.'es'", containsString("Malawi"))
                .body("[134].'translations'.'fr'", containsString("Malawi"))
                .body("[134].'translations'.'ja'", containsString("マラウイ"))
                .body("[134].'translations'.'it'", containsString("Malawi"))
                .body("[134].'relevance'", containsString("0"))
                .body("[135].'name'", containsString("Malaysia"))
                .body("[135].'topLevelDomain'.size()", equalTo(1))
                .body("[135].'topLevelDomain'", hasItems(".my"))
                .body("[135].'alpha2Code'", containsString("MY"))
                .body("[135].'alpha3Code'", containsString("MYS"))
                .body("[135].'callingCodes'.size()", equalTo(1))
                .body("[135].'callingCodes'", hasItems("60"))
                .body("[135].'capital'", containsString("Kuala Lumpur"))
                .body("[135].'altSpellings'.size()", equalTo(1))
                .body("[135].'altSpellings'", hasItems("MY"))
                .body("[135].'region'", containsString("Asia"))
                .body("[135].'subregion'", containsString("South-Eastern Asia"))
                .body("[135].'population'", numberMatches(3.06788E7))
                .body("[135].'latlng'.size()", equalTo(2))
                .body("[135].'latlng'[0]", numberMatches(2.5))
                .body("[135].'latlng'[1]", numberMatches(112.5))
                .body("[135].'demonym'", containsString("Malaysian"))
                .body("[135].'area'", numberMatches(330803.0))
                .body("[135].'gini'", numberMatches(46.2))
                .body("[135].'timezones'.size()", equalTo(1))
                .body("[135].'timezones'", hasItems("UTC+08:00"))
                .body("[135].'borders'.size()", equalTo(3))
                .body("[135].'borders'", hasItems("BRN", "IDN", "THA"))
                .body("[135].'nativeName'", containsString("Malaysia"))
                .body("[135].'numericCode'", containsString("458"))
                .body("[135].'currencies'.size()", equalTo(1))
                .body("[135].'currencies'", hasItems("MYR"))
                .body("[135].'languages'.size()", equalTo(1))
                .body("[135].'languages'", hasItems("ms"))
                .body("[135].'translations'.'de'", containsString("Malaysia"))
                .body("[135].'translations'.'es'", containsString("Malasia"))
                .body("[135].'translations'.'fr'", containsString("Malaisie"))
                .body("[135].'translations'.'ja'", containsString("マレーシア"))
                .body("[135].'translations'.'it'", containsString("Malesia"))
                .body("[135].'relevance'", containsString("0"))
                .body("[136].'name'", containsString("Maldives"))
                .body("[136].'topLevelDomain'.size()", equalTo(1))
                .body("[136].'topLevelDomain'", hasItems(".mv"))
                .body("[136].'alpha2Code'", containsString("MV"))
                .body("[136].'alpha3Code'", containsString("MDV"))
                .body("[136].'callingCodes'.size()", equalTo(1))
                .body("[136].'callingCodes'", hasItems("960"))
                .body("[136].'capital'", containsString("Malé"))
                .body("[136].'altSpellings'.size()", equalTo(4))
                .body("[136].'altSpellings'", hasItems("MV", "Maldive Islands", "Republic of the Maldives", "Dhivehi Raajjeyge Jumhooriyya"))
                .body("[136].'region'", containsString("Asia"))
                .body("[136].'subregion'", containsString("Southern Asia"))
                .body("[136].'population'", numberMatches(341256.0))
                .body("[136].'latlng'.size()", equalTo(2))
                .body("[136].'latlng'[0]", numberMatches(3.25))
                .body("[136].'latlng'[1]", numberMatches(73.0))
                .body("[136].'demonym'", containsString("Maldivan"))
                .body("[136].'area'", numberMatches(300.0))
                .body("[136].'gini'", numberMatches(37.4))
                .body("[136].'timezones'.size()", equalTo(1))
                .body("[136].'timezones'", hasItems("UTC+05:00"))
                .body("[136].'borders'.size()", equalTo(0))
                .body("[136].'nativeName'", containsString("Maldives"))
                .body("[136].'numericCode'", containsString("462"))
                .body("[136].'currencies'.size()", equalTo(1))
                .body("[136].'currencies'", hasItems("MVR"))
                .body("[136].'languages'.size()", equalTo(1))
                .body("[136].'languages'", hasItems("dv"))
                .body("[136].'translations'.'de'", containsString("Malediven"))
                .body("[136].'translations'.'es'", containsString("Maldivas"))
                .body("[136].'translations'.'fr'", containsString("Maldives"))
                .body("[136].'translations'.'ja'", containsString("モルディブ"))
                .body("[136].'translations'.'it'", containsString("Maldive"))
                .body("[136].'relevance'", containsString("0"))
                .body("[137].'name'", containsString("Mali"))
                .body("[137].'topLevelDomain'.size()", equalTo(1))
                .body("[137].'topLevelDomain'", hasItems(".ml"))
                .body("[137].'alpha2Code'", containsString("ML"))
                .body("[137].'alpha3Code'", containsString("MLI"))
                .body("[137].'callingCodes'.size()", equalTo(1))
                .body("[137].'callingCodes'", hasItems("223"))
                .body("[137].'capital'", containsString("Bamako"))
                .body("[137].'altSpellings'.size()", equalTo(3))
                .body("[137].'altSpellings'", hasItems("ML", "Republic of Mali", "République du Mali"))
                .body("[137].'region'", containsString("Africa"))
                .body("[137].'subregion'", containsString("Western Africa"))
                .body("[137].'population'", numberMatches(1.76E7))
                .body("[137].'latlng'.size()", equalTo(2))
                .body("[137].'latlng'[0]", numberMatches(17.0))
                .body("[137].'latlng'[1]", numberMatches(-4.0))
                .body("[137].'demonym'", containsString("Malian"))
                .body("[137].'area'", numberMatches(1240192.0))
                .body("[137].'gini'", numberMatches(33.0))
                .body("[137].'timezones'.size()", equalTo(1))
                .body("[137].'timezones'", hasItems("UTC"))
                .body("[137].'borders'.size()", equalTo(7))
                .body("[137].'borders'", hasItems("DZA", "BFA", "GIN", "CIV", "MRT", "NER", "SEN"))
                .body("[137].'nativeName'", containsString("Mali"))
                .body("[137].'numericCode'", containsString("466"))
                .body("[137].'currencies'.size()", equalTo(1))
                .body("[137].'currencies'", hasItems("XOF"))
                .body("[137].'languages'.size()", equalTo(1))
                .body("[137].'languages'", hasItems("fr"))
                .body("[137].'translations'.'de'", containsString("Mali"))
                .body("[137].'translations'.'es'", containsString("Mali"))
                .body("[137].'translations'.'fr'", containsString("Mali"))
                .body("[137].'translations'.'ja'", containsString("マリ"))
                .body("[137].'translations'.'it'", containsString("Mali"))
                .body("[137].'relevance'", containsString("0"))
                .body("[138].'name'", containsString("Malta"))
                .body("[138].'topLevelDomain'.size()", equalTo(1))
                .body("[138].'topLevelDomain'", hasItems(".mt"))
                .body("[138].'alpha2Code'", containsString("MT"))
                .body("[138].'alpha3Code'", containsString("MLT"))
                .body("[138].'callingCodes'.size()", equalTo(1))
                .body("[138].'callingCodes'", hasItems("356"))
                .body("[138].'capital'", containsString("Valletta"))
                .body("[138].'altSpellings'.size()", equalTo(3))
                .body("[138].'altSpellings'", hasItems("MT", "Republic of Malta", "Repubblika ta' Malta"))
                .body("[138].'region'", containsString("Europe"))
                .body("[138].'subregion'", containsString("Southern Europe"))
                .body("[138].'population'", numberMatches(445426.0))
                .body("[138].'latlng'.size()", equalTo(2))
                .body("[138].'latlng'[0]", numberMatches(35.83333333))
                .body("[138].'latlng'[1]", numberMatches(14.58333333))
                .body("[138].'demonym'", containsString("Maltese"))
                .body("[138].'area'", numberMatches(316.0))
                .body("[138].'gini'", nullValue())
                .body("[138].'timezones'.size()", equalTo(1))
                .body("[138].'timezones'", hasItems("UTC+01:00"))
                .body("[138].'borders'.size()", equalTo(0))
                .body("[138].'nativeName'", containsString("Malta"))
                .body("[138].'numericCode'", containsString("470"))
                .body("[138].'currencies'.size()", equalTo(1))
                .body("[138].'currencies'", hasItems("EUR"))
                .body("[138].'languages'.size()", equalTo(2))
                .body("[138].'languages'", hasItems("mt", "en"))
                .body("[138].'translations'.'de'", containsString("Malta"))
                .body("[138].'translations'.'es'", containsString("Malta"))
                .body("[138].'translations'.'fr'", containsString("Malte"))
                .body("[138].'translations'.'ja'", containsString("マルタ"))
                .body("[138].'translations'.'it'", containsString("Malta"))
                .body("[138].'relevance'", containsString("0"))
                .body("[139].'name'", containsString("Marshall Islands"))
                .body("[139].'topLevelDomain'.size()", equalTo(1))
                .body("[139].'topLevelDomain'", hasItems(".mh"))
                .body("[139].'alpha2Code'", containsString("MH"))
                .body("[139].'alpha3Code'", containsString("MHL"))
                .body("[139].'callingCodes'.size()", equalTo(1))
                .body("[139].'callingCodes'", hasItems("692"))
                .body("[139].'capital'", containsString("Majuro"))
                .body("[139].'altSpellings'.size()", equalTo(3))
                .body("[139].'altSpellings'", hasItems("MH", "Republic of the Marshall Islands", "Aolepān Aorōkin M̧ajeļ"))
                .body("[139].'region'", containsString("Oceania"))
                .body("[139].'subregion'", containsString("Micronesia"))
                .body("[139].'population'", numberMatches(56086.0))
                .body("[139].'latlng'.size()", equalTo(2))
                .body("[139].'latlng'[0]", numberMatches(9.0))
                .body("[139].'latlng'[1]", numberMatches(168.0))
                .body("[139].'demonym'", containsString("Marshallese"))
                .body("[139].'area'", numberMatches(181.0))
                .body("[139].'gini'", nullValue())
                .body("[139].'timezones'.size()", equalTo(1))
                .body("[139].'timezones'", hasItems("UTC+12:00"))
                .body("[139].'borders'.size()", equalTo(0))
                .body("[139].'nativeName'", containsString("M̧ajeļ"))
                .body("[139].'numericCode'", containsString("584"))
                .body("[139].'currencies'.size()", equalTo(1))
                .body("[139].'currencies'", hasItems("USD"))
                .body("[139].'languages'.size()", equalTo(2))
                .body("[139].'languages'", hasItems("en", "mh"))
                .body("[139].'translations'.'de'", containsString("Marshallinseln"))
                .body("[139].'translations'.'es'", containsString("Islas Marshall"))
                .body("[139].'translations'.'fr'", containsString("Îles Marshall"))
                .body("[139].'translations'.'ja'", containsString("マーシャル諸島"))
                .body("[139].'translations'.'it'", containsString("Isole Marshall"))
                .body("[139].'relevance'", containsString("0.5"))
                .body("[140].'name'", containsString("Martinique"))
                .body("[140].'topLevelDomain'.size()", equalTo(1))
                .body("[140].'topLevelDomain'", hasItems(".mq"))
                .body("[140].'alpha2Code'", containsString("MQ"))
                .body("[140].'alpha3Code'", containsString("MTQ"))
                .body("[140].'callingCodes'.size()", equalTo(1))
                .body("[140].'callingCodes'", hasItems("596"))
                .body("[140].'capital'", containsString("Fort-de-France"))
                .body("[140].'altSpellings'.size()", equalTo(1))
                .body("[140].'altSpellings'", hasItems("MQ"))
                .body("[140].'region'", containsString("Americas"))
                .body("[140].'subregion'", containsString("Caribbean"))
                .body("[140].'population'", numberMatches(381326.0))
                .body("[140].'latlng'.size()", equalTo(2))
                .body("[140].'latlng'[0]", numberMatches(14.666667))
                .body("[140].'latlng'[1]", numberMatches(-61.0))
                .body("[140].'demonym'", containsString("French"))
                .body("[140].'area'", nullValue())
                .body("[140].'gini'", nullValue())
                .body("[140].'timezones'.size()", equalTo(1))
                .body("[140].'timezones'", hasItems("UTC-04:00"))
                .body("[140].'borders'.size()", equalTo(0))
                .body("[140].'nativeName'", containsString("Martinique"))
                .body("[140].'numericCode'", containsString("474"))
                .body("[140].'currencies'.size()", equalTo(1))
                .body("[140].'currencies'", hasItems("EUR"))
                .body("[140].'languages'.size()", equalTo(1))
                .body("[140].'languages'", hasItems("fr"))
                .body("[140].'translations'.'de'", containsString("Martinique"))
                .body("[140].'translations'.'es'", containsString("Martinica"))
                .body("[140].'translations'.'fr'", containsString("Martinique"))
                .body("[140].'translations'.'ja'", containsString("マルティニーク"))
                .body("[140].'translations'.'it'", containsString("Martinica"))
                .body("[140].'relevance'", containsString("0"))
                .body("[141].'name'", containsString("Mauritania"))
                .body("[141].'topLevelDomain'.size()", equalTo(1))
                .body("[141].'topLevelDomain'", hasItems(".mr"))
                .body("[141].'alpha2Code'", containsString("MR"))
                .body("[141].'alpha3Code'", containsString("MRT"))
                .body("[141].'callingCodes'.size()", equalTo(1))
                .body("[141].'callingCodes'", hasItems("222"))
                .body("[141].'capital'", containsString("Nouakchott"))
                .body("[141].'altSpellings'.size()", equalTo(3))
                .body("[141].'altSpellings'", hasItems("MR", "Islamic Republic of Mauritania", "al-Jumhūriyyah al-ʾIslāmiyyah al-Mūrītāniyyah"))
                .body("[141].'region'", containsString("Africa"))
                .body("[141].'subregion'", containsString("Western Africa"))
                .body("[141].'population'", numberMatches(3631775.0))
                .body("[141].'latlng'.size()", equalTo(2))
                .body("[141].'latlng'[0]", numberMatches(20.0))
                .body("[141].'latlng'[1]", numberMatches(-12.0))
                .body("[141].'demonym'", containsString("Mauritanian"))
                .body("[141].'area'", numberMatches(1030700.0))
                .body("[141].'gini'", numberMatches(40.5))
                .body("[141].'timezones'.size()", equalTo(1))
                .body("[141].'timezones'", hasItems("UTC"))
                .body("[141].'borders'.size()", equalTo(4))
                .body("[141].'borders'", hasItems("DZA", "MLI", "SEN", "ESH"))
                .body("[141].'nativeName'", containsString("موريتانيا"))
                .body("[141].'numericCode'", containsString("478"))
                .body("[141].'currencies'.size()", equalTo(1))
                .body("[141].'currencies'", hasItems("MRO"))
                .body("[141].'languages'.size()", equalTo(1))
                .body("[141].'languages'", hasItems("ar"))
                .body("[141].'translations'.'de'", containsString("Mauretanien"))
                .body("[141].'translations'.'es'", containsString("Mauritania"))
                .body("[141].'translations'.'fr'", containsString("Mauritanie"))
                .body("[141].'translations'.'ja'", containsString("モーリタニア"))
                .body("[141].'translations'.'it'", containsString("Mauritania"))
                .body("[141].'relevance'", containsString("0"))
                .body("[142].'name'", containsString("Mauritius"))
                .body("[142].'topLevelDomain'.size()", equalTo(1))
                .body("[142].'topLevelDomain'", hasItems(".mu"))
                .body("[142].'alpha2Code'", containsString("MU"))
                .body("[142].'alpha3Code'", containsString("MUS"))
                .body("[142].'callingCodes'.size()", equalTo(1))
                .body("[142].'callingCodes'", hasItems("230"))
                .body("[142].'capital'", containsString("Port Louis"))
                .body("[142].'altSpellings'.size()", equalTo(3))
                .body("[142].'altSpellings'", hasItems("MU", "Republic of Mauritius", "République de Maurice"))
                .body("[142].'region'", containsString("Africa"))
                .body("[142].'subregion'", containsString("Eastern Africa"))
                .body("[142].'population'", numberMatches(1261208.0))
                .body("[142].'latlng'.size()", equalTo(2))
                .body("[142].'latlng'[0]", numberMatches(-20.28333333))
                .body("[142].'latlng'[1]", numberMatches(57.55))
                .body("[142].'demonym'", containsString("Mauritian"))
                .body("[142].'area'", numberMatches(2040.0))
                .body("[142].'gini'", nullValue())
                .body("[142].'timezones'.size()", equalTo(1))
                .body("[142].'timezones'", hasItems("UTC+04:00"))
                .body("[142].'borders'.size()", equalTo(0))
                .body("[142].'nativeName'", containsString("Maurice"))
                .body("[142].'numericCode'", containsString("480"))
                .body("[142].'currencies'.size()", equalTo(1))
                .body("[142].'currencies'", hasItems("MUR"))
                .body("[142].'languages'.size()", equalTo(1))
                .body("[142].'languages'", hasItems("en"))
                .body("[142].'translations'.'de'", containsString("Mauritius"))
                .body("[142].'translations'.'es'", containsString("Mauricio"))
                .body("[142].'translations'.'fr'", containsString("Île Maurice"))
                .body("[142].'translations'.'ja'", containsString("モーリシャス"))
                .body("[142].'translations'.'it'", containsString("Mauritius"))
                .body("[142].'relevance'", containsString("0"))
                .body("[143].'name'", containsString("Mayotte"))
                .body("[143].'topLevelDomain'.size()", equalTo(1))
                .body("[143].'topLevelDomain'", hasItems(".yt"))
                .body("[143].'alpha2Code'", containsString("YT"))
                .body("[143].'alpha3Code'", containsString("MYT"))
                .body("[143].'callingCodes'.size()", equalTo(1))
                .body("[143].'callingCodes'", hasItems("262"))
                .body("[143].'capital'", containsString("Mamoudzou"))
                .body("[143].'altSpellings'.size()", equalTo(3))
                .body("[143].'altSpellings'", hasItems("YT", "Department of Mayotte", "Département de Mayotte"))
                .body("[143].'region'", containsString("Africa"))
                .body("[143].'subregion'", containsString("Eastern Africa"))
                .body("[143].'population'", numberMatches(212645.0))
                .body("[143].'latlng'.size()", equalTo(2))
                .body("[143].'latlng'[0]", numberMatches(-12.83333333))
                .body("[143].'latlng'[1]", numberMatches(45.16666666))
                .body("[143].'demonym'", containsString("French"))
                .body("[143].'area'", nullValue())
                .body("[143].'gini'", nullValue())
                .body("[143].'timezones'.size()", equalTo(1))
                .body("[143].'timezones'", hasItems("UTC+03:00"))
                .body("[143].'borders'.size()", equalTo(0))
                .body("[143].'nativeName'", containsString("Mayotte"))
                .body("[143].'numericCode'", containsString("175"))
                .body("[143].'currencies'.size()", equalTo(1))
                .body("[143].'currencies'", hasItems("EUR"))
                .body("[143].'languages'.size()", equalTo(1))
                .body("[143].'languages'", hasItems("fr"))
                .body("[143].'translations'.'de'", containsString("Mayotte"))
                .body("[143].'translations'.'es'", containsString("Mayotte"))
                .body("[143].'translations'.'fr'", containsString("Mayotte"))
                .body("[143].'translations'.'ja'", containsString("マヨット"))
                .body("[143].'translations'.'it'", containsString("Mayotte"))
                .body("[143].'relevance'", containsString("0"))
                .body("[144].'name'", containsString("Mexico"))
                .body("[144].'topLevelDomain'.size()", equalTo(1))
                .body("[144].'topLevelDomain'", hasItems(".mx"))
                .body("[144].'alpha2Code'", containsString("MX"))
                .body("[144].'alpha3Code'", containsString("MEX"))
                .body("[144].'callingCodes'.size()", equalTo(1))
                .body("[144].'callingCodes'", hasItems("52"))
                .body("[144].'capital'", containsString("Mexico City"))
                .body("[144].'altSpellings'.size()", equalTo(4))
                .body("[144].'altSpellings'", hasItems("MX", "Mexicanos", "United Mexican States", "Estados Unidos Mexicanos"))
                .body("[144].'region'", containsString("Americas"))
                .body("[144].'subregion'", containsString("Central America"))
                .body("[144].'population'", numberMatches(1.2174E8))
                .body("[144].'latlng'.size()", equalTo(2))
                .body("[144].'latlng'[0]", numberMatches(23.0))
                .body("[144].'latlng'[1]", numberMatches(-102.0))
                .body("[144].'demonym'", containsString("Mexican"))
                .body("[144].'area'", numberMatches(1964375.0))
                .body("[144].'gini'", numberMatches(47.0))
                .body("[144].'timezones'.size()", equalTo(3))
                .body("[144].'timezones'", hasItems("UTC-08:00", "UTC-07:00", "UTC-06:00"))
                .body("[144].'borders'.size()", equalTo(3))
                .body("[144].'borders'", hasItems("BLZ", "GTM", "USA"))
                .body("[144].'nativeName'", containsString("México"))
                .body("[144].'numericCode'", containsString("484"))
                .body("[144].'currencies'.size()", equalTo(1))
                .body("[144].'currencies'", hasItems("MXN"))
                .body("[144].'languages'.size()", equalTo(1))
                .body("[144].'languages'", hasItems("es"))
                .body("[144].'translations'.'de'", containsString("Mexiko"))
                .body("[144].'translations'.'es'", containsString("México"))
                .body("[144].'translations'.'fr'", containsString("Mexique"))
                .body("[144].'translations'.'ja'", containsString("メキシコ"))
                .body("[144].'translations'.'it'", containsString("Messico"))
                .body("[144].'relevance'", containsString("1.5"))
                .body("[145].'name'", containsString("Federated States of Micronesia"))
                .body("[145].'topLevelDomain'.size()", equalTo(1))
                .body("[145].'topLevelDomain'", hasItems(".fm"))
                .body("[145].'alpha2Code'", containsString("FM"))
                .body("[145].'alpha3Code'", containsString("FSM"))
                .body("[145].'callingCodes'.size()", equalTo(1))
                .body("[145].'callingCodes'", hasItems("691"))
                .body("[145].'capital'", containsString("Palikir"))
                .body("[145].'altSpellings'.size()", equalTo(2))
                .body("[145].'altSpellings'", hasItems("FM", "Federated States of Micronesia"))
                .body("[145].'region'", containsString("Oceania"))
                .body("[145].'subregion'", containsString("Micronesia"))
                .body("[145].'population'", numberMatches(101351.0))
                .body("[145].'latlng'.size()", equalTo(2))
                .body("[145].'latlng'[0]", numberMatches(6.91666666))
                .body("[145].'latlng'[1]", numberMatches(158.25))
                .body("[145].'demonym'", containsString("Micronesian"))
                .body("[145].'area'", numberMatches(702.0))
                .body("[145].'gini'", nullValue())
                .body("[145].'timezones'.size()", equalTo(2))
                .body("[145].'timezones'", hasItems("UTC+10:00", "UTC+11"))
                .body("[145].'borders'.size()", equalTo(0))
                .body("[145].'nativeName'", containsString("Micronesia"))
                .body("[145].'numericCode'", containsString("583"))
                .body("[145].'currencies'.size()", equalTo(1))
                .body("[145].'currencies'", hasItems("USD"))
                .body("[145].'languages'.size()", equalTo(1))
                .body("[145].'languages'", hasItems("en"))
                .body("[145].'translations'.'de'", containsString("Mikronesien"))
                .body("[145].'translations'.'es'", containsString("Micronesia"))
                .body("[145].'translations'.'fr'", containsString("Micronésie"))
                .body("[145].'translations'.'ja'", containsString("ミクロネシア連邦"))
                .body("[145].'translations'.'it'", containsString("Micronesia"))
                .body("[145].'relevance'", containsString("0"))
                .body("[146].'name'", containsString("Moldova"))
                .body("[146].'topLevelDomain'.size()", equalTo(1))
                .body("[146].'topLevelDomain'", hasItems(".md"))
                .body("[146].'alpha2Code'", containsString("MD"))
                .body("[146].'alpha3Code'", containsString("MDA"))
                .body("[146].'callingCodes'.size()", equalTo(1))
                .body("[146].'callingCodes'", hasItems("373"))
                .body("[146].'capital'", containsString("Chișinău"))
                .body("[146].'altSpellings'.size()", equalTo(3))
                .body("[146].'altSpellings'", hasItems("MD", "Republic of Moldova", "Republica Moldova"))
                .body("[146].'region'", containsString("Europe"))
                .body("[146].'subregion'", containsString("Eastern Europe"))
                .body("[146].'population'", numberMatches(3555200.0))
                .body("[146].'latlng'.size()", equalTo(2))
                .body("[146].'latlng'[0]", numberMatches(47.0))
                .body("[146].'latlng'[1]", numberMatches(29.0))
                .body("[146].'demonym'", containsString("Moldovan"))
                .body("[146].'area'", numberMatches(33846.0))
                .body("[146].'gini'", numberMatches(33.0))
                .body("[146].'timezones'.size()", equalTo(1))
                .body("[146].'timezones'", hasItems("UTC+02:00"))
                .body("[146].'borders'.size()", equalTo(2))
                .body("[146].'borders'", hasItems("ROU", "UKR"))
                .body("[146].'nativeName'", containsString("Moldova"))
                .body("[146].'numericCode'", containsString("498"))
                .body("[146].'currencies'.size()", equalTo(1))
                .body("[146].'currencies'", hasItems("MDL"))
                .body("[146].'languages'.size()", equalTo(1))
                .body("[146].'languages'", hasItems("ro"))
                .body("[146].'translations'.'de'", containsString("Moldawie"))
                .body("[146].'translations'.'es'", containsString("Moldavia"))
                .body("[146].'translations'.'fr'", containsString("Moldavie"))
                .body("[146].'translations'.'ja'", containsString("モルドバ共和国"))
                .body("[146].'translations'.'it'", containsString("Moldavia"))
                .body("[146].'relevance'", containsString("0"))
                .body("[147].'name'", containsString("Monaco"))
                .body("[147].'topLevelDomain'.size()", equalTo(1))
                .body("[147].'topLevelDomain'", hasItems(".mc"))
                .body("[147].'alpha2Code'", containsString("MC"))
                .body("[147].'alpha3Code'", containsString("MCO"))
                .body("[147].'callingCodes'.size()", equalTo(1))
                .body("[147].'callingCodes'", hasItems("377"))
                .body("[147].'capital'", containsString("Monaco"))
                .body("[147].'altSpellings'.size()", equalTo(3))
                .body("[147].'altSpellings'", hasItems("MC", "Principality of Monaco", "Principauté de Monaco"))
                .body("[147].'region'", containsString("Europe"))
                .body("[147].'subregion'", containsString("Western Europe"))
                .body("[147].'population'", numberMatches(37800.0))
                .body("[147].'latlng'.size()", equalTo(2))
                .body("[147].'latlng'[0]", numberMatches(43.73333333))
                .body("[147].'latlng'[1]", numberMatches(7.4))
                .body("[147].'demonym'", containsString("Monegasque"))
                .body("[147].'area'", numberMatches(2.02))
                .body("[147].'gini'", nullValue())
                .body("[147].'timezones'.size()", equalTo(1))
                .body("[147].'timezones'", hasItems("UTC+01:00"))
                .body("[147].'borders'.size()", equalTo(1))
                .body("[147].'borders'", hasItems("FRA"))
                .body("[147].'nativeName'", containsString("Monaco"))
                .body("[147].'numericCode'", containsString("492"))
                .body("[147].'currencies'.size()", equalTo(1))
                .body("[147].'currencies'", hasItems("EUR"))
                .body("[147].'languages'.size()", equalTo(1))
                .body("[147].'languages'", hasItems("fr"))
                .body("[147].'translations'.'de'", containsString("Monaco"))
                .body("[147].'translations'.'es'", containsString("Mónaco"))
                .body("[147].'translations'.'fr'", containsString("Monaco"))
                .body("[147].'translations'.'ja'", containsString("モナコ"))
                .body("[147].'translations'.'it'", containsString("Principato di Monaco"))
                .body("[147].'relevance'", containsString("0"))
                .body("[148].'name'", containsString("Mongolia"))
                .body("[148].'topLevelDomain'.size()", equalTo(1))
                .body("[148].'topLevelDomain'", hasItems(".mn"))
                .body("[148].'alpha2Code'", containsString("MN"))
                .body("[148].'alpha3Code'", containsString("MNG"))
                .body("[148].'callingCodes'.size()", equalTo(1))
                .body("[148].'callingCodes'", hasItems("976"))
                .body("[148].'capital'", containsString("Ulan Bator"))
                .body("[148].'altSpellings'.size()", equalTo(1))
                .body("[148].'altSpellings'", hasItems("MN"))
                .body("[148].'region'", containsString("Asia"))
                .body("[148].'subregion'", containsString("Eastern Asia"))
                .body("[148].'population'", numberMatches(3031099.0))
                .body("[148].'latlng'.size()", equalTo(2))
                .body("[148].'latlng'[0]", numberMatches(46.0))
                .body("[148].'latlng'[1]", numberMatches(105.0))
                .body("[148].'demonym'", containsString("Mongolian"))
                .body("[148].'area'", numberMatches(1564110.0))
                .body("[148].'gini'", numberMatches(36.5))
                .body("[148].'timezones'.size()", equalTo(2))
                .body("[148].'timezones'", hasItems("UTC+07:00", "UTC+08:00"))
                .body("[148].'borders'.size()", equalTo(2))
                .body("[148].'borders'", hasItems("CHN", "RUS"))
                .body("[148].'nativeName'", containsString("Монгол улс"))
                .body("[148].'numericCode'", containsString("496"))
                .body("[148].'currencies'.size()", equalTo(1))
                .body("[148].'currencies'", hasItems("MNT"))
                .body("[148].'languages'.size()", equalTo(1))
                .body("[148].'languages'", hasItems("mn"))
                .body("[148].'translations'.'de'", containsString("Mongolei"))
                .body("[148].'translations'.'es'", containsString("Mongolia"))
                .body("[148].'translations'.'fr'", containsString("Mongolie"))
                .body("[148].'translations'.'ja'", containsString("モンゴル"))
                .body("[148].'translations'.'it'", containsString("Mongolia"))
                .body("[148].'relevance'", containsString("0"))
                .body("[149].'name'", containsString("Montenegro"))
                .body("[149].'topLevelDomain'.size()", equalTo(1))
                .body("[149].'topLevelDomain'", hasItems(".me"))
                .body("[149].'alpha2Code'", containsString("ME"))
                .body("[149].'alpha3Code'", containsString("MNE"))
                .body("[149].'callingCodes'.size()", equalTo(1))
                .body("[149].'callingCodes'", hasItems("382"))
                .body("[149].'capital'", containsString("Podgorica"))
                .body("[149].'altSpellings'.size()", equalTo(2))
                .body("[149].'altSpellings'", hasItems("ME", "Crna Gora"))
                .body("[149].'region'", containsString("Europe"))
                .body("[149].'subregion'", containsString("Southern Europe"))
                .body("[149].'population'", numberMatches(621207.0))
                .body("[149].'latlng'.size()", equalTo(2))
                .body("[149].'latlng'[0]", numberMatches(42.5))
                .body("[149].'latlng'[1]", numberMatches(19.3))
                .body("[149].'demonym'", containsString("Montenegrin"))
                .body("[149].'area'", numberMatches(13812.0))
                .body("[149].'gini'", numberMatches(30.0))
                .body("[149].'timezones'.size()", equalTo(1))
                .body("[149].'timezones'", hasItems("UTC+01:00"))
                .body("[149].'borders'.size()", equalTo(5))
                .body("[149].'borders'", hasItems("ALB", "BIH", "HRV", "KOS", "SRB"))
                .body("[149].'nativeName'", containsString("Црна Гора"))
                .body("[149].'numericCode'", containsString("499"))
                .body("[149].'currencies'.size()", equalTo(1))
                .body("[149].'currencies'", hasItems("EUR"))
                .body("[149].'languages'.size()", equalTo(4))
                .body("[149].'languages'", hasItems("sr", "bs", "sq", "hr"))
                .body("[149].'translations'.'de'", containsString("Montenegro"))
                .body("[149].'translations'.'es'", containsString("Montenegro"))
                .body("[149].'translations'.'fr'", containsString("Monténégro"))
                .body("[149].'translations'.'ja'", containsString("モンテネグロ"))
                .body("[149].'translations'.'it'", containsString("Montenegro"))
                .body("[149].'relevance'", containsString("0"))
                .body("[150].'name'", containsString("Montserrat"))
                .body("[150].'topLevelDomain'.size()", equalTo(1))
                .body("[150].'topLevelDomain'", hasItems(".ms"))
                .body("[150].'alpha2Code'", containsString("MS"))
                .body("[150].'alpha3Code'", containsString("MSR"))
                .body("[150].'callingCodes'.size()", equalTo(1))
                .body("[150].'callingCodes'", hasItems("1"))
                .body("[150].'capital'", containsString("Plymouth"))
                .body("[150].'altSpellings'.size()", equalTo(1))
                .body("[150].'altSpellings'", hasItems("MS"))
                .body("[150].'region'", containsString("Americas"))
                .body("[150].'subregion'", containsString("Caribbean"))
                .body("[150].'population'", numberMatches(4922.0))
                .body("[150].'latlng'.size()", equalTo(2))
                .body("[150].'latlng'[0]", numberMatches(16.75))
                .body("[150].'latlng'[1]", numberMatches(-62.2))
                .body("[150].'demonym'", containsString("Montserratian"))
                .body("[150].'area'", numberMatches(102.0))
                .body("[150].'gini'", nullValue())
                .body("[150].'timezones'.size()", equalTo(1))
                .body("[150].'timezones'", hasItems("UTC-04:00"))
                .body("[150].'borders'.size()", equalTo(0))
                .body("[150].'nativeName'", containsString("Montserrat"))
                .body("[150].'numericCode'", containsString("500"))
                .body("[150].'currencies'.size()", equalTo(1))
                .body("[150].'currencies'", hasItems("XCD"))
                .body("[150].'languages'.size()", equalTo(1))
                .body("[150].'languages'", hasItems("en"))
                .body("[150].'translations'.'de'", containsString("Montserrat"))
                .body("[150].'translations'.'es'", containsString("Montserrat"))
                .body("[150].'translations'.'fr'", containsString("Montserrat"))
                .body("[150].'translations'.'ja'", containsString("モントセラト"))
                .body("[150].'translations'.'it'", containsString("Montserrat"))
                .body("[150].'relevance'", containsString("0.5"))
                .body("[151].'name'", containsString("Morocco"))
                .body("[151].'topLevelDomain'.size()", equalTo(1))
                .body("[151].'topLevelDomain'", hasItems(".ma"))
                .body("[151].'alpha2Code'", containsString("MA"))
                .body("[151].'alpha3Code'", containsString("MAR"))
                .body("[151].'callingCodes'.size()", equalTo(1))
                .body("[151].'callingCodes'", hasItems("212"))
                .body("[151].'capital'", containsString("Rabat"))
                .body("[151].'altSpellings'.size()", equalTo(3))
                .body("[151].'altSpellings'", hasItems("MA", "Kingdom of Morocco", "Al-Mamlakah al-Maġribiyah"))
                .body("[151].'region'", containsString("Africa"))
                .body("[151].'subregion'", containsString("Northern Africa"))
                .body("[151].'population'", numberMatches(3.3337529E7))
                .body("[151].'latlng'.size()", equalTo(2))
                .body("[151].'latlng'[0]", numberMatches(32.0))
                .body("[151].'latlng'[1]", numberMatches(-5.0))
                .body("[151].'demonym'", containsString("Moroccan"))
                .body("[151].'area'", numberMatches(446550.0))
                .body("[151].'gini'", numberMatches(40.9))
                .body("[151].'timezones'.size()", equalTo(1))
                .body("[151].'timezones'", hasItems("UTC"))
                .body("[151].'borders'.size()", equalTo(3))
                .body("[151].'borders'", hasItems("DZA", "ESH", "ESP"))
                .body("[151].'nativeName'", containsString("المغرب"))
                .body("[151].'numericCode'", containsString("504"))
                .body("[151].'currencies'.size()", equalTo(1))
                .body("[151].'currencies'", hasItems("MAD"))
                .body("[151].'languages'.size()", equalTo(1))
                .body("[151].'languages'", hasItems("ar"))
                .body("[151].'translations'.'de'", containsString("Marokko"))
                .body("[151].'translations'.'es'", containsString("Marruecos"))
                .body("[151].'translations'.'fr'", containsString("Maroc"))
                .body("[151].'translations'.'ja'", containsString("モロッコ"))
                .body("[151].'translations'.'it'", containsString("Marocco"))
                .body("[151].'relevance'", containsString("0"))
                .body("[152].'name'", containsString("Mozambique"))
                .body("[152].'topLevelDomain'.size()", equalTo(1))
                .body("[152].'topLevelDomain'", hasItems(".mz"))
                .body("[152].'alpha2Code'", containsString("MZ"))
                .body("[152].'alpha3Code'", containsString("MOZ"))
                .body("[152].'callingCodes'.size()", equalTo(1))
                .body("[152].'callingCodes'", hasItems("258"))
                .body("[152].'capital'", containsString("Maputo"))
                .body("[152].'altSpellings'.size()", equalTo(3))
                .body("[152].'altSpellings'", hasItems("MZ", "Republic of Mozambique", "República de Moçambique"))
                .body("[152].'region'", containsString("Africa"))
                .body("[152].'subregion'", containsString("Eastern Africa"))
                .body("[152].'population'", numberMatches(2.5727911E7))
                .body("[152].'latlng'.size()", equalTo(2))
                .body("[152].'latlng'[0]", numberMatches(-18.25))
                .body("[152].'latlng'[1]", numberMatches(35.0))
                .body("[152].'demonym'", containsString("Mozambican"))
                .body("[152].'area'", numberMatches(801590.0))
                .body("[152].'gini'", numberMatches(45.7))
                .body("[152].'timezones'.size()", equalTo(1))
                .body("[152].'timezones'", hasItems("UTC+02:00"))
                .body("[152].'borders'.size()", equalTo(6))
                .body("[152].'borders'", hasItems("MWI", "ZAF", "SWZ", "TZA", "ZMB", "ZWE"))
                .body("[152].'nativeName'", containsString("Moçambique"))
                .body("[152].'numericCode'", containsString("508"))
                .body("[152].'currencies'.size()", equalTo(1))
                .body("[152].'currencies'", hasItems("MZN"))
                .body("[152].'languages'.size()", equalTo(1))
                .body("[152].'languages'", hasItems("pt"))
                .body("[152].'translations'.'de'", containsString("Mosambik"))
                .body("[152].'translations'.'es'", containsString("Mozambique"))
                .body("[152].'translations'.'fr'", containsString("Mozambique"))
                .body("[152].'translations'.'ja'", containsString("モザンビーク"))
                .body("[152].'translations'.'it'", containsString("Mozambico"))
                .body("[152].'relevance'", containsString("0"))
                .body("[153].'name'", containsString("Myanmar"))
                .body("[153].'topLevelDomain'.size()", equalTo(1))
                .body("[153].'topLevelDomain'", hasItems(".mm"))
                .body("[153].'alpha2Code'", containsString("MM"))
                .body("[153].'alpha3Code'", containsString("MMR"))
                .body("[153].'callingCodes'.size()", equalTo(1))
                .body("[153].'callingCodes'", hasItems("95"))
                .body("[153].'capital'", containsString("Naypyidaw"))
                .body("[153].'altSpellings'.size()", equalTo(4))
                .body("[153].'altSpellings'", hasItems("MM", "Burma", "Republic of the Union of Myanmar", "Pyidaunzu Thanmăda Myăma Nainngandaw"))
                .body("[153].'region'", containsString("Asia"))
                .body("[153].'subregion'", containsString("South-Eastern Asia"))
                .body("[153].'population'", numberMatches(5.3897E7))
                .body("[153].'latlng'.size()", equalTo(2))
                .body("[153].'latlng'[0]", numberMatches(22.0))
                .body("[153].'latlng'[1]", numberMatches(98.0))
                .body("[153].'demonym'", containsString("Burmese"))
                .body("[153].'area'", numberMatches(676578.0))
                .body("[153].'gini'", nullValue())
                .body("[153].'timezones'.size()", equalTo(1))
                .body("[153].'timezones'", hasItems("UTC+06:30"))
                .body("[153].'borders'.size()", equalTo(5))
                .body("[153].'borders'", hasItems("BGD", "CHN", "IND", "LAO", "THA"))
                .body("[153].'nativeName'", containsString("Myanma"))
                .body("[153].'numericCode'", containsString("104"))
                .body("[153].'currencies'.size()", equalTo(1))
                .body("[153].'currencies'", hasItems("MMK"))
                .body("[153].'languages'.size()", equalTo(1))
                .body("[153].'languages'", hasItems("my"))
                .body("[153].'translations'.'de'", containsString("Myanmar"))
                .body("[153].'translations'.'es'", containsString("Myanmar"))
                .body("[153].'translations'.'fr'", containsString("Myanmar"))
                .body("[153].'translations'.'ja'", containsString("ミャンマー"))
                .body("[153].'translations'.'it'", containsString("Birmania"))
                .body("[153].'relevance'", containsString("0"))
                .body("[154].'name'", containsString("Namibia"))
                .body("[154].'topLevelDomain'.size()", equalTo(1))
                .body("[154].'topLevelDomain'", hasItems(".na"))
                .body("[154].'alpha2Code'", containsString("NA"))
                .body("[154].'alpha3Code'", containsString("NAM"))
                .body("[154].'callingCodes'.size()", equalTo(1))
                .body("[154].'callingCodes'", hasItems("264"))
                .body("[154].'capital'", containsString("Windhoek"))
                .body("[154].'altSpellings'.size()", equalTo(3))
                .body("[154].'altSpellings'", hasItems("NA", "Namibië", "Republic of Namibia"))
                .body("[154].'region'", containsString("Africa"))
                .body("[154].'subregion'", containsString("Southern Africa"))
                .body("[154].'population'", numberMatches(2280700.0))
                .body("[154].'latlng'.size()", equalTo(2))
                .body("[154].'latlng'[0]", numberMatches(-22.0))
                .body("[154].'latlng'[1]", numberMatches(17.0))
                .body("[154].'demonym'", containsString("Namibian"))
                .body("[154].'area'", numberMatches(825615.0))
                .body("[154].'gini'", numberMatches(63.9))
                .body("[154].'timezones'.size()", equalTo(1))
                .body("[154].'timezones'", hasItems("UTC+01:00"))
                .body("[154].'borders'.size()", equalTo(4))
                .body("[154].'borders'", hasItems("AGO", "BWA", "ZAF", "ZMB"))
                .body("[154].'nativeName'", containsString("Namibia"))
                .body("[154].'numericCode'", containsString("516"))
                .body("[154].'currencies'.size()", equalTo(2))
                .body("[154].'currencies'", hasItems("NAD", "ZAR"))
                .body("[154].'languages'.size()", equalTo(2))
                .body("[154].'languages'", hasItems("en", "af"))
                .body("[154].'translations'.'de'", containsString("Namibia"))
                .body("[154].'translations'.'es'", containsString("Namibia"))
                .body("[154].'translations'.'fr'", containsString("Namibie"))
                .body("[154].'translations'.'ja'", containsString("ナミビア"))
                .body("[154].'translations'.'it'", containsString("Namibia"))
                .body("[154].'relevance'", containsString("0"))
                .body("[155].'name'", containsString("Nauru"))
                .body("[155].'topLevelDomain'.size()", equalTo(1))
                .body("[155].'topLevelDomain'", hasItems(".nr"))
                .body("[155].'alpha2Code'", containsString("NR"))
                .body("[155].'alpha3Code'", containsString("NRU"))
                .body("[155].'callingCodes'.size()", equalTo(1))
                .body("[155].'callingCodes'", hasItems("674"))
                .body("[155].'capital'", containsString("Yaren"))
                .body("[155].'altSpellings'.size()", equalTo(5))
                .body("[155].'altSpellings'", hasItems("NR", "Naoero", "Pleasant Island", "Republic of Nauru", "Ripublik Naoero"))
                .body("[155].'region'", containsString("Oceania"))
                .body("[155].'subregion'", containsString("Micronesia"))
                .body("[155].'population'", numberMatches(10084.0))
                .body("[155].'latlng'.size()", equalTo(2))
                .body("[155].'latlng'[0]", numberMatches(-0.53333333))
                .body("[155].'latlng'[1]", numberMatches(166.91666666))
                .body("[155].'demonym'", containsString("Nauruan"))
                .body("[155].'area'", numberMatches(21.0))
                .body("[155].'gini'", nullValue())
                .body("[155].'timezones'.size()", equalTo(1))
                .body("[155].'timezones'", hasItems("UTC+12:00"))
                .body("[155].'borders'.size()", equalTo(0))
                .body("[155].'nativeName'", containsString("Nauru"))
                .body("[155].'numericCode'", containsString("520"))
                .body("[155].'currencies'.size()", equalTo(1))
                .body("[155].'currencies'", hasItems("AUD"))
                .body("[155].'languages'.size()", equalTo(2))
                .body("[155].'languages'", hasItems("en", "na"))
                .body("[155].'translations'.'de'", containsString("Nauru"))
                .body("[155].'translations'.'es'", containsString("Nauru"))
                .body("[155].'translations'.'fr'", containsString("Nauru"))
                .body("[155].'translations'.'ja'", containsString("ナウル"))
                .body("[155].'translations'.'it'", containsString("Nauru"))
                .body("[155].'relevance'", containsString("0.5"))
                .body("[156].'name'", containsString("Nepal"))
                .body("[156].'topLevelDomain'.size()", equalTo(1))
                .body("[156].'topLevelDomain'", hasItems(".np"))
                .body("[156].'alpha2Code'", containsString("NP"))
                .body("[156].'alpha3Code'", containsString("NPL"))
                .body("[156].'callingCodes'.size()", equalTo(1))
                .body("[156].'callingCodes'", hasItems("977"))
                .body("[156].'capital'", containsString("Kathmandu"))
                .body("[156].'altSpellings'.size()", equalTo(3))
                .body("[156].'altSpellings'", hasItems("NP", "Federal Democratic Republic of Nepal", "Loktāntrik Ganatantra Nepāl"))
                .body("[156].'region'", containsString("Asia"))
                .body("[156].'subregion'", containsString("Southern Asia"))
                .body("[156].'population'", numberMatches(2.8037904E7))
                .body("[156].'latlng'.size()", equalTo(2))
                .body("[156].'latlng'[0]", numberMatches(28.0))
                .body("[156].'latlng'[1]", numberMatches(84.0))
                .body("[156].'demonym'", containsString("Nepalese"))
                .body("[156].'area'", numberMatches(147181.0))
                .body("[156].'gini'", numberMatches(32.8))
                .body("[156].'timezones'.size()", equalTo(1))
                .body("[156].'timezones'", hasItems("UTC+05:45"))
                .body("[156].'borders'.size()", equalTo(2))
                .body("[156].'borders'", hasItems("CHN", "IND"))
                .body("[156].'nativeName'", containsString("नेपाल"))
                .body("[156].'numericCode'", containsString("524"))
                .body("[156].'currencies'.size()", equalTo(1))
                .body("[156].'currencies'", hasItems("NPR"))
                .body("[156].'languages'.size()", equalTo(1))
                .body("[156].'languages'", hasItems("ne"))
                .body("[156].'translations'.'de'", containsString("Népal"))
                .body("[156].'translations'.'es'", containsString("Nepal"))
                .body("[156].'translations'.'fr'", containsString("Népal"))
                .body("[156].'translations'.'ja'", containsString("ネパール"))
                .body("[156].'translations'.'it'", containsString("Nepal"))
                .body("[156].'relevance'", containsString("0"))
                .body("[157].'name'", containsString("Netherlands"))
                .body("[157].'topLevelDomain'.size()", equalTo(1))
                .body("[157].'topLevelDomain'", hasItems(".nl"))
                .body("[157].'alpha2Code'", containsString("NL"))
                .body("[157].'alpha3Code'", containsString("NLD"))
                .body("[157].'callingCodes'.size()", equalTo(1))
                .body("[157].'callingCodes'", hasItems("31"))
                .body("[157].'capital'", containsString("Amsterdam"))
                .body("[157].'altSpellings'.size()", equalTo(3))
                .body("[157].'altSpellings'", hasItems("NL", "Holland", "Nederland"))
                .body("[157].'region'", containsString("Europe"))
                .body("[157].'subregion'", containsString("Western Europe"))
                .body("[157].'population'", numberMatches(1.6916E7))
                .body("[157].'latlng'.size()", equalTo(2))
                .body("[157].'latlng'[0]", numberMatches(52.5))
                .body("[157].'latlng'[1]", numberMatches(5.75))
                .body("[157].'demonym'", containsString("Dutch"))
                .body("[157].'area'", numberMatches(41850.0))
                .body("[157].'gini'", numberMatches(30.9))
                .body("[157].'timezones'.size()", equalTo(2))
                .body("[157].'timezones'", hasItems("UTC-04:00", "UTC+01:00"))
                .body("[157].'borders'.size()", equalTo(2))
                .body("[157].'borders'", hasItems("BEL", "DEU"))
                .body("[157].'nativeName'", containsString("Nederland"))
                .body("[157].'numericCode'", containsString("528"))
                .body("[157].'currencies'.size()", equalTo(1))
                .body("[157].'currencies'", hasItems("EUR"))
                .body("[157].'languages'.size()", equalTo(1))
                .body("[157].'languages'", hasItems("nl"))
                .body("[157].'translations'.'de'", containsString("Niederlande"))
                .body("[157].'translations'.'es'", containsString("Países Bajos"))
                .body("[157].'translations'.'fr'", containsString("Pays-Bas"))
                .body("[157].'translations'.'ja'", containsString("オランダ"))
                .body("[157].'translations'.'it'", containsString("Paesi Bassi"))
                .body("[157].'relevance'", containsString("1.5"))
                .body("[158].'name'", containsString("New Caledonia"))
                .body("[158].'topLevelDomain'.size()", equalTo(1))
                .body("[158].'topLevelDomain'", hasItems(".nc"))
                .body("[158].'alpha2Code'", containsString("NC"))
                .body("[158].'alpha3Code'", containsString("NCL"))
                .body("[158].'callingCodes'.size()", equalTo(1))
                .body("[158].'callingCodes'", hasItems("687"))
                .body("[158].'capital'", containsString("Nouméa"))
                .body("[158].'altSpellings'.size()", equalTo(1))
                .body("[158].'altSpellings'", hasItems("NC"))
                .body("[158].'region'", containsString("Oceania"))
                .body("[158].'subregion'", containsString("Melanesia"))
                .body("[158].'population'", numberMatches(268767.0))
                .body("[158].'latlng'.size()", equalTo(2))
                .body("[158].'latlng'[0]", numberMatches(-21.5))
                .body("[158].'latlng'[1]", numberMatches(165.5))
                .body("[158].'demonym'", containsString("New Caledonian"))
                .body("[158].'area'", numberMatches(18575.0))
                .body("[158].'gini'", nullValue())
                .body("[158].'timezones'.size()", equalTo(1))
                .body("[158].'timezones'", hasItems("UTC+11:00"))
                .body("[158].'borders'.size()", equalTo(0))
                .body("[158].'nativeName'", containsString("Nouvelle-Calédonie"))
                .body("[158].'numericCode'", containsString("540"))
                .body("[158].'currencies'.size()", equalTo(1))
                .body("[158].'currencies'", hasItems("XPF"))
                .body("[158].'languages'.size()", equalTo(1))
                .body("[158].'languages'", hasItems("fr"))
                .body("[158].'translations'.'de'", containsString("Neukaledonien"))
                .body("[158].'translations'.'es'", containsString("Nueva Caledonia"))
                .body("[158].'translations'.'fr'", containsString("Nouvelle-Calédonie"))
                .body("[158].'translations'.'ja'", containsString("ニューカレドニア"))
                .body("[158].'translations'.'it'", containsString("Nuova Caledonia"))
                .body("[158].'relevance'", containsString("0.5"))
                .body("[159].'name'", containsString("New Zealand"))
                .body("[159].'topLevelDomain'.size()", equalTo(1))
                .body("[159].'topLevelDomain'", hasItems(".nz"))
                .body("[159].'alpha2Code'", containsString("NZ"))
                .body("[159].'alpha3Code'", containsString("NZL"))
                .body("[159].'callingCodes'.size()", equalTo(1))
                .body("[159].'callingCodes'", hasItems("64"))
                .body("[159].'capital'", containsString("Wellington"))
                .body("[159].'altSpellings'.size()", equalTo(2))
                .body("[159].'altSpellings'", hasItems("NZ", "Aotearoa"))
                .body("[159].'region'", containsString("Oceania"))
                .body("[159].'subregion'", containsString("Australia and New Zealand"))
                .body("[159].'population'", numberMatches(4609440.0))
                .body("[159].'latlng'.size()", equalTo(2))
                .body("[159].'latlng'[0]", numberMatches(-41.0))
                .body("[159].'latlng'[1]", numberMatches(174.0))
                .body("[159].'demonym'", containsString("New Zealander"))
                .body("[159].'area'", numberMatches(270467.0))
                .body("[159].'gini'", numberMatches(36.2))
                .body("[159].'timezones'.size()", equalTo(5))
                .body("[159].'timezones'", hasItems("UTC-11:00", "UTC-10:00", "UTC+12:00", "UTC+12:45", "UTC+13:00"))
                .body("[159].'borders'.size()", equalTo(0))
                .body("[159].'nativeName'", containsString("New Zealand"))
                .body("[159].'numericCode'", containsString("554"))
                .body("[159].'currencies'.size()", equalTo(1))
                .body("[159].'currencies'", hasItems("NZD"))
                .body("[159].'languages'.size()", equalTo(2))
                .body("[159].'languages'", hasItems("en", "mi"))
                .body("[159].'translations'.'de'", containsString("Neuseeland"))
                .body("[159].'translations'.'es'", containsString("Nueva Zelanda"))
                .body("[159].'translations'.'fr'", containsString("Nouvelle-Zélande"))
                .body("[159].'translations'.'ja'", containsString("ニュージーランド"))
                .body("[159].'translations'.'it'", containsString("Nuova Zelanda"))
                .body("[159].'relevance'", containsString("1.0"))
                .body("[160].'name'", containsString("Nicaragua"))
                .body("[160].'topLevelDomain'.size()", equalTo(1))
                .body("[160].'topLevelDomain'", hasItems(".ni"))
                .body("[160].'alpha2Code'", containsString("NI"))
                .body("[160].'alpha3Code'", containsString("NIC"))
                .body("[160].'callingCodes'.size()", equalTo(1))
                .body("[160].'callingCodes'", hasItems("505"))
                .body("[160].'capital'", containsString("Managua"))
                .body("[160].'altSpellings'.size()", equalTo(3))
                .body("[160].'altSpellings'", hasItems("NI", "Republic of Nicaragua", "República de Nicaragua"))
                .body("[160].'region'", containsString("Americas"))
                .body("[160].'subregion'", containsString("Central America"))
                .body("[160].'population'", numberMatches(6198154.0))
                .body("[160].'latlng'.size()", equalTo(2))
                .body("[160].'latlng'[0]", numberMatches(13.0))
                .body("[160].'latlng'[1]", numberMatches(-85.0))
                .body("[160].'demonym'", containsString("Nicaraguan"))
                .body("[160].'area'", numberMatches(130373.0))
                .body("[160].'gini'", numberMatches(40.5))
                .body("[160].'timezones'.size()", equalTo(1))
                .body("[160].'timezones'", hasItems("UTC-06:00"))
                .body("[160].'borders'.size()", equalTo(2))
                .body("[160].'borders'", hasItems("CRI", "HND"))
                .body("[160].'nativeName'", containsString("Nicaragua"))
                .body("[160].'numericCode'", containsString("558"))
                .body("[160].'currencies'.size()", equalTo(1))
                .body("[160].'currencies'", hasItems("NIO"))
                .body("[160].'languages'.size()", equalTo(1))
                .body("[160].'languages'", hasItems("es"))
                .body("[160].'translations'.'de'", containsString("Nicaragua"))
                .body("[160].'translations'.'es'", containsString("Nicaragua"))
                .body("[160].'translations'.'fr'", containsString("Nicaragua"))
                .body("[160].'translations'.'ja'", containsString("ニカラグア"))
                .body("[160].'translations'.'it'", containsString("Nicaragua"))
                .body("[160].'relevance'", containsString("0"))
                .body("[161].'name'", containsString("Niger"))
                .body("[161].'topLevelDomain'.size()", equalTo(1))
                .body("[161].'topLevelDomain'", hasItems(".ne"))
                .body("[161].'alpha2Code'", containsString("NE"))
                .body("[161].'alpha3Code'", containsString("NER"))
                .body("[161].'callingCodes'.size()", equalTo(1))
                .body("[161].'callingCodes'", hasItems("227"))
                .body("[161].'capital'", containsString("Niamey"))
                .body("[161].'altSpellings'.size()", equalTo(4))
                .body("[161].'altSpellings'", hasItems("NE", "Nijar", "Republic of Niger", "République du Niger"))
                .body("[161].'region'", containsString("Africa"))
                .body("[161].'subregion'", containsString("Western Africa"))
                .body("[161].'population'", numberMatches(1.9899E7))
                .body("[161].'latlng'.size()", equalTo(2))
                .body("[161].'latlng'[0]", numberMatches(16.0))
                .body("[161].'latlng'[1]", numberMatches(8.0))
                .body("[161].'demonym'", containsString("Nigerien"))
                .body("[161].'area'", numberMatches(1267000.0))
                .body("[161].'gini'", numberMatches(34.6))
                .body("[161].'timezones'.size()", equalTo(1))
                .body("[161].'timezones'", hasItems("UTC+01:00"))
                .body("[161].'borders'.size()", equalTo(7))
                .body("[161].'borders'", hasItems("DZA", "BEN", "BFA", "TCD", "LBY", "MLI", "NGA"))
                .body("[161].'nativeName'", containsString("Niger"))
                .body("[161].'numericCode'", containsString("562"))
                .body("[161].'currencies'.size()", equalTo(1))
                .body("[161].'currencies'", hasItems("XOF"))
                .body("[161].'languages'.size()", equalTo(1))
                .body("[161].'languages'", hasItems("fr"))
                .body("[161].'translations'.'de'", containsString("Niger"))
                .body("[161].'translations'.'es'", containsString("Níger"))
                .body("[161].'translations'.'fr'", containsString("Niger"))
                .body("[161].'translations'.'ja'", containsString("ニジェール"))
                .body("[161].'translations'.'it'", containsString("Niger"))
                .body("[161].'relevance'", containsString("0"))
                .body("[162].'name'", containsString("Nigeria"))
                .body("[162].'topLevelDomain'.size()", equalTo(1))
                .body("[162].'topLevelDomain'", hasItems(".ng"))
                .body("[162].'alpha2Code'", containsString("NG"))
                .body("[162].'alpha3Code'", containsString("NGA"))
                .body("[162].'callingCodes'.size()", equalTo(1))
                .body("[162].'callingCodes'", hasItems("234"))
                .body("[162].'capital'", containsString("Abuja"))
                .body("[162].'altSpellings'.size()", equalTo(4))
                .body("[162].'altSpellings'", hasItems("NG", "Nijeriya", "Naíjíríà", "Federal Republic of Nigeria"))
                .body("[162].'region'", containsString("Africa"))
                .body("[162].'subregion'", containsString("Western Africa"))
                .body("[162].'population'", numberMatches(1.82202E8))
                .body("[162].'latlng'.size()", equalTo(2))
                .body("[162].'latlng'[0]", numberMatches(10.0))
                .body("[162].'latlng'[1]", numberMatches(8.0))
                .body("[162].'demonym'", containsString("Nigerian"))
                .body("[162].'area'", numberMatches(923768.0))
                .body("[162].'gini'", numberMatches(48.8))
                .body("[162].'timezones'.size()", equalTo(1))
                .body("[162].'timezones'", hasItems("UTC+01:00"))
                .body("[162].'borders'.size()", equalTo(4))
                .body("[162].'borders'", hasItems("BEN", "CMR", "TCD", "NER"))
                .body("[162].'nativeName'", containsString("Nigeria"))
                .body("[162].'numericCode'", containsString("566"))
                .body("[162].'currencies'.size()", equalTo(1))
                .body("[162].'currencies'", hasItems("NGN"))
                .body("[162].'languages'.size()", equalTo(1))
                .body("[162].'languages'", hasItems("en"))
                .body("[162].'translations'.'de'", containsString("Nigeria"))
                .body("[162].'translations'.'es'", containsString("Nigeria"))
                .body("[162].'translations'.'fr'", containsString("Nigéria"))
                .body("[162].'translations'.'ja'", containsString("ナイジェリア"))
                .body("[162].'translations'.'it'", containsString("Nigeria"))
                .body("[162].'relevance'", containsString("1.5"))
                .body("[163].'name'", containsString("Niue"))
                .body("[163].'topLevelDomain'.size()", equalTo(1))
                .body("[163].'topLevelDomain'", hasItems(".nu"))
                .body("[163].'alpha2Code'", containsString("NU"))
                .body("[163].'alpha3Code'", containsString("NIU"))
                .body("[163].'callingCodes'.size()", equalTo(1))
                .body("[163].'callingCodes'", hasItems("683"))
                .body("[163].'capital'", containsString("Alofi"))
                .body("[163].'altSpellings'.size()", equalTo(1))
                .body("[163].'altSpellings'", hasItems("NU"))
                .body("[163].'region'", containsString("Oceania"))
                .body("[163].'subregion'", containsString("Polynesia"))
                .body("[163].'population'", numberMatches(1613.0))
                .body("[163].'latlng'.size()", equalTo(2))
                .body("[163].'latlng'[0]", numberMatches(-19.03333333))
                .body("[163].'latlng'[1]", numberMatches(-169.86666666))
                .body("[163].'demonym'", containsString("Niuean"))
                .body("[163].'area'", numberMatches(260.0))
                .body("[163].'gini'", nullValue())
                .body("[163].'timezones'.size()", equalTo(1))
                .body("[163].'timezones'", hasItems("UTC-11:00"))
                .body("[163].'borders'.size()", equalTo(0))
                .body("[163].'nativeName'", containsString("Niuē"))
                .body("[163].'numericCode'", containsString("570"))
                .body("[163].'currencies'.size()", equalTo(1))
                .body("[163].'currencies'", hasItems("NZD"))
                .body("[163].'languages'.size()", equalTo(1))
                .body("[163].'languages'", hasItems("en"))
                .body("[163].'translations'.'de'", containsString("Niue"))
                .body("[163].'translations'.'es'", containsString("Niue"))
                .body("[163].'translations'.'fr'", containsString("Niue"))
                .body("[163].'translations'.'ja'", containsString("ニウエ"))
                .body("[163].'translations'.'it'", containsString("Niue"))
                .body("[163].'relevance'", containsString("0.5"))
                .body("[164].'name'", containsString("Norfolk Island"))
                .body("[164].'topLevelDomain'.size()", equalTo(1))
                .body("[164].'topLevelDomain'", hasItems(".nf"))
                .body("[164].'alpha2Code'", containsString("NF"))
                .body("[164].'alpha3Code'", containsString("NFK"))
                .body("[164].'callingCodes'.size()", equalTo(1))
                .body("[164].'callingCodes'", hasItems("672"))
                .body("[164].'capital'", containsString("Kingston"))
                .body("[164].'altSpellings'.size()", equalTo(3))
                .body("[164].'altSpellings'", hasItems("NF", "Territory of Norfolk Island", "Teratri of Norf'k Ailen"))
                .body("[164].'region'", containsString("Oceania"))
                .body("[164].'subregion'", containsString("Australia and New Zealand"))
                .body("[164].'population'", numberMatches(2302.0))
                .body("[164].'latlng'.size()", equalTo(2))
                .body("[164].'latlng'[0]", numberMatches(-29.03333333))
                .body("[164].'latlng'[1]", numberMatches(167.95))
                .body("[164].'demonym'", containsString("Norfolk Islander"))
                .body("[164].'area'", numberMatches(36.0))
                .body("[164].'gini'", nullValue())
                .body("[164].'timezones'.size()", equalTo(1))
                .body("[164].'timezones'", hasItems("UTC+11:30"))
                .body("[164].'borders'.size()", equalTo(0))
                .body("[164].'nativeName'", containsString("Norfolk Island"))
                .body("[164].'numericCode'", containsString("574"))
                .body("[164].'currencies'.size()", equalTo(1))
                .body("[164].'currencies'", hasItems("AUD"))
                .body("[164].'languages'.size()", equalTo(1))
                .body("[164].'languages'", hasItems("en"))
                .body("[164].'translations'.'de'", containsString("Norfolkinsel"))
                .body("[164].'translations'.'es'", containsString("Isla de Norfolk"))
                .body("[164].'translations'.'fr'", containsString("Île de Norfolk"))
                .body("[164].'translations'.'ja'", containsString("ノーフォーク島"))
                .body("[164].'translations'.'it'", containsString("Isola Norfolk"))
                .body("[164].'relevance'", containsString("0.5"))
                .body("[165].'name'", containsString("North Korea"))
                .body("[165].'topLevelDomain'.size()", equalTo(1))
                .body("[165].'topLevelDomain'", hasItems(".kp"))
                .body("[165].'alpha2Code'", containsString("KP"))
                .body("[165].'alpha3Code'", containsString("PRK"))
                .body("[165].'callingCodes'.size()", equalTo(1))
                .body("[165].'callingCodes'", hasItems("850"))
                .body("[165].'capital'", containsString("Pyongyang"))
                .body("[165].'altSpellings'.size()", equalTo(4))
                .body("[165].'altSpellings'", hasItems("KP", "Democratic People's Republic of Korea", "조선민주주의인민공화국", "Chosŏn Minjujuŭi Inmin Konghwaguk"))
                .body("[165].'region'", containsString("Asia"))
                .body("[165].'subregion'", containsString("Eastern Asia"))
                .body("[165].'population'", numberMatches(2.5155E7))
                .body("[165].'latlng'.size()", equalTo(2))
                .body("[165].'latlng'[0]", numberMatches(40.0))
                .body("[165].'latlng'[1]", numberMatches(127.0))
                .body("[165].'demonym'", containsString("North Korean"))
                .body("[165].'area'", numberMatches(120538.0))
                .body("[165].'gini'", nullValue())
                .body("[165].'timezones'.size()", equalTo(1))
                .body("[165].'timezones'", hasItems("UTC+09:00"))
                .body("[165].'borders'.size()", equalTo(3))
                .body("[165].'borders'", hasItems("CHN", "KOR", "RUS"))
                .body("[165].'nativeName'", containsString("북한"))
                .body("[165].'numericCode'", containsString("408"))
                .body("[165].'currencies'.size()", equalTo(1))
                .body("[165].'currencies'", hasItems("KPW"))
                .body("[165].'languages'.size()", equalTo(1))
                .body("[165].'languages'", hasItems("ko"))
                .body("[165].'translations'.'de'", containsString("Nordkorea"))
                .body("[165].'translations'.'es'", containsString("Corea del Norte"))
                .body("[165].'translations'.'fr'", containsString("Corée du Nord"))
                .body("[165].'translations'.'ja'", containsString("朝鮮民主主義人民共和国"))
                .body("[165].'translations'.'it'", containsString("Corea del Nord"))
                .body("[165].'relevance'", containsString("0"))
                .body("[166].'name'", containsString("Northern Mariana Islands"))
                .body("[166].'topLevelDomain'.size()", equalTo(1))
                .body("[166].'topLevelDomain'", hasItems(".mp"))
                .body("[166].'alpha2Code'", containsString("MP"))
                .body("[166].'alpha3Code'", containsString("MNP"))
                .body("[166].'callingCodes'.size()", equalTo(1))
                .body("[166].'callingCodes'", hasItems("1"))
                .body("[166].'capital'", containsString("Saipan"))
                .body("[166].'altSpellings'.size()", equalTo(3))
                .body("[166].'altSpellings'", hasItems("MP", "Commonwealth of the Northern Mariana Islands", "Sankattan Siha Na Islas Mariånas"))
                .body("[166].'region'", containsString("Oceania"))
                .body("[166].'subregion'", containsString("Micronesia"))
                .body("[166].'population'", numberMatches(53883.0))
                .body("[166].'latlng'.size()", equalTo(2))
                .body("[166].'latlng'[0]", numberMatches(15.2))
                .body("[166].'latlng'[1]", numberMatches(145.75))
                .body("[166].'demonym'", containsString("American"))
                .body("[166].'area'", numberMatches(464.0))
                .body("[166].'gini'", nullValue())
                .body("[166].'timezones'.size()", equalTo(1))
                .body("[166].'timezones'", hasItems("UTC+10:00"))
                .body("[166].'borders'.size()", equalTo(0))
                .body("[166].'nativeName'", containsString("Northern Mariana Islands"))
                .body("[166].'numericCode'", containsString("580"))
                .body("[166].'currencies'.size()", equalTo(1))
                .body("[166].'currencies'", hasItems("USD"))
                .body("[166].'languages'.size()", equalTo(2))
                .body("[166].'languages'", hasItems("en", "ch"))
                .body("[166].'translations'.'de'", containsString("Nördliche Marianen"))
                .body("[166].'translations'.'es'", containsString("Islas Marianas del Norte"))
                .body("[166].'translations'.'fr'", containsString("Îles Mariannes du Nord"))
                .body("[166].'translations'.'ja'", containsString("北マリアナ諸島"))
                .body("[166].'translations'.'it'", containsString("Isole Marianne Settentrionali"))
                .body("[166].'relevance'", containsString("0.5"))
                .body("[167].'name'", containsString("Norway"))
                .body("[167].'topLevelDomain'.size()", equalTo(1))
                .body("[167].'topLevelDomain'", hasItems(".no"))
                .body("[167].'alpha2Code'", containsString("NO"))
                .body("[167].'alpha3Code'", containsString("NOR"))
                .body("[167].'callingCodes'.size()", equalTo(1))
                .body("[167].'callingCodes'", hasItems("47"))
                .body("[167].'capital'", containsString("Oslo"))
                .body("[167].'altSpellings'.size()", equalTo(6))
                .body("[167].'altSpellings'", hasItems("NO", "Norge", "Noreg", "Kingdom of Norway", "Kongeriket Norge", "Kongeriket Noreg"))
                .body("[167].'region'", containsString("Europe"))
                .body("[167].'subregion'", containsString("Northern Europe"))
                .body("[167].'population'", numberMatches(5176998.0))
                .body("[167].'latlng'.size()", equalTo(2))
                .body("[167].'latlng'[0]", numberMatches(62.0))
                .body("[167].'latlng'[1]", numberMatches(10.0))
                .body("[167].'demonym'", containsString("Norwegian"))
                .body("[167].'area'", numberMatches(323802.0))
                .body("[167].'gini'", numberMatches(25.8))
                .body("[167].'timezones'.size()", equalTo(1))
                .body("[167].'timezones'", hasItems("UTC+01:00"))
                .body("[167].'borders'.size()", equalTo(3))
                .body("[167].'borders'", hasItems("FIN", "SWE", "RUS"))
                .body("[167].'nativeName'", containsString("Norge"))
                .body("[167].'numericCode'", containsString("578"))
                .body("[167].'currencies'.size()", equalTo(1))
                .body("[167].'currencies'", hasItems("NOK"))
                .body("[167].'languages'.size()", equalTo(3))
                .body("[167].'languages'", hasItems("no", "nb", "nn"))
                .body("[167].'translations'.'de'", containsString("Norwegen"))
                .body("[167].'translations'.'es'", containsString("Noruega"))
                .body("[167].'translations'.'fr'", containsString("Norvège"))
                .body("[167].'translations'.'ja'", containsString("ノルウェー"))
                .body("[167].'translations'.'it'", containsString("Norvegia"))
                .body("[167].'relevance'", containsString("1.5"))
                .body("[168].'name'", containsString("Oman"))
                .body("[168].'topLevelDomain'.size()", equalTo(1))
                .body("[168].'topLevelDomain'", hasItems(".om"))
                .body("[168].'alpha2Code'", containsString("OM"))
                .body("[168].'alpha3Code'", containsString("OMN"))
                .body("[168].'callingCodes'.size()", equalTo(1))
                .body("[168].'callingCodes'", hasItems("968"))
                .body("[168].'capital'", containsString("Muscat"))
                .body("[168].'altSpellings'.size()", equalTo(3))
                .body("[168].'altSpellings'", hasItems("OM", "Sultanate of Oman", "Salṭanat ʻUmān"))
                .body("[168].'region'", containsString("Asia"))
                .body("[168].'subregion'", containsString("Western Asia"))
                .body("[168].'population'", numberMatches(4185440.0))
                .body("[168].'latlng'.size()", equalTo(2))
                .body("[168].'latlng'[0]", numberMatches(21.0))
                .body("[168].'latlng'[1]", numberMatches(57.0))
                .body("[168].'demonym'", containsString("Omani"))
                .body("[168].'area'", numberMatches(309500.0))
                .body("[168].'gini'", nullValue())
                .body("[168].'timezones'.size()", equalTo(1))
                .body("[168].'timezones'", hasItems("UTC+04:00"))
                .body("[168].'borders'.size()", equalTo(3))
                .body("[168].'borders'", hasItems("SAU", "ARE", "YEM"))
                .body("[168].'nativeName'", containsString("عمان"))
                .body("[168].'numericCode'", containsString("512"))
                .body("[168].'currencies'.size()", equalTo(1))
                .body("[168].'currencies'", hasItems("OMR"))
                .body("[168].'languages'.size()", equalTo(1))
                .body("[168].'languages'", hasItems("ar"))
                .body("[168].'translations'.'de'", containsString("Oman"))
                .body("[168].'translations'.'es'", containsString("Omán"))
                .body("[168].'translations'.'fr'", containsString("Oman"))
                .body("[168].'translations'.'ja'", containsString("オマーン"))
                .body("[168].'translations'.'it'", containsString("oman"))
                .body("[168].'relevance'", containsString("0"))
                .body("[169].'name'", containsString("Pakistan"))
                .body("[169].'topLevelDomain'.size()", equalTo(1))
                .body("[169].'topLevelDomain'", hasItems(".pk"))
                .body("[169].'alpha2Code'", containsString("PK"))
                .body("[169].'alpha3Code'", containsString("PAK"))
                .body("[169].'callingCodes'.size()", equalTo(1))
                .body("[169].'callingCodes'", hasItems("92"))
                .body("[169].'capital'", containsString("Islamabad"))
                .body("[169].'altSpellings'.size()", equalTo(4))
                .body("[169].'altSpellings'", hasItems("PK", "Pākistān", "Islamic Republic of Pakistan", "Islāmī Jumhūriya'eh Pākistān"))
                .body("[169].'region'", containsString("Asia"))
                .body("[169].'subregion'", containsString("Southern Asia"))
                .body("[169].'population'", numberMatches(1.90668E8))
                .body("[169].'latlng'.size()", equalTo(2))
                .body("[169].'latlng'[0]", numberMatches(30.0))
                .body("[169].'latlng'[1]", numberMatches(70.0))
                .body("[169].'demonym'", containsString("Pakistani"))
                .body("[169].'area'", numberMatches(881912.0))
                .body("[169].'gini'", numberMatches(30.0))
                .body("[169].'timezones'.size()", equalTo(1))
                .body("[169].'timezones'", hasItems("UTC+05:00"))
                .body("[169].'borders'.size()", equalTo(4))
                .body("[169].'borders'", hasItems("AFG", "CHN", "IND", "IRN"))
                .body("[169].'nativeName'", containsString("Pakistan"))
                .body("[169].'numericCode'", containsString("586"))
                .body("[169].'currencies'.size()", equalTo(1))
                .body("[169].'currencies'", hasItems("PKR"))
                .body("[169].'languages'.size()", equalTo(2))
                .body("[169].'languages'", hasItems("en", "ur"))
                .body("[169].'translations'.'de'", containsString("Pakistan"))
                .body("[169].'translations'.'es'", containsString("Pakistán"))
                .body("[169].'translations'.'fr'", containsString("Pakistan"))
                .body("[169].'translations'.'ja'", containsString("パキスタン"))
                .body("[169].'translations'.'it'", containsString("Pakistan"))
                .body("[169].'relevance'", containsString("2"))
                .body("[170].'name'", containsString("Palau"))
                .body("[170].'topLevelDomain'.size()", equalTo(1))
                .body("[170].'topLevelDomain'", hasItems(".pw"))
                .body("[170].'alpha2Code'", containsString("PW"))
                .body("[170].'alpha3Code'", containsString("PLW"))
                .body("[170].'callingCodes'.size()", equalTo(1))
                .body("[170].'callingCodes'", hasItems("680"))
                .body("[170].'capital'", containsString("Ngerulmud"))
                .body("[170].'altSpellings'.size()", equalTo(3))
                .body("[170].'altSpellings'", hasItems("PW", "Republic of Palau", "Beluu er a Belau"))
                .body("[170].'region'", containsString("Oceania"))
                .body("[170].'subregion'", containsString("Micronesia"))
                .body("[170].'population'", numberMatches(20901.0))
                .body("[170].'latlng'.size()", equalTo(2))
                .body("[170].'latlng'[0]", numberMatches(7.5))
                .body("[170].'latlng'[1]", numberMatches(134.5))
                .body("[170].'demonym'", containsString("Palauan"))
                .body("[170].'area'", numberMatches(459.0))
                .body("[170].'gini'", nullValue())
                .body("[170].'timezones'.size()", equalTo(1))
                .body("[170].'timezones'", hasItems("UTC+09:00"))
                .body("[170].'borders'.size()", equalTo(0))
                .body("[170].'nativeName'", containsString("Palau"))
                .body("[170].'numericCode'", containsString("585"))
                .body("[170].'currencies'.size()", equalTo(1))
                .body("[170].'currencies'", hasItems("USD"))
                .body("[170].'languages'.size()", equalTo(1))
                .body("[170].'languages'", hasItems("en"))
                .body("[170].'translations'.'de'", containsString("Palau"))
                .body("[170].'translations'.'es'", containsString("Palau"))
                .body("[170].'translations'.'fr'", containsString("Palaos"))
                .body("[170].'translations'.'ja'", containsString("パラオ"))
                .body("[170].'translations'.'it'", containsString("Palau"))
                .body("[170].'relevance'", containsString("0.5"))
                .body("[171].'name'", containsString("Palestine"))
                .body("[171].'topLevelDomain'.size()", equalTo(1))
                .body("[171].'topLevelDomain'", hasItems(".ps"))
                .body("[171].'alpha2Code'", containsString("PS"))
                .body("[171].'alpha3Code'", containsString("PSE"))
                .body("[171].'callingCodes'.size()", equalTo(1))
                .body("[171].'callingCodes'", hasItems("970"))
                .body("[171].'capital'", containsString("Ramallah"))
                .body("[171].'altSpellings'.size()", equalTo(3))
                .body("[171].'altSpellings'", hasItems("PS", "State of Palestine", "Dawlat Filasṭin"))
                .body("[171].'region'", containsString("Asia"))
                .body("[171].'subregion'", containsString("Western Asia"))
                .body("[171].'population'", numberMatches(4682467.0))
                .body("[171].'latlng'.size()", equalTo(2))
                .body("[171].'latlng'[0]", numberMatches(31.9))
                .body("[171].'latlng'[1]", numberMatches(35.2))
                .body("[171].'demonym'", containsString("Palestinian"))
                .body("[171].'area'", nullValue())
                .body("[171].'gini'", numberMatches(35.5))
                .body("[171].'timezones'.size()", equalTo(1))
                .body("[171].'timezones'", hasItems("UTC+02:00"))
                .body("[171].'borders'.size()", equalTo(3))
                .body("[171].'borders'", hasItems("ISR", "EGY", "JOR"))
                .body("[171].'nativeName'", containsString("فلسطين"))
                .body("[171].'numericCode'", containsString("275"))
                .body("[171].'currencies'.size()", equalTo(1))
                .body("[171].'currencies'", hasItems("ILS"))
                .body("[171].'languages'.size()", equalTo(1))
                .body("[171].'languages'", hasItems("ar"))
                .body("[171].'translations'.'de'", containsString("Palästina"))
                .body("[171].'translations'.'es'", containsString("Palestina"))
                .body("[171].'translations'.'fr'", containsString("Palestine"))
                .body("[171].'translations'.'ja'", containsString("パレスチナ"))
                .body("[171].'translations'.'it'", containsString("Palestina"))
                .body("[171].'relevance'", containsString("0"))
                .body("[172].'name'", containsString("Panama"))
                .body("[172].'topLevelDomain'.size()", equalTo(1))
                .body("[172].'topLevelDomain'", hasItems(".pa"))
                .body("[172].'alpha2Code'", containsString("PA"))
                .body("[172].'alpha3Code'", containsString("PAN"))
                .body("[172].'callingCodes'.size()", equalTo(1))
                .body("[172].'callingCodes'", hasItems("507"))
                .body("[172].'capital'", containsString("Panama City"))
                .body("[172].'altSpellings'.size()", equalTo(3))
                .body("[172].'altSpellings'", hasItems("PA", "Republic of Panama", "República de Panamá"))
                .body("[172].'region'", containsString("Americas"))
                .body("[172].'subregion'", containsString("Central America"))
                .body("[172].'population'", numberMatches(3764166.0))
                .body("[172].'latlng'.size()", equalTo(2))
                .body("[172].'latlng'[0]", numberMatches(9.0))
                .body("[172].'latlng'[1]", numberMatches(-80.0))
                .body("[172].'demonym'", containsString("Panamanian"))
                .body("[172].'area'", numberMatches(75417.0))
                .body("[172].'gini'", numberMatches(51.9))
                .body("[172].'timezones'.size()", equalTo(1))
                .body("[172].'timezones'", hasItems("UTC-05:00"))
                .body("[172].'borders'.size()", equalTo(2))
                .body("[172].'borders'", hasItems("COL", "CRI"))
                .body("[172].'nativeName'", containsString("Panamá"))
                .body("[172].'numericCode'", containsString("591"))
                .body("[172].'currencies'.size()", equalTo(2))
                .body("[172].'currencies'", hasItems("PAB", "USD"))
                .body("[172].'languages'.size()", equalTo(1))
                .body("[172].'languages'", hasItems("es"))
                .body("[172].'translations'.'de'", containsString("Panama"))
                .body("[172].'translations'.'es'", containsString("Panamá"))
                .body("[172].'translations'.'fr'", containsString("Panama"))
                .body("[172].'translations'.'ja'", containsString("パナマ"))
                .body("[172].'translations'.'it'", containsString("Panama"))
                .body("[172].'relevance'", containsString("0"))
                .body("[173].'name'", containsString("Papua New Guinea"))
                .body("[173].'topLevelDomain'.size()", equalTo(1))
                .body("[173].'topLevelDomain'", hasItems(".pg"))
                .body("[173].'alpha2Code'", containsString("PG"))
                .body("[173].'alpha3Code'", containsString("PNG"))
                .body("[173].'callingCodes'.size()", equalTo(1))
                .body("[173].'callingCodes'", hasItems("675"))
                .body("[173].'capital'", containsString("Port Moresby"))
                .body("[173].'altSpellings'.size()", equalTo(3))
                .body("[173].'altSpellings'", hasItems("PG", "Independent State of Papua New Guinea", "Independen Stet bilong Papua Niugini"))
                .body("[173].'region'", containsString("Oceania"))
                .body("[173].'subregion'", containsString("Melanesia"))
                .body("[173].'population'", numberMatches(7398500.0))
                .body("[173].'latlng'.size()", equalTo(2))
                .body("[173].'latlng'[0]", numberMatches(-6.0))
                .body("[173].'latlng'[1]", numberMatches(147.0))
                .body("[173].'demonym'", containsString("Papua New Guinean"))
                .body("[173].'area'", numberMatches(462840.0))
                .body("[173].'gini'", numberMatches(50.9))
                .body("[173].'timezones'.size()", equalTo(1))
                .body("[173].'timezones'", hasItems("UTC+10:00"))
                .body("[173].'borders'.size()", equalTo(1))
                .body("[173].'borders'", hasItems("IDN"))
                .body("[173].'nativeName'", containsString("Papua Niugini"))
                .body("[173].'numericCode'", containsString("598"))
                .body("[173].'currencies'.size()", equalTo(1))
                .body("[173].'currencies'", hasItems("PGK"))
                .body("[173].'languages'.size()", equalTo(1))
                .body("[173].'languages'", hasItems("en"))
                .body("[173].'translations'.'de'", containsString("Papua-Neuguinea"))
                .body("[173].'translations'.'es'", containsString("Papúa Nueva Guinea"))
                .body("[173].'translations'.'fr'", containsString("Papouasie-Nouvelle-Guinée"))
                .body("[173].'translations'.'ja'", containsString("パプアニューギニア"))
                .body("[173].'translations'.'it'", containsString("Papua Nuova Guinea"))
                .body("[173].'relevance'", containsString("0"))
                .body("[174].'name'", containsString("Paraguay"))
                .body("[174].'topLevelDomain'.size()", equalTo(1))
                .body("[174].'topLevelDomain'", hasItems(".py"))
                .body("[174].'alpha2Code'", containsString("PY"))
                .body("[174].'alpha3Code'", containsString("PRY"))
                .body("[174].'callingCodes'.size()", equalTo(1))
                .body("[174].'callingCodes'", hasItems("595"))
                .body("[174].'capital'", containsString("Asunción"))
                .body("[174].'altSpellings'.size()", equalTo(4))
                .body("[174].'altSpellings'", hasItems("PY", "Republic of Paraguay", "República del Paraguay", "Tetã Paraguái"))
                .body("[174].'region'", containsString("Americas"))
                .body("[174].'subregion'", containsString("South America"))
                .body("[174].'population'", numberMatches(7003406.0))
                .body("[174].'latlng'.size()", equalTo(2))
                .body("[174].'latlng'[0]", numberMatches(-23.0))
                .body("[174].'latlng'[1]", numberMatches(-58.0))
                .body("[174].'demonym'", containsString("Paraguayan"))
                .body("[174].'area'", numberMatches(406752.0))
                .body("[174].'gini'", numberMatches(52.4))
                .body("[174].'timezones'.size()", equalTo(1))
                .body("[174].'timezones'", hasItems("UTC-04:00"))
                .body("[174].'borders'.size()", equalTo(3))
                .body("[174].'borders'", hasItems("ARG", "BOL", "BRA"))
                .body("[174].'nativeName'", containsString("Paraguay"))
                .body("[174].'numericCode'", containsString("600"))
                .body("[174].'currencies'.size()", equalTo(1))
                .body("[174].'currencies'", hasItems("PYG"))
                .body("[174].'languages'.size()", equalTo(2))
                .body("[174].'languages'", hasItems("es", "gn"))
                .body("[174].'translations'.'de'", containsString("Paraguay"))
                .body("[174].'translations'.'es'", containsString("Paraguay"))
                .body("[174].'translations'.'fr'", containsString("Paraguay"))
                .body("[174].'translations'.'ja'", containsString("パラグアイ"))
                .body("[174].'translations'.'it'", containsString("Paraguay"))
                .body("[174].'relevance'", containsString("0"))
                .body("[175].'name'", containsString("Peru"))
                .body("[175].'topLevelDomain'.size()", equalTo(1))
                .body("[175].'topLevelDomain'", hasItems(".pe"))
                .body("[175].'alpha2Code'", containsString("PE"))
                .body("[175].'alpha3Code'", containsString("PER"))
                .body("[175].'callingCodes'.size()", equalTo(1))
                .body("[175].'callingCodes'", hasItems("51"))
                .body("[175].'capital'", containsString("Lima"))
                .body("[175].'altSpellings'.size()", equalTo(3))
                .body("[175].'altSpellings'", hasItems("PE", "Republic of Peru", " República del Perú"))
                .body("[175].'region'", containsString("Americas"))
                .body("[175].'subregion'", containsString("South America"))
                .body("[175].'population'", numberMatches(3.1151643E7))
                .body("[175].'latlng'.size()", equalTo(2))
                .body("[175].'latlng'[0]", numberMatches(-10.0))
                .body("[175].'latlng'[1]", numberMatches(-76.0))
                .body("[175].'demonym'", containsString("Peruvian"))
                .body("[175].'area'", numberMatches(1285216.0))
                .body("[175].'gini'", numberMatches(48.1))
                .body("[175].'timezones'.size()", equalTo(1))
                .body("[175].'timezones'", hasItems("UTC-05:00"))
                .body("[175].'borders'.size()", equalTo(5))
                .body("[175].'borders'", hasItems("BOL", "BRA", "CHL", "COL", "ECU"))
                .body("[175].'nativeName'", containsString("Perú"))
                .body("[175].'numericCode'", containsString("604"))
                .body("[175].'currencies'.size()", equalTo(1))
                .body("[175].'currencies'", hasItems("PEN"))
                .body("[175].'languages'.size()", equalTo(1))
                .body("[175].'languages'", hasItems("es"))
                .body("[175].'translations'.'de'", containsString("Peru"))
                .body("[175].'translations'.'es'", containsString("Perú"))
                .body("[175].'translations'.'fr'", containsString("Pérou"))
                .body("[175].'translations'.'ja'", containsString("ペルー"))
                .body("[175].'translations'.'it'", containsString("Perù"))
                .body("[175].'relevance'", containsString("0"))
                .body("[176].'name'", containsString("Philippines"))
                .body("[176].'topLevelDomain'.size()", equalTo(1))
                .body("[176].'topLevelDomain'", hasItems(".ph"))
                .body("[176].'alpha2Code'", containsString("PH"))
                .body("[176].'alpha3Code'", containsString("PHL"))
                .body("[176].'callingCodes'.size()", equalTo(1))
                .body("[176].'callingCodes'", hasItems("63"))
                .body("[176].'capital'", containsString("Manila"))
                .body("[176].'altSpellings'.size()", equalTo(3))
                .body("[176].'altSpellings'", hasItems("PH", "Republic of the Philippines", "Repúblika ng Pilipinas"))
                .body("[176].'region'", containsString("Asia"))
                .body("[176].'subregion'", containsString("South-Eastern Asia"))
                .body("[176].'population'", numberMatches(1.0192E8))
                .body("[176].'latlng'.size()", equalTo(2))
                .body("[176].'latlng'[0]", numberMatches(13.0))
                .body("[176].'latlng'[1]", numberMatches(122.0))
                .body("[176].'demonym'", containsString("Filipino"))
                .body("[176].'area'", numberMatches(342353.0))
                .body("[176].'gini'", numberMatches(43.0))
                .body("[176].'timezones'.size()", equalTo(1))
                .body("[176].'timezones'", hasItems("UTC+08:00"))
                .body("[176].'borders'.size()", equalTo(0))
                .body("[176].'nativeName'", containsString("Pilipinas"))
                .body("[176].'numericCode'", containsString("608"))
                .body("[176].'currencies'.size()", equalTo(1))
                .body("[176].'currencies'", hasItems("PHP"))
                .body("[176].'languages'.size()", equalTo(1))
                .body("[176].'languages'", hasItems("en"))
                .body("[176].'translations'.'de'", containsString("Philippinen"))
                .body("[176].'translations'.'es'", containsString("Filipinas"))
                .body("[176].'translations'.'fr'", containsString("Philippines"))
                .body("[176].'translations'.'ja'", containsString("フィリピン"))
                .body("[176].'translations'.'it'", containsString("Filippine"))
                .body("[176].'relevance'", containsString("1.5"))
                .body("[177].'name'", containsString("Pitcairn Islands"))
                .body("[177].'topLevelDomain'.size()", equalTo(1))
                .body("[177].'topLevelDomain'", hasItems(".pn"))
                .body("[177].'alpha2Code'", containsString("PN"))
                .body("[177].'alpha3Code'", containsString("PCN"))
                .body("[177].'callingCodes'.size()", equalTo(1))
                .body("[177].'callingCodes'", hasItems("64"))
                .body("[177].'capital'", containsString("Adamstown"))
                .body("[177].'altSpellings'.size()", equalTo(2))
                .body("[177].'altSpellings'", hasItems("PN", "Pitcairn Henderson Ducie and Oeno Islands"))
                .body("[177].'region'", containsString("Oceania"))
                .body("[177].'subregion'", containsString("Polynesia"))
                .body("[177].'population'", numberMatches(56.0))
                .body("[177].'latlng'.size()", equalTo(2))
                .body("[177].'latlng'[0]", numberMatches(-25.06666666))
                .body("[177].'latlng'[1]", numberMatches(-130.1))
                .body("[177].'demonym'", containsString("Pitcairn Islander"))
                .body("[177].'area'", numberMatches(47.0))
                .body("[177].'gini'", nullValue())
                .body("[177].'timezones'.size()", equalTo(1))
                .body("[177].'timezones'", hasItems("UTC-08:00"))
                .body("[177].'borders'.size()", equalTo(0))
                .body("[177].'nativeName'", containsString("Pitcairn Islands"))
                .body("[177].'numericCode'", containsString("612"))
                .body("[177].'currencies'.size()", equalTo(1))
                .body("[177].'currencies'", hasItems("NZD"))
                .body("[177].'languages'.size()", equalTo(1))
                .body("[177].'languages'", hasItems("en"))
                .body("[177].'translations'.'de'", containsString("Pitcairn"))
                .body("[177].'translations'.'es'", containsString("Islas Pitcairn"))
                .body("[177].'translations'.'fr'", containsString("Îles Pitcairn"))
                .body("[177].'translations'.'ja'", containsString("ピトケアン"))
                .body("[177].'translations'.'it'", containsString("Isole Pitcairn"))
                .body("[177].'relevance'", containsString("0.5"))
                .body("[178].'name'", containsString("Poland"))
                .body("[178].'topLevelDomain'.size()", equalTo(1))
                .body("[178].'topLevelDomain'", hasItems(".pl"))
                .body("[178].'alpha2Code'", containsString("PL"))
                .body("[178].'alpha3Code'", containsString("POL"))
                .body("[178].'callingCodes'.size()", equalTo(1))
                .body("[178].'callingCodes'", hasItems("48"))
                .body("[178].'capital'", containsString("Warsaw"))
                .body("[178].'altSpellings'.size()", equalTo(3))
                .body("[178].'altSpellings'", hasItems("PL", "Republic of Poland", "Rzeczpospolita Polska"))
                .body("[178].'region'", containsString("Europe"))
                .body("[178].'subregion'", containsString("Eastern Europe"))
                .body("[178].'population'", numberMatches(3.8484E7))
                .body("[178].'latlng'.size()", equalTo(2))
                .body("[178].'latlng'[0]", numberMatches(52.0))
                .body("[178].'latlng'[1]", numberMatches(20.0))
                .body("[178].'demonym'", containsString("Polish"))
                .body("[178].'area'", numberMatches(312679.0))
                .body("[178].'gini'", numberMatches(34.1))
                .body("[178].'timezones'.size()", equalTo(1))
                .body("[178].'timezones'", hasItems("UTC+01:00"))
                .body("[178].'borders'.size()", equalTo(7))
                .body("[178].'borders'", hasItems("BLR", "CZE", "DEU", "LTU", "RUS", "SVK", "UKR"))
                .body("[178].'nativeName'", containsString("Polska"))
                .body("[178].'numericCode'", containsString("616"))
                .body("[178].'currencies'.size()", equalTo(1))
                .body("[178].'currencies'", hasItems("PLN"))
                .body("[178].'languages'.size()", equalTo(1))
                .body("[178].'languages'", hasItems("pl"))
                .body("[178].'translations'.'de'", containsString("Polen"))
                .body("[178].'translations'.'es'", containsString("Polonia"))
                .body("[178].'translations'.'fr'", containsString("Pologne"))
                .body("[178].'translations'.'ja'", containsString("ポーランド"))
                .body("[178].'translations'.'it'", containsString("Polonia"))
                .body("[178].'relevance'", containsString("1.25"))
                .body("[179].'name'", containsString("Portugal"))
                .body("[179].'topLevelDomain'.size()", equalTo(1))
                .body("[179].'topLevelDomain'", hasItems(".pt"))
                .body("[179].'alpha2Code'", containsString("PT"))
                .body("[179].'alpha3Code'", containsString("PRT"))
                .body("[179].'callingCodes'.size()", equalTo(1))
                .body("[179].'callingCodes'", hasItems("351"))
                .body("[179].'capital'", containsString("Lisbon"))
                .body("[179].'altSpellings'.size()", equalTo(4))
                .body("[179].'altSpellings'", hasItems("PT", "Portuguesa", "Portuguese Republic", "República Portuguesa"))
                .body("[179].'region'", containsString("Europe"))
                .body("[179].'subregion'", containsString("Southern Europe"))
                .body("[179].'population'", numberMatches(1.0374822E7))
                .body("[179].'latlng'.size()", equalTo(2))
                .body("[179].'latlng'[0]", numberMatches(39.5))
                .body("[179].'latlng'[1]", numberMatches(-8.0))
                .body("[179].'demonym'", containsString("Portuguese"))
                .body("[179].'area'", numberMatches(92090.0))
                .body("[179].'gini'", numberMatches(38.5))
                .body("[179].'timezones'.size()", equalTo(2))
                .body("[179].'timezones'", hasItems("UTC-01:00", "UTC"))
                .body("[179].'borders'.size()", equalTo(1))
                .body("[179].'borders'", hasItems("ESP"))
                .body("[179].'nativeName'", containsString("Portugal"))
                .body("[179].'numericCode'", containsString("620"))
                .body("[179].'currencies'.size()", equalTo(1))
                .body("[179].'currencies'", hasItems("EUR"))
                .body("[179].'languages'.size()", equalTo(1))
                .body("[179].'languages'", hasItems("pt"))
                .body("[179].'translations'.'de'", containsString("Portugal"))
                .body("[179].'translations'.'es'", containsString("Portugal"))
                .body("[179].'translations'.'fr'", containsString("Portugal"))
                .body("[179].'translations'.'ja'", containsString("ポルトガル"))
                .body("[179].'translations'.'it'", containsString("Portogallo"))
                .body("[179].'relevance'", containsString("1.5"))
                .body("[180].'name'", containsString("Puerto Rico"))
                .body("[180].'topLevelDomain'.size()", equalTo(1))
                .body("[180].'topLevelDomain'", hasItems(".pr"))
                .body("[180].'alpha2Code'", containsString("PR"))
                .body("[180].'alpha3Code'", containsString("PRI"))
                .body("[180].'callingCodes'.size()", equalTo(2))
                .body("[180].'callingCodes'", hasItems("1", "1"))
                .body("[180].'capital'", containsString("San Juan"))
                .body("[180].'altSpellings'.size()", equalTo(3))
                .body("[180].'altSpellings'", hasItems("PR", "Commonwealth of Puerto Rico", "Estado Libre Asociado de Puerto Rico"))
                .body("[180].'region'", containsString("Americas"))
                .body("[180].'subregion'", containsString("Caribbean"))
                .body("[180].'population'", numberMatches(3548397.0))
                .body("[180].'latlng'.size()", equalTo(2))
                .body("[180].'latlng'[0]", numberMatches(18.25))
                .body("[180].'latlng'[1]", numberMatches(-66.5))
                .body("[180].'demonym'", containsString("Puerto Rican"))
                .body("[180].'area'", numberMatches(8870.0))
                .body("[180].'gini'", nullValue())
                .body("[180].'timezones'.size()", equalTo(1))
                .body("[180].'timezones'", hasItems("UTC-04:00"))
                .body("[180].'borders'.size()", equalTo(0))
                .body("[180].'nativeName'", containsString("Puerto Rico"))
                .body("[180].'numericCode'", containsString("630"))
                .body("[180].'currencies'.size()", equalTo(1))
                .body("[180].'currencies'", hasItems("USD"))
                .body("[180].'languages'.size()", equalTo(2))
                .body("[180].'languages'", hasItems("es", "en"))
                .body("[180].'translations'.'de'", containsString("Puerto Rico"))
                .body("[180].'translations'.'es'", containsString("Puerto Rico"))
                .body("[180].'translations'.'fr'", containsString("Porto Rico"))
                .body("[180].'translations'.'ja'", containsString("プエルトリコ"))
                .body("[180].'translations'.'it'", containsString("Porto Rico"))
                .body("[180].'relevance'", containsString("0"))
                .body("[181].'name'", containsString("Qatar"))
                .body("[181].'topLevelDomain'.size()", equalTo(1))
                .body("[181].'topLevelDomain'", hasItems(".qa"))
                .body("[181].'alpha2Code'", containsString("QA"))
                .body("[181].'alpha3Code'", containsString("QAT"))
                .body("[181].'callingCodes'.size()", equalTo(1))
                .body("[181].'callingCodes'", hasItems("974"))
                .body("[181].'capital'", containsString("Doha"))
                .body("[181].'altSpellings'.size()", equalTo(3))
                .body("[181].'altSpellings'", hasItems("QA", "State of Qatar", "Dawlat Qaṭar"))
                .body("[181].'region'", containsString("Asia"))
                .body("[181].'subregion'", containsString("Western Asia"))
                .body("[181].'population'", numberMatches(2120129.0))
                .body("[181].'latlng'.size()", equalTo(2))
                .body("[181].'latlng'[0]", numberMatches(25.5))
                .body("[181].'latlng'[1]", numberMatches(51.25))
                .body("[181].'demonym'", containsString("Qatari"))
                .body("[181].'area'", numberMatches(11586.0))
                .body("[181].'gini'", numberMatches(41.1))
                .body("[181].'timezones'.size()", equalTo(1))
                .body("[181].'timezones'", hasItems("UTC+03:00"))
                .body("[181].'borders'.size()", equalTo(1))
                .body("[181].'borders'", hasItems("SAU"))
                .body("[181].'nativeName'", containsString("قطر"))
                .body("[181].'numericCode'", containsString("634"))
                .body("[181].'currencies'.size()", equalTo(1))
                .body("[181].'currencies'", hasItems("QAR"))
                .body("[181].'languages'.size()", equalTo(1))
                .body("[181].'languages'", hasItems("ar"))
                .body("[181].'translations'.'de'", containsString("Katar"))
                .body("[181].'translations'.'es'", containsString("Catar"))
                .body("[181].'translations'.'fr'", containsString("Qatar"))
                .body("[181].'translations'.'ja'", containsString("カタール"))
                .body("[181].'translations'.'it'", containsString("Qatar"))
                .body("[181].'relevance'", containsString("0"))
                .body("[182].'name'", containsString("Republic of Kosovo"))
                .body("[182].'topLevelDomain'.size()", equalTo(1))
                .body("[182].'topLevelDomain'", hasItems(""))
                .body("[182].'alpha2Code'", containsString("XK"))
                .body("[182].'alpha3Code'", containsString("KOS"))
                .body("[182].'callingCodes'.size()", equalTo(1))
                .body("[182].'callingCodes'", hasItems("383"))
                .body("[182].'capital'", containsString("Pristina"))
                .body("[182].'altSpellings'.size()", equalTo(2))
                .body("[182].'altSpellings'", hasItems("XK", "Република Косово"))
                .body("[182].'region'", containsString("Europe"))
                .body("[182].'subregion'", containsString("Eastern Europe"))
                .body("[182].'population'", numberMatches(1733842.0))
                .body("[182].'latlng'.size()", equalTo(2))
                .body("[182].'latlng'[0]", numberMatches(42.666667))
                .body("[182].'latlng'[1]", numberMatches(21.166667))
                .body("[182].'demonym'", containsString("Kosovar"))
                .body("[182].'area'", numberMatches(10908.0))
                .body("[182].'gini'", nullValue())
                .body("[182].'timezones'.size()", equalTo(1))
                .body("[182].'timezones'", hasItems("UTC+01:00"))
                .body("[182].'borders'.size()", equalTo(4))
                .body("[182].'borders'", hasItems("ALB", "MKD", "MNE", "SRB"))
                .body("[182].'nativeName'", containsString("Republika e Kosovës"))
                .body("[182].'numericCode'", containsString("780"))
                .body("[182].'currencies'.size()", equalTo(1))
                .body("[182].'currencies'", hasItems("EUR"))
                .body("[182].'languages'.size()", equalTo(2))
                .body("[182].'languages'", hasItems("sq", "sr"))
                .body("[182].'translations'.'de'", nullValue())
                .body("[182].'translations'.'es'", containsString("Kosovo"))
                .body("[182].'translations'.'fr'", nullValue())
                .body("[182].'translations'.'ja'", nullValue())
                .body("[182].'translations'.'it'", nullValue())
                .body("[182].'relevance'", containsString("0"))
                .body("[183].'name'", containsString("Réunion"))
                .body("[183].'topLevelDomain'.size()", equalTo(1))
                .body("[183].'topLevelDomain'", hasItems(".re"))
                .body("[183].'alpha2Code'", containsString("RE"))
                .body("[183].'alpha3Code'", containsString("REU"))
                .body("[183].'callingCodes'.size()", equalTo(1))
                .body("[183].'callingCodes'", hasItems("262"))
                .body("[183].'capital'", containsString("Saint-Denis"))
                .body("[183].'altSpellings'.size()", equalTo(2))
                .body("[183].'altSpellings'", hasItems("RE", "Reunion"))
                .body("[183].'region'", containsString("Africa"))
                .body("[183].'subregion'", containsString("Eastern Africa"))
                .body("[183].'population'", numberMatches(840974.0))
                .body("[183].'latlng'.size()", equalTo(2))
                .body("[183].'latlng'[0]", numberMatches(-21.15))
                .body("[183].'latlng'[1]", numberMatches(55.5))
                .body("[183].'demonym'", containsString("French"))
                .body("[183].'area'", nullValue())
                .body("[183].'gini'", nullValue())
                .body("[183].'timezones'.size()", equalTo(1))
                .body("[183].'timezones'", hasItems("UTC+04:00"))
                .body("[183].'borders'.size()", equalTo(0))
                .body("[183].'nativeName'", containsString("La Réunion"))
                .body("[183].'numericCode'", containsString("638"))
                .body("[183].'currencies'.size()", equalTo(1))
                .body("[183].'currencies'", hasItems("EUR"))
                .body("[183].'languages'.size()", equalTo(1))
                .body("[183].'languages'", hasItems("fr"))
                .body("[183].'translations'.'de'", containsString("Réunion"))
                .body("[183].'translations'.'es'", containsString("Reunión"))
                .body("[183].'translations'.'fr'", containsString("Réunion"))
                .body("[183].'translations'.'ja'", containsString("レユニオン"))
                .body("[183].'translations'.'it'", containsString("Riunione"))
                .body("[183].'relevance'", containsString("0"))
                .body("[184].'name'", containsString("Romania"))
                .body("[184].'topLevelDomain'.size()", equalTo(1))
                .body("[184].'topLevelDomain'", hasItems(".ro"))
                .body("[184].'alpha2Code'", containsString("RO"))
                .body("[184].'alpha3Code'", containsString("ROU"))
                .body("[184].'callingCodes'.size()", equalTo(1))
                .body("[184].'callingCodes'", hasItems("40"))
                .body("[184].'capital'", containsString("Bucharest"))
                .body("[184].'altSpellings'.size()", equalTo(4))
                .body("[184].'altSpellings'", hasItems("RO", "Rumania", "Roumania", "România"))
                .body("[184].'region'", containsString("Europe"))
                .body("[184].'subregion'", containsString("Eastern Europe"))
                .body("[184].'population'", numberMatches(1.9942642E7))
                .body("[184].'latlng'.size()", equalTo(2))
                .body("[184].'latlng'[0]", numberMatches(46.0))
                .body("[184].'latlng'[1]", numberMatches(25.0))
                .body("[184].'demonym'", containsString("Romanian"))
                .body("[184].'area'", numberMatches(238391.0))
                .body("[184].'gini'", numberMatches(30.0))
                .body("[184].'timezones'.size()", equalTo(1))
                .body("[184].'timezones'", hasItems("UTC+02:00"))
                .body("[184].'borders'.size()", equalTo(5))
                .body("[184].'borders'", hasItems("BGR", "HUN", "MDA", "SRB", "UKR"))
                .body("[184].'nativeName'", containsString("România"))
                .body("[184].'numericCode'", containsString("642"))
                .body("[184].'currencies'.size()", equalTo(1))
                .body("[184].'currencies'", hasItems("RON"))
                .body("[184].'languages'.size()", equalTo(1))
                .body("[184].'languages'", hasItems("ro"))
                .body("[184].'translations'.'de'", containsString("Rumänien"))
                .body("[184].'translations'.'es'", containsString("Rumania"))
                .body("[184].'translations'.'fr'", containsString("Roumanie"))
                .body("[184].'translations'.'ja'", containsString("ルーマニア"))
                .body("[184].'translations'.'it'", containsString("Romania"))
                .body("[184].'relevance'", containsString("0"))
                .body("[185].'name'", containsString("Russia"))
                .body("[185].'topLevelDomain'.size()", equalTo(1))
                .body("[185].'topLevelDomain'", hasItems(".ru"))
                .body("[185].'alpha2Code'", containsString("RU"))
                .body("[185].'alpha3Code'", containsString("RUS"))
                .body("[185].'callingCodes'.size()", equalTo(1))
                .body("[185].'callingCodes'", hasItems("7"))
                .body("[185].'capital'", containsString("Moscow"))
                .body("[185].'altSpellings'.size()", equalTo(5))
                .body("[185].'altSpellings'", hasItems("RU", "Rossiya", "Russian Federation", "Российская Федерация", "Rossiyskaya Federatsiya"))
                .body("[185].'region'", containsString("Europe"))
                .body("[185].'subregion'", containsString("Eastern Europe"))
                .body("[185].'population'", numberMatches(1.4655633E8))
                .body("[185].'latlng'.size()", equalTo(2))
                .body("[185].'latlng'[0]", numberMatches(60.0))
                .body("[185].'latlng'[1]", numberMatches(100.0))
                .body("[185].'demonym'", containsString("Russian"))
                .body("[185].'area'", numberMatches(1.7124442E7))
                .body("[185].'gini'", numberMatches(40.1))
                .body("[185].'timezones'.size()", equalTo(9))
                .body("[185].'timezones'", hasItems("UTC+03:00", "UTC+04:00", "UTC+06:00", "UTC+07:00", "UTC+08:00", "UTC+09:00", "UTC+10:00", "UTC+11:00", "UTC+12:00"))
                .body("[185].'borders'.size()", equalTo(14))
                .body("[185].'borders'", hasItems("AZE", "BLR", "CHN", "EST", "FIN", "GEO", "KAZ", "PRK", "LVA", "LTU", "MNG", "NOR", "POL", "UKR"))
                .body("[185].'nativeName'", containsString("Россия"))
                .body("[185].'numericCode'", containsString("643"))
                .body("[185].'currencies'.size()", equalTo(1))
                .body("[185].'currencies'", hasItems("RUB"))
                .body("[185].'languages'.size()", equalTo(1))
                .body("[185].'languages'", hasItems("ru"))
                .body("[185].'translations'.'de'", containsString("Russland"))
                .body("[185].'translations'.'es'", containsString("Rusia"))
                .body("[185].'translations'.'fr'", containsString("Russie"))
                .body("[185].'translations'.'ja'", containsString("ロシア連邦"))
                .body("[185].'translations'.'it'", containsString("Russia"))
                .body("[185].'relevance'", containsString("2.5"))
                .body("[186].'name'", containsString("Rwanda"))
                .body("[186].'topLevelDomain'.size()", equalTo(1))
                .body("[186].'topLevelDomain'", hasItems(".rw"))
                .body("[186].'alpha2Code'", containsString("RW"))
                .body("[186].'alpha3Code'", containsString("RWA"))
                .body("[186].'callingCodes'.size()", equalTo(1))
                .body("[186].'callingCodes'", hasItems("250"))
                .body("[186].'capital'", containsString("Kigali"))
                .body("[186].'altSpellings'.size()", equalTo(4))
                .body("[186].'altSpellings'", hasItems("RW", "Republic of Rwanda", "Repubulika y'u Rwanda", "République du Rwanda"))
                .body("[186].'region'", containsString("Africa"))
                .body("[186].'subregion'", containsString("Eastern Africa"))
                .body("[186].'population'", numberMatches(1.1262564E7))
                .body("[186].'latlng'.size()", equalTo(2))
                .body("[186].'latlng'[0]", numberMatches(-2.0))
                .body("[186].'latlng'[1]", numberMatches(30.0))
                .body("[186].'demonym'", containsString("Rwandan"))
                .body("[186].'area'", numberMatches(26338.0))
                .body("[186].'gini'", numberMatches(50.8))
                .body("[186].'timezones'.size()", equalTo(1))
                .body("[186].'timezones'", hasItems("UTC+02:00"))
                .body("[186].'borders'.size()", equalTo(4))
                .body("[186].'borders'", hasItems("BDI", "COD", "TZA", "UGA"))
                .body("[186].'nativeName'", containsString("Rwanda"))
                .body("[186].'numericCode'", containsString("646"))
                .body("[186].'currencies'.size()", equalTo(1))
                .body("[186].'currencies'", hasItems("RWF"))
                .body("[186].'languages'.size()", equalTo(3))
                .body("[186].'languages'", hasItems("rw", "en", "fr"))
                .body("[186].'translations'.'de'", containsString("Ruanda"))
                .body("[186].'translations'.'es'", containsString("Ruanda"))
                .body("[186].'translations'.'fr'", containsString("Rwanda"))
                .body("[186].'translations'.'ja'", containsString("ルワンダ"))
                .body("[186].'translations'.'it'", containsString("Ruanda"))
                .body("[186].'relevance'", containsString("0"))
                .body("[187].'name'", containsString("Saint Barthélemy"))
                .body("[187].'topLevelDomain'.size()", equalTo(1))
                .body("[187].'topLevelDomain'", hasItems(".bl"))
                .body("[187].'alpha2Code'", containsString("BL"))
                .body("[187].'alpha3Code'", containsString("BLM"))
                .body("[187].'callingCodes'.size()", equalTo(1))
                .body("[187].'callingCodes'", hasItems("590"))
                .body("[187].'capital'", containsString("Gustavia"))
                .body("[187].'altSpellings'.size()", equalTo(4))
                .body("[187].'altSpellings'", hasItems("BL", "St. Barthelemy", "Collectivity of Saint Barthélemy", "Collectivité de Saint-Barthélemy"))
                .body("[187].'region'", containsString("Americas"))
                .body("[187].'subregion'", containsString("Caribbean"))
                .body("[187].'population'", numberMatches(9269.0))
                .body("[187].'latlng'.size()", equalTo(2))
                .body("[187].'latlng'[0]", numberMatches(18.5))
                .body("[187].'latlng'[1]", numberMatches(-63.41666666))
                .body("[187].'demonym'", containsString("Saint Barthélemy Islander"))
                .body("[187].'area'", numberMatches(21.0))
                .body("[187].'gini'", nullValue())
                .body("[187].'timezones'.size()", equalTo(1))
                .body("[187].'timezones'", hasItems("UTC-04:00"))
                .body("[187].'borders'.size()", equalTo(0))
                .body("[187].'nativeName'", containsString("Saint-Barthélemy"))
                .body("[187].'numericCode'", containsString("652"))
                .body("[187].'currencies'.size()", equalTo(1))
                .body("[187].'currencies'", hasItems("EUR"))
                .body("[187].'languages'.size()", equalTo(1))
                .body("[187].'languages'", hasItems("fr"))
                .body("[187].'translations'.'de'", containsString("Saint-Barthélemy"))
                .body("[187].'translations'.'es'", containsString("San Bartolomé"))
                .body("[187].'translations'.'fr'", containsString("Saint-Barthélemy"))
                .body("[187].'translations'.'ja'", containsString("サン・バルテルミー"))
                .body("[187].'translations'.'it'", containsString("Antille Francesi"))
                .body("[187].'relevance'", containsString("0"))
                .body("[188].'name'", containsString("Saint Helena"))
                .body("[188].'topLevelDomain'.size()", equalTo(1))
                .body("[188].'topLevelDomain'", hasItems(".sh"))
                .body("[188].'alpha2Code'", containsString("SH"))
                .body("[188].'alpha3Code'", containsString("SHN"))
                .body("[188].'callingCodes'.size()", equalTo(1))
                .body("[188].'callingCodes'", hasItems("290"))
                .body("[188].'capital'", containsString("Jamestown"))
                .body("[188].'altSpellings'.size()", equalTo(1))
                .body("[188].'altSpellings'", hasItems("SH"))
                .body("[188].'region'", containsString("Africa"))
                .body("[188].'subregion'", containsString("Western Africa"))
                .body("[188].'population'", numberMatches(4255.0))
                .body("[188].'latlng'.size()", equalTo(2))
                .body("[188].'latlng'[0]", numberMatches(-15.95))
                .body("[188].'latlng'[1]", numberMatches(-5.7))
                .body("[188].'demonym'", containsString("Saint Helenian"))
                .body("[188].'area'", nullValue())
                .body("[188].'gini'", nullValue())
                .body("[188].'timezones'.size()", equalTo(1))
                .body("[188].'timezones'", hasItems("UTC+00:00"))
                .body("[188].'borders'.size()", equalTo(0))
                .body("[188].'nativeName'", containsString("Saint Helena"))
                .body("[188].'numericCode'", containsString("654"))
                .body("[188].'currencies'.size()", equalTo(1))
                .body("[188].'currencies'", hasItems("SHP"))
                .body("[188].'languages'.size()", equalTo(1))
                .body("[188].'languages'", hasItems("en"))
                .body("[188].'translations'.'de'", containsString("Sankt Helena"))
                .body("[188].'translations'.'es'", containsString("Santa Helena"))
                .body("[188].'translations'.'fr'", containsString("Sainte-Hélène"))
                .body("[188].'translations'.'ja'", containsString("セントヘレナ・アセンションおよびトリスタンダクーニャ"))
                .body("[188].'translations'.'it'", containsString("Sant'Elena"))
                .body("[188].'relevance'", containsString("0"))
                .body("[189].'name'", containsString("Saint Kitts and Nevis"))
                .body("[189].'topLevelDomain'.size()", equalTo(1))
                .body("[189].'topLevelDomain'", hasItems(".kn"))
                .body("[189].'alpha2Code'", containsString("KN"))
                .body("[189].'alpha3Code'", containsString("KNA"))
                .body("[189].'callingCodes'.size()", equalTo(1))
                .body("[189].'callingCodes'", hasItems("1"))
                .body("[189].'capital'", containsString("Basseterre"))
                .body("[189].'altSpellings'.size()", equalTo(2))
                .body("[189].'altSpellings'", hasItems("KN", "Federation of Saint Christopher and Nevis"))
                .body("[189].'region'", containsString("Americas"))
                .body("[189].'subregion'", containsString("Caribbean"))
                .body("[189].'population'", numberMatches(56000.0))
                .body("[189].'latlng'.size()", equalTo(2))
                .body("[189].'latlng'[0]", numberMatches(17.33333333))
                .body("[189].'latlng'[1]", numberMatches(-62.75))
                .body("[189].'demonym'", containsString("Kittian and Nevisian"))
                .body("[189].'area'", numberMatches(261.0))
                .body("[189].'gini'", nullValue())
                .body("[189].'timezones'.size()", equalTo(1))
                .body("[189].'timezones'", hasItems("UTC-04:00"))
                .body("[189].'borders'.size()", equalTo(0))
                .body("[189].'nativeName'", containsString("Saint Kitts and Nevis"))
                .body("[189].'numericCode'", containsString("659"))
                .body("[189].'currencies'.size()", equalTo(1))
                .body("[189].'currencies'", hasItems("XCD"))
                .body("[189].'languages'.size()", equalTo(1))
                .body("[189].'languages'", hasItems("en"))
                .body("[189].'translations'.'de'", containsString("St. Kitts und Nevis"))
                .body("[189].'translations'.'es'", containsString("San Cristóbal y Nieves"))
                .body("[189].'translations'.'fr'", containsString("Saint-Christophe-et-Niévès"))
                .body("[189].'translations'.'ja'", containsString("セントクリストファー・ネイビス"))
                .body("[189].'translations'.'it'", containsString("Saint Kitts e Nevis"))
                .body("[189].'relevance'", containsString("0"))
                .body("[190].'name'", containsString("Saint Lucia"))
                .body("[190].'topLevelDomain'.size()", equalTo(1))
                .body("[190].'topLevelDomain'", hasItems(".lc"))
                .body("[190].'alpha2Code'", containsString("LC"))
                .body("[190].'alpha3Code'", containsString("LCA"))
                .body("[190].'callingCodes'.size()", equalTo(1))
                .body("[190].'callingCodes'", hasItems("1"))
                .body("[190].'capital'", containsString("Castries"))
                .body("[190].'altSpellings'.size()", equalTo(1))
                .body("[190].'altSpellings'", hasItems("LC"))
                .body("[190].'region'", containsString("Americas"))
                .body("[190].'subregion'", containsString("Caribbean"))
                .body("[190].'population'", numberMatches(185000.0))
                .body("[190].'latlng'.size()", equalTo(2))
                .body("[190].'latlng'[0]", numberMatches(13.88333333))
                .body("[190].'latlng'[1]", numberMatches(-60.96666666))
                .body("[190].'demonym'", containsString("Saint Lucian"))
                .body("[190].'area'", numberMatches(616.0))
                .body("[190].'gini'", numberMatches(42.6))
                .body("[190].'timezones'.size()", equalTo(1))
                .body("[190].'timezones'", hasItems("UTC-04:00"))
                .body("[190].'borders'.size()", equalTo(0))
                .body("[190].'nativeName'", containsString("Saint Lucia"))
                .body("[190].'numericCode'", containsString("662"))
                .body("[190].'currencies'.size()", equalTo(1))
                .body("[190].'currencies'", hasItems("XCD"))
                .body("[190].'languages'.size()", equalTo(1))
                .body("[190].'languages'", hasItems("en"))
                .body("[190].'translations'.'de'", containsString("Saint Lucia"))
                .body("[190].'translations'.'es'", containsString("Santa Lucía"))
                .body("[190].'translations'.'fr'", containsString("Saint-Lucie"))
                .body("[190].'translations'.'ja'", containsString("セントルシア"))
                .body("[190].'translations'.'it'", containsString("Santa Lucia"))
                .body("[190].'relevance'", containsString("0"))
                .body("[191].'name'", containsString("Saint Martin"))
                .body("[191].'topLevelDomain'.size()", equalTo(3))
                .body("[191].'topLevelDomain'", hasItems(".mf", ".fr", ".gp"))
                .body("[191].'alpha2Code'", containsString("MF"))
                .body("[191].'alpha3Code'", containsString("MAF"))
                .body("[191].'callingCodes'.size()", equalTo(1))
                .body("[191].'callingCodes'", hasItems("590"))
                .body("[191].'capital'", containsString("Marigot"))
                .body("[191].'altSpellings'.size()", equalTo(3))
                .body("[191].'altSpellings'", hasItems("MF", "Collectivity of Saint Martin", "Collectivité de Saint-Martin"))
                .body("[191].'region'", containsString("Americas"))
                .body("[191].'subregion'", containsString("Caribbean"))
                .body("[191].'population'", numberMatches(36979.0))
                .body("[191].'latlng'.size()", equalTo(2))
                .body("[191].'latlng'[0]", numberMatches(18.08333333))
                .body("[191].'latlng'[1]", numberMatches(-63.95))
                .body("[191].'demonym'", containsString("Saint Martin Islander"))
                .body("[191].'area'", numberMatches(53.0))
                .body("[191].'gini'", nullValue())
                .body("[191].'timezones'.size()", equalTo(1))
                .body("[191].'timezones'", hasItems("UTC-04:00"))
                .body("[191].'borders'.size()", equalTo(2))
                .body("[191].'borders'", hasItems("SXM", "NLD"))
                .body("[191].'nativeName'", containsString("Saint-Martin"))
                .body("[191].'numericCode'", containsString("663"))
                .body("[191].'currencies'.size()", equalTo(1))
                .body("[191].'currencies'", hasItems("EUR"))
                .body("[191].'languages'.size()", equalTo(3))
                .body("[191].'languages'", hasItems("en", "fr", "nl"))
                .body("[191].'translations'.'de'", containsString("Saint Martin"))
                .body("[191].'translations'.'es'", containsString("Saint Martin"))
                .body("[191].'translations'.'fr'", containsString("Saint-Martin"))
                .body("[191].'translations'.'ja'", containsString("サン・マルタン（フランス領）"))
                .body("[191].'translations'.'it'", containsString("Saint Martin"))
                .body("[191].'relevance'", containsString("0"))
                .body("[192].'name'", containsString("Saint Pierre and Miquelon"))
                .body("[192].'topLevelDomain'.size()", equalTo(1))
                .body("[192].'topLevelDomain'", hasItems(".pm"))
                .body("[192].'alpha2Code'", containsString("PM"))
                .body("[192].'alpha3Code'", containsString("SPM"))
                .body("[192].'callingCodes'.size()", equalTo(1))
                .body("[192].'callingCodes'", hasItems("508"))
                .body("[192].'capital'", containsString("Saint-Pierre"))
                .body("[192].'altSpellings'.size()", equalTo(2))
                .body("[192].'altSpellings'", hasItems("PM", "Collectivité territoriale de Saint-Pierre-et-Miquelon"))
                .body("[192].'region'", containsString("Americas"))
                .body("[192].'subregion'", containsString("Northern America"))
                .body("[192].'population'", numberMatches(6069.0))
                .body("[192].'latlng'.size()", equalTo(2))
                .body("[192].'latlng'[0]", numberMatches(46.83333333))
                .body("[192].'latlng'[1]", numberMatches(-56.33333333))
                .body("[192].'demonym'", containsString("French"))
                .body("[192].'area'", numberMatches(242.0))
                .body("[192].'gini'", nullValue())
                .body("[192].'timezones'.size()", equalTo(1))
                .body("[192].'timezones'", hasItems("UTC-03:00"))
                .body("[192].'borders'.size()", equalTo(0))
                .body("[192].'nativeName'", containsString("Saint-Pierre-et-Miquelon"))
                .body("[192].'numericCode'", containsString("666"))
                .body("[192].'currencies'.size()", equalTo(1))
                .body("[192].'currencies'", hasItems("EUR"))
                .body("[192].'languages'.size()", equalTo(1))
                .body("[192].'languages'", hasItems("fr"))
                .body("[192].'translations'.'de'", containsString("Saint-Pierre und Miquelon"))
                .body("[192].'translations'.'es'", containsString("San Pedro y Miquelón"))
                .body("[192].'translations'.'fr'", containsString("Saint-Pierre-et-Miquelon"))
                .body("[192].'translations'.'ja'", containsString("サンピエール島・ミクロン島"))
                .body("[192].'translations'.'it'", containsString("Saint-Pierre e Miquelon"))
                .body("[192].'relevance'", containsString("0"))
                .body("[193].'name'", containsString("Saint Vincent and the Grenadines"))
                .body("[193].'topLevelDomain'.size()", equalTo(1))
                .body("[193].'topLevelDomain'", hasItems(".vc"))
                .body("[193].'alpha2Code'", containsString("VC"))
                .body("[193].'alpha3Code'", containsString("VCT"))
                .body("[193].'callingCodes'.size()", equalTo(1))
                .body("[193].'callingCodes'", hasItems("1"))
                .body("[193].'capital'", containsString("Kingstown"))
                .body("[193].'altSpellings'.size()", equalTo(1))
                .body("[193].'altSpellings'", hasItems("VC"))
                .body("[193].'region'", containsString("Americas"))
                .body("[193].'subregion'", containsString("Caribbean"))
                .body("[193].'population'", numberMatches(109991.0))
                .body("[193].'latlng'.size()", equalTo(2))
                .body("[193].'latlng'[0]", numberMatches(13.25))
                .body("[193].'latlng'[1]", numberMatches(-61.2))
                .body("[193].'demonym'", containsString("Saint Vincentian"))
                .body("[193].'area'", numberMatches(389.0))
                .body("[193].'gini'", nullValue())
                .body("[193].'timezones'.size()", equalTo(1))
                .body("[193].'timezones'", hasItems("UTC-04:00"))
                .body("[193].'borders'.size()", equalTo(0))
                .body("[193].'nativeName'", containsString("Saint Vincent and the Grenadines"))
                .body("[193].'numericCode'", containsString("670"))
                .body("[193].'currencies'.size()", equalTo(1))
                .body("[193].'currencies'", hasItems("XCD"))
                .body("[193].'languages'.size()", equalTo(1))
                .body("[193].'languages'", hasItems("en"))
                .body("[193].'translations'.'de'", containsString("Saint Vincent und die Grenadinen"))
                .body("[193].'translations'.'es'", containsString("San Vicente y Granadinas"))
                .body("[193].'translations'.'fr'", containsString("Saint-Vincent-et-les-Grenadines"))
                .body("[193].'translations'.'ja'", containsString("セントビンセントおよびグレナディーン諸島"))
                .body("[193].'translations'.'it'", containsString("Saint Vincent e Grenadine"))
                .body("[193].'relevance'", containsString("0"))
                .body("[194].'name'", containsString("Samoa"))
                .body("[194].'topLevelDomain'.size()", equalTo(1))
                .body("[194].'topLevelDomain'", hasItems(".ws"))
                .body("[194].'alpha2Code'", containsString("WS"))
                .body("[194].'alpha3Code'", containsString("WSM"))
                .body("[194].'callingCodes'.size()", equalTo(1))
                .body("[194].'callingCodes'", hasItems("685"))
                .body("[194].'capital'", containsString("Apia"))
                .body("[194].'altSpellings'.size()", equalTo(3))
                .body("[194].'altSpellings'", hasItems("WS", "Independent State of Samoa", "Malo Saʻoloto Tutoʻatasi o Sāmoa"))
                .body("[194].'region'", containsString("Oceania"))
                .body("[194].'subregion'", containsString("Polynesia"))
                .body("[194].'population'", numberMatches(187820.0))
                .body("[194].'latlng'.size()", equalTo(2))
                .body("[194].'latlng'[0]", numberMatches(-13.58333333))
                .body("[194].'latlng'[1]", numberMatches(-172.33333333))
                .body("[194].'demonym'", containsString("Samoan"))
                .body("[194].'area'", numberMatches(2842.0))
                .body("[194].'gini'", nullValue())
                .body("[194].'timezones'.size()", equalTo(1))
                .body("[194].'timezones'", hasItems("UTC+13:00"))
                .body("[194].'borders'.size()", equalTo(0))
                .body("[194].'nativeName'", containsString("Samoa"))
                .body("[194].'numericCode'", containsString("882"))
                .body("[194].'currencies'.size()", equalTo(1))
                .body("[194].'currencies'", hasItems("WST"))
                .body("[194].'languages'.size()", equalTo(2))
                .body("[194].'languages'", hasItems("sm", "en"))
                .body("[194].'translations'.'de'", containsString("Samoa"))
                .body("[194].'translations'.'es'", containsString("Samoa"))
                .body("[194].'translations'.'fr'", containsString("Samoa"))
                .body("[194].'translations'.'ja'", containsString("サモア"))
                .body("[194].'translations'.'it'", containsString("Samoa"))
                .body("[194].'relevance'", containsString("0"))
                .body("[195].'name'", containsString("San Marino"))
                .body("[195].'topLevelDomain'.size()", equalTo(1))
                .body("[195].'topLevelDomain'", hasItems(".sm"))
                .body("[195].'alpha2Code'", containsString("SM"))
                .body("[195].'alpha3Code'", containsString("SMR"))
                .body("[195].'callingCodes'.size()", equalTo(1))
                .body("[195].'callingCodes'", hasItems("378"))
                .body("[195].'capital'", containsString("City of San Marino"))
                .body("[195].'altSpellings'.size()", equalTo(3))
                .body("[195].'altSpellings'", hasItems("SM", "Republic of San Marino", "Repubblica di San Marino"))
                .body("[195].'region'", containsString("Europe"))
                .body("[195].'subregion'", containsString("Southern Europe"))
                .body("[195].'population'", numberMatches(32831.0))
                .body("[195].'latlng'.size()", equalTo(2))
                .body("[195].'latlng'[0]", numberMatches(43.76666666))
                .body("[195].'latlng'[1]", numberMatches(12.41666666))
                .body("[195].'demonym'", containsString("Sammarinese"))
                .body("[195].'area'", numberMatches(61.0))
                .body("[195].'gini'", nullValue())
                .body("[195].'timezones'.size()", equalTo(1))
                .body("[195].'timezones'", hasItems("UTC+01:00"))
                .body("[195].'borders'.size()", equalTo(1))
                .body("[195].'borders'", hasItems("ITA"))
                .body("[195].'nativeName'", containsString("San Marino"))
                .body("[195].'numericCode'", containsString("674"))
                .body("[195].'currencies'.size()", equalTo(1))
                .body("[195].'currencies'", hasItems("EUR"))
                .body("[195].'languages'.size()", equalTo(1))
                .body("[195].'languages'", hasItems("it"))
                .body("[195].'translations'.'de'", containsString("San Marino"))
                .body("[195].'translations'.'es'", containsString("San Marino"))
                .body("[195].'translations'.'fr'", containsString("Saint-Marin"))
                .body("[195].'translations'.'ja'", containsString("サンマリノ"))
                .body("[195].'translations'.'it'", containsString("San Marino"))
                .body("[195].'relevance'", containsString("0"))
                .body("[196].'name'", containsString("São Tomé and Príncipe"))
                .body("[196].'topLevelDomain'.size()", equalTo(1))
                .body("[196].'topLevelDomain'", hasItems(".st"))
                .body("[196].'alpha2Code'", containsString("ST"))
                .body("[196].'alpha3Code'", containsString("STP"))
                .body("[196].'callingCodes'.size()", equalTo(1))
                .body("[196].'callingCodes'", hasItems("239"))
                .body("[196].'capital'", containsString("São Tomé"))
                .body("[196].'altSpellings'.size()", equalTo(3))
                .body("[196].'altSpellings'", hasItems("ST", "Democratic Republic of São Tomé and Príncipe", "República Democrática de São Tomé e Príncipe"))
                .body("[196].'region'", containsString("Africa"))
                .body("[196].'subregion'", containsString("Middle Africa"))
                .body("[196].'population'", numberMatches(187356.0))
                .body("[196].'latlng'.size()", equalTo(2))
                .body("[196].'latlng'[0]", numberMatches(1.0))
                .body("[196].'latlng'[1]", numberMatches(7.0))
                .body("[196].'demonym'", containsString("Sao Tomean"))
                .body("[196].'area'", numberMatches(964.0))
                .body("[196].'gini'", numberMatches(50.8))
                .body("[196].'timezones'.size()", equalTo(1))
                .body("[196].'timezones'", hasItems("UTC"))
                .body("[196].'borders'.size()", equalTo(0))
                .body("[196].'nativeName'", containsString("São Tomé e Príncipe"))
                .body("[196].'numericCode'", containsString("678"))
                .body("[196].'currencies'.size()", equalTo(1))
                .body("[196].'currencies'", hasItems("STD"))
                .body("[196].'languages'.size()", equalTo(1))
                .body("[196].'languages'", hasItems("pt"))
                .body("[196].'translations'.'de'", containsString("São Tomé und Príncipe"))
                .body("[196].'translations'.'es'", containsString("Santo Tomé y Príncipe"))
                .body("[196].'translations'.'fr'", containsString("Sao Tomé-et-Principe"))
                .body("[196].'translations'.'ja'", containsString("サントメ・プリンシペ"))
                .body("[196].'translations'.'it'", containsString("São Tomé e Príncipe"))
                .body("[196].'relevance'", containsString("0"))
                .body("[197].'name'", containsString("Saudi Arabia"))
                .body("[197].'topLevelDomain'.size()", equalTo(1))
                .body("[197].'topLevelDomain'", hasItems(".sa"))
                .body("[197].'alpha2Code'", containsString("SA"))
                .body("[197].'alpha3Code'", containsString("SAU"))
                .body("[197].'callingCodes'.size()", equalTo(1))
                .body("[197].'callingCodes'", hasItems("966"))
                .body("[197].'capital'", containsString("Riyadh"))
                .body("[197].'altSpellings'.size()", equalTo(3))
                .body("[197].'altSpellings'", hasItems("SA", "Kingdom of Saudi Arabia", "Al-Mamlakah al-‘Arabiyyah as-Su‘ūdiyyah"))
                .body("[197].'region'", containsString("Asia"))
                .body("[197].'subregion'", containsString("Western Asia"))
                .body("[197].'population'", numberMatches(3.1521418E7))
                .body("[197].'latlng'.size()", equalTo(2))
                .body("[197].'latlng'[0]", numberMatches(25.0))
                .body("[197].'latlng'[1]", numberMatches(45.0))
                .body("[197].'demonym'", containsString("Saudi Arabian"))
                .body("[197].'area'", numberMatches(2149690.0))
                .body("[197].'gini'", nullValue())
                .body("[197].'timezones'.size()", equalTo(1))
                .body("[197].'timezones'", hasItems("UTC+03:00"))
                .body("[197].'borders'.size()", equalTo(7))
                .body("[197].'borders'", hasItems("IRQ", "JOR", "KWT", "OMN", "QAT", "ARE", "YEM"))
                .body("[197].'nativeName'", containsString("العربية السعودية"))
                .body("[197].'numericCode'", containsString("682"))
                .body("[197].'currencies'.size()", equalTo(1))
                .body("[197].'currencies'", hasItems("SAR"))
                .body("[197].'languages'.size()", equalTo(1))
                .body("[197].'languages'", hasItems("ar"))
                .body("[197].'translations'.'de'", containsString("Saudi-Arabien"))
                .body("[197].'translations'.'es'", containsString("Arabia Saudí"))
                .body("[197].'translations'.'fr'", containsString("Arabie Saoudite"))
                .body("[197].'translations'.'ja'", containsString("サウジアラビア"))
                .body("[197].'translations'.'it'", containsString("Arabia Saudita"))
                .body("[197].'relevance'", containsString("0"))
                .body("[198].'name'", containsString("Senegal"))
                .body("[198].'topLevelDomain'.size()", equalTo(1))
                .body("[198].'topLevelDomain'", hasItems(".sn"))
                .body("[198].'alpha2Code'", containsString("SN"))
                .body("[198].'alpha3Code'", containsString("SEN"))
                .body("[198].'callingCodes'.size()", equalTo(1))
                .body("[198].'callingCodes'", hasItems("221"))
                .body("[198].'capital'", containsString("Dakar"))
                .body("[198].'altSpellings'.size()", equalTo(3))
                .body("[198].'altSpellings'", hasItems("SN", "Republic of Senegal", "République du Sénégal"))
                .body("[198].'region'", containsString("Africa"))
                .body("[198].'subregion'", containsString("Western Africa"))
                .body("[198].'population'", numberMatches(1.3508715E7))
                .body("[198].'latlng'.size()", equalTo(2))
                .body("[198].'latlng'[0]", numberMatches(14.0))
                .body("[198].'latlng'[1]", numberMatches(-14.0))
                .body("[198].'demonym'", containsString("Senegalese"))
                .body("[198].'area'", numberMatches(196722.0))
                .body("[198].'gini'", numberMatches(39.2))
                .body("[198].'timezones'.size()", equalTo(1))
                .body("[198].'timezones'", hasItems("UTC"))
                .body("[198].'borders'.size()", equalTo(5))
                .body("[198].'borders'", hasItems("GMB", "GIN", "GNB", "MLI", "MRT"))
                .body("[198].'nativeName'", containsString("Sénégal"))
                .body("[198].'numericCode'", containsString("686"))
                .body("[198].'currencies'.size()", equalTo(1))
                .body("[198].'currencies'", hasItems("XOF"))
                .body("[198].'languages'.size()", equalTo(1))
                .body("[198].'languages'", hasItems("fr"))
                .body("[198].'translations'.'de'", containsString("Senegal"))
                .body("[198].'translations'.'es'", containsString("Senegal"))
                .body("[198].'translations'.'fr'", containsString("Sénégal"))
                .body("[198].'translations'.'ja'", containsString("セネガル"))
                .body("[198].'translations'.'it'", containsString("Senegal"))
                .body("[198].'relevance'", containsString("0"))
                .body("[199].'name'", containsString("Serbia"))
                .body("[199].'topLevelDomain'.size()", equalTo(1))
                .body("[199].'topLevelDomain'", hasItems(".rs"))
                .body("[199].'alpha2Code'", containsString("RS"))
                .body("[199].'alpha3Code'", containsString("SRB"))
                .body("[199].'callingCodes'.size()", equalTo(1))
                .body("[199].'callingCodes'", hasItems("381"))
                .body("[199].'capital'", containsString("Belgrade"))
                .body("[199].'altSpellings'.size()", equalTo(5))
                .body("[199].'altSpellings'", hasItems("RS", "Srbija", "Republic of Serbia", "Република Србија", "Republika Srbija"))
                .body("[199].'region'", containsString("Europe"))
                .body("[199].'subregion'", containsString("Southern Europe"))
                .body("[199].'population'", numberMatches(7114393.0))
                .body("[199].'latlng'.size()", equalTo(2))
                .body("[199].'latlng'[0]", numberMatches(44.0))
                .body("[199].'latlng'[1]", numberMatches(21.0))
                .body("[199].'demonym'", containsString("Serbian"))
                .body("[199].'area'", numberMatches(88361.0))
                .body("[199].'gini'", numberMatches(27.8))
                .body("[199].'timezones'.size()", equalTo(1))
                .body("[199].'timezones'", hasItems("UTC+01:00"))
                .body("[199].'borders'.size()", equalTo(8))
                .body("[199].'borders'", hasItems("BIH", "BGR", "HRV", "HUN", "KOS", "MKD", "MNE", "ROU"))
                .body("[199].'nativeName'", containsString("Србија"))
                .body("[199].'numericCode'", containsString("688"))
                .body("[199].'currencies'.size()", equalTo(1))
                .body("[199].'currencies'", hasItems("RSD"))
                .body("[199].'languages'.size()", equalTo(1))
                .body("[199].'languages'", hasItems("sr"))
                .body("[199].'translations'.'de'", containsString("Serbien"))
                .body("[199].'translations'.'es'", containsString("Serbia"))
                .body("[199].'translations'.'fr'", containsString("Serbie"))
                .body("[199].'translations'.'ja'", containsString("セルビア"))
                .body("[199].'translations'.'it'", containsString("Serbia"))
                .body("[199].'relevance'", containsString("0"))
                .body("[200].'name'", containsString("Seychelles"))
                .body("[200].'topLevelDomain'.size()", equalTo(1))
                .body("[200].'topLevelDomain'", hasItems(".sc"))
                .body("[200].'alpha2Code'", containsString("SC"))
                .body("[200].'alpha3Code'", containsString("SYC"))
                .body("[200].'callingCodes'.size()", equalTo(1))
                .body("[200].'callingCodes'", hasItems("248"))
                .body("[200].'capital'", containsString("Victoria"))
                .body("[200].'altSpellings'.size()", equalTo(4))
                .body("[200].'altSpellings'", hasItems("SC", "Republic of Seychelles", "Repiblik Sesel", "République des Seychelles"))
                .body("[200].'region'", containsString("Africa"))
                .body("[200].'subregion'", containsString("Eastern Africa"))
                .body("[200].'population'", numberMatches(89949.0))
                .body("[200].'latlng'.size()", equalTo(2))
                .body("[200].'latlng'[0]", numberMatches(-4.58333333))
                .body("[200].'latlng'[1]", numberMatches(55.66666666))
                .body("[200].'demonym'", containsString("Seychellois"))
                .body("[200].'area'", numberMatches(452.0))
                .body("[200].'gini'", numberMatches(65.8))
                .body("[200].'timezones'.size()", equalTo(1))
                .body("[200].'timezones'", hasItems("UTC+04:00"))
                .body("[200].'borders'.size()", equalTo(0))
                .body("[200].'nativeName'", containsString("Seychelles"))
                .body("[200].'numericCode'", containsString("690"))
                .body("[200].'currencies'.size()", equalTo(1))
                .body("[200].'currencies'", hasItems("SCR"))
                .body("[200].'languages'.size()", equalTo(2))
                .body("[200].'languages'", hasItems("fr", "en"))
                .body("[200].'translations'.'de'", containsString("Seychellen"))
                .body("[200].'translations'.'es'", containsString("Seychelles"))
                .body("[200].'translations'.'fr'", containsString("Seychelles"))
                .body("[200].'translations'.'ja'", containsString("セーシェル"))
                .body("[200].'translations'.'it'", containsString("Seychelles"))
                .body("[200].'relevance'", containsString("0.5"))
                .body("[201].'name'", containsString("Sierra Leone"))
                .body("[201].'topLevelDomain'.size()", equalTo(1))
                .body("[201].'topLevelDomain'", hasItems(".sl"))
                .body("[201].'alpha2Code'", containsString("SL"))
                .body("[201].'alpha3Code'", containsString("SLE"))
                .body("[201].'callingCodes'.size()", equalTo(1))
                .body("[201].'callingCodes'", hasItems("232"))
                .body("[201].'capital'", containsString("Freetown"))
                .body("[201].'altSpellings'.size()", equalTo(2))
                .body("[201].'altSpellings'", hasItems("SL", "Republic of Sierra Leone"))
                .body("[201].'region'", containsString("Africa"))
                .body("[201].'subregion'", containsString("Western Africa"))
                .body("[201].'population'", numberMatches(6453000.0))
                .body("[201].'latlng'.size()", equalTo(2))
                .body("[201].'latlng'[0]", numberMatches(8.5))
                .body("[201].'latlng'[1]", numberMatches(-11.5))
                .body("[201].'demonym'", containsString("Sierra Leonean"))
                .body("[201].'area'", numberMatches(71740.0))
                .body("[201].'gini'", numberMatches(42.5))
                .body("[201].'timezones'.size()", equalTo(1))
                .body("[201].'timezones'", hasItems("UTC"))
                .body("[201].'borders'.size()", equalTo(2))
                .body("[201].'borders'", hasItems("GIN", "LBR"))
                .body("[201].'nativeName'", containsString("Sierra Leone"))
                .body("[201].'numericCode'", containsString("694"))
                .body("[201].'currencies'.size()", equalTo(1))
                .body("[201].'currencies'", hasItems("SLL"))
                .body("[201].'languages'.size()", equalTo(1))
                .body("[201].'languages'", hasItems("en"))
                .body("[201].'translations'.'de'", containsString("Sierra Leone"))
                .body("[201].'translations'.'es'", containsString("Sierra Leone"))
                .body("[201].'translations'.'fr'", containsString("Sierra Leone"))
                .body("[201].'translations'.'ja'", containsString("シエラレオネ"))
                .body("[201].'translations'.'it'", containsString("Sierra Leone"))
                .body("[201].'relevance'", containsString("0"))
                .body("[202].'name'", containsString("Singapore"))
                .body("[202].'topLevelDomain'.size()", equalTo(1))
                .body("[202].'topLevelDomain'", hasItems(".sg"))
                .body("[202].'alpha2Code'", containsString("SG"))
                .body("[202].'alpha3Code'", containsString("SGP"))
                .body("[202].'callingCodes'.size()", equalTo(1))
                .body("[202].'callingCodes'", hasItems("65"))
                .body("[202].'capital'", containsString("Singapore"))
                .body("[202].'altSpellings'.size()", equalTo(4))
                .body("[202].'altSpellings'", hasItems("SG", "Singapura", "Republik Singapura", "新加坡共和国"))
                .body("[202].'region'", containsString("Asia"))
                .body("[202].'subregion'", containsString("South-Eastern Asia"))
                .body("[202].'population'", numberMatches(5469700.0))
                .body("[202].'latlng'.size()", equalTo(2))
                .body("[202].'latlng'[0]", numberMatches(1.36666666))
                .body("[202].'latlng'[1]", numberMatches(103.8))
                .body("[202].'demonym'", containsString("Singaporean"))
                .body("[202].'area'", numberMatches(710.0))
                .body("[202].'gini'", numberMatches(48.1))
                .body("[202].'timezones'.size()", equalTo(1))
                .body("[202].'timezones'", hasItems("UTC+08:00"))
                .body("[202].'borders'.size()", equalTo(0))
                .body("[202].'nativeName'", containsString("Singapore"))
                .body("[202].'numericCode'", containsString("702"))
                .body("[202].'currencies'.size()", equalTo(1))
                .body("[202].'currencies'", hasItems("SGD"))
                .body("[202].'languages'.size()", equalTo(4))
                .body("[202].'languages'", hasItems("en", "ms", "ta", "zh"))
                .body("[202].'translations'.'de'", containsString("Singapur"))
                .body("[202].'translations'.'es'", containsString("Singapur"))
                .body("[202].'translations'.'fr'", containsString("Singapour"))
                .body("[202].'translations'.'ja'", containsString("シンガポール"))
                .body("[202].'translations'.'it'", containsString("Singapore"))
                .body("[202].'relevance'", containsString("0"))
                .body("[203].'name'", containsString("Sint Maarten"))
                .body("[203].'topLevelDomain'.size()", equalTo(1))
                .body("[203].'topLevelDomain'", hasItems(".sx"))
                .body("[203].'alpha2Code'", containsString("SX"))
                .body("[203].'alpha3Code'", containsString("SXM"))
                .body("[203].'callingCodes'.size()", equalTo(1))
                .body("[203].'callingCodes'", hasItems("1"))
                .body("[203].'capital'", containsString("Philipsburg"))
                .body("[203].'altSpellings'.size()", equalTo(1))
                .body("[203].'altSpellings'", hasItems("SX"))
                .body("[203].'region'", containsString("Americas"))
                .body("[203].'subregion'", containsString("Caribbean"))
                .body("[203].'population'", numberMatches(37429.0))
                .body("[203].'latlng'.size()", equalTo(2))
                .body("[203].'latlng'[0]", numberMatches(18.033333))
                .body("[203].'latlng'[1]", numberMatches(-63.05))
                .body("[203].'demonym'", containsString("Dutch"))
                .body("[203].'area'", numberMatches(34.0))
                .body("[203].'gini'", nullValue())
                .body("[203].'timezones'.size()", equalTo(1))
                .body("[203].'timezones'", hasItems("UTC-04:00"))
                .body("[203].'borders'.size()", equalTo(1))
                .body("[203].'borders'", hasItems("MAF"))
                .body("[203].'nativeName'", containsString("Sint Maarten"))
                .body("[203].'numericCode'", containsString("534"))
                .body("[203].'currencies'.size()", equalTo(1))
                .body("[203].'currencies'", hasItems("ANG"))
                .body("[203].'languages'.size()", equalTo(2))
                .body("[203].'languages'", hasItems("nl", "en"))
                .body("[203].'translations'.'de'", nullValue())
                .body("[203].'translations'.'es'", nullValue())
                .body("[203].'translations'.'fr'", nullValue())
                .body("[203].'translations'.'ja'", nullValue())
                .body("[203].'translations'.'it'", nullValue())
                .body("[203].'relevance'", containsString("0"))
                .body("[204].'name'", containsString("Slovakia"))
                .body("[204].'topLevelDomain'.size()", equalTo(1))
                .body("[204].'topLevelDomain'", hasItems(".sk"))
                .body("[204].'alpha2Code'", containsString("SK"))
                .body("[204].'alpha3Code'", containsString("SVK"))
                .body("[204].'callingCodes'.size()", equalTo(1))
                .body("[204].'callingCodes'", hasItems("421"))
                .body("[204].'capital'", containsString("Bratislava"))
                .body("[204].'altSpellings'.size()", equalTo(3))
                .body("[204].'altSpellings'", hasItems("SK", "Slovak Republic", "Slovenská republika"))
                .body("[204].'region'", containsString("Europe"))
                .body("[204].'subregion'", containsString("Eastern Europe"))
                .body("[204].'population'", numberMatches(5421349.0))
                .body("[204].'latlng'.size()", equalTo(2))
                .body("[204].'latlng'[0]", numberMatches(48.66666666))
                .body("[204].'latlng'[1]", numberMatches(19.5))
                .body("[204].'demonym'", containsString("Slovak"))
                .body("[204].'area'", numberMatches(49037.0))
                .body("[204].'gini'", numberMatches(26.0))
                .body("[204].'timezones'.size()", equalTo(1))
                .body("[204].'timezones'", hasItems("UTC+01:00"))
                .body("[204].'borders'.size()", equalTo(5))
                .body("[204].'borders'", hasItems("AUT", "CZE", "HUN", "POL", "UKR"))
                .body("[204].'nativeName'", containsString("Slovensko"))
                .body("[204].'numericCode'", containsString("703"))
                .body("[204].'currencies'.size()", equalTo(1))
                .body("[204].'currencies'", hasItems("EUR"))
                .body("[204].'languages'.size()", equalTo(1))
                .body("[204].'languages'", hasItems("sk"))
                .body("[204].'translations'.'de'", containsString("Slowakei"))
                .body("[204].'translations'.'es'", containsString("República Eslovaca"))
                .body("[204].'translations'.'fr'", containsString("Slovaquie"))
                .body("[204].'translations'.'ja'", containsString("スロバキア"))
                .body("[204].'translations'.'it'", containsString("Slovacchia"))
                .body("[204].'relevance'", containsString("0"))
                .body("[205].'name'", containsString("Slovenia"))
                .body("[205].'topLevelDomain'.size()", equalTo(1))
                .body("[205].'topLevelDomain'", hasItems(".si"))
                .body("[205].'alpha2Code'", containsString("SI"))
                .body("[205].'alpha3Code'", containsString("SVN"))
                .body("[205].'callingCodes'.size()", equalTo(1))
                .body("[205].'callingCodes'", hasItems("386"))
                .body("[205].'capital'", containsString("Ljubljana"))
                .body("[205].'altSpellings'.size()", equalTo(3))
                .body("[205].'altSpellings'", hasItems("SI", "Republic of Slovenia", "Republika Slovenija"))
                .body("[205].'region'", containsString("Europe"))
                .body("[205].'subregion'", containsString("Southern Europe"))
                .body("[205].'population'", numberMatches(2067683.0))
                .body("[205].'latlng'.size()", equalTo(2))
                .body("[205].'latlng'[0]", numberMatches(46.11666666))
                .body("[205].'latlng'[1]", numberMatches(14.81666666))
                .body("[205].'demonym'", containsString("Slovene"))
                .body("[205].'area'", numberMatches(20273.0))
                .body("[205].'gini'", numberMatches(31.2))
                .body("[205].'timezones'.size()", equalTo(1))
                .body("[205].'timezones'", hasItems("UTC+01:00"))
                .body("[205].'borders'.size()", equalTo(4))
                .body("[205].'borders'", hasItems("AUT", "HRV", "ITA", "HUN"))
                .body("[205].'nativeName'", containsString("Slovenija"))
                .body("[205].'numericCode'", containsString("705"))
                .body("[205].'currencies'.size()", equalTo(1))
                .body("[205].'currencies'", hasItems("EUR"))
                .body("[205].'languages'.size()", equalTo(1))
                .body("[205].'languages'", hasItems("sl"))
                .body("[205].'translations'.'de'", containsString("Slowenien"))
                .body("[205].'translations'.'es'", containsString("Eslovenia"))
                .body("[205].'translations'.'fr'", containsString("Slovénie"))
                .body("[205].'translations'.'ja'", containsString("スロベニア"))
                .body("[205].'translations'.'it'", containsString("Slovenia"))
                .body("[205].'relevance'", containsString("0"))
                .body("[206].'name'", containsString("Solomon Islands"))
                .body("[206].'topLevelDomain'.size()", equalTo(1))
                .body("[206].'topLevelDomain'", hasItems(".sb"))
                .body("[206].'alpha2Code'", containsString("SB"))
                .body("[206].'alpha3Code'", containsString("SLB"))
                .body("[206].'callingCodes'.size()", equalTo(1))
                .body("[206].'callingCodes'", hasItems("677"))
                .body("[206].'capital'", containsString("Honiara"))
                .body("[206].'altSpellings'.size()", equalTo(1))
                .body("[206].'altSpellings'", hasItems("SB"))
                .body("[206].'region'", containsString("Oceania"))
                .body("[206].'subregion'", containsString("Melanesia"))
                .body("[206].'population'", numberMatches(581344.0))
                .body("[206].'latlng'.size()", equalTo(2))
                .body("[206].'latlng'[0]", numberMatches(-8.0))
                .body("[206].'latlng'[1]", numberMatches(159.0))
                .body("[206].'demonym'", containsString("Solomon Islander"))
                .body("[206].'area'", numberMatches(28896.0))
                .body("[206].'gini'", nullValue())
                .body("[206].'timezones'.size()", equalTo(1))
                .body("[206].'timezones'", hasItems("UTC+11:00"))
                .body("[206].'borders'.size()", equalTo(0))
                .body("[206].'nativeName'", containsString("Solomon Islands"))
                .body("[206].'numericCode'", containsString("090"))
                .body("[206].'currencies'.size()", equalTo(1))
                .body("[206].'currencies'", hasItems("SBD"))
                .body("[206].'languages'.size()", equalTo(1))
                .body("[206].'languages'", hasItems("en"))
                .body("[206].'translations'.'de'", containsString("Salomonen"))
                .body("[206].'translations'.'es'", containsString("Islas Salomón"))
                .body("[206].'translations'.'fr'", containsString("Îles Salomon"))
                .body("[206].'translations'.'ja'", containsString("ソロモン諸島"))
                .body("[206].'translations'.'it'", containsString("Isole Salomone"))
                .body("[206].'relevance'", containsString("0"))
                .body("[207].'name'", containsString("Somalia"))
                .body("[207].'topLevelDomain'.size()", equalTo(1))
                .body("[207].'topLevelDomain'", hasItems(".so"))
                .body("[207].'alpha2Code'", containsString("SO"))
                .body("[207].'alpha3Code'", containsString("SOM"))
                .body("[207].'callingCodes'.size()", equalTo(1))
                .body("[207].'callingCodes'", hasItems("252"))
                .body("[207].'capital'", containsString("Mogadishu"))
                .body("[207].'altSpellings'.size()", equalTo(5))
                .body("[207].'altSpellings'", hasItems("SO", "aṣ-Ṣūmāl", "Federal Republic of Somalia", "Jamhuuriyadda Federaalka Soomaaliya", "Jumhūriyyat aṣ-Ṣūmāl al-Fiderāliyya"))
                .body("[207].'region'", containsString("Africa"))
                .body("[207].'subregion'", containsString("Eastern Africa"))
                .body("[207].'population'", numberMatches(1.0787E7))
                .body("[207].'latlng'.size()", equalTo(2))
                .body("[207].'latlng'[0]", numberMatches(10.0))
                .body("[207].'latlng'[1]", numberMatches(49.0))
                .body("[207].'demonym'", containsString("Somali"))
                .body("[207].'area'", numberMatches(637657.0))
                .body("[207].'gini'", nullValue())
                .body("[207].'timezones'.size()", equalTo(1))
                .body("[207].'timezones'", hasItems("UTC+03:00"))
                .body("[207].'borders'.size()", equalTo(3))
                .body("[207].'borders'", hasItems("DJI", "ETH", "KEN"))
                .body("[207].'nativeName'", containsString("Soomaaliya"))
                .body("[207].'numericCode'", containsString("706"))
                .body("[207].'currencies'.size()", equalTo(1))
                .body("[207].'currencies'", hasItems("SOS"))
                .body("[207].'languages'.size()", equalTo(2))
                .body("[207].'languages'", hasItems("so", "ar"))
                .body("[207].'translations'.'de'", containsString("Somalia"))
                .body("[207].'translations'.'es'", containsString("Somalia"))
                .body("[207].'translations'.'fr'", containsString("Somalie"))
                .body("[207].'translations'.'ja'", containsString("ソマリア"))
                .body("[207].'translations'.'it'", containsString("Somalia"))
                .body("[207].'relevance'", containsString("0"))
                .body("[208].'name'", containsString("South Africa"))
                .body("[208].'topLevelDomain'.size()", equalTo(1))
                .body("[208].'topLevelDomain'", hasItems(".za"))
                .body("[208].'alpha2Code'", containsString("ZA"))
                .body("[208].'alpha3Code'", containsString("ZAF"))
                .body("[208].'callingCodes'.size()", equalTo(1))
                .body("[208].'callingCodes'", hasItems("27"))
                .body("[208].'capital'", containsString("Pretoria"))
                .body("[208].'altSpellings'.size()", equalTo(4))
                .body("[208].'altSpellings'", hasItems("ZA", "RSA", "Suid-Afrika", "Republic of South Africa"))
                .body("[208].'region'", containsString("Africa"))
                .body("[208].'subregion'", containsString("Southern Africa"))
                .body("[208].'population'", numberMatches(5.49569E7))
                .body("[208].'latlng'.size()", equalTo(2))
                .body("[208].'latlng'[0]", numberMatches(-29.0))
                .body("[208].'latlng'[1]", numberMatches(24.0))
                .body("[208].'demonym'", containsString("South African"))
                .body("[208].'area'", numberMatches(1221037.0))
                .body("[208].'gini'", numberMatches(63.1))
                .body("[208].'timezones'.size()", equalTo(1))
                .body("[208].'timezones'", hasItems("UTC+02:00"))
                .body("[208].'borders'.size()", equalTo(6))
                .body("[208].'borders'", hasItems("BWA", "LSO", "MOZ", "NAM", "SWZ", "ZWE"))
                .body("[208].'nativeName'", containsString("South Africa"))
                .body("[208].'numericCode'", containsString("710"))
                .body("[208].'currencies'.size()", equalTo(1))
                .body("[208].'currencies'", hasItems("ZAR"))
                .body("[208].'languages'.size()", equalTo(10))
                .body("[208].'languages'", hasItems("af", "en", "nr", "st", "ss", "tn", "ts", "ve", "xh", "zu"))
                .body("[208].'translations'.'de'", containsString("Republik Südafrika"))
                .body("[208].'translations'.'es'", containsString("República de Sudáfrica"))
                .body("[208].'translations'.'fr'", containsString("Afrique du Sud"))
                .body("[208].'translations'.'ja'", containsString("南アフリカ"))
                .body("[208].'translations'.'it'", containsString("Sud Africa"))
                .body("[208].'relevance'", containsString("0"))
                .body("[209].'name'", containsString("South Georgia"))
                .body("[209].'topLevelDomain'.size()", equalTo(1))
                .body("[209].'topLevelDomain'", hasItems(".gs"))
                .body("[209].'alpha2Code'", containsString("GS"))
                .body("[209].'alpha3Code'", containsString("SGS"))
                .body("[209].'callingCodes'.size()", equalTo(1))
                .body("[209].'callingCodes'", hasItems("500"))
                .body("[209].'capital'", containsString("King Edward Point"))
                .body("[209].'altSpellings'.size()", equalTo(2))
                .body("[209].'altSpellings'", hasItems("GS", "South Georgia and the South Sandwich Islands"))
                .body("[209].'region'", containsString("Americas"))
                .body("[209].'subregion'", containsString("South America"))
                .body("[209].'population'", numberMatches(30.0))
                .body("[209].'latlng'.size()", equalTo(2))
                .body("[209].'latlng'[0]", numberMatches(-54.5))
                .body("[209].'latlng'[1]", numberMatches(-37.0))
                .body("[209].'demonym'", containsString("South Georgia and the South Sandwich Islander"))
                .body("[209].'area'", nullValue())
                .body("[209].'gini'", nullValue())
                .body("[209].'timezones'.size()", equalTo(1))
                .body("[209].'timezones'", hasItems("UTC-02:00"))
                .body("[209].'borders'.size()", equalTo(0))
                .body("[209].'nativeName'", containsString("South Georgia"))
                .body("[209].'numericCode'", containsString("239"))
                .body("[209].'currencies'.size()", equalTo(1))
                .body("[209].'currencies'", hasItems("GBP"))
                .body("[209].'languages'.size()", equalTo(1))
                .body("[209].'languages'", hasItems("en"))
                .body("[209].'translations'.'de'", containsString("Südgeorgien und die Südlichen Sandwichinseln"))
                .body("[209].'translations'.'es'", containsString("Islas Georgias del Sur y Sandwich del Sur"))
                .body("[209].'translations'.'fr'", containsString("Géorgie du Sud-et-les Îles Sandwich du Sud"))
                .body("[209].'translations'.'ja'", containsString("サウスジョージア・サウスサンドウィッチ諸島"))
                .body("[209].'translations'.'it'", containsString("Georgia del Sud e Isole Sandwich Meridionali"))
                .body("[209].'relevance'", containsString("0"))
                .body("[210].'name'", containsString("South Korea"))
                .body("[210].'topLevelDomain'.size()", equalTo(1))
                .body("[210].'topLevelDomain'", hasItems(".kr"))
                .body("[210].'alpha2Code'", containsString("KR"))
                .body("[210].'alpha3Code'", containsString("KOR"))
                .body("[210].'callingCodes'.size()", equalTo(1))
                .body("[210].'callingCodes'", hasItems("82"))
                .body("[210].'capital'", containsString("Seoul"))
                .body("[210].'altSpellings'.size()", equalTo(2))
                .body("[210].'altSpellings'", hasItems("KR", "Republic of Korea"))
                .body("[210].'region'", containsString("Asia"))
                .body("[210].'subregion'", containsString("Eastern Asia"))
                .body("[210].'population'", numberMatches(5.1448183E7))
                .body("[210].'latlng'.size()", equalTo(2))
                .body("[210].'latlng'[0]", numberMatches(37.0))
                .body("[210].'latlng'[1]", numberMatches(127.5))
                .body("[210].'demonym'", containsString("South Korean"))
                .body("[210].'area'", numberMatches(100210.0))
                .body("[210].'gini'", numberMatches(31.3))
                .body("[210].'timezones'.size()", equalTo(1))
                .body("[210].'timezones'", hasItems("UTC+09:00"))
                .body("[210].'borders'.size()", equalTo(1))
                .body("[210].'borders'", hasItems("PRK"))
                .body("[210].'nativeName'", containsString("대한민국"))
                .body("[210].'numericCode'", containsString("410"))
                .body("[210].'currencies'.size()", equalTo(1))
                .body("[210].'currencies'", hasItems("KRW"))
                .body("[210].'languages'.size()", equalTo(1))
                .body("[210].'languages'", hasItems("ko"))
                .body("[210].'translations'.'de'", containsString("Südkorea"))
                .body("[210].'translations'.'es'", containsString("Corea del Sur"))
                .body("[210].'translations'.'fr'", containsString("Corée du Sud"))
                .body("[210].'translations'.'ja'", containsString("大韓民国"))
                .body("[210].'translations'.'it'", containsString("Corea del Sud"))
                .body("[210].'relevance'", containsString("1.5"))
                .body("[211].'name'", containsString("South Sudan"))
                .body("[211].'topLevelDomain'.size()", equalTo(1))
                .body("[211].'topLevelDomain'", hasItems(".ss"))
                .body("[211].'alpha2Code'", containsString("SS"))
                .body("[211].'alpha3Code'", containsString("SSD"))
                .body("[211].'callingCodes'.size()", equalTo(1))
                .body("[211].'callingCodes'", hasItems("211"))
                .body("[211].'capital'", containsString("Juba"))
                .body("[211].'altSpellings'.size()", equalTo(1))
                .body("[211].'altSpellings'", hasItems("SS"))
                .body("[211].'region'", containsString("Africa"))
                .body("[211].'subregion'", containsString("Middle Africa"))
                .body("[211].'population'", numberMatches(1.1892934E7))
                .body("[211].'latlng'.size()", equalTo(2))
                .body("[211].'latlng'[0]", numberMatches(7.0))
                .body("[211].'latlng'[1]", numberMatches(30.0))
                .body("[211].'demonym'", containsString("South Sudanese"))
                .body("[211].'area'", numberMatches(619745.0))
                .body("[211].'gini'", numberMatches(45.5))
                .body("[211].'timezones'.size()", equalTo(1))
                .body("[211].'timezones'", hasItems("UTC+03:00"))
                .body("[211].'borders'.size()", equalTo(6))
                .body("[211].'borders'", hasItems("CAF", "COD", "ETH", "KEN", "SDN", "UGA"))
                .body("[211].'nativeName'", containsString("South Sudan"))
                .body("[211].'numericCode'", containsString("728"))
                .body("[211].'currencies'.size()", equalTo(1))
                .body("[211].'currencies'", hasItems("SSP"))
                .body("[211].'languages'.size()", equalTo(1))
                .body("[211].'languages'", hasItems("en"))
                .body("[211].'translations'.'de'", containsString("Südsudan"))
                .body("[211].'translations'.'es'", containsString("Sudán del Sur"))
                .body("[211].'translations'.'fr'", containsString("Soudan du Sud"))
                .body("[211].'translations'.'ja'", containsString("南スーダン"))
                .body("[211].'translations'.'it'", containsString("Sudan del sud"))
                .body("[211].'relevance'", containsString("0"))
                .body("[212].'name'", containsString("Spain"))
                .body("[212].'topLevelDomain'.size()", equalTo(1))
                .body("[212].'topLevelDomain'", hasItems(".es"))
                .body("[212].'alpha2Code'", containsString("ES"))
                .body("[212].'alpha3Code'", containsString("ESP"))
                .body("[212].'callingCodes'.size()", equalTo(1))
                .body("[212].'callingCodes'", hasItems("34"))
                .body("[212].'capital'", containsString("Madrid"))
                .body("[212].'altSpellings'.size()", equalTo(3))
                .body("[212].'altSpellings'", hasItems("ES", "Kingdom of Spain", "Reino de España"))
                .body("[212].'region'", containsString("Europe"))
                .body("[212].'subregion'", containsString("Southern Europe"))
                .body("[212].'population'", numberMatches(4.6439864E7))
                .body("[212].'latlng'.size()", equalTo(2))
                .body("[212].'latlng'[0]", numberMatches(40.0))
                .body("[212].'latlng'[1]", numberMatches(-4.0))
                .body("[212].'demonym'", containsString("Spanish"))
                .body("[212].'area'", numberMatches(505992.0))
                .body("[212].'gini'", numberMatches(34.7))
                .body("[212].'timezones'.size()", equalTo(2))
                .body("[212].'timezones'", hasItems("UTC", "UTC+01:00"))
                .body("[212].'borders'.size()", equalTo(5))
                .body("[212].'borders'", hasItems("AND", "FRA", "GIB", "PRT", "MAR"))
                .body("[212].'nativeName'", containsString("España"))
                .body("[212].'numericCode'", containsString("724"))
                .body("[212].'currencies'.size()", equalTo(1))
                .body("[212].'currencies'", hasItems("EUR"))
                .body("[212].'languages'.size()", equalTo(1))
                .body("[212].'languages'", hasItems("es"))
                .body("[212].'translations'.'de'", containsString("Spanien"))
                .body("[212].'translations'.'es'", containsString("España"))
                .body("[212].'translations'.'fr'", containsString("Espagne"))
                .body("[212].'translations'.'ja'", containsString("スペイン"))
                .body("[212].'translations'.'it'", containsString("Spagna"))
                .body("[212].'relevance'", containsString("2"))
                .body("[213].'name'", containsString("Sri Lanka"))
                .body("[213].'topLevelDomain'.size()", equalTo(1))
                .body("[213].'topLevelDomain'", hasItems(".lk"))
                .body("[213].'alpha2Code'", containsString("LK"))
                .body("[213].'alpha3Code'", containsString("LKA"))
                .body("[213].'callingCodes'.size()", equalTo(1))
                .body("[213].'callingCodes'", hasItems("94"))
                .body("[213].'capital'", containsString("Colombo"))
                .body("[213].'altSpellings'.size()", equalTo(3))
                .body("[213].'altSpellings'", hasItems("LK", "ilaṅkai", "Democratic Socialist Republic of Sri Lanka"))
                .body("[213].'region'", containsString("Asia"))
                .body("[213].'subregion'", containsString("Southern Asia"))
                .body("[213].'population'", numberMatches(2.0675E7))
                .body("[213].'latlng'.size()", equalTo(2))
                .body("[213].'latlng'[0]", numberMatches(7.0))
                .body("[213].'latlng'[1]", numberMatches(81.0))
                .body("[213].'demonym'", containsString("Sri Lankan"))
                .body("[213].'area'", numberMatches(65610.0))
                .body("[213].'gini'", numberMatches(40.3))
                .body("[213].'timezones'.size()", equalTo(1))
                .body("[213].'timezones'", hasItems("UTC+05:30"))
                .body("[213].'borders'.size()", equalTo(1))
                .body("[213].'borders'", hasItems("IND"))
                .body("[213].'nativeName'", containsString("śrī laṃkāva"))
                .body("[213].'numericCode'", containsString("144"))
                .body("[213].'currencies'.size()", equalTo(1))
                .body("[213].'currencies'", hasItems("LKR"))
                .body("[213].'languages'.size()", equalTo(2))
                .body("[213].'languages'", hasItems("si", "ta"))
                .body("[213].'translations'.'de'", containsString("Sri Lanka"))
                .body("[213].'translations'.'es'", containsString("Sri Lanka"))
                .body("[213].'translations'.'fr'", containsString("Sri Lanka"))
                .body("[213].'translations'.'ja'", containsString("スリランカ"))
                .body("[213].'translations'.'it'", containsString("Sri Lanka"))
                .body("[213].'relevance'", containsString("0"))
                .body("[214].'name'", containsString("Sudan"))
                .body("[214].'topLevelDomain'.size()", equalTo(1))
                .body("[214].'topLevelDomain'", hasItems(".sd"))
                .body("[214].'alpha2Code'", containsString("SD"))
                .body("[214].'alpha3Code'", containsString("SDN"))
                .body("[214].'callingCodes'.size()", equalTo(1))
                .body("[214].'callingCodes'", hasItems("249"))
                .body("[214].'capital'", containsString("Khartoum"))
                .body("[214].'altSpellings'.size()", equalTo(3))
                .body("[214].'altSpellings'", hasItems("SD", "Republic of the Sudan", "Jumhūrīyat as-Sūdān"))
                .body("[214].'region'", containsString("Africa"))
                .body("[214].'subregion'", containsString("Northern Africa"))
                .body("[214].'population'", numberMatches(3.8435252E7))
                .body("[214].'latlng'.size()", equalTo(2))
                .body("[214].'latlng'[0]", numberMatches(15.0))
                .body("[214].'latlng'[1]", numberMatches(30.0))
                .body("[214].'demonym'", containsString("Sudanese"))
                .body("[214].'area'", numberMatches(1886068.0))
                .body("[214].'gini'", numberMatches(35.3))
                .body("[214].'timezones'.size()", equalTo(1))
                .body("[214].'timezones'", hasItems("UTC+03:00"))
                .body("[214].'borders'.size()", equalTo(7))
                .body("[214].'borders'", hasItems("CAF", "TCD", "EGY", "ERI", "ETH", "LBY", "SSD"))
                .body("[214].'nativeName'", containsString("السودان"))
                .body("[214].'numericCode'", containsString("729"))
                .body("[214].'currencies'.size()", equalTo(1))
                .body("[214].'currencies'", hasItems("SDG"))
                .body("[214].'languages'.size()", equalTo(2))
                .body("[214].'languages'", hasItems("ar", "en"))
                .body("[214].'translations'.'de'", containsString("Sudan"))
                .body("[214].'translations'.'es'", containsString("Sudán"))
                .body("[214].'translations'.'fr'", containsString("Soudan"))
                .body("[214].'translations'.'ja'", containsString("スーダン"))
                .body("[214].'translations'.'it'", containsString("Sudan"))
                .body("[214].'relevance'", containsString("0"))
                .body("[215].'name'", containsString("Suriname"))
                .body("[215].'topLevelDomain'.size()", equalTo(1))
                .body("[215].'topLevelDomain'", hasItems(".sr"))
                .body("[215].'alpha2Code'", containsString("SR"))
                .body("[215].'alpha3Code'", containsString("SUR"))
                .body("[215].'callingCodes'.size()", equalTo(1))
                .body("[215].'callingCodes'", hasItems("597"))
                .body("[215].'capital'", containsString("Paramaribo"))
                .body("[215].'altSpellings'.size()", equalTo(5))
                .body("[215].'altSpellings'", hasItems("SR", "Sarnam", "Sranangron", "Republic of Suriname", "Republiek Suriname"))
                .body("[215].'region'", containsString("Americas"))
                .body("[215].'subregion'", containsString("South America"))
                .body("[215].'population'", numberMatches(534189.0))
                .body("[215].'latlng'.size()", equalTo(2))
                .body("[215].'latlng'[0]", numberMatches(4.0))
                .body("[215].'latlng'[1]", numberMatches(-56.0))
                .body("[215].'demonym'", containsString("Surinamer"))
                .body("[215].'area'", numberMatches(163820.0))
                .body("[215].'gini'", numberMatches(52.9))
                .body("[215].'timezones'.size()", equalTo(1))
                .body("[215].'timezones'", hasItems("UTC-03:00"))
                .body("[215].'borders'.size()", equalTo(4))
                .body("[215].'borders'", hasItems("BRA", "GUF", "FRA", "GUY"))
                .body("[215].'nativeName'", containsString("Suriname"))
                .body("[215].'numericCode'", containsString("740"))
                .body("[215].'currencies'.size()", equalTo(1))
                .body("[215].'currencies'", hasItems("SRD"))
                .body("[215].'languages'.size()", equalTo(1))
                .body("[215].'languages'", hasItems("nl"))
                .body("[215].'translations'.'de'", containsString("Suriname"))
                .body("[215].'translations'.'es'", containsString("Surinam"))
                .body("[215].'translations'.'fr'", containsString("Surinam"))
                .body("[215].'translations'.'ja'", containsString("スリナム"))
                .body("[215].'translations'.'it'", containsString("Suriname"))
                .body("[215].'relevance'", containsString("0"))
                .body("[216].'name'", containsString("Svalbard and Jan Mayen"))
                .body("[216].'topLevelDomain'.size()", equalTo(1))
                .body("[216].'topLevelDomain'", hasItems(".sj"))
                .body("[216].'alpha2Code'", containsString("SJ"))
                .body("[216].'alpha3Code'", containsString("SJM"))
                .body("[216].'callingCodes'.size()", equalTo(1))
                .body("[216].'callingCodes'", hasItems("47"))
                .body("[216].'capital'", containsString("Longyearbyen"))
                .body("[216].'altSpellings'.size()", equalTo(2))
                .body("[216].'altSpellings'", hasItems("SJ", "Svalbard and Jan Mayen Islands"))
                .body("[216].'region'", containsString("Europe"))
                .body("[216].'subregion'", containsString("Northern Europe"))
                .body("[216].'population'", numberMatches(2562.0))
                .body("[216].'latlng'.size()", equalTo(2))
                .body("[216].'latlng'[0]", numberMatches(78.0))
                .body("[216].'latlng'[1]", numberMatches(20.0))
                .body("[216].'demonym'", containsString("Norwegian"))
                .body("[216].'area'", nullValue())
                .body("[216].'gini'", nullValue())
                .body("[216].'timezones'.size()", equalTo(1))
                .body("[216].'timezones'", hasItems("UTC+01:00"))
                .body("[216].'borders'.size()", equalTo(0))
                .body("[216].'nativeName'", containsString("Svalbard og Jan Mayen"))
                .body("[216].'numericCode'", containsString("744"))
                .body("[216].'currencies'.size()", equalTo(1))
                .body("[216].'currencies'", hasItems("NOK"))
                .body("[216].'languages'.size()", equalTo(1))
                .body("[216].'languages'", hasItems("no"))
                .body("[216].'translations'.'de'", containsString("Svalbard und Jan Mayen"))
                .body("[216].'translations'.'es'", containsString("Islas Svalbard y Jan Mayen"))
                .body("[216].'translations'.'fr'", containsString("Svalbard et Jan Mayen"))
                .body("[216].'translations'.'ja'", containsString("スヴァールバル諸島およびヤンマイエン島"))
                .body("[216].'translations'.'it'", containsString("Svalbard e Jan Mayen"))
                .body("[216].'relevance'", containsString("0.5"))
                .body("[217].'name'", containsString("Swaziland"))
                .body("[217].'topLevelDomain'.size()", equalTo(1))
                .body("[217].'topLevelDomain'", hasItems(".sz"))
                .body("[217].'alpha2Code'", containsString("SZ"))
                .body("[217].'alpha3Code'", containsString("SWZ"))
                .body("[217].'callingCodes'.size()", equalTo(1))
                .body("[217].'callingCodes'", hasItems("268"))
                .body("[217].'capital'", containsString("Lobamba"))
                .body("[217].'altSpellings'.size()", equalTo(6))
                .body("[217].'altSpellings'", hasItems("SZ", "weSwatini", "Swatini", "Ngwane", "Kingdom of Swaziland", "Umbuso waseSwatini"))
                .body("[217].'region'", containsString("Africa"))
                .body("[217].'subregion'", containsString("Southern Africa"))
                .body("[217].'population'", numberMatches(1119375.0))
                .body("[217].'latlng'.size()", equalTo(2))
                .body("[217].'latlng'[0]", numberMatches(-26.5))
                .body("[217].'latlng'[1]", numberMatches(31.5))
                .body("[217].'demonym'", containsString("Swazi"))
                .body("[217].'area'", numberMatches(17364.0))
                .body("[217].'gini'", numberMatches(51.5))
                .body("[217].'timezones'.size()", equalTo(1))
                .body("[217].'timezones'", hasItems("UTC+02:00"))
                .body("[217].'borders'.size()", equalTo(2))
                .body("[217].'borders'", hasItems("MOZ", "ZAF"))
                .body("[217].'nativeName'", containsString("Swaziland"))
                .body("[217].'numericCode'", containsString("748"))
                .body("[217].'currencies'.size()", equalTo(1))
                .body("[217].'currencies'", hasItems("SZL"))
                .body("[217].'languages'.size()", equalTo(2))
                .body("[217].'languages'", hasItems("en", "ss"))
                .body("[217].'translations'.'de'", containsString("Swasiland"))
                .body("[217].'translations'.'es'", containsString("Suazilandia"))
                .body("[217].'translations'.'fr'", containsString("Swaziland"))
                .body("[217].'translations'.'ja'", containsString("スワジランド"))
                .body("[217].'translations'.'it'", containsString("Swaziland"))
                .body("[217].'relevance'", containsString("0"))
                .body("[218].'name'", containsString("Sweden"))
                .body("[218].'topLevelDomain'.size()", equalTo(1))
                .body("[218].'topLevelDomain'", hasItems(".se"))
                .body("[218].'alpha2Code'", containsString("SE"))
                .body("[218].'alpha3Code'", containsString("SWE"))
                .body("[218].'callingCodes'.size()", equalTo(1))
                .body("[218].'callingCodes'", hasItems("46"))
                .body("[218].'capital'", containsString("Stockholm"))
                .body("[218].'altSpellings'.size()", equalTo(3))
                .body("[218].'altSpellings'", hasItems("SE", "Kingdom of Sweden", "Konungariket Sverige"))
                .body("[218].'region'", containsString("Europe"))
                .body("[218].'subregion'", containsString("Northern Europe"))
                .body("[218].'population'", numberMatches(9793172.0))
                .body("[218].'latlng'.size()", equalTo(2))
                .body("[218].'latlng'[0]", numberMatches(62.0))
                .body("[218].'latlng'[1]", numberMatches(15.0))
                .body("[218].'demonym'", containsString("Swedish"))
                .body("[218].'area'", numberMatches(450295.0))
                .body("[218].'gini'", numberMatches(25.0))
                .body("[218].'timezones'.size()", equalTo(1))
                .body("[218].'timezones'", hasItems("UTC+01:00"))
                .body("[218].'borders'.size()", equalTo(2))
                .body("[218].'borders'", hasItems("FIN", "NOR"))
                .body("[218].'nativeName'", containsString("Sverige"))
                .body("[218].'numericCode'", containsString("752"))
                .body("[218].'currencies'.size()", equalTo(1))
                .body("[218].'currencies'", hasItems("SEK"))
                .body("[218].'languages'.size()", equalTo(1))
                .body("[218].'languages'", hasItems("sv"))
                .body("[218].'translations'.'de'", containsString("Schweden"))
                .body("[218].'translations'.'es'", containsString("Suecia"))
                .body("[218].'translations'.'fr'", containsString("Suède"))
                .body("[218].'translations'.'ja'", containsString("スウェーデン"))
                .body("[218].'translations'.'it'", containsString("Svezia"))
                .body("[218].'relevance'", containsString("1.5"))
                .body("[219].'name'", containsString("Switzerland"))
                .body("[219].'topLevelDomain'.size()", equalTo(1))
                .body("[219].'topLevelDomain'", hasItems(".ch"))
                .body("[219].'alpha2Code'", containsString("CH"))
                .body("[219].'alpha3Code'", containsString("CHE"))
                .body("[219].'callingCodes'.size()", equalTo(1))
                .body("[219].'callingCodes'", hasItems("41"))
                .body("[219].'capital'", containsString("Bern"))
                .body("[219].'altSpellings'.size()", equalTo(6))
                .body("[219].'altSpellings'", hasItems("CH", "Swiss Confederation", "Schweiz", "Suisse", "Svizzera", "Svizra"))
                .body("[219].'region'", containsString("Europe"))
                .body("[219].'subregion'", containsString("Western Europe"))
                .body("[219].'population'", numberMatches(8256000.0))
                .body("[219].'latlng'.size()", equalTo(2))
                .body("[219].'latlng'[0]", numberMatches(47.0))
                .body("[219].'latlng'[1]", numberMatches(8.0))
                .body("[219].'demonym'", containsString("Swiss"))
                .body("[219].'area'", numberMatches(41284.0))
                .body("[219].'gini'", numberMatches(33.7))
                .body("[219].'timezones'.size()", equalTo(1))
                .body("[219].'timezones'", hasItems("UTC+01:00"))
                .body("[219].'borders'.size()", equalTo(5))
                .body("[219].'borders'", hasItems("AUT", "FRA", "ITA", "LIE", "DEU"))
                .body("[219].'nativeName'", containsString("Schweiz"))
                .body("[219].'numericCode'", containsString("756"))
                .body("[219].'currencies'.size()", equalTo(3))
                .body("[219].'currencies'", hasItems("CHE", "CHF", "CHW"))
                .body("[219].'languages'.size()", equalTo(3))
                .body("[219].'languages'", hasItems("de", "fr", "it"))
                .body("[219].'translations'.'de'", containsString("Schweiz"))
                .body("[219].'translations'.'es'", containsString("Suiza"))
                .body("[219].'translations'.'fr'", containsString("Suisse"))
                .body("[219].'translations'.'ja'", containsString("スイス"))
                .body("[219].'translations'.'it'", containsString("Svizzera"))
                .body("[219].'relevance'", containsString("1.5"))
                .body("[220].'name'", containsString("Syria"))
                .body("[220].'topLevelDomain'.size()", equalTo(1))
                .body("[220].'topLevelDomain'", hasItems(".sy"))
                .body("[220].'alpha2Code'", containsString("SY"))
                .body("[220].'alpha3Code'", containsString("SYR"))
                .body("[220].'callingCodes'.size()", equalTo(1))
                .body("[220].'callingCodes'", hasItems("963"))
                .body("[220].'capital'", containsString("Damascus"))
                .body("[220].'altSpellings'.size()", equalTo(3))
                .body("[220].'altSpellings'", hasItems("SY", "Syrian Arab Republic", "Al-Jumhūrīyah Al-ʻArabīyah As-Sūrīyah"))
                .body("[220].'region'", containsString("Asia"))
                .body("[220].'subregion'", containsString("Western Asia"))
                .body("[220].'population'", numberMatches(2.3339517E7))
                .body("[220].'latlng'.size()", equalTo(2))
                .body("[220].'latlng'[0]", numberMatches(35.0))
                .body("[220].'latlng'[1]", numberMatches(38.0))
                .body("[220].'demonym'", containsString("Syrian"))
                .body("[220].'area'", numberMatches(185180.0))
                .body("[220].'gini'", numberMatches(35.8))
                .body("[220].'timezones'.size()", equalTo(1))
                .body("[220].'timezones'", hasItems("UTC+02:00"))
                .body("[220].'borders'.size()", equalTo(5))
                .body("[220].'borders'", hasItems("IRQ", "ISR", "JOR", "LBN", "TUR"))
                .body("[220].'nativeName'", containsString("سوريا"))
                .body("[220].'numericCode'", containsString("760"))
                .body("[220].'currencies'.size()", equalTo(1))
                .body("[220].'currencies'", hasItems("SYP"))
                .body("[220].'languages'.size()", equalTo(1))
                .body("[220].'languages'", hasItems("ar"))
                .body("[220].'translations'.'de'", containsString("Syrien"))
                .body("[220].'translations'.'es'", containsString("Siria"))
                .body("[220].'translations'.'fr'", containsString("Syrie"))
                .body("[220].'translations'.'ja'", containsString("シリア・アラブ共和国"))
                .body("[220].'translations'.'it'", containsString("Siria"))
                .body("[220].'relevance'", containsString("0"))
                .body("[221].'name'", containsString("Taiwan"))
                .body("[221].'topLevelDomain'.size()", equalTo(1))
                .body("[221].'topLevelDomain'", hasItems(".tw"))
                .body("[221].'alpha2Code'", containsString("TW"))
                .body("[221].'alpha3Code'", containsString("TWN"))
                .body("[221].'callingCodes'.size()", equalTo(1))
                .body("[221].'callingCodes'", hasItems("886"))
                .body("[221].'capital'", containsString("Taipei"))
                .body("[221].'altSpellings'.size()", equalTo(5))
                .body("[221].'altSpellings'", hasItems("TW", "Táiwān", "Republic of China", "中華民國", "Zhōnghuá Mínguó"))
                .body("[221].'region'", containsString("Asia"))
                .body("[221].'subregion'", containsString("Eastern Asia"))
                .body("[221].'population'", numberMatches(2.3461708E7))
                .body("[221].'latlng'.size()", equalTo(2))
                .body("[221].'latlng'[0]", numberMatches(23.5))
                .body("[221].'latlng'[1]", numberMatches(121.0))
                .body("[221].'demonym'", containsString("Taiwanese"))
                .body("[221].'area'", numberMatches(36193.0))
                .body("[221].'gini'", nullValue())
                .body("[221].'timezones'.size()", equalTo(1))
                .body("[221].'timezones'", hasItems("UTC+08:00"))
                .body("[221].'borders'.size()", equalTo(0))
                .body("[221].'nativeName'", containsString("臺灣"))
                .body("[221].'numericCode'", containsString("158"))
                .body("[221].'currencies'.size()", equalTo(1))
                .body("[221].'currencies'", hasItems("TWD"))
                .body("[221].'languages'.size()", equalTo(1))
                .body("[221].'languages'", hasItems("zh"))
                .body("[221].'translations'.'de'", containsString("Taiwan"))
                .body("[221].'translations'.'es'", containsString("Taiwán"))
                .body("[221].'translations'.'fr'", containsString("Taïwan"))
                .body("[221].'translations'.'ja'", containsString("台湾（台湾省/中華民国）"))
                .body("[221].'translations'.'it'", containsString("Taiwan"))
                .body("[221].'relevance'", containsString("0"))
                .body("[222].'name'", containsString("Tajikistan"))
                .body("[222].'topLevelDomain'.size()", equalTo(1))
                .body("[222].'topLevelDomain'", hasItems(".tj"))
                .body("[222].'alpha2Code'", containsString("TJ"))
                .body("[222].'alpha3Code'", containsString("TJK"))
                .body("[222].'callingCodes'.size()", equalTo(1))
                .body("[222].'callingCodes'", hasItems("992"))
                .body("[222].'capital'", containsString("Dushanbe"))
                .body("[222].'altSpellings'.size()", equalTo(5))
                .body("[222].'altSpellings'", hasItems("TJ", "Toçikiston", "Republic of Tajikistan", "Ҷумҳурии Тоҷикистон", "Çumhuriyi Toçikiston"))
                .body("[222].'region'", containsString("Asia"))
                .body("[222].'subregion'", containsString("Central Asia"))
                .body("[222].'population'", numberMatches(8354000.0))
                .body("[222].'latlng'.size()", equalTo(2))
                .body("[222].'latlng'[0]", numberMatches(39.0))
                .body("[222].'latlng'[1]", numberMatches(71.0))
                .body("[222].'demonym'", containsString("Tadzhik"))
                .body("[222].'area'", numberMatches(143100.0))
                .body("[222].'gini'", numberMatches(30.8))
                .body("[222].'timezones'.size()", equalTo(1))
                .body("[222].'timezones'", hasItems("UTC+05:00"))
                .body("[222].'borders'.size()", equalTo(4))
                .body("[222].'borders'", hasItems("AFG", "CHN", "KGZ", "UZB"))
                .body("[222].'nativeName'", containsString("Тоҷикистон"))
                .body("[222].'numericCode'", containsString("762"))
                .body("[222].'currencies'.size()", equalTo(1))
                .body("[222].'currencies'", hasItems("TJS"))
                .body("[222].'languages'.size()", equalTo(2))
                .body("[222].'languages'", hasItems("tg", "ru"))
                .body("[222].'translations'.'de'", containsString("Tadschikistan"))
                .body("[222].'translations'.'es'", containsString("Tayikistán"))
                .body("[222].'translations'.'fr'", containsString("Tadjikistan"))
                .body("[222].'translations'.'ja'", containsString("タジキスタン"))
                .body("[222].'translations'.'it'", containsString("Tagikistan"))
                .body("[222].'relevance'", containsString("0"))
                .body("[223].'name'", containsString("Tanzania"))
                .body("[223].'topLevelDomain'.size()", equalTo(1))
                .body("[223].'topLevelDomain'", hasItems(".tz"))
                .body("[223].'alpha2Code'", containsString("TZ"))
                .body("[223].'alpha3Code'", containsString("TZA"))
                .body("[223].'callingCodes'.size()", equalTo(1))
                .body("[223].'callingCodes'", hasItems("255"))
                .body("[223].'capital'", containsString("Dodoma"))
                .body("[223].'altSpellings'.size()", equalTo(3))
                .body("[223].'altSpellings'", hasItems("TZ", "United Republic of Tanzania", "Jamhuri ya Muungano wa Tanzania"))
                .body("[223].'region'", containsString("Africa"))
                .body("[223].'subregion'", containsString("Eastern Africa"))
                .body("[223].'population'", numberMatches(5.347E7))
                .body("[223].'latlng'.size()", equalTo(2))
                .body("[223].'latlng'[0]", numberMatches(-6.0))
                .body("[223].'latlng'[1]", numberMatches(35.0))
                .body("[223].'demonym'", containsString("Tanzanian"))
                .body("[223].'area'", numberMatches(945087.0))
                .body("[223].'gini'", numberMatches(37.6))
                .body("[223].'timezones'.size()", equalTo(1))
                .body("[223].'timezones'", hasItems("UTC+03:00"))
                .body("[223].'borders'.size()", equalTo(8))
                .body("[223].'borders'", hasItems("BDI", "COD", "KEN", "MWI", "MOZ", "RWA", "UGA", "ZMB"))
                .body("[223].'nativeName'", containsString("Tanzania"))
                .body("[223].'numericCode'", containsString("834"))
                .body("[223].'currencies'.size()", equalTo(1))
                .body("[223].'currencies'", hasItems("TZS"))
                .body("[223].'languages'.size()", equalTo(2))
                .body("[223].'languages'", hasItems("sw", "en"))
                .body("[223].'translations'.'de'", containsString("Tansania"))
                .body("[223].'translations'.'es'", containsString("Tanzania"))
                .body("[223].'translations'.'fr'", containsString("Tanzanie"))
                .body("[223].'translations'.'ja'", containsString("タンザニア"))
                .body("[223].'translations'.'it'", containsString("Tanzania"))
                .body("[223].'relevance'", containsString("0"))
                .body("[224].'name'", containsString("Thailand"))
                .body("[224].'topLevelDomain'.size()", equalTo(1))
                .body("[224].'topLevelDomain'", hasItems(".th"))
                .body("[224].'alpha2Code'", containsString("TH"))
                .body("[224].'alpha3Code'", containsString("THA"))
                .body("[224].'callingCodes'.size()", equalTo(1))
                .body("[224].'callingCodes'", hasItems("66"))
                .body("[224].'capital'", containsString("Bangkok"))
                .body("[224].'altSpellings'.size()", equalTo(6))
                .body("[224].'altSpellings'", hasItems("TH", "Prathet", "Thai", "Kingdom of Thailand", "ราชอาณาจักรไทย", "Ratcha Anachak Thai"))
                .body("[224].'region'", containsString("Asia"))
                .body("[224].'subregion'", containsString("South-Eastern Asia"))
                .body("[224].'population'", numberMatches(6.5104E7))
                .body("[224].'latlng'.size()", equalTo(2))
                .body("[224].'latlng'[0]", numberMatches(15.0))
                .body("[224].'latlng'[1]", numberMatches(100.0))
                .body("[224].'demonym'", containsString("Thai"))
                .body("[224].'area'", numberMatches(513120.0))
                .body("[224].'gini'", numberMatches(40.0))
                .body("[224].'timezones'.size()", equalTo(1))
                .body("[224].'timezones'", hasItems("UTC+07:00"))
                .body("[224].'borders'.size()", equalTo(4))
                .body("[224].'borders'", hasItems("MMR", "KHM", "LAO", "MYS"))
                .body("[224].'nativeName'", containsString("ประเทศไทย"))
                .body("[224].'numericCode'", containsString("764"))
                .body("[224].'currencies'.size()", equalTo(1))
                .body("[224].'currencies'", hasItems("THB"))
                .body("[224].'languages'.size()", equalTo(1))
                .body("[224].'languages'", hasItems("th"))
                .body("[224].'translations'.'de'", containsString("Thailand"))
                .body("[224].'translations'.'es'", containsString("Tailandia"))
                .body("[224].'translations'.'fr'", containsString("Thaïlande"))
                .body("[224].'translations'.'ja'", containsString("タイ"))
                .body("[224].'translations'.'it'", containsString("Tailandia"))
                .body("[224].'relevance'", containsString("0"))
                .body("[225].'name'", containsString("East Timor"))
                .body("[225].'topLevelDomain'.size()", equalTo(1))
                .body("[225].'topLevelDomain'", hasItems(".tl"))
                .body("[225].'alpha2Code'", containsString("TL"))
                .body("[225].'alpha3Code'", containsString("TLS"))
                .body("[225].'callingCodes'.size()", equalTo(1))
                .body("[225].'callingCodes'", hasItems("670"))
                .body("[225].'capital'", containsString("Dili"))
                .body("[225].'altSpellings'.size()", equalTo(5))
                .body("[225].'altSpellings'", hasItems("TL", "East Timor", "Democratic Republic of Timor-Leste", "República Democrática de Timor-Leste", "Repúblika Demokrátika Timór-Leste"))
                .body("[225].'region'", containsString("Asia"))
                .body("[225].'subregion'", containsString("South-Eastern Asia"))
                .body("[225].'population'", numberMatches(1212107.0))
                .body("[225].'latlng'.size()", equalTo(2))
                .body("[225].'latlng'[0]", numberMatches(-8.83333333))
                .body("[225].'latlng'[1]", numberMatches(125.91666666))
                .body("[225].'demonym'", containsString("East Timorese"))
                .body("[225].'area'", numberMatches(14874.0))
                .body("[225].'gini'", numberMatches(31.9))
                .body("[225].'timezones'.size()", equalTo(1))
                .body("[225].'timezones'", hasItems("UTC+09:00"))
                .body("[225].'borders'.size()", equalTo(1))
                .body("[225].'borders'", hasItems("IDN"))
                .body("[225].'nativeName'", containsString("Timor-Leste"))
                .body("[225].'numericCode'", containsString("626"))
                .body("[225].'currencies'.size()", equalTo(1))
                .body("[225].'currencies'", hasItems("USD"))
                .body("[225].'languages'.size()", equalTo(1))
                .body("[225].'languages'", hasItems("pt"))
                .body("[225].'translations'.'de'", containsString("Timor-Leste"))
                .body("[225].'translations'.'es'", containsString("Timor Oriental"))
                .body("[225].'translations'.'fr'", containsString("Timor oriental"))
                .body("[225].'translations'.'ja'", containsString("東ティモール"))
                .body("[225].'translations'.'it'", containsString("Timor Est"))
                .body("[225].'relevance'", containsString("0"))
                .body("[226].'name'", containsString("Togo"))
                .body("[226].'topLevelDomain'.size()", equalTo(1))
                .body("[226].'topLevelDomain'", hasItems(".tg"))
                .body("[226].'alpha2Code'", containsString("TG"))
                .body("[226].'alpha3Code'", containsString("TGO"))
                .body("[226].'callingCodes'.size()", equalTo(1))
                .body("[226].'callingCodes'", hasItems("228"))
                .body("[226].'capital'", containsString("Lomé"))
                .body("[226].'altSpellings'.size()", equalTo(4))
                .body("[226].'altSpellings'", hasItems("TG", "Togolese", "Togolese Republic", "République Togolaise"))
                .body("[226].'region'", containsString("Africa"))
                .body("[226].'subregion'", containsString("Western Africa"))
                .body("[226].'population'", numberMatches(7305000.0))
                .body("[226].'latlng'.size()", equalTo(2))
                .body("[226].'latlng'[0]", numberMatches(8.0))
                .body("[226].'latlng'[1]", numberMatches(1.16666666))
                .body("[226].'demonym'", containsString("Togolese"))
                .body("[226].'area'", numberMatches(56785.0))
                .body("[226].'gini'", numberMatches(34.4))
                .body("[226].'timezones'.size()", equalTo(1))
                .body("[226].'timezones'", hasItems("UTC"))
                .body("[226].'borders'.size()", equalTo(3))
                .body("[226].'borders'", hasItems("BEN", "BFA", "GHA"))
                .body("[226].'nativeName'", containsString("Togo"))
                .body("[226].'numericCode'", containsString("768"))
                .body("[226].'currencies'.size()", equalTo(1))
                .body("[226].'currencies'", hasItems("XOF"))
                .body("[226].'languages'.size()", equalTo(1))
                .body("[226].'languages'", hasItems("fr"))
                .body("[226].'translations'.'de'", containsString("Togo"))
                .body("[226].'translations'.'es'", containsString("Togo"))
                .body("[226].'translations'.'fr'", containsString("Togo"))
                .body("[226].'translations'.'ja'", containsString("トーゴ"))
                .body("[226].'translations'.'it'", containsString("Togo"))
                .body("[226].'relevance'", containsString("0"))
                .body("[227].'name'", containsString("Tokelau"))
                .body("[227].'topLevelDomain'.size()", equalTo(1))
                .body("[227].'topLevelDomain'", hasItems(".tk"))
                .body("[227].'alpha2Code'", containsString("TK"))
                .body("[227].'alpha3Code'", containsString("TKL"))
                .body("[227].'callingCodes'.size()", equalTo(1))
                .body("[227].'callingCodes'", hasItems("690"))
                .body("[227].'capital'", containsString("Fakaofo"))
                .body("[227].'altSpellings'.size()", equalTo(1))
                .body("[227].'altSpellings'", hasItems("TK"))
                .body("[227].'region'", containsString("Oceania"))
                .body("[227].'subregion'", containsString("Polynesia"))
                .body("[227].'population'", numberMatches(1411.0))
                .body("[227].'latlng'.size()", equalTo(2))
                .body("[227].'latlng'[0]", numberMatches(-9.0))
                .body("[227].'latlng'[1]", numberMatches(-172.0))
                .body("[227].'demonym'", containsString("Tokelauan"))
                .body("[227].'area'", numberMatches(12.0))
                .body("[227].'gini'", nullValue())
                .body("[227].'timezones'.size()", equalTo(1))
                .body("[227].'timezones'", hasItems("UTC+13:00"))
                .body("[227].'borders'.size()", equalTo(0))
                .body("[227].'nativeName'", containsString("Tokelau"))
                .body("[227].'numericCode'", containsString("772"))
                .body("[227].'currencies'.size()", equalTo(1))
                .body("[227].'currencies'", hasItems("NZD"))
                .body("[227].'languages'.size()", equalTo(1))
                .body("[227].'languages'", hasItems("en"))
                .body("[227].'translations'.'de'", containsString("Tokelau"))
                .body("[227].'translations'.'es'", containsString("Islas Tokelau"))
                .body("[227].'translations'.'fr'", containsString("Tokelau"))
                .body("[227].'translations'.'ja'", containsString("トケラウ"))
                .body("[227].'translations'.'it'", containsString("Isole Tokelau"))
                .body("[227].'relevance'", containsString("0.5"))
                .body("[228].'name'", containsString("Tonga"))
                .body("[228].'topLevelDomain'.size()", equalTo(1))
                .body("[228].'topLevelDomain'", hasItems(".to"))
                .body("[228].'alpha2Code'", containsString("TO"))
                .body("[228].'alpha3Code'", containsString("TON"))
                .body("[228].'callingCodes'.size()", equalTo(1))
                .body("[228].'callingCodes'", hasItems("676"))
                .body("[228].'capital'", containsString("Nuku'alofa"))
                .body("[228].'altSpellings'.size()", equalTo(1))
                .body("[228].'altSpellings'", hasItems("TO"))
                .body("[228].'region'", containsString("Oceania"))
                .body("[228].'subregion'", containsString("Polynesia"))
                .body("[228].'population'", numberMatches(103252.0))
                .body("[228].'latlng'.size()", equalTo(2))
                .body("[228].'latlng'[0]", numberMatches(-20.0))
                .body("[228].'latlng'[1]", numberMatches(-175.0))
                .body("[228].'demonym'", containsString("Tongan"))
                .body("[228].'area'", numberMatches(747.0))
                .body("[228].'gini'", nullValue())
                .body("[228].'timezones'.size()", equalTo(1))
                .body("[228].'timezones'", hasItems("UTC+13:00"))
                .body("[228].'borders'.size()", equalTo(0))
                .body("[228].'nativeName'", containsString("Tonga"))
                .body("[228].'numericCode'", containsString("776"))
                .body("[228].'currencies'.size()", equalTo(1))
                .body("[228].'currencies'", hasItems("TOP"))
                .body("[228].'languages'.size()", equalTo(2))
                .body("[228].'languages'", hasItems("en", "to"))
                .body("[228].'translations'.'de'", containsString("Tonga"))
                .body("[228].'translations'.'es'", containsString("Tonga"))
                .body("[228].'translations'.'fr'", containsString("Tonga"))
                .body("[228].'translations'.'ja'", containsString("トンガ"))
                .body("[228].'translations'.'it'", containsString("Tonga"))
                .body("[228].'relevance'", containsString("0"))
                .body("[229].'name'", containsString("Trinidad and Tobago"))
                .body("[229].'topLevelDomain'.size()", equalTo(1))
                .body("[229].'topLevelDomain'", hasItems(".tt"))
                .body("[229].'alpha2Code'", containsString("TT"))
                .body("[229].'alpha3Code'", containsString("TTO"))
                .body("[229].'callingCodes'.size()", equalTo(1))
                .body("[229].'callingCodes'", hasItems("1"))
                .body("[229].'capital'", containsString("Port of Spain"))
                .body("[229].'altSpellings'.size()", equalTo(2))
                .body("[229].'altSpellings'", hasItems("TT", "Republic of Trinidad and Tobago"))
                .body("[229].'region'", containsString("Americas"))
                .body("[229].'subregion'", containsString("Caribbean"))
                .body("[229].'population'", numberMatches(1340557.0))
                .body("[229].'latlng'.size()", equalTo(2))
                .body("[229].'latlng'[0]", numberMatches(11.0))
                .body("[229].'latlng'[1]", numberMatches(-61.0))
                .body("[229].'demonym'", containsString("Trinidadian"))
                .body("[229].'area'", numberMatches(5130.0))
                .body("[229].'gini'", numberMatches(40.3))
                .body("[229].'timezones'.size()", equalTo(1))
                .body("[229].'timezones'", hasItems("UTC-04:00"))
                .body("[229].'borders'.size()", equalTo(0))
                .body("[229].'nativeName'", containsString("Trinidad and Tobago"))
                .body("[229].'numericCode'", containsString("780"))
                .body("[229].'currencies'.size()", equalTo(1))
                .body("[229].'currencies'", hasItems("TTD"))
                .body("[229].'languages'.size()", equalTo(1))
                .body("[229].'languages'", hasItems("en"))
                .body("[229].'translations'.'de'", containsString("Trinidad und Tobago"))
                .body("[229].'translations'.'es'", containsString("Trinidad y Tobago"))
                .body("[229].'translations'.'fr'", containsString("Trinité et Tobago"))
                .body("[229].'translations'.'ja'", containsString("トリニダード・トバゴ"))
                .body("[229].'translations'.'it'", containsString("Trinidad e Tobago"))
                .body("[229].'relevance'", containsString("0"))
                .body("[230].'name'", containsString("Tunisia"))
                .body("[230].'topLevelDomain'.size()", equalTo(1))
                .body("[230].'topLevelDomain'", hasItems(".tn"))
                .body("[230].'alpha2Code'", containsString("TN"))
                .body("[230].'alpha3Code'", containsString("TUN"))
                .body("[230].'callingCodes'.size()", equalTo(1))
                .body("[230].'callingCodes'", hasItems("216"))
                .body("[230].'capital'", containsString("Tunis"))
                .body("[230].'altSpellings'.size()", equalTo(3))
                .body("[230].'altSpellings'", hasItems("TN", "Republic of Tunisia", "al-Jumhūriyyah at-Tūnisiyyah"))
                .body("[230].'region'", containsString("Africa"))
                .body("[230].'subregion'", containsString("Northern Africa"))
                .body("[230].'population'", numberMatches(1.0982754E7))
                .body("[230].'latlng'.size()", equalTo(2))
                .body("[230].'latlng'[0]", numberMatches(34.0))
                .body("[230].'latlng'[1]", numberMatches(9.0))
                .body("[230].'demonym'", containsString("Tunisian"))
                .body("[230].'area'", numberMatches(163610.0))
                .body("[230].'gini'", numberMatches(41.4))
                .body("[230].'timezones'.size()", equalTo(1))
                .body("[230].'timezones'", hasItems("UTC+01:00"))
                .body("[230].'borders'.size()", equalTo(2))
                .body("[230].'borders'", hasItems("DZA", "LBY"))
                .body("[230].'nativeName'", containsString("تونس"))
                .body("[230].'numericCode'", containsString("788"))
                .body("[230].'currencies'.size()", equalTo(1))
                .body("[230].'currencies'", hasItems("TND"))
                .body("[230].'languages'.size()", equalTo(1))
                .body("[230].'languages'", hasItems("ar"))
                .body("[230].'translations'.'de'", containsString("Tunesien"))
                .body("[230].'translations'.'es'", containsString("Túnez"))
                .body("[230].'translations'.'fr'", containsString("Tunisie"))
                .body("[230].'translations'.'ja'", containsString("チュニジア"))
                .body("[230].'translations'.'it'", containsString("Tunisia"))
                .body("[230].'relevance'", containsString("0"))
                .body("[231].'name'", containsString("Turkey"))
                .body("[231].'topLevelDomain'.size()", equalTo(1))
                .body("[231].'topLevelDomain'", hasItems(".tr"))
                .body("[231].'alpha2Code'", containsString("TR"))
                .body("[231].'alpha3Code'", containsString("TUR"))
                .body("[231].'callingCodes'.size()", equalTo(1))
                .body("[231].'callingCodes'", hasItems("90"))
                .body("[231].'capital'", containsString("Ankara"))
                .body("[231].'altSpellings'.size()", equalTo(4))
                .body("[231].'altSpellings'", hasItems("TR", "Turkiye", "Republic of Turkey", "Türkiye Cumhuriyeti"))
                .body("[231].'region'", containsString("Asia"))
                .body("[231].'subregion'", containsString("Western Asia"))
                .body("[231].'population'", numberMatches(7.7695904E7))
                .body("[231].'latlng'.size()", equalTo(2))
                .body("[231].'latlng'[0]", numberMatches(39.0))
                .body("[231].'latlng'[1]", numberMatches(35.0))
                .body("[231].'demonym'", containsString("Turkish"))
                .body("[231].'area'", numberMatches(783562.0))
                .body("[231].'gini'", numberMatches(39.0))
                .body("[231].'timezones'.size()", equalTo(1))
                .body("[231].'timezones'", hasItems("UTC+02:00"))
                .body("[231].'borders'.size()", equalTo(8))
                .body("[231].'borders'", hasItems("ARM", "AZE", "BGR", "GEO", "GRC", "IRN", "IRQ", "SYR"))
                .body("[231].'nativeName'", containsString("Türkiye"))
                .body("[231].'numericCode'", containsString("792"))
                .body("[231].'currencies'.size()", equalTo(1))
                .body("[231].'currencies'", hasItems("TRY"))
                .body("[231].'languages'.size()", equalTo(1))
                .body("[231].'languages'", hasItems("tr"))
                .body("[231].'translations'.'de'", containsString("Türkei"))
                .body("[231].'translations'.'es'", containsString("Turquía"))
                .body("[231].'translations'.'fr'", containsString("Turquie"))
                .body("[231].'translations'.'ja'", containsString("トルコ"))
                .body("[231].'translations'.'it'", containsString("Turchia"))
                .body("[231].'relevance'", containsString("0"))
                .body("[232].'name'", containsString("Turkmenistan"))
                .body("[232].'topLevelDomain'.size()", equalTo(1))
                .body("[232].'topLevelDomain'", hasItems(".tm"))
                .body("[232].'alpha2Code'", containsString("TM"))
                .body("[232].'alpha3Code'", containsString("TKM"))
                .body("[232].'callingCodes'.size()", equalTo(1))
                .body("[232].'callingCodes'", hasItems("993"))
                .body("[232].'capital'", containsString("Ashgabat"))
                .body("[232].'altSpellings'.size()", equalTo(1))
                .body("[232].'altSpellings'", hasItems("TM"))
                .body("[232].'region'", containsString("Asia"))
                .body("[232].'subregion'", containsString("Central Asia"))
                .body("[232].'population'", numberMatches(4751120.0))
                .body("[232].'latlng'.size()", equalTo(2))
                .body("[232].'latlng'[0]", numberMatches(40.0))
                .body("[232].'latlng'[1]", numberMatches(60.0))
                .body("[232].'demonym'", containsString("Turkmen"))
                .body("[232].'area'", numberMatches(488100.0))
                .body("[232].'gini'", numberMatches(40.8))
                .body("[232].'timezones'.size()", equalTo(1))
                .body("[232].'timezones'", hasItems("UTC+05:00"))
                .body("[232].'borders'.size()", equalTo(4))
                .body("[232].'borders'", hasItems("AFG", "IRN", "KAZ", "UZB"))
                .body("[232].'nativeName'", containsString("Türkmenistan"))
                .body("[232].'numericCode'", containsString("795"))
                .body("[232].'currencies'.size()", equalTo(1))
                .body("[232].'currencies'", hasItems("TMT"))
                .body("[232].'languages'.size()", equalTo(2))
                .body("[232].'languages'", hasItems("tk", "ru"))
                .body("[232].'translations'.'de'", containsString("Turkmenistan"))
                .body("[232].'translations'.'es'", containsString("Turkmenistán"))
                .body("[232].'translations'.'fr'", containsString("Turkménistan"))
                .body("[232].'translations'.'ja'", containsString("トルクメニスタン"))
                .body("[232].'translations'.'it'", containsString("Turkmenistan"))
                .body("[232].'relevance'", containsString("0"))
                .body("[233].'name'", containsString("Turks and Caicos Islands"))
                .body("[233].'topLevelDomain'.size()", equalTo(1))
                .body("[233].'topLevelDomain'", hasItems(".tc"))
                .body("[233].'alpha2Code'", containsString("TC"))
                .body("[233].'alpha3Code'", containsString("TCA"))
                .body("[233].'callingCodes'.size()", equalTo(1))
                .body("[233].'callingCodes'", hasItems("1"))
                .body("[233].'capital'", containsString("Cockburn Town"))
                .body("[233].'altSpellings'.size()", equalTo(1))
                .body("[233].'altSpellings'", hasItems("TC"))
                .body("[233].'region'", containsString("Americas"))
                .body("[233].'subregion'", containsString("Caribbean"))
                .body("[233].'population'", numberMatches(31458.0))
                .body("[233].'latlng'.size()", equalTo(2))
                .body("[233].'latlng'[0]", numberMatches(21.75))
                .body("[233].'latlng'[1]", numberMatches(-71.58333333))
                .body("[233].'demonym'", containsString("Turks and Caicos Islander"))
                .body("[233].'area'", numberMatches(948.0))
                .body("[233].'gini'", nullValue())
                .body("[233].'timezones'.size()", equalTo(1))
                .body("[233].'timezones'", hasItems("UTC-04:00"))
                .body("[233].'borders'.size()", equalTo(0))
                .body("[233].'nativeName'", containsString("Turks and Caicos Islands"))
                .body("[233].'numericCode'", containsString("796"))
                .body("[233].'currencies'.size()", equalTo(1))
                .body("[233].'currencies'", hasItems("USD"))
                .body("[233].'languages'.size()", equalTo(1))
                .body("[233].'languages'", hasItems("en"))
                .body("[233].'translations'.'de'", containsString("Turks- und Caicosinseln"))
                .body("[233].'translations'.'es'", containsString("Islas Turks y Caicos"))
                .body("[233].'translations'.'fr'", containsString("Îles Turques-et-Caïques"))
                .body("[233].'translations'.'ja'", containsString("タークス・カイコス諸島"))
                .body("[233].'translations'.'it'", containsString("Isole Turks e Caicos"))
                .body("[233].'relevance'", containsString("0.5"))
                .body("[234].'name'", containsString("Tuvalu"))
                .body("[234].'topLevelDomain'.size()", equalTo(1))
                .body("[234].'topLevelDomain'", hasItems(".tv"))
                .body("[234].'alpha2Code'", containsString("TV"))
                .body("[234].'alpha3Code'", containsString("TUV"))
                .body("[234].'callingCodes'.size()", equalTo(1))
                .body("[234].'callingCodes'", hasItems("688"))
                .body("[234].'capital'", containsString("Funafuti"))
                .body("[234].'altSpellings'.size()", equalTo(1))
                .body("[234].'altSpellings'", hasItems("TV"))
                .body("[234].'region'", containsString("Oceania"))
                .body("[234].'subregion'", containsString("Polynesia"))
                .body("[234].'population'", numberMatches(10640.0))
                .body("[234].'latlng'.size()", equalTo(2))
                .body("[234].'latlng'[0]", numberMatches(-8.0))
                .body("[234].'latlng'[1]", numberMatches(178.0))
                .body("[234].'demonym'", containsString("Tuvaluan"))
                .body("[234].'area'", numberMatches(26.0))
                .body("[234].'gini'", nullValue())
                .body("[234].'timezones'.size()", equalTo(1))
                .body("[234].'timezones'", hasItems("UTC+12:00"))
                .body("[234].'borders'.size()", equalTo(0))
                .body("[234].'nativeName'", containsString("Tuvalu"))
                .body("[234].'numericCode'", containsString("798"))
                .body("[234].'currencies'.size()", equalTo(1))
                .body("[234].'currencies'", hasItems("AUD"))
                .body("[234].'languages'.size()", equalTo(1))
                .body("[234].'languages'", hasItems("en"))
                .body("[234].'translations'.'de'", containsString("Tuvalu"))
                .body("[234].'translations'.'es'", containsString("Tuvalu"))
                .body("[234].'translations'.'fr'", containsString("Tuvalu"))
                .body("[234].'translations'.'ja'", containsString("ツバル"))
                .body("[234].'translations'.'it'", containsString("Tuvalu"))
                .body("[234].'relevance'", containsString("0.5"))
                .body("[235].'name'", containsString("Uganda"))
                .body("[235].'topLevelDomain'.size()", equalTo(1))
                .body("[235].'topLevelDomain'", hasItems(".ug"))
                .body("[235].'alpha2Code'", containsString("UG"))
                .body("[235].'alpha3Code'", containsString("UGA"))
                .body("[235].'callingCodes'.size()", equalTo(1))
                .body("[235].'callingCodes'", hasItems("256"))
                .body("[235].'capital'", containsString("Kampala"))
                .body("[235].'altSpellings'.size()", equalTo(3))
                .body("[235].'altSpellings'", hasItems("UG", "Republic of Uganda", "Jamhuri ya Uganda"))
                .body("[235].'region'", containsString("Africa"))
                .body("[235].'subregion'", containsString("Eastern Africa"))
                .body("[235].'population'", numberMatches(3.4856813E7))
                .body("[235].'latlng'.size()", equalTo(2))
                .body("[235].'latlng'[0]", numberMatches(1.0))
                .body("[235].'latlng'[1]", numberMatches(32.0))
                .body("[235].'demonym'", containsString("Ugandan"))
                .body("[235].'area'", numberMatches(241550.0))
                .body("[235].'gini'", numberMatches(44.3))
                .body("[235].'timezones'.size()", equalTo(1))
                .body("[235].'timezones'", hasItems("UTC+03:00"))
                .body("[235].'borders'.size()", equalTo(5))
                .body("[235].'borders'", hasItems("COD", "KEN", "RWA", "SSD", "TZA"))
                .body("[235].'nativeName'", containsString("Uganda"))
                .body("[235].'numericCode'", containsString("800"))
                .body("[235].'currencies'.size()", equalTo(1))
                .body("[235].'currencies'", hasItems("UGX"))
                .body("[235].'languages'.size()", equalTo(2))
                .body("[235].'languages'", hasItems("en", "sw"))
                .body("[235].'translations'.'de'", containsString("Uganda"))
                .body("[235].'translations'.'es'", containsString("Uganda"))
                .body("[235].'translations'.'fr'", containsString("Uganda"))
                .body("[235].'translations'.'ja'", containsString("ウガンダ"))
                .body("[235].'translations'.'it'", containsString("Uganda"))
                .body("[235].'relevance'", containsString("0"))
                .body("[236].'name'", containsString("Ukraine"))
                .body("[236].'topLevelDomain'.size()", equalTo(1))
                .body("[236].'topLevelDomain'", hasItems(".ua"))
                .body("[236].'alpha2Code'", containsString("UA"))
                .body("[236].'alpha3Code'", containsString("UKR"))
                .body("[236].'callingCodes'.size()", equalTo(1))
                .body("[236].'callingCodes'", hasItems("380"))
                .body("[236].'capital'", containsString("Kiev"))
                .body("[236].'altSpellings'.size()", equalTo(2))
                .body("[236].'altSpellings'", hasItems("UA", "Ukrayina"))
                .body("[236].'region'", containsString("Europe"))
                .body("[236].'subregion'", containsString("Eastern Europe"))
                .body("[236].'population'", numberMatches(4.2836922E7))
                .body("[236].'latlng'.size()", equalTo(2))
                .body("[236].'latlng'[0]", numberMatches(49.0))
                .body("[236].'latlng'[1]", numberMatches(32.0))
                .body("[236].'demonym'", containsString("Ukrainian"))
                .body("[236].'area'", numberMatches(603700.0))
                .body("[236].'gini'", numberMatches(26.4))
                .body("[236].'timezones'.size()", equalTo(1))
                .body("[236].'timezones'", hasItems("UTC+02:00"))
                .body("[236].'borders'.size()", equalTo(7))
                .body("[236].'borders'", hasItems("BLR", "HUN", "MDA", "POL", "ROU", "RUS", "SVK"))
                .body("[236].'nativeName'", containsString("Україна"))
                .body("[236].'numericCode'", containsString("804"))
                .body("[236].'currencies'.size()", equalTo(1))
                .body("[236].'currencies'", hasItems("UAH"))
                .body("[236].'languages'.size()", equalTo(1))
                .body("[236].'languages'", hasItems("uk"))
                .body("[236].'translations'.'de'", containsString("Ukraine"))
                .body("[236].'translations'.'es'", containsString("Ucrania"))
                .body("[236].'translations'.'fr'", containsString("Ukraine"))
                .body("[236].'translations'.'ja'", containsString("ウクライナ"))
                .body("[236].'translations'.'it'", containsString("Ucraina"))
                .body("[236].'relevance'", containsString("0"))
                .body("[237].'name'", containsString("United Arab Emirates"))
                .body("[237].'topLevelDomain'.size()", equalTo(1))
                .body("[237].'topLevelDomain'", hasItems(".ae"))
                .body("[237].'alpha2Code'", containsString("AE"))
                .body("[237].'alpha3Code'", containsString("ARE"))
                .body("[237].'callingCodes'.size()", equalTo(1))
                .body("[237].'callingCodes'", hasItems("971"))
                .body("[237].'capital'", containsString("Abu Dhabi"))
                .body("[237].'altSpellings'.size()", equalTo(2))
                .body("[237].'altSpellings'", hasItems("AE", "UAE"))
                .body("[237].'region'", containsString("Asia"))
                .body("[237].'subregion'", containsString("Western Asia"))
                .body("[237].'population'", numberMatches(9157000.0))
                .body("[237].'latlng'.size()", equalTo(2))
                .body("[237].'latlng'[0]", numberMatches(24.0))
                .body("[237].'latlng'[1]", numberMatches(54.0))
                .body("[237].'demonym'", containsString("Emirati"))
                .body("[237].'area'", numberMatches(83600.0))
                .body("[237].'gini'", nullValue())
                .body("[237].'timezones'.size()", equalTo(1))
                .body("[237].'timezones'", hasItems("UTC+04"))
                .body("[237].'borders'.size()", equalTo(2))
                .body("[237].'borders'", hasItems("OMN", "SAU"))
                .body("[237].'nativeName'", containsString("دولة الإمارات العربية المتحدة"))
                .body("[237].'numericCode'", containsString("784"))
                .body("[237].'currencies'.size()", equalTo(1))
                .body("[237].'currencies'", hasItems("AED"))
                .body("[237].'languages'.size()", equalTo(1))
                .body("[237].'languages'", hasItems("ar"))
                .body("[237].'translations'.'de'", containsString("Vereinigte Arabische Emirate"))
                .body("[237].'translations'.'es'", containsString("Emiratos Árabes Unidos"))
                .body("[237].'translations'.'fr'", containsString("Émirats arabes unis"))
                .body("[237].'translations'.'ja'", containsString("アラブ首長国連邦"))
                .body("[237].'translations'.'it'", containsString("Emirati Arabi Uniti"))
                .body("[237].'relevance'", containsString("0"))
                .body("[238].'name'", containsString("United Kingdom"))
                .body("[238].'topLevelDomain'.size()", equalTo(1))
                .body("[238].'topLevelDomain'", hasItems(".uk"))
                .body("[238].'alpha2Code'", containsString("GB"))
                .body("[238].'alpha3Code'", containsString("GBR"))
                .body("[238].'callingCodes'.size()", equalTo(1))
                .body("[238].'callingCodes'", hasItems("44"))
                .body("[238].'capital'", containsString("London"))
                .body("[238].'altSpellings'.size()", equalTo(3))
                .body("[238].'altSpellings'", hasItems("GB", "UK", "Great Britain"))
                .body("[238].'region'", containsString("Europe"))
                .body("[238].'subregion'", containsString("Northern Europe"))
                .body("[238].'population'", numberMatches(6.48E7))
                .body("[238].'latlng'.size()", equalTo(2))
                .body("[238].'latlng'[0]", numberMatches(54.0))
                .body("[238].'latlng'[1]", numberMatches(-2.0))
                .body("[238].'demonym'", containsString("British"))
                .body("[238].'area'", numberMatches(242900.0))
                .body("[238].'gini'", numberMatches(34.0))
                .body("[238].'timezones'.size()", equalTo(9))
                .body("[238].'timezones'", hasItems("UTC-08:00", "UTC-05:00", "UTC-04:00", "UTC-03:00", "UTC-02:00", "UTC", "UTC+01:00", "UTC+02:00", "UTC+06:00"))
                .body("[238].'borders'.size()", equalTo(1))
                .body("[238].'borders'", hasItems("IRL"))
                .body("[238].'nativeName'", containsString("United Kingdom"))
                .body("[238].'numericCode'", containsString("826"))
                .body("[238].'currencies'.size()", equalTo(1))
                .body("[238].'currencies'", hasItems("GBP"))
                .body("[238].'languages'.size()", equalTo(1))
                .body("[238].'languages'", hasItems("en"))
                .body("[238].'translations'.'de'", containsString("Vereinigtes Königreich"))
                .body("[238].'translations'.'es'", containsString("Reino Unido"))
                .body("[238].'translations'.'fr'", containsString("Royaume-Uni"))
                .body("[238].'translations'.'ja'", containsString("イギリス"))
                .body("[238].'translations'.'it'", containsString("Regno Unito"))
                .body("[238].'relevance'", containsString("2.5"))
                .body("[239].'name'", containsString("United States"))
                .body("[239].'topLevelDomain'.size()", equalTo(1))
                .body("[239].'topLevelDomain'", hasItems(".us"))
                .body("[239].'alpha2Code'", containsString("US"))
                .body("[239].'alpha3Code'", containsString("USA"))
                .body("[239].'callingCodes'.size()", equalTo(1))
                .body("[239].'callingCodes'", hasItems("1"))
                .body("[239].'capital'", containsString("Washington, D.C."))
                .body("[239].'altSpellings'.size()", equalTo(3))
                .body("[239].'altSpellings'", hasItems("US", "USA", "United States of America"))
                .body("[239].'region'", containsString("Americas"))
                .body("[239].'subregion'", containsString("Northern America"))
                .body("[239].'population'", numberMatches(3.21645E8))
                .body("[239].'latlng'.size()", equalTo(2))
                .body("[239].'latlng'[0]", numberMatches(38.0))
                .body("[239].'latlng'[1]", numberMatches(-97.0))
                .body("[239].'demonym'", containsString("American"))
                .body("[239].'area'", numberMatches(9629091.0))
                .body("[239].'gini'", numberMatches(48.0))
                .body("[239].'timezones'.size()", equalTo(11))
                .body("[239].'timezones'", hasItems("UTC-12:00", "UTC-11:00", "UTC-10:00", "UTC-09:00", "UTC-08:00", "UTC-07:00", "UTC-06:00", "UTC-05:00", "UTC-04:00", "UTC+10:00", "UTC+12:00"))
                .body("[239].'borders'.size()", equalTo(2))
                .body("[239].'borders'", hasItems("CAN", "MEX"))
                .body("[239].'nativeName'", containsString("United States"))
                .body("[239].'numericCode'", containsString("840"))
                .body("[239].'currencies'.size()", equalTo(3))
                .body("[239].'currencies'", hasItems("USD", "USN", "USS"))
                .body("[239].'languages'.size()", equalTo(1))
                .body("[239].'languages'", hasItems("en"))
                .body("[239].'translations'.'de'", containsString("Vereinigte Staaten von Amerika"))
                .body("[239].'translations'.'es'", containsString("Estados Unidos"))
                .body("[239].'translations'.'fr'", containsString("États-Unis"))
                .body("[239].'translations'.'ja'", containsString("アメリカ合衆国"))
                .body("[239].'translations'.'it'", containsString("Stati Uniti D'America"))
                .body("[239].'relevance'", containsString("3.5"))
                .body("[240].'name'", containsString("Uruguay"))
                .body("[240].'topLevelDomain'.size()", equalTo(1))
                .body("[240].'topLevelDomain'", hasItems(".uy"))
                .body("[240].'alpha2Code'", containsString("UY"))
                .body("[240].'alpha3Code'", containsString("URY"))
                .body("[240].'callingCodes'.size()", equalTo(1))
                .body("[240].'callingCodes'", hasItems("598"))
                .body("[240].'capital'", containsString("Montevideo"))
                .body("[240].'altSpellings'.size()", equalTo(3))
                .body("[240].'altSpellings'", hasItems("UY", "Oriental Republic of Uruguay", "República Oriental del Uruguay"))
                .body("[240].'region'", containsString("Americas"))
                .body("[240].'subregion'", containsString("South America"))
                .body("[240].'population'", numberMatches(3415866.0))
                .body("[240].'latlng'.size()", equalTo(2))
                .body("[240].'latlng'[0]", numberMatches(-33.0))
                .body("[240].'latlng'[1]", numberMatches(-56.0))
                .body("[240].'demonym'", containsString("Uruguayan"))
                .body("[240].'area'", numberMatches(181034.0))
                .body("[240].'gini'", numberMatches(39.7))
                .body("[240].'timezones'.size()", equalTo(1))
                .body("[240].'timezones'", hasItems("UTC-03:00"))
                .body("[240].'borders'.size()", equalTo(2))
                .body("[240].'borders'", hasItems("ARG", "BRA"))
                .body("[240].'nativeName'", containsString("Uruguay"))
                .body("[240].'numericCode'", containsString("858"))
                .body("[240].'currencies'.size()", equalTo(2))
                .body("[240].'currencies'", hasItems("UYI", "UYU"))
                .body("[240].'languages'.size()", equalTo(1))
                .body("[240].'languages'", hasItems("es"))
                .body("[240].'translations'.'de'", containsString("Uruguay"))
                .body("[240].'translations'.'es'", containsString("Uruguay"))
                .body("[240].'translations'.'fr'", containsString("Uruguay"))
                .body("[240].'translations'.'ja'", containsString("ウルグアイ"))
                .body("[240].'translations'.'it'", containsString("Uruguay"))
                .body("[240].'relevance'", containsString("0"))
                .body("[241].'name'", containsString("Uzbekistan"))
                .body("[241].'topLevelDomain'.size()", equalTo(1))
                .body("[241].'topLevelDomain'", hasItems(".uz"))
                .body("[241].'alpha2Code'", containsString("UZ"))
                .body("[241].'alpha3Code'", containsString("UZB"))
                .body("[241].'callingCodes'.size()", equalTo(1))
                .body("[241].'callingCodes'", hasItems("998"))
                .body("[241].'capital'", containsString("Tashkent"))
                .body("[241].'altSpellings'.size()", equalTo(4))
                .body("[241].'altSpellings'", hasItems("UZ", "Republic of Uzbekistan", "O‘zbekiston Respublikasi", "Ўзбекистон Республикаси"))
                .body("[241].'region'", containsString("Asia"))
                .body("[241].'subregion'", containsString("Central Asia"))
                .body("[241].'population'", numberMatches(3.10225E7))
                .body("[241].'latlng'.size()", equalTo(2))
                .body("[241].'latlng'[0]", numberMatches(41.0))
                .body("[241].'latlng'[1]", numberMatches(64.0))
                .body("[241].'demonym'", containsString("Uzbekistani"))
                .body("[241].'area'", numberMatches(447400.0))
                .body("[241].'gini'", numberMatches(36.7))
                .body("[241].'timezones'.size()", equalTo(1))
                .body("[241].'timezones'", hasItems("UTC+05:00"))
                .body("[241].'borders'.size()", equalTo(5))
                .body("[241].'borders'", hasItems("AFG", "KAZ", "KGZ", "TJK", "TKM"))
                .body("[241].'nativeName'", containsString("O‘zbekiston"))
                .body("[241].'numericCode'", containsString("860"))
                .body("[241].'currencies'.size()", equalTo(1))
                .body("[241].'currencies'", hasItems("UZS"))
                .body("[241].'languages'.size()", equalTo(2))
                .body("[241].'languages'", hasItems("uz", "ru"))
                .body("[241].'translations'.'de'", containsString("Usbekistan"))
                .body("[241].'translations'.'es'", containsString("Uzbekistán"))
                .body("[241].'translations'.'fr'", containsString("Ouzbékistan"))
                .body("[241].'translations'.'ja'", containsString("ウズベキスタン"))
                .body("[241].'translations'.'it'", containsString("Uzbekistan"))
                .body("[241].'relevance'", containsString("0"))
                .body("[242].'name'", containsString("Vanuatu"))
                .body("[242].'topLevelDomain'.size()", equalTo(1))
                .body("[242].'topLevelDomain'", hasItems(".vu"))
                .body("[242].'alpha2Code'", containsString("VU"))
                .body("[242].'alpha3Code'", containsString("VUT"))
                .body("[242].'callingCodes'.size()", equalTo(1))
                .body("[242].'callingCodes'", hasItems("678"))
                .body("[242].'capital'", containsString("Port Vila"))
                .body("[242].'altSpellings'.size()", equalTo(4))
                .body("[242].'altSpellings'", hasItems("VU", "Republic of Vanuatu", "Ripablik blong Vanuatu", "République de Vanuatu"))
                .body("[242].'region'", containsString("Oceania"))
                .body("[242].'subregion'", containsString("Melanesia"))
                .body("[242].'population'", numberMatches(264652.0))
                .body("[242].'latlng'.size()", equalTo(2))
                .body("[242].'latlng'[0]", numberMatches(-16.0))
                .body("[242].'latlng'[1]", numberMatches(167.0))
                .body("[242].'demonym'", containsString("Ni-Vanuatu"))
                .body("[242].'area'", numberMatches(12189.0))
                .body("[242].'gini'", nullValue())
                .body("[242].'timezones'.size()", equalTo(1))
                .body("[242].'timezones'", hasItems("UTC+11:00"))
                .body("[242].'borders'.size()", equalTo(0))
                .body("[242].'nativeName'", containsString("Vanuatu"))
                .body("[242].'numericCode'", containsString("548"))
                .body("[242].'currencies'.size()", equalTo(1))
                .body("[242].'currencies'", hasItems("VUV"))
                .body("[242].'languages'.size()", equalTo(3))
                .body("[242].'languages'", hasItems("bi", "en", "fr"))
                .body("[242].'translations'.'de'", containsString("Vanuatu"))
                .body("[242].'translations'.'es'", containsString("Vanuatu"))
                .body("[242].'translations'.'fr'", containsString("Vanuatu"))
                .body("[242].'translations'.'ja'", containsString("バヌアツ"))
                .body("[242].'translations'.'it'", containsString("Vanuatu"))
                .body("[242].'relevance'", containsString("0"))
                .body("[243].'name'", containsString("Venezuela"))
                .body("[243].'topLevelDomain'.size()", equalTo(1))
                .body("[243].'topLevelDomain'", hasItems(".ve"))
                .body("[243].'alpha2Code'", containsString("VE"))
                .body("[243].'alpha3Code'", containsString("VEN"))
                .body("[243].'callingCodes'.size()", equalTo(1))
                .body("[243].'callingCodes'", hasItems("58"))
                .body("[243].'capital'", containsString("Caracas"))
                .body("[243].'altSpellings'.size()", equalTo(3))
                .body("[243].'altSpellings'", hasItems("VE", "Bolivarian Republic of Venezuela", "República Bolivariana de Venezuela"))
                .body("[243].'region'", containsString("Americas"))
                .body("[243].'subregion'", containsString("South America"))
                .body("[243].'population'", numberMatches(3.0620404E7))
                .body("[243].'latlng'.size()", equalTo(2))
                .body("[243].'latlng'[0]", numberMatches(8.0))
                .body("[243].'latlng'[1]", numberMatches(-66.0))
                .body("[243].'demonym'", containsString("Venezuelan"))
                .body("[243].'area'", numberMatches(916445.0))
                .body("[243].'gini'", numberMatches(44.8))
                .body("[243].'timezones'.size()", equalTo(1))
                .body("[243].'timezones'", hasItems("UTC-04:30"))
                .body("[243].'borders'.size()", equalTo(3))
                .body("[243].'borders'", hasItems("BRA", "COL", "GUY"))
                .body("[243].'nativeName'", containsString("Venezuela"))
                .body("[243].'numericCode'", containsString("862"))
                .body("[243].'currencies'.size()", equalTo(1))
                .body("[243].'currencies'", hasItems("VEF"))
                .body("[243].'languages'.size()", equalTo(1))
                .body("[243].'languages'", hasItems("es"))
                .body("[243].'translations'.'de'", containsString("Venezuela"))
                .body("[243].'translations'.'es'", containsString("Venezuela"))
                .body("[243].'translations'.'fr'", containsString("Venezuela"))
                .body("[243].'translations'.'ja'", containsString("ベネズエラ・ボリバル共和国"))
                .body("[243].'translations'.'it'", containsString("Venezuela"))
                .body("[243].'relevance'", containsString("0"))
                .body("[244].'name'", containsString("Vietnam"))
                .body("[244].'topLevelDomain'.size()", equalTo(1))
                .body("[244].'topLevelDomain'", hasItems(".vn"))
                .body("[244].'alpha2Code'", containsString("VN"))
                .body("[244].'alpha3Code'", containsString("VNM"))
                .body("[244].'callingCodes'.size()", equalTo(1))
                .body("[244].'callingCodes'", hasItems("84"))
                .body("[244].'capital'", containsString("Hanoi"))
                .body("[244].'altSpellings'.size()", equalTo(3))
                .body("[244].'altSpellings'", hasItems("VN", "Socialist Republic of Vietnam", "Cộng hòa Xã hội chủ nghĩa Việt Nam"))
                .body("[244].'region'", containsString("Asia"))
                .body("[244].'subregion'", containsString("South-Eastern Asia"))
                .body("[244].'population'", numberMatches(9.1812E7))
                .body("[244].'latlng'.size()", equalTo(2))
                .body("[244].'latlng'[0]", numberMatches(16.16666666))
                .body("[244].'latlng'[1]", numberMatches(107.83333333))
                .body("[244].'demonym'", containsString("Vietnamese"))
                .body("[244].'area'", numberMatches(331212.0))
                .body("[244].'gini'", numberMatches(35.6))
                .body("[244].'timezones'.size()", equalTo(1))
                .body("[244].'timezones'", hasItems("UTC+07:00"))
                .body("[244].'borders'.size()", equalTo(3))
                .body("[244].'borders'", hasItems("KHM", "CHN", "LAO"))
                .body("[244].'nativeName'", containsString("Việt Nam"))
                .body("[244].'numericCode'", containsString("704"))
                .body("[244].'currencies'.size()", equalTo(1))
                .body("[244].'currencies'", hasItems("VND"))
                .body("[244].'languages'.size()", equalTo(1))
                .body("[244].'languages'", hasItems("vi"))
                .body("[244].'translations'.'de'", containsString("Vietnam"))
                .body("[244].'translations'.'es'", containsString("Vietnam"))
                .body("[244].'translations'.'fr'", containsString("Viêt Nam"))
                .body("[244].'translations'.'ja'", containsString("ベトナム"))
                .body("[244].'translations'.'it'", containsString("Vietnam"))
                .body("[244].'relevance'", containsString("1.5"))
                .body("[245].'name'", containsString("Wallis and Futuna"))
                .body("[245].'topLevelDomain'.size()", equalTo(1))
                .body("[245].'topLevelDomain'", hasItems(".wf"))
                .body("[245].'alpha2Code'", containsString("WF"))
                .body("[245].'alpha3Code'", containsString("WLF"))
                .body("[245].'callingCodes'.size()", equalTo(1))
                .body("[245].'callingCodes'", hasItems("681"))
                .body("[245].'capital'", containsString("Mata-Utu"))
                .body("[245].'altSpellings'.size()", equalTo(3))
                .body("[245].'altSpellings'", hasItems("WF", "Territory of the Wallis and Futuna Islands", "Territoire des îles Wallis et Futuna"))
                .body("[245].'region'", containsString("Oceania"))
                .body("[245].'subregion'", containsString("Polynesia"))
                .body("[245].'population'", numberMatches(13135.0))
                .body("[245].'latlng'.size()", equalTo(2))
                .body("[245].'latlng'[0]", numberMatches(-13.3))
                .body("[245].'latlng'[1]", numberMatches(-176.2))
                .body("[245].'demonym'", containsString("Wallis and Futuna Islander"))
                .body("[245].'area'", numberMatches(142.0))
                .body("[245].'gini'", nullValue())
                .body("[245].'timezones'.size()", equalTo(1))
                .body("[245].'timezones'", hasItems("UTC+12:00"))
                .body("[245].'borders'.size()", equalTo(0))
                .body("[245].'nativeName'", containsString("Wallis et Futuna"))
                .body("[245].'numericCode'", containsString("876"))
                .body("[245].'currencies'.size()", equalTo(1))
                .body("[245].'currencies'", hasItems("XPF"))
                .body("[245].'languages'.size()", equalTo(1))
                .body("[245].'languages'", hasItems("fr"))
                .body("[245].'translations'.'de'", containsString("Wallis und Futuna"))
                .body("[245].'translations'.'es'", containsString("Wallis y Futuna"))
                .body("[245].'translations'.'fr'", containsString("Wallis-et-Futuna"))
                .body("[245].'translations'.'ja'", containsString("ウォリス・フツナ"))
                .body("[245].'translations'.'it'", containsString("Wallis e Futuna"))
                .body("[245].'relevance'", containsString("0.5"))
                .body("[246].'name'", containsString("Western Sahara"))
                .body("[246].'topLevelDomain'.size()", equalTo(1))
                .body("[246].'topLevelDomain'", hasItems(".eh"))
                .body("[246].'alpha2Code'", containsString("EH"))
                .body("[246].'alpha3Code'", containsString("ESH"))
                .body("[246].'callingCodes'.size()", equalTo(1))
                .body("[246].'callingCodes'", hasItems("212"))
                .body("[246].'capital'", containsString("El Aaiún"))
                .body("[246].'altSpellings'.size()", equalTo(2))
                .body("[246].'altSpellings'", hasItems("EH", "Taneẓroft Tutrimt"))
                .body("[246].'region'", containsString("Africa"))
                .body("[246].'subregion'", containsString("Northern Africa"))
                .body("[246].'population'", numberMatches(510713.0))
                .body("[246].'latlng'.size()", equalTo(2))
                .body("[246].'latlng'[0]", numberMatches(24.5))
                .body("[246].'latlng'[1]", numberMatches(-13.0))
                .body("[246].'demonym'", containsString("Sahrawi"))
                .body("[246].'area'", numberMatches(266000.0))
                .body("[246].'gini'", nullValue())
                .body("[246].'timezones'.size()", equalTo(1))
                .body("[246].'timezones'", hasItems("UTC+00:00"))
                .body("[246].'borders'.size()", equalTo(3))
                .body("[246].'borders'", hasItems("DZA", "MRT", "MAR"))
                .body("[246].'nativeName'", containsString("الصحراء الغربية"))
                .body("[246].'numericCode'", containsString("732"))
                .body("[246].'currencies'.size()", equalTo(3))
                .body("[246].'currencies'", hasItems("MAD", "DZD", "MRO"))
                .body("[246].'languages'.size()", equalTo(1))
                .body("[246].'languages'", hasItems("es"))
                .body("[246].'translations'.'de'", containsString("Westsahara"))
                .body("[246].'translations'.'es'", containsString("Sahara Occidental"))
                .body("[246].'translations'.'fr'", containsString("Sahara Occidental"))
                .body("[246].'translations'.'ja'", containsString("西サハラ"))
                .body("[246].'translations'.'it'", containsString("Sahara Occidentale"))
                .body("[246].'relevance'", containsString("0"))
                .body("[247].'name'", containsString("Yemen"))
                .body("[247].'topLevelDomain'.size()", equalTo(1))
                .body("[247].'topLevelDomain'", hasItems(".ye"))
                .body("[247].'alpha2Code'", containsString("YE"))
                .body("[247].'alpha3Code'", containsString("YEM"))
                .body("[247].'callingCodes'.size()", equalTo(1))
                .body("[247].'callingCodes'", hasItems("967"))
                .body("[247].'capital'", containsString("Sana'a"))
                .body("[247].'altSpellings'.size()", equalTo(3))
                .body("[247].'altSpellings'", hasItems("YE", "Yemeni Republic", "al-Jumhūriyyah al-Yamaniyyah"))
                .body("[247].'region'", containsString("Asia"))
                .body("[247].'subregion'", containsString("Western Asia"))
                .body("[247].'population'", numberMatches(2.5956E7))
                .body("[247].'latlng'.size()", equalTo(2))
                .body("[247].'latlng'[0]", numberMatches(15.0))
                .body("[247].'latlng'[1]", numberMatches(48.0))
                .body("[247].'demonym'", containsString("Yemeni"))
                .body("[247].'area'", numberMatches(527968.0))
                .body("[247].'gini'", numberMatches(37.7))
                .body("[247].'timezones'.size()", equalTo(1))
                .body("[247].'timezones'", hasItems("UTC+03:00"))
                .body("[247].'borders'.size()", equalTo(2))
                .body("[247].'borders'", hasItems("OMN", "SAU"))
                .body("[247].'nativeName'", containsString("اليَمَن"))
                .body("[247].'numericCode'", containsString("887"))
                .body("[247].'currencies'.size()", equalTo(1))
                .body("[247].'currencies'", hasItems("YER"))
                .body("[247].'languages'.size()", equalTo(1))
                .body("[247].'languages'", hasItems("ar"))
                .body("[247].'translations'.'de'", containsString("Jemen"))
                .body("[247].'translations'.'es'", containsString("Yemen"))
                .body("[247].'translations'.'fr'", containsString("Yémen"))
                .body("[247].'translations'.'ja'", containsString("イエメン"))
                .body("[247].'translations'.'it'", containsString("Yemen"))
                .body("[247].'relevance'", containsString("0"))
                .body("[248].'name'", containsString("Zambia"))
                .body("[248].'topLevelDomain'.size()", equalTo(1))
                .body("[248].'topLevelDomain'", hasItems(".zm"))
                .body("[248].'alpha2Code'", containsString("ZM"))
                .body("[248].'alpha3Code'", containsString("ZMB"))
                .body("[248].'callingCodes'.size()", equalTo(1))
                .body("[248].'callingCodes'", hasItems("260"))
                .body("[248].'capital'", containsString("Lusaka"))
                .body("[248].'altSpellings'.size()", equalTo(2))
                .body("[248].'altSpellings'", hasItems("ZM", "Republic of Zambia"))
                .body("[248].'region'", containsString("Africa"))
                .body("[248].'subregion'", containsString("Eastern Africa"))
                .body("[248].'population'", numberMatches(1.5473905E7))
                .body("[248].'latlng'.size()", equalTo(2))
                .body("[248].'latlng'[0]", numberMatches(-15.0))
                .body("[248].'latlng'[1]", numberMatches(30.0))
                .body("[248].'demonym'", containsString("Zambian"))
                .body("[248].'area'", numberMatches(752612.0))
                .body("[248].'gini'", numberMatches(54.6))
                .body("[248].'timezones'.size()", equalTo(1))
                .body("[248].'timezones'", hasItems("UTC+02:00"))
                .body("[248].'borders'.size()", equalTo(8))
                .body("[248].'borders'", hasItems("AGO", "BWA", "COD", "MWI", "MOZ", "NAM", "TZA", "ZWE"))
                .body("[248].'nativeName'", containsString("Zambia"))
                .body("[248].'numericCode'", containsString("894"))
                .body("[248].'currencies'.size()", equalTo(1))
                .body("[248].'currencies'", hasItems("ZMW"))
                .body("[248].'languages'.size()", equalTo(1))
                .body("[248].'languages'", hasItems("en"))
                .body("[248].'translations'.'de'", containsString("Sambia"))
                .body("[248].'translations'.'es'", containsString("Zambia"))
                .body("[248].'translations'.'fr'", containsString("Zambie"))
                .body("[248].'translations'.'ja'", containsString("ザンビア"))
                .body("[248].'translations'.'it'", containsString("Zambia"))
                .body("[248].'relevance'", containsString("0"))
                .body("[249].'name'", containsString("Zimbabwe"))
                .body("[249].'topLevelDomain'.size()", equalTo(1))
                .body("[249].'topLevelDomain'", hasItems(".zw"))
                .body("[249].'alpha2Code'", containsString("ZW"))
                .body("[249].'alpha3Code'", containsString("ZWE"))
                .body("[249].'callingCodes'.size()", equalTo(1))
                .body("[249].'callingCodes'", hasItems("263"))
                .body("[249].'capital'", containsString("Harare"))
                .body("[249].'altSpellings'.size()", equalTo(2))
                .body("[249].'altSpellings'", hasItems("ZW", "Republic of Zimbabwe"))
                .body("[249].'region'", containsString("Africa"))
                .body("[249].'subregion'", containsString("Eastern Africa"))
                .body("[249].'population'", numberMatches(1.3061239E7))
                .body("[249].'latlng'.size()", equalTo(2))
                .body("[249].'latlng'[0]", numberMatches(-20.0))
                .body("[249].'latlng'[1]", numberMatches(30.0))
                .body("[249].'demonym'", containsString("Zimbabwean"))
                .body("[249].'area'", numberMatches(390757.0))
                .body("[249].'gini'", nullValue())
                .body("[249].'timezones'.size()", equalTo(1))
                .body("[249].'timezones'", hasItems("UTC+02:00"))
                .body("[249].'borders'.size()", equalTo(4))
                .body("[249].'borders'", hasItems("BWA", "MOZ", "ZAF", "ZMB"))
                .body("[249].'nativeName'", containsString("Zimbabwe"))
                .body("[249].'numericCode'", containsString("716"))
                .body("[249].'currencies'.size()", equalTo(1))
                .body("[249].'currencies'", hasItems("USD"))
                .body("[249].'languages'.size()", equalTo(3))
                .body("[249].'languages'", hasItems("en", "sn", "nd"))
                .body("[249].'translations'.'de'", containsString("Simbabwe"))
                .body("[249].'translations'.'es'", containsString("Zimbabue"))
                .body("[249].'translations'.'fr'", containsString("Zimbabwe"))
                .body("[249].'translations'.'ja'", containsString("ジンバブエ"))
                .body("[249].'translations'.'it'", containsString("Zimbabwe"))
                .body("[249].'relevance'", containsString("0"));
        
    }
    
    
    @Test
    public void test_6() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/all")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(250))
                .body("[0].'name'", containsString("Afghanistan"))
                .body("[0].'topLevelDomain'.size()", equalTo(1))
                .body("[0].'topLevelDomain'", hasItems(".af"))
                .body("[0].'alpha2Code'", containsString("AF"))
                .body("[0].'alpha3Code'", containsString("AFG"))
                .body("[0].'callingCodes'.size()", equalTo(1))
                .body("[0].'callingCodes'", hasItems("93"))
                .body("[0].'capital'", containsString("Kabul"))
                .body("[0].'altSpellings'.size()", equalTo(2))
                .body("[0].'altSpellings'", hasItems("AF", "Afġānistān"))
                .body("[0].'region'", containsString("Asia"))
                .body("[0].'subregion'", containsString("Southern Asia"))
                .body("[0].'population'", numberMatches(2.7657145E7))
                .body("[0].'latlng'.size()", equalTo(2))
                .body("[0].'latlng'[0]", numberMatches(33.0))
                .body("[0].'latlng'[1]", numberMatches(65.0))
                .body("[0].'demonym'", containsString("Afghan"))
                .body("[0].'area'", numberMatches(652230.0))
                .body("[0].'gini'", numberMatches(27.8))
                .body("[0].'timezones'.size()", equalTo(1))
                .body("[0].'timezones'", hasItems("UTC+04:30"))
                .body("[0].'borders'.size()", equalTo(6))
                .body("[0].'borders'", hasItems("IRN", "PAK", "TKM", "UZB", "TJK", "CHN"))
                .body("[0].'nativeName'", containsString("افغانستان"))
                .body("[0].'numericCode'", containsString("004"))
                .body("[0].'currencies'.size()", equalTo(1))
                .body("[0].'currencies'[0].'code'", containsString("AFN"))
                .body("[0].'currencies'[0].'name'", containsString("Afghan afghani"))
                .body("[0].'currencies'[0].'symbol'", containsString("؋"))
                .body("[0].'languages'.size()", equalTo(3))
                .body("[0].'languages'[0].'iso639_1'", containsString("ps"))
                .body("[0].'languages'[0].'iso639_2'", containsString("pus"))
                .body("[0].'languages'[0].'name'", containsString("Pashto"))
                .body("[0].'languages'[0].'nativeName'", containsString("پښتو"))
                .body("[0].'languages'[1].'iso639_1'", containsString("uz"))
                .body("[0].'languages'[1].'iso639_2'", containsString("uzb"))
                .body("[0].'languages'[1].'name'", containsString("Uzbek"))
                .body("[0].'languages'[1].'nativeName'", containsString("Oʻzbek"))
                .body("[0].'languages'[2].'iso639_1'", containsString("tk"))
                .body("[0].'languages'[2].'iso639_2'", containsString("tuk"))
                .body("[0].'languages'[2].'name'", containsString("Turkmen"))
                .body("[0].'languages'[2].'nativeName'", containsString("Türkmen"))
                .body("[0].'translations'.'de'", containsString("Afghanistan"))
                .body("[0].'translations'.'es'", containsString("Afganistán"))
                .body("[0].'translations'.'fr'", containsString("Afghanistan"))
                .body("[0].'translations'.'ja'", containsString("アフガニスタン"))
                .body("[0].'translations'.'it'", containsString("Afghanistan"))
                .body("[0].'translations'.'br'", containsString("Afeganistão"))
                .body("[0].'translations'.'pt'", containsString("Afeganistão"))
                .body("[0].'translations'.'nl'", containsString("Afghanistan"))
                .body("[0].'translations'.'hr'", containsString("Afganistan"))
                .body("[0].'translations'.'fa'", containsString("افغانستان"))
                .body("[0].'flag'", containsString("https://restcountries.eu/data/afg.svg"))
                .body("[0].'regionalBlocs'.size()", equalTo(1))
                .body("[0].'regionalBlocs'[0].'acronym'", containsString("SAARC"))
                .body("[0].'regionalBlocs'[0].'name'", containsString("South Asian Association for Regional Cooperation"))
                .body("[0].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[0].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[0].'cioc'", containsString("AFG"))
                .body("[1].'name'", containsString("Åland Islands"))
                .body("[1].'topLevelDomain'.size()", equalTo(1))
                .body("[1].'topLevelDomain'", hasItems(".ax"))
                .body("[1].'alpha2Code'", containsString("AX"))
                .body("[1].'alpha3Code'", containsString("ALA"))
                .body("[1].'callingCodes'.size()", equalTo(1))
                .body("[1].'callingCodes'", hasItems("358"))
                .body("[1].'capital'", containsString("Mariehamn"))
                .body("[1].'altSpellings'.size()", equalTo(4))
                .body("[1].'altSpellings'", hasItems("AX", "Aaland", "Aland", "Ahvenanmaa"))
                .body("[1].'region'", containsString("Europe"))
                .body("[1].'subregion'", containsString("Northern Europe"))
                .body("[1].'population'", numberMatches(28875.0))
                .body("[1].'latlng'.size()", equalTo(2))
                .body("[1].'latlng'[0]", numberMatches(60.116667))
                .body("[1].'latlng'[1]", numberMatches(19.9))
                .body("[1].'demonym'", containsString("Ålandish"))
                .body("[1].'area'", numberMatches(1580.0))
                .body("[1].'gini'", nullValue())
                .body("[1].'timezones'.size()", equalTo(1))
                .body("[1].'timezones'", hasItems("UTC+02:00"))
                .body("[1].'borders'.size()", equalTo(0))
                .body("[1].'nativeName'", containsString("Åland"))
                .body("[1].'numericCode'", containsString("248"))
                .body("[1].'currencies'.size()", equalTo(1))
                .body("[1].'currencies'[0].'code'", containsString("EUR"))
                .body("[1].'currencies'[0].'name'", containsString("Euro"))
                .body("[1].'currencies'[0].'symbol'", containsString("€"))
                .body("[1].'languages'.size()", equalTo(1))
                .body("[1].'languages'[0].'iso639_1'", containsString("sv"))
                .body("[1].'languages'[0].'iso639_2'", containsString("swe"))
                .body("[1].'languages'[0].'name'", containsString("Swedish"))
                .body("[1].'languages'[0].'nativeName'", containsString("svenska"))
                .body("[1].'translations'.'de'", containsString("Åland"))
                .body("[1].'translations'.'es'", containsString("Alandia"))
                .body("[1].'translations'.'fr'", containsString("Åland"))
                .body("[1].'translations'.'ja'", containsString("オーランド諸島"))
                .body("[1].'translations'.'it'", containsString("Isole Aland"))
                .body("[1].'translations'.'br'", containsString("Ilhas de Aland"))
                .body("[1].'translations'.'pt'", containsString("Ilhas de Aland"))
                .body("[1].'translations'.'nl'", containsString("Ålandeilanden"))
                .body("[1].'translations'.'hr'", containsString("Ålandski otoci"))
                .body("[1].'translations'.'fa'", containsString("جزایر الند"))
                .body("[1].'flag'", containsString("https://restcountries.eu/data/ala.svg"))
                .body("[1].'regionalBlocs'.size()", equalTo(1))
                .body("[1].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[1].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[1].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[1].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[1].'cioc'", containsString(""))
                .body("[2].'name'", containsString("Albania"))
                .body("[2].'topLevelDomain'.size()", equalTo(1))
                .body("[2].'topLevelDomain'", hasItems(".al"))
                .body("[2].'alpha2Code'", containsString("AL"))
                .body("[2].'alpha3Code'", containsString("ALB"))
                .body("[2].'callingCodes'.size()", equalTo(1))
                .body("[2].'callingCodes'", hasItems("355"))
                .body("[2].'capital'", containsString("Tirana"))
                .body("[2].'altSpellings'.size()", equalTo(4))
                .body("[2].'altSpellings'", hasItems("AL", "Shqipëri", "Shqipëria", "Shqipnia"))
                .body("[2].'region'", containsString("Europe"))
                .body("[2].'subregion'", containsString("Southern Europe"))
                .body("[2].'population'", numberMatches(2886026.0))
                .body("[2].'latlng'.size()", equalTo(2))
                .body("[2].'latlng'[0]", numberMatches(41.0))
                .body("[2].'latlng'[1]", numberMatches(20.0))
                .body("[2].'demonym'", containsString("Albanian"))
                .body("[2].'area'", numberMatches(28748.0))
                .body("[2].'gini'", numberMatches(34.5))
                .body("[2].'timezones'.size()", equalTo(1))
                .body("[2].'timezones'", hasItems("UTC+01:00"))
                .body("[2].'borders'.size()", equalTo(4))
                .body("[2].'borders'", hasItems("MNE", "GRC", "MKD", "KOS"))
                .body("[2].'nativeName'", containsString("Shqipëria"))
                .body("[2].'numericCode'", containsString("008"))
                .body("[2].'currencies'.size()", equalTo(1))
                .body("[2].'currencies'[0].'code'", containsString("ALL"))
                .body("[2].'currencies'[0].'name'", containsString("Albanian lek"))
                .body("[2].'currencies'[0].'symbol'", containsString("L"))
                .body("[2].'languages'.size()", equalTo(1))
                .body("[2].'languages'[0].'iso639_1'", containsString("sq"))
                .body("[2].'languages'[0].'iso639_2'", containsString("sqi"))
                .body("[2].'languages'[0].'name'", containsString("Albanian"))
                .body("[2].'languages'[0].'nativeName'", containsString("Shqip"))
                .body("[2].'translations'.'de'", containsString("Albanien"))
                .body("[2].'translations'.'es'", containsString("Albania"))
                .body("[2].'translations'.'fr'", containsString("Albanie"))
                .body("[2].'translations'.'ja'", containsString("アルバニア"))
                .body("[2].'translations'.'it'", containsString("Albania"))
                .body("[2].'translations'.'br'", containsString("Albânia"))
                .body("[2].'translations'.'pt'", containsString("Albânia"))
                .body("[2].'translations'.'nl'", containsString("Albanië"))
                .body("[2].'translations'.'hr'", containsString("Albanija"))
                .body("[2].'translations'.'fa'", containsString("آلبانی"))
                .body("[2].'flag'", containsString("https://restcountries.eu/data/alb.svg"))
                .body("[2].'regionalBlocs'.size()", equalTo(1))
                .body("[2].'regionalBlocs'[0].'acronym'", containsString("CEFTA"))
                .body("[2].'regionalBlocs'[0].'name'", containsString("Central European Free Trade Agreement"))
                .body("[2].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[2].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[2].'cioc'", containsString("ALB"))
                .body("[3].'name'", containsString("Algeria"))
                .body("[3].'topLevelDomain'.size()", equalTo(1))
                .body("[3].'topLevelDomain'", hasItems(".dz"))
                .body("[3].'alpha2Code'", containsString("DZ"))
                .body("[3].'alpha3Code'", containsString("DZA"))
                .body("[3].'callingCodes'.size()", equalTo(1))
                .body("[3].'callingCodes'", hasItems("213"))
                .body("[3].'capital'", containsString("Algiers"))
                .body("[3].'altSpellings'.size()", equalTo(3))
                .body("[3].'altSpellings'", hasItems("DZ", "Dzayer", "Algérie"))
                .body("[3].'region'", containsString("Africa"))
                .body("[3].'subregion'", containsString("Northern Africa"))
                .body("[3].'population'", numberMatches(4.04E7))
                .body("[3].'latlng'.size()", equalTo(2))
                .body("[3].'latlng'[0]", numberMatches(28.0))
                .body("[3].'latlng'[1]", numberMatches(3.0))
                .body("[3].'demonym'", containsString("Algerian"))
                .body("[3].'area'", numberMatches(2381741.0))
                .body("[3].'gini'", numberMatches(35.3))
                .body("[3].'timezones'.size()", equalTo(1))
                .body("[3].'timezones'", hasItems("UTC+01:00"))
                .body("[3].'borders'.size()", equalTo(7))
                .body("[3].'borders'", hasItems("TUN", "LBY", "NER", "ESH", "MRT", "MLI", "MAR"))
                .body("[3].'nativeName'", containsString("الجزائر"))
                .body("[3].'numericCode'", containsString("012"))
                .body("[3].'currencies'.size()", equalTo(1))
                .body("[3].'currencies'[0].'code'", containsString("DZD"))
                .body("[3].'currencies'[0].'name'", containsString("Algerian dinar"))
                .body("[3].'currencies'[0].'symbol'", containsString("د.ج"))
                .body("[3].'languages'.size()", equalTo(1))
                .body("[3].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[3].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[3].'languages'[0].'name'", containsString("Arabic"))
                .body("[3].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[3].'translations'.'de'", containsString("Algerien"))
                .body("[3].'translations'.'es'", containsString("Argelia"))
                .body("[3].'translations'.'fr'", containsString("Algérie"))
                .body("[3].'translations'.'ja'", containsString("アルジェリア"))
                .body("[3].'translations'.'it'", containsString("Algeria"))
                .body("[3].'translations'.'br'", containsString("Argélia"))
                .body("[3].'translations'.'pt'", containsString("Argélia"))
                .body("[3].'translations'.'nl'", containsString("Algerije"))
                .body("[3].'translations'.'hr'", containsString("Alžir"))
                .body("[3].'translations'.'fa'", containsString("الجزایر"))
                .body("[3].'flag'", containsString("https://restcountries.eu/data/dza.svg"))
                .body("[3].'regionalBlocs'.size()", equalTo(2))
                .body("[3].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[3].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[3].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[3].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[3].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[3].'regionalBlocs'[1].'acronym'", containsString("AL"))
                .body("[3].'regionalBlocs'[1].'name'", containsString("Arab League"))
                .body("[3].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(0))
                .body("[3].'regionalBlocs'[1].'otherNames'.size()", equalTo(3))
                .body("[3].'regionalBlocs'[1].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[3].'cioc'", containsString("ALG"))
                .body("[4].'name'", containsString("American Samoa"))
                .body("[4].'topLevelDomain'.size()", equalTo(1))
                .body("[4].'topLevelDomain'", hasItems(".as"))
                .body("[4].'alpha2Code'", containsString("AS"))
                .body("[4].'alpha3Code'", containsString("ASM"))
                .body("[4].'callingCodes'.size()", equalTo(1))
                .body("[4].'callingCodes'", hasItems("1"))
                .body("[4].'capital'", containsString("Pago Pago"))
                .body("[4].'altSpellings'.size()", equalTo(4))
                .body("[4].'altSpellings'", hasItems("AS", "Amerika Sāmoa", "Amelika Sāmoa", "Sāmoa Amelika"))
                .body("[4].'region'", containsString("Oceania"))
                .body("[4].'subregion'", containsString("Polynesia"))
                .body("[4].'population'", numberMatches(57100.0))
                .body("[4].'latlng'.size()", equalTo(2))
                .body("[4].'latlng'[0]", numberMatches(-14.33333333))
                .body("[4].'latlng'[1]", numberMatches(-170.0))
                .body("[4].'demonym'", containsString("American Samoan"))
                .body("[4].'area'", numberMatches(199.0))
                .body("[4].'gini'", nullValue())
                .body("[4].'timezones'.size()", equalTo(1))
                .body("[4].'timezones'", hasItems("UTC-11:00"))
                .body("[4].'borders'.size()", equalTo(0))
                .body("[4].'nativeName'", containsString("American Samoa"))
                .body("[4].'numericCode'", containsString("016"))
                .body("[4].'currencies'.size()", equalTo(1))
                .body("[4].'currencies'[0].'code'", containsString("USD"))
                .body("[4].'currencies'[0].'name'", containsString("United State Dollar"))
                .body("[4].'currencies'[0].'symbol'", containsString("$"))
                .body("[4].'languages'.size()", equalTo(2))
                .body("[4].'languages'[0].'iso639_1'", containsString("en"))
                .body("[4].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[4].'languages'[0].'name'", containsString("English"))
                .body("[4].'languages'[0].'nativeName'", containsString("English"))
                .body("[4].'languages'[1].'iso639_1'", containsString("sm"))
                .body("[4].'languages'[1].'iso639_2'", containsString("smo"))
                .body("[4].'languages'[1].'name'", containsString("Samoan"))
                .body("[4].'languages'[1].'nativeName'", containsString("gagana fa'a Samoa"))
                .body("[4].'translations'.'de'", containsString("Amerikanisch-Samoa"))
                .body("[4].'translations'.'es'", containsString("Samoa Americana"))
                .body("[4].'translations'.'fr'", containsString("Samoa américaines"))
                .body("[4].'translations'.'ja'", containsString("アメリカ領サモア"))
                .body("[4].'translations'.'it'", containsString("Samoa Americane"))
                .body("[4].'translations'.'br'", containsString("Samoa Americana"))
                .body("[4].'translations'.'pt'", containsString("Samoa Americana"))
                .body("[4].'translations'.'nl'", containsString("Amerikaans Samoa"))
                .body("[4].'translations'.'hr'", containsString("Američka Samoa"))
                .body("[4].'translations'.'fa'", containsString("ساموآی آمریکا"))
                .body("[4].'flag'", containsString("https://restcountries.eu/data/asm.svg"))
                .body("[4].'regionalBlocs'.size()", equalTo(0))
                .body("[4].'cioc'", containsString("ASA"))
                .body("[5].'name'", containsString("Andorra"))
                .body("[5].'topLevelDomain'.size()", equalTo(1))
                .body("[5].'topLevelDomain'", hasItems(".ad"))
                .body("[5].'alpha2Code'", containsString("AD"))
                .body("[5].'alpha3Code'", containsString("AND"))
                .body("[5].'callingCodes'.size()", equalTo(1))
                .body("[5].'callingCodes'", hasItems("376"))
                .body("[5].'capital'", containsString("Andorra la Vella"))
                .body("[5].'altSpellings'.size()", equalTo(3))
                .body("[5].'altSpellings'", hasItems("AD", "Principality of Andorra", "Principat d'Andorra"))
                .body("[5].'region'", containsString("Europe"))
                .body("[5].'subregion'", containsString("Southern Europe"))
                .body("[5].'population'", numberMatches(78014.0))
                .body("[5].'latlng'.size()", equalTo(2))
                .body("[5].'latlng'[0]", numberMatches(42.5))
                .body("[5].'latlng'[1]", numberMatches(1.5))
                .body("[5].'demonym'", containsString("Andorran"))
                .body("[5].'area'", numberMatches(468.0))
                .body("[5].'gini'", nullValue())
                .body("[5].'timezones'.size()", equalTo(1))
                .body("[5].'timezones'", hasItems("UTC+01:00"))
                .body("[5].'borders'.size()", equalTo(2))
                .body("[5].'borders'", hasItems("FRA", "ESP"))
                .body("[5].'nativeName'", containsString("Andorra"))
                .body("[5].'numericCode'", containsString("020"))
                .body("[5].'currencies'.size()", equalTo(1))
                .body("[5].'currencies'[0].'code'", containsString("EUR"))
                .body("[5].'currencies'[0].'name'", containsString("Euro"))
                .body("[5].'currencies'[0].'symbol'", containsString("€"))
                .body("[5].'languages'.size()", equalTo(1))
                .body("[5].'languages'[0].'iso639_1'", containsString("ca"))
                .body("[5].'languages'[0].'iso639_2'", containsString("cat"))
                .body("[5].'languages'[0].'name'", containsString("Catalan"))
                .body("[5].'languages'[0].'nativeName'", containsString("català"))
                .body("[5].'translations'.'de'", containsString("Andorra"))
                .body("[5].'translations'.'es'", containsString("Andorra"))
                .body("[5].'translations'.'fr'", containsString("Andorre"))
                .body("[5].'translations'.'ja'", containsString("アンドラ"))
                .body("[5].'translations'.'it'", containsString("Andorra"))
                .body("[5].'translations'.'br'", containsString("Andorra"))
                .body("[5].'translations'.'pt'", containsString("Andorra"))
                .body("[5].'translations'.'nl'", containsString("Andorra"))
                .body("[5].'translations'.'hr'", containsString("Andora"))
                .body("[5].'translations'.'fa'", containsString("آندورا"))
                .body("[5].'flag'", containsString("https://restcountries.eu/data/and.svg"))
                .body("[5].'regionalBlocs'.size()", equalTo(0))
                .body("[5].'cioc'", containsString("AND"))
                .body("[6].'name'", containsString("Angola"))
                .body("[6].'topLevelDomain'.size()", equalTo(1))
                .body("[6].'topLevelDomain'", hasItems(".ao"))
                .body("[6].'alpha2Code'", containsString("AO"))
                .body("[6].'alpha3Code'", containsString("AGO"))
                .body("[6].'callingCodes'.size()", equalTo(1))
                .body("[6].'callingCodes'", hasItems("244"))
                .body("[6].'capital'", containsString("Luanda"))
                .body("[6].'altSpellings'.size()", equalTo(3))
                .body("[6].'altSpellings'", hasItems("AO", "República de Angola", "ʁɛpublika de an'ɡɔla"))
                .body("[6].'region'", containsString("Africa"))
                .body("[6].'subregion'", containsString("Middle Africa"))
                .body("[6].'population'", numberMatches(2.5868E7))
                .body("[6].'latlng'.size()", equalTo(2))
                .body("[6].'latlng'[0]", numberMatches(-12.5))
                .body("[6].'latlng'[1]", numberMatches(18.5))
                .body("[6].'demonym'", containsString("Angolan"))
                .body("[6].'area'", numberMatches(1246700.0))
                .body("[6].'gini'", numberMatches(58.6))
                .body("[6].'timezones'.size()", equalTo(1))
                .body("[6].'timezones'", hasItems("UTC+01:00"))
                .body("[6].'borders'.size()", equalTo(4))
                .body("[6].'borders'", hasItems("COG", "COD", "ZMB", "NAM"))
                .body("[6].'nativeName'", containsString("Angola"))
                .body("[6].'numericCode'", containsString("024"))
                .body("[6].'currencies'.size()", equalTo(1))
                .body("[6].'currencies'[0].'code'", containsString("AOA"))
                .body("[6].'currencies'[0].'name'", containsString("Angolan kwanza"))
                .body("[6].'currencies'[0].'symbol'", containsString("Kz"))
                .body("[6].'languages'.size()", equalTo(1))
                .body("[6].'languages'[0].'iso639_1'", containsString("pt"))
                .body("[6].'languages'[0].'iso639_2'", containsString("por"))
                .body("[6].'languages'[0].'name'", containsString("Portuguese"))
                .body("[6].'languages'[0].'nativeName'", containsString("Português"))
                .body("[6].'translations'.'de'", containsString("Angola"))
                .body("[6].'translations'.'es'", containsString("Angola"))
                .body("[6].'translations'.'fr'", containsString("Angola"))
                .body("[6].'translations'.'ja'", containsString("アンゴラ"))
                .body("[6].'translations'.'it'", containsString("Angola"))
                .body("[6].'translations'.'br'", containsString("Angola"))
                .body("[6].'translations'.'pt'", containsString("Angola"))
                .body("[6].'translations'.'nl'", containsString("Angola"))
                .body("[6].'translations'.'hr'", containsString("Angola"))
                .body("[6].'translations'.'fa'", containsString("آنگولا"))
                .body("[6].'flag'", containsString("https://restcountries.eu/data/ago.svg"))
                .body("[6].'regionalBlocs'.size()", equalTo(1))
                .body("[6].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[6].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[6].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[6].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[6].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[6].'cioc'", containsString("ANG"))
                .body("[7].'name'", containsString("Anguilla"))
                .body("[7].'topLevelDomain'.size()", equalTo(1))
                .body("[7].'topLevelDomain'", hasItems(".ai"))
                .body("[7].'alpha2Code'", containsString("AI"))
                .body("[7].'alpha3Code'", containsString("AIA"))
                .body("[7].'callingCodes'.size()", equalTo(1))
                .body("[7].'callingCodes'", hasItems("1"))
                .body("[7].'capital'", containsString("The Valley"))
                .body("[7].'altSpellings'.size()", equalTo(1))
                .body("[7].'altSpellings'", hasItems("AI"))
                .body("[7].'region'", containsString("Americas"))
                .body("[7].'subregion'", containsString("Caribbean"))
                .body("[7].'population'", numberMatches(13452.0))
                .body("[7].'latlng'.size()", equalTo(2))
                .body("[7].'latlng'[0]", numberMatches(18.25))
                .body("[7].'latlng'[1]", numberMatches(-63.16666666))
                .body("[7].'demonym'", containsString("Anguillian"))
                .body("[7].'area'", numberMatches(91.0))
                .body("[7].'gini'", nullValue())
                .body("[7].'timezones'.size()", equalTo(1))
                .body("[7].'timezones'", hasItems("UTC-04:00"))
                .body("[7].'borders'.size()", equalTo(0))
                .body("[7].'nativeName'", containsString("Anguilla"))
                .body("[7].'numericCode'", containsString("660"))
                .body("[7].'currencies'.size()", equalTo(1))
                .body("[7].'currencies'[0].'code'", containsString("XCD"))
                .body("[7].'currencies'[0].'name'", containsString("East Caribbean dollar"))
                .body("[7].'currencies'[0].'symbol'", containsString("$"))
                .body("[7].'languages'.size()", equalTo(1))
                .body("[7].'languages'[0].'iso639_1'", containsString("en"))
                .body("[7].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[7].'languages'[0].'name'", containsString("English"))
                .body("[7].'languages'[0].'nativeName'", containsString("English"))
                .body("[7].'translations'.'de'", containsString("Anguilla"))
                .body("[7].'translations'.'es'", containsString("Anguilla"))
                .body("[7].'translations'.'fr'", containsString("Anguilla"))
                .body("[7].'translations'.'ja'", containsString("アンギラ"))
                .body("[7].'translations'.'it'", containsString("Anguilla"))
                .body("[7].'translations'.'br'", containsString("Anguila"))
                .body("[7].'translations'.'pt'", containsString("Anguila"))
                .body("[7].'translations'.'nl'", containsString("Anguilla"))
                .body("[7].'translations'.'hr'", containsString("Angvila"))
                .body("[7].'translations'.'fa'", containsString("آنگویلا"))
                .body("[7].'flag'", containsString("https://restcountries.eu/data/aia.svg"))
                .body("[7].'regionalBlocs'.size()", equalTo(0))
                .body("[7].'cioc'", containsString(""))
                .body("[8].'name'", containsString("Antarctica"))
                .body("[8].'topLevelDomain'.size()", equalTo(1))
                .body("[8].'topLevelDomain'", hasItems(".aq"))
                .body("[8].'alpha2Code'", containsString("AQ"))
                .body("[8].'alpha3Code'", containsString("ATA"))
                .body("[8].'callingCodes'.size()", equalTo(1))
                .body("[8].'callingCodes'", hasItems("672"))
                .body("[8].'capital'", containsString(""))
                .body("[8].'altSpellings'.size()", equalTo(0))
                .body("[8].'region'", containsString("Polar"))
                .body("[8].'subregion'", containsString(""))
                .body("[8].'population'", numberMatches(1000.0))
                .body("[8].'latlng'.size()", equalTo(2))
                .body("[8].'latlng'[0]", numberMatches(-74.65))
                .body("[8].'latlng'[1]", numberMatches(4.48))
                .body("[8].'demonym'", containsString(""))
                .body("[8].'area'", numberMatches(1.4E7))
                .body("[8].'gini'", nullValue())
                .body("[8].'timezones'.size()", equalTo(8))
                .body("[8].'timezones'", hasItems("UTC-03:00", "UTC+03:00", "UTC+05:00", "UTC+06:00", "UTC+07:00", "UTC+08:00", "UTC+10:00", "UTC+12:00"))
                .body("[8].'borders'.size()", equalTo(0))
                .body("[8].'nativeName'", containsString("Antarctica"))
                .body("[8].'numericCode'", containsString("010"))
                .body("[8].'currencies'.size()", equalTo(2))
                .body("[8].'currencies'[0].'code'", containsString("AUD"))
                .body("[8].'currencies'[0].'name'", containsString("Australian dollar"))
                .body("[8].'currencies'[0].'symbol'", containsString("$"))
                .body("[8].'currencies'[1].'code'", containsString("GBP"))
                .body("[8].'currencies'[1].'name'", containsString("British pound"))
                .body("[8].'currencies'[1].'symbol'", containsString("£"))
                .body("[8].'languages'.size()", equalTo(2))
                .body("[8].'languages'[0].'iso639_1'", containsString("en"))
                .body("[8].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[8].'languages'[0].'name'", containsString("English"))
                .body("[8].'languages'[0].'nativeName'", containsString("English"))
                .body("[8].'languages'[1].'iso639_1'", containsString("ru"))
                .body("[8].'languages'[1].'iso639_2'", containsString("rus"))
                .body("[8].'languages'[1].'name'", containsString("Russian"))
                .body("[8].'languages'[1].'nativeName'", containsString("Русский"))
                .body("[8].'translations'.'de'", containsString("Antarktika"))
                .body("[8].'translations'.'es'", containsString("Antártida"))
                .body("[8].'translations'.'fr'", containsString("Antarctique"))
                .body("[8].'translations'.'ja'", containsString("南極大陸"))
                .body("[8].'translations'.'it'", containsString("Antartide"))
                .body("[8].'translations'.'br'", containsString("Antártida"))
                .body("[8].'translations'.'pt'", containsString("Antárctida"))
                .body("[8].'translations'.'nl'", containsString("Antarctica"))
                .body("[8].'translations'.'hr'", containsString("Antarktika"))
                .body("[8].'translations'.'fa'", containsString("جنوبگان"))
                .body("[8].'flag'", containsString("https://restcountries.eu/data/ata.svg"))
                .body("[8].'regionalBlocs'.size()", equalTo(0))
                .body("[8].'cioc'", containsString(""))
                .body("[9].'name'", containsString("Antigua and Barbuda"))
                .body("[9].'topLevelDomain'.size()", equalTo(1))
                .body("[9].'topLevelDomain'", hasItems(".ag"))
                .body("[9].'alpha2Code'", containsString("AG"))
                .body("[9].'alpha3Code'", containsString("ATG"))
                .body("[9].'callingCodes'.size()", equalTo(1))
                .body("[9].'callingCodes'", hasItems("1"))
                .body("[9].'capital'", containsString("Saint John's"))
                .body("[9].'altSpellings'.size()", equalTo(1))
                .body("[9].'altSpellings'", hasItems("AG"))
                .body("[9].'region'", containsString("Americas"))
                .body("[9].'subregion'", containsString("Caribbean"))
                .body("[9].'population'", numberMatches(86295.0))
                .body("[9].'latlng'.size()", equalTo(2))
                .body("[9].'latlng'[0]", numberMatches(17.05))
                .body("[9].'latlng'[1]", numberMatches(-61.8))
                .body("[9].'demonym'", containsString("Antiguan, Barbudan"))
                .body("[9].'area'", numberMatches(442.0))
                .body("[9].'gini'", nullValue())
                .body("[9].'timezones'.size()", equalTo(1))
                .body("[9].'timezones'", hasItems("UTC-04:00"))
                .body("[9].'borders'.size()", equalTo(0))
                .body("[9].'nativeName'", containsString("Antigua and Barbuda"))
                .body("[9].'numericCode'", containsString("028"))
                .body("[9].'currencies'.size()", equalTo(1))
                .body("[9].'currencies'[0].'code'", containsString("XCD"))
                .body("[9].'currencies'[0].'name'", containsString("East Caribbean dollar"))
                .body("[9].'currencies'[0].'symbol'", containsString("$"))
                .body("[9].'languages'.size()", equalTo(1))
                .body("[9].'languages'[0].'iso639_1'", containsString("en"))
                .body("[9].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[9].'languages'[0].'name'", containsString("English"))
                .body("[9].'languages'[0].'nativeName'", containsString("English"))
                .body("[9].'translations'.'de'", containsString("Antigua und Barbuda"))
                .body("[9].'translations'.'es'", containsString("Antigua y Barbuda"))
                .body("[9].'translations'.'fr'", containsString("Antigua-et-Barbuda"))
                .body("[9].'translations'.'ja'", containsString("アンティグア・バーブーダ"))
                .body("[9].'translations'.'it'", containsString("Antigua e Barbuda"))
                .body("[9].'translations'.'br'", containsString("Antígua e Barbuda"))
                .body("[9].'translations'.'pt'", containsString("Antígua e Barbuda"))
                .body("[9].'translations'.'nl'", containsString("Antigua en Barbuda"))
                .body("[9].'translations'.'hr'", containsString("Antigva i Barbuda"))
                .body("[9].'translations'.'fa'", containsString("آنتیگوا و باربودا"))
                .body("[9].'flag'", containsString("https://restcountries.eu/data/atg.svg"))
                .body("[9].'regionalBlocs'.size()", equalTo(1))
                .body("[9].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[9].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[9].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[9].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[9].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[9].'cioc'", containsString("ANT"))
                .body("[10].'name'", containsString("Argentina"))
                .body("[10].'topLevelDomain'.size()", equalTo(1))
                .body("[10].'topLevelDomain'", hasItems(".ar"))
                .body("[10].'alpha2Code'", containsString("AR"))
                .body("[10].'alpha3Code'", containsString("ARG"))
                .body("[10].'callingCodes'.size()", equalTo(1))
                .body("[10].'callingCodes'", hasItems("54"))
                .body("[10].'capital'", containsString("Buenos Aires"))
                .body("[10].'altSpellings'.size()", equalTo(3))
                .body("[10].'altSpellings'", hasItems("AR", "Argentine Republic", "República Argentina"))
                .body("[10].'region'", containsString("Americas"))
                .body("[10].'subregion'", containsString("South America"))
                .body("[10].'population'", numberMatches(4.35904E7))
                .body("[10].'latlng'.size()", equalTo(2))
                .body("[10].'latlng'[0]", numberMatches(-34.0))
                .body("[10].'latlng'[1]", numberMatches(-64.0))
                .body("[10].'demonym'", containsString("Argentinean"))
                .body("[10].'area'", numberMatches(2780400.0))
                .body("[10].'gini'", numberMatches(44.5))
                .body("[10].'timezones'.size()", equalTo(1))
                .body("[10].'timezones'", hasItems("UTC-03:00"))
                .body("[10].'borders'.size()", equalTo(5))
                .body("[10].'borders'", hasItems("BOL", "BRA", "CHL", "PRY", "URY"))
                .body("[10].'nativeName'", containsString("Argentina"))
                .body("[10].'numericCode'", containsString("032"))
                .body("[10].'currencies'.size()", equalTo(1))
                .body("[10].'currencies'[0].'code'", containsString("ARS"))
                .body("[10].'currencies'[0].'name'", containsString("Argentine peso"))
                .body("[10].'currencies'[0].'symbol'", containsString("$"))
                .body("[10].'languages'.size()", equalTo(2))
                .body("[10].'languages'[0].'iso639_1'", containsString("es"))
                .body("[10].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[10].'languages'[0].'name'", containsString("Spanish"))
                .body("[10].'languages'[0].'nativeName'", containsString("Español"))
                .body("[10].'languages'[1].'iso639_1'", containsString("gn"))
                .body("[10].'languages'[1].'iso639_2'", containsString("grn"))
                .body("[10].'languages'[1].'name'", containsString("Guaraní"))
                .body("[10].'languages'[1].'nativeName'", containsString("Avañe'ẽ"))
                .body("[10].'translations'.'de'", containsString("Argentinien"))
                .body("[10].'translations'.'es'", containsString("Argentina"))
                .body("[10].'translations'.'fr'", containsString("Argentine"))
                .body("[10].'translations'.'ja'", containsString("アルゼンチン"))
                .body("[10].'translations'.'it'", containsString("Argentina"))
                .body("[10].'translations'.'br'", containsString("Argentina"))
                .body("[10].'translations'.'pt'", containsString("Argentina"))
                .body("[10].'translations'.'nl'", containsString("Argentinië"))
                .body("[10].'translations'.'hr'", containsString("Argentina"))
                .body("[10].'translations'.'fa'", containsString("آرژانتین"))
                .body("[10].'flag'", containsString("https://restcountries.eu/data/arg.svg"))
                .body("[10].'regionalBlocs'.size()", equalTo(1))
                .body("[10].'regionalBlocs'[0].'acronym'", containsString("USAN"))
                .body("[10].'regionalBlocs'[0].'name'", containsString("Union of South American Nations"))
                .body("[10].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(3))
                .body("[10].'regionalBlocs'[0].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[10].'regionalBlocs'[0].'otherNames'.size()", equalTo(4))
                .body("[10].'regionalBlocs'[0].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[10].'cioc'", containsString("ARG"))
                .body("[11].'name'", containsString("Armenia"))
                .body("[11].'topLevelDomain'.size()", equalTo(1))
                .body("[11].'topLevelDomain'", hasItems(".am"))
                .body("[11].'alpha2Code'", containsString("AM"))
                .body("[11].'alpha3Code'", containsString("ARM"))
                .body("[11].'callingCodes'.size()", equalTo(1))
                .body("[11].'callingCodes'", hasItems("374"))
                .body("[11].'capital'", containsString("Yerevan"))
                .body("[11].'altSpellings'.size()", equalTo(4))
                .body("[11].'altSpellings'", hasItems("AM", "Hayastan", "Republic of Armenia", "Հայաստանի Հանրապետություն"))
                .body("[11].'region'", containsString("Asia"))
                .body("[11].'subregion'", containsString("Western Asia"))
                .body("[11].'population'", numberMatches(2994400.0))
                .body("[11].'latlng'.size()", equalTo(2))
                .body("[11].'latlng'[0]", numberMatches(40.0))
                .body("[11].'latlng'[1]", numberMatches(45.0))
                .body("[11].'demonym'", containsString("Armenian"))
                .body("[11].'area'", numberMatches(29743.0))
                .body("[11].'gini'", numberMatches(30.9))
                .body("[11].'timezones'.size()", equalTo(1))
                .body("[11].'timezones'", hasItems("UTC+04:00"))
                .body("[11].'borders'.size()", equalTo(4))
                .body("[11].'borders'", hasItems("AZE", "GEO", "IRN", "TUR"))
                .body("[11].'nativeName'", containsString("Հայաստան"))
                .body("[11].'numericCode'", containsString("051"))
                .body("[11].'currencies'.size()", equalTo(1))
                .body("[11].'currencies'[0].'code'", containsString("AMD"))
                .body("[11].'currencies'[0].'name'", containsString("Armenian dram"))
                .body("[11].'currencies'[0].'symbol'", nullValue())
                .body("[11].'languages'.size()", equalTo(2))
                .body("[11].'languages'[0].'iso639_1'", containsString("hy"))
                .body("[11].'languages'[0].'iso639_2'", containsString("hye"))
                .body("[11].'languages'[0].'name'", containsString("Armenian"))
                .body("[11].'languages'[0].'nativeName'", containsString("Հայերեն"))
                .body("[11].'languages'[1].'iso639_1'", containsString("ru"))
                .body("[11].'languages'[1].'iso639_2'", containsString("rus"))
                .body("[11].'languages'[1].'name'", containsString("Russian"))
                .body("[11].'languages'[1].'nativeName'", containsString("Русский"))
                .body("[11].'translations'.'de'", containsString("Armenien"))
                .body("[11].'translations'.'es'", containsString("Armenia"))
                .body("[11].'translations'.'fr'", containsString("Arménie"))
                .body("[11].'translations'.'ja'", containsString("アルメニア"))
                .body("[11].'translations'.'it'", containsString("Armenia"))
                .body("[11].'translations'.'br'", containsString("Armênia"))
                .body("[11].'translations'.'pt'", containsString("Arménia"))
                .body("[11].'translations'.'nl'", containsString("Armenië"))
                .body("[11].'translations'.'hr'", containsString("Armenija"))
                .body("[11].'translations'.'fa'", containsString("ارمنستان"))
                .body("[11].'flag'", containsString("https://restcountries.eu/data/arm.svg"))
                .body("[11].'regionalBlocs'.size()", equalTo(1))
                .body("[11].'regionalBlocs'[0].'acronym'", containsString("EEU"))
                .body("[11].'regionalBlocs'[0].'name'", containsString("Eurasian Economic Union"))
                .body("[11].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(1))
                .body("[11].'regionalBlocs'[0].'otherAcronyms'", hasItems("EAEU"))
                .body("[11].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[11].'cioc'", containsString("ARM"))
                .body("[12].'name'", containsString("Aruba"))
                .body("[12].'topLevelDomain'.size()", equalTo(1))
                .body("[12].'topLevelDomain'", hasItems(".aw"))
                .body("[12].'alpha2Code'", containsString("AW"))
                .body("[12].'alpha3Code'", containsString("ABW"))
                .body("[12].'callingCodes'.size()", equalTo(1))
                .body("[12].'callingCodes'", hasItems("297"))
                .body("[12].'capital'", containsString("Oranjestad"))
                .body("[12].'altSpellings'.size()", equalTo(1))
                .body("[12].'altSpellings'", hasItems("AW"))
                .body("[12].'region'", containsString("Americas"))
                .body("[12].'subregion'", containsString("Caribbean"))
                .body("[12].'population'", numberMatches(107394.0))
                .body("[12].'latlng'.size()", equalTo(2))
                .body("[12].'latlng'[0]", numberMatches(12.5))
                .body("[12].'latlng'[1]", numberMatches(-69.96666666))
                .body("[12].'demonym'", containsString("Aruban"))
                .body("[12].'area'", numberMatches(180.0))
                .body("[12].'gini'", nullValue())
                .body("[12].'timezones'.size()", equalTo(1))
                .body("[12].'timezones'", hasItems("UTC-04:00"))
                .body("[12].'borders'.size()", equalTo(0))
                .body("[12].'nativeName'", containsString("Aruba"))
                .body("[12].'numericCode'", containsString("533"))
                .body("[12].'currencies'.size()", equalTo(1))
                .body("[12].'currencies'[0].'code'", containsString("AWG"))
                .body("[12].'currencies'[0].'name'", containsString("Aruban florin"))
                .body("[12].'currencies'[0].'symbol'", containsString("ƒ"))
                .body("[12].'languages'.size()", equalTo(2))
                .body("[12].'languages'[0].'iso639_1'", containsString("nl"))
                .body("[12].'languages'[0].'iso639_2'", containsString("nld"))
                .body("[12].'languages'[0].'name'", containsString("Dutch"))
                .body("[12].'languages'[0].'nativeName'", containsString("Nederlands"))
                .body("[12].'languages'[1].'iso639_1'", containsString("pa"))
                .body("[12].'languages'[1].'iso639_2'", containsString("pan"))
                .body("[12].'languages'[1].'name'", containsString("(Eastern) Punjabi"))
                .body("[12].'languages'[1].'nativeName'", containsString("ਪੰਜਾਬੀ"))
                .body("[12].'translations'.'de'", containsString("Aruba"))
                .body("[12].'translations'.'es'", containsString("Aruba"))
                .body("[12].'translations'.'fr'", containsString("Aruba"))
                .body("[12].'translations'.'ja'", containsString("アルバ"))
                .body("[12].'translations'.'it'", containsString("Aruba"))
                .body("[12].'translations'.'br'", containsString("Aruba"))
                .body("[12].'translations'.'pt'", containsString("Aruba"))
                .body("[12].'translations'.'nl'", containsString("Aruba"))
                .body("[12].'translations'.'hr'", containsString("Aruba"))
                .body("[12].'translations'.'fa'", containsString("آروبا"))
                .body("[12].'flag'", containsString("https://restcountries.eu/data/abw.svg"))
                .body("[12].'regionalBlocs'.size()", equalTo(0))
                .body("[12].'cioc'", containsString("ARU"))
                .body("[13].'name'", containsString("Australia"))
                .body("[13].'topLevelDomain'.size()", equalTo(1))
                .body("[13].'topLevelDomain'", hasItems(".au"))
                .body("[13].'alpha2Code'", containsString("AU"))
                .body("[13].'alpha3Code'", containsString("AUS"))
                .body("[13].'callingCodes'.size()", equalTo(1))
                .body("[13].'callingCodes'", hasItems("61"))
                .body("[13].'capital'", containsString("Canberra"))
                .body("[13].'altSpellings'.size()", equalTo(1))
                .body("[13].'altSpellings'", hasItems("AU"))
                .body("[13].'region'", containsString("Oceania"))
                .body("[13].'subregion'", containsString("Australia and New Zealand"))
                .body("[13].'population'", numberMatches(2.411736E7))
                .body("[13].'latlng'.size()", equalTo(2))
                .body("[13].'latlng'[0]", numberMatches(-27.0))
                .body("[13].'latlng'[1]", numberMatches(133.0))
                .body("[13].'demonym'", containsString("Australian"))
                .body("[13].'area'", numberMatches(7692024.0))
                .body("[13].'gini'", numberMatches(30.5))
                .body("[13].'timezones'.size()", equalTo(8))
                .body("[13].'timezones'", hasItems("UTC+05:00", "UTC+06:30", "UTC+07:00", "UTC+08:00", "UTC+09:30", "UTC+10:00", "UTC+10:30", "UTC+11:30"))
                .body("[13].'borders'.size()", equalTo(0))
                .body("[13].'nativeName'", containsString("Australia"))
                .body("[13].'numericCode'", containsString("036"))
                .body("[13].'currencies'.size()", equalTo(1))
                .body("[13].'currencies'[0].'code'", containsString("AUD"))
                .body("[13].'currencies'[0].'name'", containsString("Australian dollar"))
                .body("[13].'currencies'[0].'symbol'", containsString("$"))
                .body("[13].'languages'.size()", equalTo(1))
                .body("[13].'languages'[0].'iso639_1'", containsString("en"))
                .body("[13].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[13].'languages'[0].'name'", containsString("English"))
                .body("[13].'languages'[0].'nativeName'", containsString("English"))
                .body("[13].'translations'.'de'", containsString("Australien"))
                .body("[13].'translations'.'es'", containsString("Australia"))
                .body("[13].'translations'.'fr'", containsString("Australie"))
                .body("[13].'translations'.'ja'", containsString("オーストラリア"))
                .body("[13].'translations'.'it'", containsString("Australia"))
                .body("[13].'translations'.'br'", containsString("Austrália"))
                .body("[13].'translations'.'pt'", containsString("Austrália"))
                .body("[13].'translations'.'nl'", containsString("Australië"))
                .body("[13].'translations'.'hr'", containsString("Australija"))
                .body("[13].'translations'.'fa'", containsString("استرالیا"))
                .body("[13].'flag'", containsString("https://restcountries.eu/data/aus.svg"))
                .body("[13].'regionalBlocs'.size()", equalTo(0))
                .body("[13].'cioc'", containsString("AUS"))
                .body("[14].'name'", containsString("Austria"))
                .body("[14].'topLevelDomain'.size()", equalTo(1))
                .body("[14].'topLevelDomain'", hasItems(".at"))
                .body("[14].'alpha2Code'", containsString("AT"))
                .body("[14].'alpha3Code'", containsString("AUT"))
                .body("[14].'callingCodes'.size()", equalTo(1))
                .body("[14].'callingCodes'", hasItems("43"))
                .body("[14].'capital'", containsString("Vienna"))
                .body("[14].'altSpellings'.size()", equalTo(4))
                .body("[14].'altSpellings'", hasItems("AT", "Österreich", "Osterreich", "Oesterreich"))
                .body("[14].'region'", containsString("Europe"))
                .body("[14].'subregion'", containsString("Western Europe"))
                .body("[14].'population'", numberMatches(8725931.0))
                .body("[14].'latlng'.size()", equalTo(2))
                .body("[14].'latlng'[0]", numberMatches(47.33333333))
                .body("[14].'latlng'[1]", numberMatches(13.33333333))
                .body("[14].'demonym'", containsString("Austrian"))
                .body("[14].'area'", numberMatches(83871.0))
                .body("[14].'gini'", numberMatches(26.0))
                .body("[14].'timezones'.size()", equalTo(1))
                .body("[14].'timezones'", hasItems("UTC+01:00"))
                .body("[14].'borders'.size()", equalTo(8))
                .body("[14].'borders'", hasItems("CZE", "DEU", "HUN", "ITA", "LIE", "SVK", "SVN", "CHE"))
                .body("[14].'nativeName'", containsString("Österreich"))
                .body("[14].'numericCode'", containsString("040"))
                .body("[14].'currencies'.size()", equalTo(1))
                .body("[14].'currencies'[0].'code'", containsString("EUR"))
                .body("[14].'currencies'[0].'name'", containsString("Euro"))
                .body("[14].'currencies'[0].'symbol'", containsString("€"))
                .body("[14].'languages'.size()", equalTo(1))
                .body("[14].'languages'[0].'iso639_1'", containsString("de"))
                .body("[14].'languages'[0].'iso639_2'", containsString("deu"))
                .body("[14].'languages'[0].'name'", containsString("German"))
                .body("[14].'languages'[0].'nativeName'", containsString("Deutsch"))
                .body("[14].'translations'.'de'", containsString("Österreich"))
                .body("[14].'translations'.'es'", containsString("Austria"))
                .body("[14].'translations'.'fr'", containsString("Autriche"))
                .body("[14].'translations'.'ja'", containsString("オーストリア"))
                .body("[14].'translations'.'it'", containsString("Austria"))
                .body("[14].'translations'.'br'", containsString("áustria"))
                .body("[14].'translations'.'pt'", containsString("áustria"))
                .body("[14].'translations'.'nl'", containsString("Oostenrijk"))
                .body("[14].'translations'.'hr'", containsString("Austrija"))
                .body("[14].'translations'.'fa'", containsString("اتریش"))
                .body("[14].'flag'", containsString("https://restcountries.eu/data/aut.svg"))
                .body("[14].'regionalBlocs'.size()", equalTo(1))
                .body("[14].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[14].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[14].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[14].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[14].'cioc'", containsString("AUT"))
                .body("[15].'name'", containsString("Azerbaijan"))
                .body("[15].'topLevelDomain'.size()", equalTo(1))
                .body("[15].'topLevelDomain'", hasItems(".az"))
                .body("[15].'alpha2Code'", containsString("AZ"))
                .body("[15].'alpha3Code'", containsString("AZE"))
                .body("[15].'callingCodes'.size()", equalTo(1))
                .body("[15].'callingCodes'", hasItems("994"))
                .body("[15].'capital'", containsString("Baku"))
                .body("[15].'altSpellings'.size()", equalTo(3))
                .body("[15].'altSpellings'", hasItems("AZ", "Republic of Azerbaijan", "Azərbaycan Respublikası"))
                .body("[15].'region'", containsString("Asia"))
                .body("[15].'subregion'", containsString("Western Asia"))
                .body("[15].'population'", numberMatches(9730500.0))
                .body("[15].'latlng'.size()", equalTo(2))
                .body("[15].'latlng'[0]", numberMatches(40.5))
                .body("[15].'latlng'[1]", numberMatches(47.5))
                .body("[15].'demonym'", containsString("Azerbaijani"))
                .body("[15].'area'", numberMatches(86600.0))
                .body("[15].'gini'", numberMatches(33.7))
                .body("[15].'timezones'.size()", equalTo(1))
                .body("[15].'timezones'", hasItems("UTC+04:00"))
                .body("[15].'borders'.size()", equalTo(5))
                .body("[15].'borders'", hasItems("ARM", "GEO", "IRN", "RUS", "TUR"))
                .body("[15].'nativeName'", containsString("Azərbaycan"))
                .body("[15].'numericCode'", containsString("031"))
                .body("[15].'currencies'.size()", equalTo(1))
                .body("[15].'currencies'[0].'code'", containsString("AZN"))
                .body("[15].'currencies'[0].'name'", containsString("Azerbaijani manat"))
                .body("[15].'currencies'[0].'symbol'", nullValue())
                .body("[15].'languages'.size()", equalTo(1))
                .body("[15].'languages'[0].'iso639_1'", containsString("az"))
                .body("[15].'languages'[0].'iso639_2'", containsString("aze"))
                .body("[15].'languages'[0].'name'", containsString("Azerbaijani"))
                .body("[15].'languages'[0].'nativeName'", containsString("azərbaycan dili"))
                .body("[15].'translations'.'de'", containsString("Aserbaidschan"))
                .body("[15].'translations'.'es'", containsString("Azerbaiyán"))
                .body("[15].'translations'.'fr'", containsString("Azerbaïdjan"))
                .body("[15].'translations'.'ja'", containsString("アゼルバイジャン"))
                .body("[15].'translations'.'it'", containsString("Azerbaijan"))
                .body("[15].'translations'.'br'", containsString("Azerbaijão"))
                .body("[15].'translations'.'pt'", containsString("Azerbaijão"))
                .body("[15].'translations'.'nl'", containsString("Azerbeidzjan"))
                .body("[15].'translations'.'hr'", containsString("Azerbajdžan"))
                .body("[15].'translations'.'fa'", containsString("آذربایجان"))
                .body("[15].'flag'", containsString("https://restcountries.eu/data/aze.svg"))
                .body("[15].'regionalBlocs'.size()", equalTo(0))
                .body("[15].'cioc'", containsString("AZE"))
                .body("[16].'name'", containsString("Bahamas"))
                .body("[16].'topLevelDomain'.size()", equalTo(1))
                .body("[16].'topLevelDomain'", hasItems(".bs"))
                .body("[16].'alpha2Code'", containsString("BS"))
                .body("[16].'alpha3Code'", containsString("BHS"))
                .body("[16].'callingCodes'.size()", equalTo(1))
                .body("[16].'callingCodes'", hasItems("1"))
                .body("[16].'capital'", containsString("Nassau"))
                .body("[16].'altSpellings'.size()", equalTo(2))
                .body("[16].'altSpellings'", hasItems("BS", "Commonwealth of the Bahamas"))
                .body("[16].'region'", containsString("Americas"))
                .body("[16].'subregion'", containsString("Caribbean"))
                .body("[16].'population'", numberMatches(378040.0))
                .body("[16].'latlng'.size()", equalTo(2))
                .body("[16].'latlng'[0]", numberMatches(24.25))
                .body("[16].'latlng'[1]", numberMatches(-76.0))
                .body("[16].'demonym'", containsString("Bahamian"))
                .body("[16].'area'", numberMatches(13943.0))
                .body("[16].'gini'", nullValue())
                .body("[16].'timezones'.size()", equalTo(1))
                .body("[16].'timezones'", hasItems("UTC-05:00"))
                .body("[16].'borders'.size()", equalTo(0))
                .body("[16].'nativeName'", containsString("Bahamas"))
                .body("[16].'numericCode'", containsString("044"))
                .body("[16].'currencies'.size()", equalTo(1))
                .body("[16].'currencies'[0].'code'", containsString("BSD"))
                .body("[16].'currencies'[0].'name'", containsString("Bahamian dollar"))
                .body("[16].'currencies'[0].'symbol'", containsString("$"))
                .body("[16].'languages'.size()", equalTo(1))
                .body("[16].'languages'[0].'iso639_1'", containsString("en"))
                .body("[16].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[16].'languages'[0].'name'", containsString("English"))
                .body("[16].'languages'[0].'nativeName'", containsString("English"))
                .body("[16].'translations'.'de'", containsString("Bahamas"))
                .body("[16].'translations'.'es'", containsString("Bahamas"))
                .body("[16].'translations'.'fr'", containsString("Bahamas"))
                .body("[16].'translations'.'ja'", containsString("バハマ"))
                .body("[16].'translations'.'it'", containsString("Bahamas"))
                .body("[16].'translations'.'br'", containsString("Bahamas"))
                .body("[16].'translations'.'pt'", containsString("Baamas"))
                .body("[16].'translations'.'nl'", containsString("Bahama’s"))
                .body("[16].'translations'.'hr'", containsString("Bahami"))
                .body("[16].'translations'.'fa'", containsString("باهاما"))
                .body("[16].'flag'", containsString("https://restcountries.eu/data/bhs.svg"))
                .body("[16].'regionalBlocs'.size()", equalTo(1))
                .body("[16].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[16].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[16].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[16].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[16].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[16].'cioc'", containsString("BAH"))
                .body("[17].'name'", containsString("Bahrain"))
                .body("[17].'topLevelDomain'.size()", equalTo(1))
                .body("[17].'topLevelDomain'", hasItems(".bh"))
                .body("[17].'alpha2Code'", containsString("BH"))
                .body("[17].'alpha3Code'", containsString("BHR"))
                .body("[17].'callingCodes'.size()", equalTo(1))
                .body("[17].'callingCodes'", hasItems("973"))
                .body("[17].'capital'", containsString("Manama"))
                .body("[17].'altSpellings'.size()", equalTo(3))
                .body("[17].'altSpellings'", hasItems("BH", "Kingdom of Bahrain", "Mamlakat al-Baḥrayn"))
                .body("[17].'region'", containsString("Asia"))
                .body("[17].'subregion'", containsString("Western Asia"))
                .body("[17].'population'", numberMatches(1404900.0))
                .body("[17].'latlng'.size()", equalTo(2))
                .body("[17].'latlng'[0]", numberMatches(26.0))
                .body("[17].'latlng'[1]", numberMatches(50.55))
                .body("[17].'demonym'", containsString("Bahraini"))
                .body("[17].'area'", numberMatches(765.0))
                .body("[17].'gini'", nullValue())
                .body("[17].'timezones'.size()", equalTo(1))
                .body("[17].'timezones'", hasItems("UTC+03:00"))
                .body("[17].'borders'.size()", equalTo(0))
                .body("[17].'nativeName'", containsString("‏البحرين"))
                .body("[17].'numericCode'", containsString("048"))
                .body("[17].'currencies'.size()", equalTo(1))
                .body("[17].'currencies'[0].'code'", containsString("BHD"))
                .body("[17].'currencies'[0].'name'", containsString("Bahraini dinar"))
                .body("[17].'currencies'[0].'symbol'", containsString(".د.ب"))
                .body("[17].'languages'.size()", equalTo(1))
                .body("[17].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[17].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[17].'languages'[0].'name'", containsString("Arabic"))
                .body("[17].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[17].'translations'.'de'", containsString("Bahrain"))
                .body("[17].'translations'.'es'", containsString("Bahrein"))
                .body("[17].'translations'.'fr'", containsString("Bahreïn"))
                .body("[17].'translations'.'ja'", containsString("バーレーン"))
                .body("[17].'translations'.'it'", containsString("Bahrein"))
                .body("[17].'translations'.'br'", containsString("Bahrein"))
                .body("[17].'translations'.'pt'", containsString("Barém"))
                .body("[17].'translations'.'nl'", containsString("Bahrein"))
                .body("[17].'translations'.'hr'", containsString("Bahrein"))
                .body("[17].'translations'.'fa'", containsString("بحرین"))
                .body("[17].'flag'", containsString("https://restcountries.eu/data/bhr.svg"))
                .body("[17].'regionalBlocs'.size()", equalTo(1))
                .body("[17].'regionalBlocs'[0].'acronym'", containsString("AL"))
                .body("[17].'regionalBlocs'[0].'name'", containsString("Arab League"))
                .body("[17].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[17].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[17].'regionalBlocs'[0].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[17].'cioc'", containsString("BRN"))
                .body("[18].'name'", containsString("Bangladesh"))
                .body("[18].'topLevelDomain'.size()", equalTo(1))
                .body("[18].'topLevelDomain'", hasItems(".bd"))
                .body("[18].'alpha2Code'", containsString("BD"))
                .body("[18].'alpha3Code'", containsString("BGD"))
                .body("[18].'callingCodes'.size()", equalTo(1))
                .body("[18].'callingCodes'", hasItems("880"))
                .body("[18].'capital'", containsString("Dhaka"))
                .body("[18].'altSpellings'.size()", equalTo(3))
                .body("[18].'altSpellings'", hasItems("BD", "People's Republic of Bangladesh", "Gônôprôjatôntri Bangladesh"))
                .body("[18].'region'", containsString("Asia"))
                .body("[18].'subregion'", containsString("Southern Asia"))
                .body("[18].'population'", numberMatches(1.6100679E8))
                .body("[18].'latlng'.size()", equalTo(2))
                .body("[18].'latlng'[0]", numberMatches(24.0))
                .body("[18].'latlng'[1]", numberMatches(90.0))
                .body("[18].'demonym'", containsString("Bangladeshi"))
                .body("[18].'area'", numberMatches(147570.0))
                .body("[18].'gini'", numberMatches(32.1))
                .body("[18].'timezones'.size()", equalTo(1))
                .body("[18].'timezones'", hasItems("UTC+06:00"))
                .body("[18].'borders'.size()", equalTo(2))
                .body("[18].'borders'", hasItems("MMR", "IND"))
                .body("[18].'nativeName'", containsString("Bangladesh"))
                .body("[18].'numericCode'", containsString("050"))
                .body("[18].'currencies'.size()", equalTo(1))
                .body("[18].'currencies'[0].'code'", containsString("BDT"))
                .body("[18].'currencies'[0].'name'", containsString("Bangladeshi taka"))
                .body("[18].'currencies'[0].'symbol'", containsString("৳"))
                .body("[18].'languages'.size()", equalTo(1))
                .body("[18].'languages'[0].'iso639_1'", containsString("bn"))
                .body("[18].'languages'[0].'iso639_2'", containsString("ben"))
                .body("[18].'languages'[0].'name'", containsString("Bengali"))
                .body("[18].'languages'[0].'nativeName'", containsString("বাংলা"))
                .body("[18].'translations'.'de'", containsString("Bangladesch"))
                .body("[18].'translations'.'es'", containsString("Bangladesh"))
                .body("[18].'translations'.'fr'", containsString("Bangladesh"))
                .body("[18].'translations'.'ja'", containsString("バングラデシュ"))
                .body("[18].'translations'.'it'", containsString("Bangladesh"))
                .body("[18].'translations'.'br'", containsString("Bangladesh"))
                .body("[18].'translations'.'pt'", containsString("Bangladeche"))
                .body("[18].'translations'.'nl'", containsString("Bangladesh"))
                .body("[18].'translations'.'hr'", containsString("Bangladeš"))
                .body("[18].'translations'.'fa'", containsString("بنگلادش"))
                .body("[18].'flag'", containsString("https://restcountries.eu/data/bgd.svg"))
                .body("[18].'regionalBlocs'.size()", equalTo(1))
                .body("[18].'regionalBlocs'[0].'acronym'", containsString("SAARC"))
                .body("[18].'regionalBlocs'[0].'name'", containsString("South Asian Association for Regional Cooperation"))
                .body("[18].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[18].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[18].'cioc'", containsString("BAN"))
                .body("[19].'name'", containsString("Barbados"))
                .body("[19].'topLevelDomain'.size()", equalTo(1))
                .body("[19].'topLevelDomain'", hasItems(".bb"))
                .body("[19].'alpha2Code'", containsString("BB"))
                .body("[19].'alpha3Code'", containsString("BRB"))
                .body("[19].'callingCodes'.size()", equalTo(1))
                .body("[19].'callingCodes'", hasItems("1"))
                .body("[19].'capital'", containsString("Bridgetown"))
                .body("[19].'altSpellings'.size()", equalTo(1))
                .body("[19].'altSpellings'", hasItems("BB"))
                .body("[19].'region'", containsString("Americas"))
                .body("[19].'subregion'", containsString("Caribbean"))
                .body("[19].'population'", numberMatches(285000.0))
                .body("[19].'latlng'.size()", equalTo(2))
                .body("[19].'latlng'[0]", numberMatches(13.16666666))
                .body("[19].'latlng'[1]", numberMatches(-59.53333333))
                .body("[19].'demonym'", containsString("Barbadian"))
                .body("[19].'area'", numberMatches(430.0))
                .body("[19].'gini'", nullValue())
                .body("[19].'timezones'.size()", equalTo(1))
                .body("[19].'timezones'", hasItems("UTC-04:00"))
                .body("[19].'borders'.size()", equalTo(0))
                .body("[19].'nativeName'", containsString("Barbados"))
                .body("[19].'numericCode'", containsString("052"))
                .body("[19].'currencies'.size()", equalTo(1))
                .body("[19].'currencies'[0].'code'", containsString("BBD"))
                .body("[19].'currencies'[0].'name'", containsString("Barbadian dollar"))
                .body("[19].'currencies'[0].'symbol'", containsString("$"))
                .body("[19].'languages'.size()", equalTo(1))
                .body("[19].'languages'[0].'iso639_1'", containsString("en"))
                .body("[19].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[19].'languages'[0].'name'", containsString("English"))
                .body("[19].'languages'[0].'nativeName'", containsString("English"))
                .body("[19].'translations'.'de'", containsString("Barbados"))
                .body("[19].'translations'.'es'", containsString("Barbados"))
                .body("[19].'translations'.'fr'", containsString("Barbade"))
                .body("[19].'translations'.'ja'", containsString("バルバドス"))
                .body("[19].'translations'.'it'", containsString("Barbados"))
                .body("[19].'translations'.'br'", containsString("Barbados"))
                .body("[19].'translations'.'pt'", containsString("Barbados"))
                .body("[19].'translations'.'nl'", containsString("Barbados"))
                .body("[19].'translations'.'hr'", containsString("Barbados"))
                .body("[19].'translations'.'fa'", containsString("باربادوس"))
                .body("[19].'flag'", containsString("https://restcountries.eu/data/brb.svg"))
                .body("[19].'regionalBlocs'.size()", equalTo(1))
                .body("[19].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[19].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[19].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[19].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[19].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[19].'cioc'", containsString("BAR"))
                .body("[20].'name'", containsString("Belarus"))
                .body("[20].'topLevelDomain'.size()", equalTo(1))
                .body("[20].'topLevelDomain'", hasItems(".by"))
                .body("[20].'alpha2Code'", containsString("BY"))
                .body("[20].'alpha3Code'", containsString("BLR"))
                .body("[20].'callingCodes'.size()", equalTo(1))
                .body("[20].'callingCodes'", hasItems("375"))
                .body("[20].'capital'", containsString("Minsk"))
                .body("[20].'altSpellings'.size()", equalTo(7))
                .body("[20].'altSpellings'", hasItems("BY", "Bielaruś", "Republic of Belarus", "Белоруссия", "Республика Беларусь", "Belorussiya", "Respublika Belarus’"))
                .body("[20].'region'", containsString("Europe"))
                .body("[20].'subregion'", containsString("Eastern Europe"))
                .body("[20].'population'", numberMatches(9498700.0))
                .body("[20].'latlng'.size()", equalTo(2))
                .body("[20].'latlng'[0]", numberMatches(53.0))
                .body("[20].'latlng'[1]", numberMatches(28.0))
                .body("[20].'demonym'", containsString("Belarusian"))
                .body("[20].'area'", numberMatches(207600.0))
                .body("[20].'gini'", numberMatches(26.5))
                .body("[20].'timezones'.size()", equalTo(1))
                .body("[20].'timezones'", hasItems("UTC+03:00"))
                .body("[20].'borders'.size()", equalTo(5))
                .body("[20].'borders'", hasItems("LVA", "LTU", "POL", "RUS", "UKR"))
                .body("[20].'nativeName'", containsString("Белару́сь"))
                .body("[20].'numericCode'", containsString("112"))
                .body("[20].'currencies'.size()", equalTo(2))
                .body("[20].'currencies'[0].'code'", containsString("BYN"))
                .body("[20].'currencies'[0].'name'", containsString("New Belarusian ruble"))
                .body("[20].'currencies'[0].'symbol'", containsString("Br"))
                .body("[20].'currencies'[1].'code'", containsString("BYR"))
                .body("[20].'currencies'[1].'name'", containsString("Old Belarusian ruble"))
                .body("[20].'currencies'[1].'symbol'", containsString("Br"))
                .body("[20].'languages'.size()", equalTo(2))
                .body("[20].'languages'[0].'iso639_1'", containsString("be"))
                .body("[20].'languages'[0].'iso639_2'", containsString("bel"))
                .body("[20].'languages'[0].'name'", containsString("Belarusian"))
                .body("[20].'languages'[0].'nativeName'", containsString("беларуская мова"))
                .body("[20].'languages'[1].'iso639_1'", containsString("ru"))
                .body("[20].'languages'[1].'iso639_2'", containsString("rus"))
                .body("[20].'languages'[1].'name'", containsString("Russian"))
                .body("[20].'languages'[1].'nativeName'", containsString("Русский"))
                .body("[20].'translations'.'de'", containsString("Weißrussland"))
                .body("[20].'translations'.'es'", containsString("Bielorrusia"))
                .body("[20].'translations'.'fr'", containsString("Biélorussie"))
                .body("[20].'translations'.'ja'", containsString("ベラルーシ"))
                .body("[20].'translations'.'it'", containsString("Bielorussia"))
                .body("[20].'translations'.'br'", containsString("Bielorrússia"))
                .body("[20].'translations'.'pt'", containsString("Bielorrússia"))
                .body("[20].'translations'.'nl'", containsString("Wit-Rusland"))
                .body("[20].'translations'.'hr'", containsString("Bjelorusija"))
                .body("[20].'translations'.'fa'", containsString("بلاروس"))
                .body("[20].'flag'", containsString("https://restcountries.eu/data/blr.svg"))
                .body("[20].'regionalBlocs'.size()", equalTo(1))
                .body("[20].'regionalBlocs'[0].'acronym'", containsString("EEU"))
                .body("[20].'regionalBlocs'[0].'name'", containsString("Eurasian Economic Union"))
                .body("[20].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(1))
                .body("[20].'regionalBlocs'[0].'otherAcronyms'", hasItems("EAEU"))
                .body("[20].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[20].'cioc'", containsString("BLR"))
                .body("[21].'name'", containsString("Belgium"))
                .body("[21].'topLevelDomain'.size()", equalTo(1))
                .body("[21].'topLevelDomain'", hasItems(".be"))
                .body("[21].'alpha2Code'", containsString("BE"))
                .body("[21].'alpha3Code'", containsString("BEL"))
                .body("[21].'callingCodes'.size()", equalTo(1))
                .body("[21].'callingCodes'", hasItems("32"))
                .body("[21].'capital'", containsString("Brussels"))
                .body("[21].'altSpellings'.size()", equalTo(9))
                .body("[21].'altSpellings'", hasItems("BE", "België", "Belgie", "Belgien", "Belgique", "Kingdom of Belgium", "Koninkrijk België", "Royaume de Belgique", "Königreich Belgien"))
                .body("[21].'region'", containsString("Europe"))
                .body("[21].'subregion'", containsString("Western Europe"))
                .body("[21].'population'", numberMatches(1.1319511E7))
                .body("[21].'latlng'.size()", equalTo(2))
                .body("[21].'latlng'[0]", numberMatches(50.83333333))
                .body("[21].'latlng'[1]", numberMatches(4.0))
                .body("[21].'demonym'", containsString("Belgian"))
                .body("[21].'area'", numberMatches(30528.0))
                .body("[21].'gini'", numberMatches(33.0))
                .body("[21].'timezones'.size()", equalTo(1))
                .body("[21].'timezones'", hasItems("UTC+01:00"))
                .body("[21].'borders'.size()", equalTo(4))
                .body("[21].'borders'", hasItems("FRA", "DEU", "LUX", "NLD"))
                .body("[21].'nativeName'", containsString("België"))
                .body("[21].'numericCode'", containsString("056"))
                .body("[21].'currencies'.size()", equalTo(1))
                .body("[21].'currencies'[0].'code'", containsString("EUR"))
                .body("[21].'currencies'[0].'name'", containsString("Euro"))
                .body("[21].'currencies'[0].'symbol'", containsString("€"))
                .body("[21].'languages'.size()", equalTo(3))
                .body("[21].'languages'[0].'iso639_1'", containsString("nl"))
                .body("[21].'languages'[0].'iso639_2'", containsString("nld"))
                .body("[21].'languages'[0].'name'", containsString("Dutch"))
                .body("[21].'languages'[0].'nativeName'", containsString("Nederlands"))
                .body("[21].'languages'[1].'iso639_1'", containsString("fr"))
                .body("[21].'languages'[1].'iso639_2'", containsString("fra"))
                .body("[21].'languages'[1].'name'", containsString("French"))
                .body("[21].'languages'[1].'nativeName'", containsString("français"))
                .body("[21].'languages'[2].'iso639_1'", containsString("de"))
                .body("[21].'languages'[2].'iso639_2'", containsString("deu"))
                .body("[21].'languages'[2].'name'", containsString("German"))
                .body("[21].'languages'[2].'nativeName'", containsString("Deutsch"))
                .body("[21].'translations'.'de'", containsString("Belgien"))
                .body("[21].'translations'.'es'", containsString("Bélgica"))
                .body("[21].'translations'.'fr'", containsString("Belgique"))
                .body("[21].'translations'.'ja'", containsString("ベルギー"))
                .body("[21].'translations'.'it'", containsString("Belgio"))
                .body("[21].'translations'.'br'", containsString("Bélgica"))
                .body("[21].'translations'.'pt'", containsString("Bélgica"))
                .body("[21].'translations'.'nl'", containsString("België"))
                .body("[21].'translations'.'hr'", containsString("Belgija"))
                .body("[21].'translations'.'fa'", containsString("بلژیک"))
                .body("[21].'flag'", containsString("https://restcountries.eu/data/bel.svg"))
                .body("[21].'regionalBlocs'.size()", equalTo(1))
                .body("[21].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[21].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[21].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[21].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[21].'cioc'", containsString("BEL"))
                .body("[22].'name'", containsString("Belize"))
                .body("[22].'topLevelDomain'.size()", equalTo(1))
                .body("[22].'topLevelDomain'", hasItems(".bz"))
                .body("[22].'alpha2Code'", containsString("BZ"))
                .body("[22].'alpha3Code'", containsString("BLZ"))
                .body("[22].'callingCodes'.size()", equalTo(1))
                .body("[22].'callingCodes'", hasItems("501"))
                .body("[22].'capital'", containsString("Belmopan"))
                .body("[22].'altSpellings'.size()", equalTo(1))
                .body("[22].'altSpellings'", hasItems("BZ"))
                .body("[22].'region'", containsString("Americas"))
                .body("[22].'subregion'", containsString("Central America"))
                .body("[22].'population'", numberMatches(370300.0))
                .body("[22].'latlng'.size()", equalTo(2))
                .body("[22].'latlng'[0]", numberMatches(17.25))
                .body("[22].'latlng'[1]", numberMatches(-88.75))
                .body("[22].'demonym'", containsString("Belizean"))
                .body("[22].'area'", numberMatches(22966.0))
                .body("[22].'gini'", numberMatches(53.1))
                .body("[22].'timezones'.size()", equalTo(1))
                .body("[22].'timezones'", hasItems("UTC-06:00"))
                .body("[22].'borders'.size()", equalTo(2))
                .body("[22].'borders'", hasItems("GTM", "MEX"))
                .body("[22].'nativeName'", containsString("Belize"))
                .body("[22].'numericCode'", containsString("084"))
                .body("[22].'currencies'.size()", equalTo(1))
                .body("[22].'currencies'[0].'code'", containsString("BZD"))
                .body("[22].'currencies'[0].'name'", containsString("Belize dollar"))
                .body("[22].'currencies'[0].'symbol'", containsString("$"))
                .body("[22].'languages'.size()", equalTo(2))
                .body("[22].'languages'[0].'iso639_1'", containsString("en"))
                .body("[22].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[22].'languages'[0].'name'", containsString("English"))
                .body("[22].'languages'[0].'nativeName'", containsString("English"))
                .body("[22].'languages'[1].'iso639_1'", containsString("es"))
                .body("[22].'languages'[1].'iso639_2'", containsString("spa"))
                .body("[22].'languages'[1].'name'", containsString("Spanish"))
                .body("[22].'languages'[1].'nativeName'", containsString("Español"))
                .body("[22].'translations'.'de'", containsString("Belize"))
                .body("[22].'translations'.'es'", containsString("Belice"))
                .body("[22].'translations'.'fr'", containsString("Belize"))
                .body("[22].'translations'.'ja'", containsString("ベリーズ"))
                .body("[22].'translations'.'it'", containsString("Belize"))
                .body("[22].'translations'.'br'", containsString("Belize"))
                .body("[22].'translations'.'pt'", containsString("Belize"))
                .body("[22].'translations'.'nl'", containsString("Belize"))
                .body("[22].'translations'.'hr'", containsString("Belize"))
                .body("[22].'translations'.'fa'", containsString("بلیز"))
                .body("[22].'flag'", containsString("https://restcountries.eu/data/blz.svg"))
                .body("[22].'regionalBlocs'.size()", equalTo(2))
                .body("[22].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[22].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[22].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[22].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[22].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[22].'regionalBlocs'[1].'acronym'", containsString("CAIS"))
                .body("[22].'regionalBlocs'[1].'name'", containsString("Central American Integration System"))
                .body("[22].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(1))
                .body("[22].'regionalBlocs'[1].'otherAcronyms'", hasItems("SICA"))
                .body("[22].'regionalBlocs'[1].'otherNames'.size()", equalTo(1))
                .body("[22].'regionalBlocs'[1].'otherNames'", hasItems("Sistema de la Integración Centroamericana,"))
                .body("[22].'cioc'", containsString("BIZ"))
                .body("[23].'name'", containsString("Benin"))
                .body("[23].'topLevelDomain'.size()", equalTo(1))
                .body("[23].'topLevelDomain'", hasItems(".bj"))
                .body("[23].'alpha2Code'", containsString("BJ"))
                .body("[23].'alpha3Code'", containsString("BEN"))
                .body("[23].'callingCodes'.size()", equalTo(1))
                .body("[23].'callingCodes'", hasItems("229"))
                .body("[23].'capital'", containsString("Porto-Novo"))
                .body("[23].'altSpellings'.size()", equalTo(3))
                .body("[23].'altSpellings'", hasItems("BJ", "Republic of Benin", "République du Bénin"))
                .body("[23].'region'", containsString("Africa"))
                .body("[23].'subregion'", containsString("Western Africa"))
                .body("[23].'population'", numberMatches(1.0653654E7))
                .body("[23].'latlng'.size()", equalTo(2))
                .body("[23].'latlng'[0]", numberMatches(9.5))
                .body("[23].'latlng'[1]", numberMatches(2.25))
                .body("[23].'demonym'", containsString("Beninese"))
                .body("[23].'area'", numberMatches(112622.0))
                .body("[23].'gini'", numberMatches(38.6))
                .body("[23].'timezones'.size()", equalTo(1))
                .body("[23].'timezones'", hasItems("UTC+01:00"))
                .body("[23].'borders'.size()", equalTo(4))
                .body("[23].'borders'", hasItems("BFA", "NER", "NGA", "TGO"))
                .body("[23].'nativeName'", containsString("Bénin"))
                .body("[23].'numericCode'", containsString("204"))
                .body("[23].'currencies'.size()", equalTo(1))
                .body("[23].'currencies'[0].'code'", containsString("XOF"))
                .body("[23].'currencies'[0].'name'", containsString("West African CFA franc"))
                .body("[23].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[23].'languages'.size()", equalTo(1))
                .body("[23].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[23].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[23].'languages'[0].'name'", containsString("French"))
                .body("[23].'languages'[0].'nativeName'", containsString("français"))
                .body("[23].'translations'.'de'", containsString("Benin"))
                .body("[23].'translations'.'es'", containsString("Benín"))
                .body("[23].'translations'.'fr'", containsString("Bénin"))
                .body("[23].'translations'.'ja'", containsString("ベナン"))
                .body("[23].'translations'.'it'", containsString("Benin"))
                .body("[23].'translations'.'br'", containsString("Benin"))
                .body("[23].'translations'.'pt'", containsString("Benim"))
                .body("[23].'translations'.'nl'", containsString("Benin"))
                .body("[23].'translations'.'hr'", containsString("Benin"))
                .body("[23].'translations'.'fa'", containsString("بنین"))
                .body("[23].'flag'", containsString("https://restcountries.eu/data/ben.svg"))
                .body("[23].'regionalBlocs'.size()", equalTo(1))
                .body("[23].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[23].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[23].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[23].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[23].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[23].'cioc'", containsString("BEN"))
                .body("[24].'name'", containsString("Bermuda"))
                .body("[24].'topLevelDomain'.size()", equalTo(1))
                .body("[24].'topLevelDomain'", hasItems(".bm"))
                .body("[24].'alpha2Code'", containsString("BM"))
                .body("[24].'alpha3Code'", containsString("BMU"))
                .body("[24].'callingCodes'.size()", equalTo(1))
                .body("[24].'callingCodes'", hasItems("1"))
                .body("[24].'capital'", containsString("Hamilton"))
                .body("[24].'altSpellings'.size()", equalTo(4))
                .body("[24].'altSpellings'", hasItems("BM", "The Islands of Bermuda", "The Bermudas", "Somers Isles"))
                .body("[24].'region'", containsString("Americas"))
                .body("[24].'subregion'", containsString("Northern America"))
                .body("[24].'population'", numberMatches(61954.0))
                .body("[24].'latlng'.size()", equalTo(2))
                .body("[24].'latlng'[0]", numberMatches(32.33333333))
                .body("[24].'latlng'[1]", numberMatches(-64.75))
                .body("[24].'demonym'", containsString("Bermudian"))
                .body("[24].'area'", numberMatches(54.0))
                .body("[24].'gini'", nullValue())
                .body("[24].'timezones'.size()", equalTo(1))
                .body("[24].'timezones'", hasItems("UTC-04:00"))
                .body("[24].'borders'.size()", equalTo(0))
                .body("[24].'nativeName'", containsString("Bermuda"))
                .body("[24].'numericCode'", containsString("060"))
                .body("[24].'currencies'.size()", equalTo(1))
                .body("[24].'currencies'[0].'code'", containsString("BMD"))
                .body("[24].'currencies'[0].'name'", containsString("Bermudian dollar"))
                .body("[24].'currencies'[0].'symbol'", containsString("$"))
                .body("[24].'languages'.size()", equalTo(1))
                .body("[24].'languages'[0].'iso639_1'", containsString("en"))
                .body("[24].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[24].'languages'[0].'name'", containsString("English"))
                .body("[24].'languages'[0].'nativeName'", containsString("English"))
                .body("[24].'translations'.'de'", containsString("Bermuda"))
                .body("[24].'translations'.'es'", containsString("Bermudas"))
                .body("[24].'translations'.'fr'", containsString("Bermudes"))
                .body("[24].'translations'.'ja'", containsString("バミューダ"))
                .body("[24].'translations'.'it'", containsString("Bermuda"))
                .body("[24].'translations'.'br'", containsString("Bermudas"))
                .body("[24].'translations'.'pt'", containsString("Bermudas"))
                .body("[24].'translations'.'nl'", containsString("Bermuda"))
                .body("[24].'translations'.'hr'", containsString("Bermudi"))
                .body("[24].'translations'.'fa'", containsString("برمودا"))
                .body("[24].'flag'", containsString("https://restcountries.eu/data/bmu.svg"))
                .body("[24].'regionalBlocs'.size()", equalTo(0))
                .body("[24].'cioc'", containsString("BER"))
                .body("[25].'name'", containsString("Bhutan"))
                .body("[25].'topLevelDomain'.size()", equalTo(1))
                .body("[25].'topLevelDomain'", hasItems(".bt"))
                .body("[25].'alpha2Code'", containsString("BT"))
                .body("[25].'alpha3Code'", containsString("BTN"))
                .body("[25].'callingCodes'.size()", equalTo(1))
                .body("[25].'callingCodes'", hasItems("975"))
                .body("[25].'capital'", containsString("Thimphu"))
                .body("[25].'altSpellings'.size()", equalTo(2))
                .body("[25].'altSpellings'", hasItems("BT", "Kingdom of Bhutan"))
                .body("[25].'region'", containsString("Asia"))
                .body("[25].'subregion'", containsString("Southern Asia"))
                .body("[25].'population'", numberMatches(775620.0))
                .body("[25].'latlng'.size()", equalTo(2))
                .body("[25].'latlng'[0]", numberMatches(27.5))
                .body("[25].'latlng'[1]", numberMatches(90.5))
                .body("[25].'demonym'", containsString("Bhutanese"))
                .body("[25].'area'", numberMatches(38394.0))
                .body("[25].'gini'", numberMatches(38.1))
                .body("[25].'timezones'.size()", equalTo(1))
                .body("[25].'timezones'", hasItems("UTC+06:00"))
                .body("[25].'borders'.size()", equalTo(2))
                .body("[25].'borders'", hasItems("CHN", "IND"))
                .body("[25].'nativeName'", containsString("ʼbrug-yul"))
                .body("[25].'numericCode'", containsString("064"))
                .body("[25].'currencies'.size()", equalTo(2))
                .body("[25].'currencies'[0].'code'", containsString("BTN"))
                .body("[25].'currencies'[0].'name'", containsString("Bhutanese ngultrum"))
                .body("[25].'currencies'[0].'symbol'", containsString("Nu."))
                .body("[25].'currencies'[1].'code'", containsString("INR"))
                .body("[25].'currencies'[1].'name'", containsString("Indian rupee"))
                .body("[25].'currencies'[1].'symbol'", containsString("₹"))
                .body("[25].'languages'.size()", equalTo(1))
                .body("[25].'languages'[0].'iso639_1'", containsString("dz"))
                .body("[25].'languages'[0].'iso639_2'", containsString("dzo"))
                .body("[25].'languages'[0].'name'", containsString("Dzongkha"))
                .body("[25].'languages'[0].'nativeName'", containsString("རྫོང་ཁ"))
                .body("[25].'translations'.'de'", containsString("Bhutan"))
                .body("[25].'translations'.'es'", containsString("Bután"))
                .body("[25].'translations'.'fr'", containsString("Bhoutan"))
                .body("[25].'translations'.'ja'", containsString("ブータン"))
                .body("[25].'translations'.'it'", containsString("Bhutan"))
                .body("[25].'translations'.'br'", containsString("Butão"))
                .body("[25].'translations'.'pt'", containsString("Butão"))
                .body("[25].'translations'.'nl'", containsString("Bhutan"))
                .body("[25].'translations'.'hr'", containsString("Butan"))
                .body("[25].'translations'.'fa'", containsString("بوتان"))
                .body("[25].'flag'", containsString("https://restcountries.eu/data/btn.svg"))
                .body("[25].'regionalBlocs'.size()", equalTo(1))
                .body("[25].'regionalBlocs'[0].'acronym'", containsString("SAARC"))
                .body("[25].'regionalBlocs'[0].'name'", containsString("South Asian Association for Regional Cooperation"))
                .body("[25].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[25].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[25].'cioc'", containsString("BHU"))
                .body("[26].'name'", containsString("Bolivia (Plurinational State of)"))
                .body("[26].'topLevelDomain'.size()", equalTo(1))
                .body("[26].'topLevelDomain'", hasItems(".bo"))
                .body("[26].'alpha2Code'", containsString("BO"))
                .body("[26].'alpha3Code'", containsString("BOL"))
                .body("[26].'callingCodes'.size()", equalTo(1))
                .body("[26].'callingCodes'", hasItems("591"))
                .body("[26].'capital'", containsString("Sucre"))
                .body("[26].'altSpellings'.size()", equalTo(8))
                .body("[26].'altSpellings'", hasItems("BO", "Buliwya", "Wuliwya", "Plurinational State of Bolivia", "Estado Plurinacional de Bolivia", "Buliwya Mamallaqta", "Wuliwya Suyu", "Tetã Volívia"))
                .body("[26].'region'", containsString("Americas"))
                .body("[26].'subregion'", containsString("South America"))
                .body("[26].'population'", numberMatches(1.0985059E7))
                .body("[26].'latlng'.size()", equalTo(2))
                .body("[26].'latlng'[0]", numberMatches(-17.0))
                .body("[26].'latlng'[1]", numberMatches(-65.0))
                .body("[26].'demonym'", containsString("Bolivian"))
                .body("[26].'area'", numberMatches(1098581.0))
                .body("[26].'gini'", numberMatches(56.3))
                .body("[26].'timezones'.size()", equalTo(1))
                .body("[26].'timezones'", hasItems("UTC-04:00"))
                .body("[26].'borders'.size()", equalTo(5))
                .body("[26].'borders'", hasItems("ARG", "BRA", "CHL", "PRY", "PER"))
                .body("[26].'nativeName'", containsString("Bolivia"))
                .body("[26].'numericCode'", containsString("068"))
                .body("[26].'currencies'.size()", equalTo(1))
                .body("[26].'currencies'[0].'code'", containsString("BOB"))
                .body("[26].'currencies'[0].'name'", containsString("Bolivian boliviano"))
                .body("[26].'currencies'[0].'symbol'", containsString("Bs."))
                .body("[26].'languages'.size()", equalTo(3))
                .body("[26].'languages'[0].'iso639_1'", containsString("es"))
                .body("[26].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[26].'languages'[0].'name'", containsString("Spanish"))
                .body("[26].'languages'[0].'nativeName'", containsString("Español"))
                .body("[26].'languages'[1].'iso639_1'", containsString("ay"))
                .body("[26].'languages'[1].'iso639_2'", containsString("aym"))
                .body("[26].'languages'[1].'name'", containsString("Aymara"))
                .body("[26].'languages'[1].'nativeName'", containsString("aymar aru"))
                .body("[26].'languages'[2].'iso639_1'", containsString("qu"))
                .body("[26].'languages'[2].'iso639_2'", containsString("que"))
                .body("[26].'languages'[2].'name'", containsString("Quechua"))
                .body("[26].'languages'[2].'nativeName'", containsString("Runa Simi"))
                .body("[26].'translations'.'de'", containsString("Bolivien"))
                .body("[26].'translations'.'es'", containsString("Bolivia"))
                .body("[26].'translations'.'fr'", containsString("Bolivie"))
                .body("[26].'translations'.'ja'", containsString("ボリビア多民族国"))
                .body("[26].'translations'.'it'", containsString("Bolivia"))
                .body("[26].'translations'.'br'", containsString("Bolívia"))
                .body("[26].'translations'.'pt'", containsString("Bolívia"))
                .body("[26].'translations'.'nl'", containsString("Bolivia"))
                .body("[26].'translations'.'hr'", containsString("Bolivija"))
                .body("[26].'translations'.'fa'", containsString("بولیوی"))
                .body("[26].'flag'", containsString("https://restcountries.eu/data/bol.svg"))
                .body("[26].'regionalBlocs'.size()", equalTo(1))
                .body("[26].'regionalBlocs'[0].'acronym'", containsString("USAN"))
                .body("[26].'regionalBlocs'[0].'name'", containsString("Union of South American Nations"))
                .body("[26].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(3))
                .body("[26].'regionalBlocs'[0].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[26].'regionalBlocs'[0].'otherNames'.size()", equalTo(4))
                .body("[26].'regionalBlocs'[0].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[26].'cioc'", containsString("BOL"))
                .body("[27].'name'", containsString("Bonaire, Sint Eustatius and Saba"))
                .body("[27].'topLevelDomain'.size()", equalTo(2))
                .body("[27].'topLevelDomain'", hasItems(".an", ".nl"))
                .body("[27].'alpha2Code'", containsString("BQ"))
                .body("[27].'alpha3Code'", containsString("BES"))
                .body("[27].'callingCodes'.size()", equalTo(1))
                .body("[27].'callingCodes'", hasItems("599"))
                .body("[27].'capital'", containsString("Kralendijk"))
                .body("[27].'altSpellings'.size()", equalTo(2))
                .body("[27].'altSpellings'", hasItems("BQ", "Boneiru"))
                .body("[27].'region'", containsString("Americas"))
                .body("[27].'subregion'", containsString("Caribbean"))
                .body("[27].'population'", numberMatches(17408.0))
                .body("[27].'latlng'.size()", equalTo(2))
                .body("[27].'latlng'[0]", numberMatches(12.15))
                .body("[27].'latlng'[1]", numberMatches(-68.266667))
                .body("[27].'demonym'", containsString("Dutch"))
                .body("[27].'area'", numberMatches(294.0))
                .body("[27].'gini'", nullValue())
                .body("[27].'timezones'.size()", equalTo(1))
                .body("[27].'timezones'", hasItems("UTC-04:00"))
                .body("[27].'borders'.size()", equalTo(0))
                .body("[27].'nativeName'", containsString("Bonaire"))
                .body("[27].'numericCode'", containsString("535"))
                .body("[27].'currencies'.size()", equalTo(1))
                .body("[27].'currencies'[0].'code'", containsString("USD"))
                .body("[27].'currencies'[0].'name'", containsString("United States dollar"))
                .body("[27].'currencies'[0].'symbol'", containsString("$"))
                .body("[27].'languages'.size()", equalTo(1))
                .body("[27].'languages'[0].'iso639_1'", containsString("nl"))
                .body("[27].'languages'[0].'iso639_2'", containsString("nld"))
                .body("[27].'languages'[0].'name'", containsString("Dutch"))
                .body("[27].'languages'[0].'nativeName'", containsString("Nederlands"))
                .body("[27].'translations'.'de'", containsString("Bonaire, Sint Eustatius und Saba"))
                .body("[27].'translations'.'es'", nullValue())
                .body("[27].'translations'.'fr'", containsString("Bonaire, Saint-Eustache et Saba"))
                .body("[27].'translations'.'ja'", nullValue())
                .body("[27].'translations'.'it'", containsString("Bonaire, Saint-Eustache e Saba"))
                .body("[27].'translations'.'br'", containsString("Bonaire"))
                .body("[27].'translations'.'pt'", containsString("Bonaire"))
                .body("[27].'translations'.'nl'", nullValue())
                .body("[27].'translations'.'hr'", nullValue())
                .body("[27].'translations'.'fa'", containsString("بونیر"))
                .body("[27].'flag'", containsString("https://restcountries.eu/data/bes.svg"))
                .body("[27].'regionalBlocs'.size()", equalTo(0))
                .body("[27].'cioc'", nullValue())
                .body("[28].'name'", containsString("Bosnia and Herzegovina"))
                .body("[28].'topLevelDomain'.size()", equalTo(1))
                .body("[28].'topLevelDomain'", hasItems(".ba"))
                .body("[28].'alpha2Code'", containsString("BA"))
                .body("[28].'alpha3Code'", containsString("BIH"))
                .body("[28].'callingCodes'.size()", equalTo(1))
                .body("[28].'callingCodes'", hasItems("387"))
                .body("[28].'capital'", containsString("Sarajevo"))
                .body("[28].'altSpellings'.size()", equalTo(3))
                .body("[28].'altSpellings'", hasItems("BA", "Bosnia-Herzegovina", "Босна и Херцеговина"))
                .body("[28].'region'", containsString("Europe"))
                .body("[28].'subregion'", containsString("Southern Europe"))
                .body("[28].'population'", numberMatches(3531159.0))
                .body("[28].'latlng'.size()", equalTo(2))
                .body("[28].'latlng'[0]", numberMatches(44.0))
                .body("[28].'latlng'[1]", numberMatches(18.0))
                .body("[28].'demonym'", containsString("Bosnian, Herzegovinian"))
                .body("[28].'area'", numberMatches(51209.0))
                .body("[28].'gini'", numberMatches(36.2))
                .body("[28].'timezones'.size()", equalTo(1))
                .body("[28].'timezones'", hasItems("UTC+01:00"))
                .body("[28].'borders'.size()", equalTo(3))
                .body("[28].'borders'", hasItems("HRV", "MNE", "SRB"))
                .body("[28].'nativeName'", containsString("Bosna i Hercegovina"))
                .body("[28].'numericCode'", containsString("070"))
                .body("[28].'currencies'.size()", equalTo(1))
                .body("[28].'currencies'[0].'code'", containsString("BAM"))
                .body("[28].'currencies'[0].'name'", containsString("Bosnia and Herzegovina convertible mark"))
                .body("[28].'currencies'[0].'symbol'", nullValue())
                .body("[28].'languages'.size()", equalTo(3))
                .body("[28].'languages'[0].'iso639_1'", containsString("bs"))
                .body("[28].'languages'[0].'iso639_2'", containsString("bos"))
                .body("[28].'languages'[0].'name'", containsString("Bosnian"))
                .body("[28].'languages'[0].'nativeName'", containsString("bosanski jezik"))
                .body("[28].'languages'[1].'iso639_1'", containsString("hr"))
                .body("[28].'languages'[1].'iso639_2'", containsString("hrv"))
                .body("[28].'languages'[1].'name'", containsString("Croatian"))
                .body("[28].'languages'[1].'nativeName'", containsString("hrvatski jezik"))
                .body("[28].'languages'[2].'iso639_1'", containsString("sr"))
                .body("[28].'languages'[2].'iso639_2'", containsString("srp"))
                .body("[28].'languages'[2].'name'", containsString("Serbian"))
                .body("[28].'languages'[2].'nativeName'", containsString("српски језик"))
                .body("[28].'translations'.'de'", containsString("Bosnien und Herzegowina"))
                .body("[28].'translations'.'es'", containsString("Bosnia y Herzegovina"))
                .body("[28].'translations'.'fr'", containsString("Bosnie-Herzégovine"))
                .body("[28].'translations'.'ja'", containsString("ボスニア・ヘルツェゴビナ"))
                .body("[28].'translations'.'it'", containsString("Bosnia ed Erzegovina"))
                .body("[28].'translations'.'br'", containsString("Bósnia e Herzegovina"))
                .body("[28].'translations'.'pt'", containsString("Bósnia e Herzegovina"))
                .body("[28].'translations'.'nl'", containsString("Bosnië en Herzegovina"))
                .body("[28].'translations'.'hr'", containsString("Bosna i Hercegovina"))
                .body("[28].'translations'.'fa'", containsString("بوسنی و هرزگوین"))
                .body("[28].'flag'", containsString("https://restcountries.eu/data/bih.svg"))
                .body("[28].'regionalBlocs'.size()", equalTo(1))
                .body("[28].'regionalBlocs'[0].'acronym'", containsString("CEFTA"))
                .body("[28].'regionalBlocs'[0].'name'", containsString("Central European Free Trade Agreement"))
                .body("[28].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[28].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[28].'cioc'", containsString("BIH"))
                .body("[29].'name'", containsString("Botswana"))
                .body("[29].'topLevelDomain'.size()", equalTo(1))
                .body("[29].'topLevelDomain'", hasItems(".bw"))
                .body("[29].'alpha2Code'", containsString("BW"))
                .body("[29].'alpha3Code'", containsString("BWA"))
                .body("[29].'callingCodes'.size()", equalTo(1))
                .body("[29].'callingCodes'", hasItems("267"))
                .body("[29].'capital'", containsString("Gaborone"))
                .body("[29].'altSpellings'.size()", equalTo(3))
                .body("[29].'altSpellings'", hasItems("BW", "Republic of Botswana", "Lefatshe la Botswana"))
                .body("[29].'region'", containsString("Africa"))
                .body("[29].'subregion'", containsString("Southern Africa"))
                .body("[29].'population'", numberMatches(2141206.0))
                .body("[29].'latlng'.size()", equalTo(2))
                .body("[29].'latlng'[0]", numberMatches(-22.0))
                .body("[29].'latlng'[1]", numberMatches(24.0))
                .body("[29].'demonym'", containsString("Motswana"))
                .body("[29].'area'", numberMatches(582000.0))
                .body("[29].'gini'", numberMatches(61.0))
                .body("[29].'timezones'.size()", equalTo(1))
                .body("[29].'timezones'", hasItems("UTC+02:00"))
                .body("[29].'borders'.size()", equalTo(4))
                .body("[29].'borders'", hasItems("NAM", "ZAF", "ZMB", "ZWE"))
                .body("[29].'nativeName'", containsString("Botswana"))
                .body("[29].'numericCode'", containsString("072"))
                .body("[29].'currencies'.size()", equalTo(1))
                .body("[29].'currencies'[0].'code'", containsString("BWP"))
                .body("[29].'currencies'[0].'name'", containsString("Botswana pula"))
                .body("[29].'currencies'[0].'symbol'", containsString("P"))
                .body("[29].'languages'.size()", equalTo(2))
                .body("[29].'languages'[0].'iso639_1'", containsString("en"))
                .body("[29].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[29].'languages'[0].'name'", containsString("English"))
                .body("[29].'languages'[0].'nativeName'", containsString("English"))
                .body("[29].'languages'[1].'iso639_1'", containsString("tn"))
                .body("[29].'languages'[1].'iso639_2'", containsString("tsn"))
                .body("[29].'languages'[1].'name'", containsString("Tswana"))
                .body("[29].'languages'[1].'nativeName'", containsString("Setswana"))
                .body("[29].'translations'.'de'", containsString("Botswana"))
                .body("[29].'translations'.'es'", containsString("Botswana"))
                .body("[29].'translations'.'fr'", containsString("Botswana"))
                .body("[29].'translations'.'ja'", containsString("ボツワナ"))
                .body("[29].'translations'.'it'", containsString("Botswana"))
                .body("[29].'translations'.'br'", containsString("Botsuana"))
                .body("[29].'translations'.'pt'", containsString("Botsuana"))
                .body("[29].'translations'.'nl'", containsString("Botswana"))
                .body("[29].'translations'.'hr'", containsString("Bocvana"))
                .body("[29].'translations'.'fa'", containsString("بوتسوانا"))
                .body("[29].'flag'", containsString("https://restcountries.eu/data/bwa.svg"))
                .body("[29].'regionalBlocs'.size()", equalTo(1))
                .body("[29].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[29].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[29].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[29].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[29].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[29].'cioc'", containsString("BOT"))
                .body("[30].'name'", containsString("Bouvet Island"))
                .body("[30].'topLevelDomain'.size()", equalTo(1))
                .body("[30].'topLevelDomain'", hasItems(".bv"))
                .body("[30].'alpha2Code'", containsString("BV"))
                .body("[30].'alpha3Code'", containsString("BVT"))
                .body("[30].'callingCodes'.size()", equalTo(1))
                .body("[30].'callingCodes'", hasItems("47"))
                .body("[30].'capital'", containsString(""))
                .body("[30].'altSpellings'.size()", equalTo(3))
                .body("[30].'altSpellings'", hasItems("BV", "Bouvetøya", "Bouvet-øya"))
                .body("[30].'region'", containsString(""))
                .body("[30].'subregion'", containsString(""))
                .body("[30].'population'", numberMatches(0.0))
                .body("[30].'latlng'.size()", equalTo(2))
                .body("[30].'latlng'[0]", numberMatches(-54.43333333))
                .body("[30].'latlng'[1]", numberMatches(3.4))
                .body("[30].'demonym'", containsString(""))
                .body("[30].'area'", numberMatches(49.0))
                .body("[30].'gini'", nullValue())
                .body("[30].'timezones'.size()", equalTo(1))
                .body("[30].'timezones'", hasItems("UTC+01:00"))
                .body("[30].'borders'.size()", equalTo(0))
                .body("[30].'nativeName'", containsString("Bouvetøya"))
                .body("[30].'numericCode'", containsString("074"))
                .body("[30].'currencies'.size()", equalTo(1))
                .body("[30].'currencies'[0].'code'", containsString("NOK"))
                .body("[30].'currencies'[0].'name'", containsString("Norwegian krone"))
                .body("[30].'currencies'[0].'symbol'", containsString("kr"))
                .body("[30].'languages'.size()", equalTo(3))
                .body("[30].'languages'[0].'iso639_1'", containsString("no"))
                .body("[30].'languages'[0].'iso639_2'", containsString("nor"))
                .body("[30].'languages'[0].'name'", containsString("Norwegian"))
                .body("[30].'languages'[0].'nativeName'", containsString("Norsk"))
                .body("[30].'languages'[1].'iso639_1'", containsString("nb"))
                .body("[30].'languages'[1].'iso639_2'", containsString("nob"))
                .body("[30].'languages'[1].'name'", containsString("Norwegian Bokmål"))
                .body("[30].'languages'[1].'nativeName'", containsString("Norsk bokmål"))
                .body("[30].'languages'[2].'iso639_1'", containsString("nn"))
                .body("[30].'languages'[2].'iso639_2'", containsString("nno"))
                .body("[30].'languages'[2].'name'", containsString("Norwegian Nynorsk"))
                .body("[30].'languages'[2].'nativeName'", containsString("Norsk nynorsk"))
                .body("[30].'translations'.'de'", containsString("Bouvetinsel"))
                .body("[30].'translations'.'es'", containsString("Isla Bouvet"))
                .body("[30].'translations'.'fr'", containsString("Île Bouvet"))
                .body("[30].'translations'.'ja'", containsString("ブーベ島"))
                .body("[30].'translations'.'it'", containsString("Isola Bouvet"))
                .body("[30].'translations'.'br'", containsString("Ilha Bouvet"))
                .body("[30].'translations'.'pt'", containsString("Ilha Bouvet"))
                .body("[30].'translations'.'nl'", containsString("Bouveteiland"))
                .body("[30].'translations'.'hr'", containsString("Otok Bouvet"))
                .body("[30].'translations'.'fa'", containsString("جزیره بووه"))
                .body("[30].'flag'", containsString("https://restcountries.eu/data/bvt.svg"))
                .body("[30].'regionalBlocs'.size()", equalTo(0))
                .body("[30].'cioc'", containsString(""))
                .body("[31].'name'", containsString("Brazil"))
                .body("[31].'topLevelDomain'.size()", equalTo(1))
                .body("[31].'topLevelDomain'", hasItems(".br"))
                .body("[31].'alpha2Code'", containsString("BR"))
                .body("[31].'alpha3Code'", containsString("BRA"))
                .body("[31].'callingCodes'.size()", equalTo(1))
                .body("[31].'callingCodes'", hasItems("55"))
                .body("[31].'capital'", containsString("Brasília"))
                .body("[31].'altSpellings'.size()", equalTo(4))
                .body("[31].'altSpellings'", hasItems("BR", "Brasil", "Federative Republic of Brazil", "República Federativa do Brasil"))
                .body("[31].'region'", containsString("Americas"))
                .body("[31].'subregion'", containsString("South America"))
                .body("[31].'population'", numberMatches(2.06135893E8))
                .body("[31].'latlng'.size()", equalTo(2))
                .body("[31].'latlng'[0]", numberMatches(-10.0))
                .body("[31].'latlng'[1]", numberMatches(-55.0))
                .body("[31].'demonym'", containsString("Brazilian"))
                .body("[31].'area'", numberMatches(8515767.0))
                .body("[31].'gini'", numberMatches(54.7))
                .body("[31].'timezones'.size()", equalTo(4))
                .body("[31].'timezones'", hasItems("UTC-05:00", "UTC-04:00", "UTC-03:00", "UTC-02:00"))
                .body("[31].'borders'.size()", equalTo(10))
                .body("[31].'borders'", hasItems("ARG", "BOL", "COL", "GUF", "GUY", "PRY", "PER", "SUR", "URY", "VEN"))
                .body("[31].'nativeName'", containsString("Brasil"))
                .body("[31].'numericCode'", containsString("076"))
                .body("[31].'currencies'.size()", equalTo(1))
                .body("[31].'currencies'[0].'code'", containsString("BRL"))
                .body("[31].'currencies'[0].'name'", containsString("Brazilian real"))
                .body("[31].'currencies'[0].'symbol'", containsString("R$"))
                .body("[31].'languages'.size()", equalTo(1))
                .body("[31].'languages'[0].'iso639_1'", containsString("pt"))
                .body("[31].'languages'[0].'iso639_2'", containsString("por"))
                .body("[31].'languages'[0].'name'", containsString("Portuguese"))
                .body("[31].'languages'[0].'nativeName'", containsString("Português"))
                .body("[31].'translations'.'de'", containsString("Brasilien"))
                .body("[31].'translations'.'es'", containsString("Brasil"))
                .body("[31].'translations'.'fr'", containsString("Brésil"))
                .body("[31].'translations'.'ja'", containsString("ブラジル"))
                .body("[31].'translations'.'it'", containsString("Brasile"))
                .body("[31].'translations'.'br'", containsString("Brasil"))
                .body("[31].'translations'.'pt'", containsString("Brasil"))
                .body("[31].'translations'.'nl'", containsString("Brazilië"))
                .body("[31].'translations'.'hr'", containsString("Brazil"))
                .body("[31].'translations'.'fa'", containsString("برزیل"))
                .body("[31].'flag'", containsString("https://restcountries.eu/data/bra.svg"))
                .body("[31].'regionalBlocs'.size()", equalTo(1))
                .body("[31].'regionalBlocs'[0].'acronym'", containsString("USAN"))
                .body("[31].'regionalBlocs'[0].'name'", containsString("Union of South American Nations"))
                .body("[31].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(3))
                .body("[31].'regionalBlocs'[0].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[31].'regionalBlocs'[0].'otherNames'.size()", equalTo(4))
                .body("[31].'regionalBlocs'[0].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[31].'cioc'", containsString("BRA"))
                .body("[32].'name'", containsString("British Indian Ocean Territory"))
                .body("[32].'topLevelDomain'.size()", equalTo(1))
                .body("[32].'topLevelDomain'", hasItems(".io"))
                .body("[32].'alpha2Code'", containsString("IO"))
                .body("[32].'alpha3Code'", containsString("IOT"))
                .body("[32].'callingCodes'.size()", equalTo(1))
                .body("[32].'callingCodes'", hasItems("246"))
                .body("[32].'capital'", containsString("Diego Garcia"))
                .body("[32].'altSpellings'.size()", equalTo(1))
                .body("[32].'altSpellings'", hasItems("IO"))
                .body("[32].'region'", containsString("Africa"))
                .body("[32].'subregion'", containsString("Eastern Africa"))
                .body("[32].'population'", numberMatches(3000.0))
                .body("[32].'latlng'.size()", equalTo(2))
                .body("[32].'latlng'[0]", numberMatches(-6.0))
                .body("[32].'latlng'[1]", numberMatches(71.5))
                .body("[32].'demonym'", containsString("Indian"))
                .body("[32].'area'", numberMatches(60.0))
                .body("[32].'gini'", nullValue())
                .body("[32].'timezones'.size()", equalTo(1))
                .body("[32].'timezones'", hasItems("UTC+06:00"))
                .body("[32].'borders'.size()", equalTo(0))
                .body("[32].'nativeName'", containsString("British Indian Ocean Territory"))
                .body("[32].'numericCode'", containsString("086"))
                .body("[32].'currencies'.size()", equalTo(1))
                .body("[32].'currencies'[0].'code'", containsString("USD"))
                .body("[32].'currencies'[0].'name'", containsString("United States dollar"))
                .body("[32].'currencies'[0].'symbol'", containsString("$"))
                .body("[32].'languages'.size()", equalTo(1))
                .body("[32].'languages'[0].'iso639_1'", containsString("en"))
                .body("[32].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[32].'languages'[0].'name'", containsString("English"))
                .body("[32].'languages'[0].'nativeName'", containsString("English"))
                .body("[32].'translations'.'de'", containsString("Britisches Territorium im Indischen Ozean"))
                .body("[32].'translations'.'es'", containsString("Territorio Británico del Océano Índico"))
                .body("[32].'translations'.'fr'", containsString("Territoire britannique de l'océan Indien"))
                .body("[32].'translations'.'ja'", containsString("イギリス領インド洋地域"))
                .body("[32].'translations'.'it'", containsString("Territorio britannico dell'oceano indiano"))
                .body("[32].'translations'.'br'", containsString("Território Britânico do Oceano íÍdico"))
                .body("[32].'translations'.'pt'", containsString("Território Britânico do Oceano Índico"))
                .body("[32].'translations'.'nl'", containsString("Britse Gebieden in de Indische Oceaan"))
                .body("[32].'translations'.'hr'", containsString("Britanski Indijskooceanski teritorij"))
                .body("[32].'translations'.'fa'", containsString("قلمرو بریتانیا در اقیانوس هند"))
                .body("[32].'flag'", containsString("https://restcountries.eu/data/iot.svg"))
                .body("[32].'regionalBlocs'.size()", equalTo(1))
                .body("[32].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[32].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[32].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[32].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[32].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[32].'cioc'", containsString(""))
                .body("[33].'name'", containsString("United States Minor Outlying Islands"))
                .body("[33].'topLevelDomain'.size()", equalTo(1))
                .body("[33].'topLevelDomain'", hasItems(".us"))
                .body("[33].'alpha2Code'", containsString("UM"))
                .body("[33].'alpha3Code'", containsString("UMI"))
                .body("[33].'callingCodes'.size()", equalTo(1))
                .body("[33].'callingCodes'", hasItems("1"))
                .body("[33].'capital'", containsString(""))
                .body("[33].'altSpellings'.size()", equalTo(1))
                .body("[33].'altSpellings'", hasItems("UM"))
                .body("[33].'region'", containsString("Americas"))
                .body("[33].'subregion'", containsString("Northern America"))
                .body("[33].'population'", numberMatches(300.0))
                .body("[33].'latlng'.size()", equalTo(0))
                .body("[33].'demonym'", containsString("American"))
                .body("[33].'area'", nullValue())
                .body("[33].'gini'", nullValue())
                .body("[33].'timezones'.size()", equalTo(3))
                .body("[33].'timezones'", hasItems("UTC-11:00", "UTC-10:00", "UTC+12:00"))
                .body("[33].'borders'.size()", equalTo(0))
                .body("[33].'nativeName'", containsString("United States Minor Outlying Islands"))
                .body("[33].'numericCode'", containsString("581"))
                .body("[33].'currencies'.size()", equalTo(1))
                .body("[33].'currencies'[0].'code'", containsString("USD"))
                .body("[33].'currencies'[0].'name'", containsString("United States Dollar"))
                .body("[33].'currencies'[0].'symbol'", containsString("$"))
                .body("[33].'languages'.size()", equalTo(1))
                .body("[33].'languages'[0].'iso639_1'", containsString("en"))
                .body("[33].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[33].'languages'[0].'name'", containsString("English"))
                .body("[33].'languages'[0].'nativeName'", containsString("English"))
                .body("[33].'translations'.'de'", containsString("Kleinere Inselbesitzungen der Vereinigten Staaten"))
                .body("[33].'translations'.'es'", containsString("Islas Ultramarinas Menores de Estados Unidos"))
                .body("[33].'translations'.'fr'", containsString("Îles mineures éloignées des États-Unis"))
                .body("[33].'translations'.'ja'", containsString("合衆国領有小離島"))
                .body("[33].'translations'.'it'", containsString("Isole minori esterne degli Stati Uniti d'America"))
                .body("[33].'translations'.'br'", containsString("Ilhas Menores Distantes dos Estados Unidos"))
                .body("[33].'translations'.'pt'", containsString("Ilhas Menores Distantes dos Estados Unidos"))
                .body("[33].'translations'.'nl'", containsString("Kleine afgelegen eilanden van de Verenigde Staten"))
                .body("[33].'translations'.'hr'", containsString("Mali udaljeni otoci SAD-a"))
                .body("[33].'translations'.'fa'", containsString("جزایر کوچک حاشیه‌ای ایالات متحده آمریکا"))
                .body("[33].'flag'", containsString("https://restcountries.eu/data/umi.svg"))
                .body("[33].'regionalBlocs'.size()", equalTo(0))
                .body("[33].'cioc'", containsString(""))
                .body("[34].'name'", containsString("Virgin Islands (British)"))
                .body("[34].'topLevelDomain'.size()", equalTo(1))
                .body("[34].'topLevelDomain'", hasItems(".vg"))
                .body("[34].'alpha2Code'", containsString("VG"))
                .body("[34].'alpha3Code'", containsString("VGB"))
                .body("[34].'callingCodes'.size()", equalTo(1))
                .body("[34].'callingCodes'", hasItems("1"))
                .body("[34].'capital'", containsString("Road Town"))
                .body("[34].'altSpellings'.size()", equalTo(1))
                .body("[34].'altSpellings'", hasItems("VG"))
                .body("[34].'region'", containsString("Americas"))
                .body("[34].'subregion'", containsString("Caribbean"))
                .body("[34].'population'", numberMatches(28514.0))
                .body("[34].'latlng'.size()", equalTo(2))
                .body("[34].'latlng'[0]", numberMatches(18.431383))
                .body("[34].'latlng'[1]", numberMatches(-64.62305))
                .body("[34].'demonym'", containsString("Virgin Islander"))
                .body("[34].'area'", numberMatches(151.0))
                .body("[34].'gini'", nullValue())
                .body("[34].'timezones'.size()", equalTo(1))
                .body("[34].'timezones'", hasItems("UTC-04:00"))
                .body("[34].'borders'.size()", equalTo(0))
                .body("[34].'nativeName'", containsString("British Virgin Islands"))
                .body("[34].'numericCode'", containsString("092"))
                .body("[34].'currencies'.size()", equalTo(2))
                .body("[34].'currencies'[0].'code'", nullValue())
                .body("[34].'currencies'[0].'name'", containsString("[D]"))
                .body("[34].'currencies'[0].'symbol'", containsString("$"))
                .body("[34].'currencies'[1].'code'", containsString("USD"))
                .body("[34].'currencies'[1].'name'", containsString("United States dollar"))
                .body("[34].'currencies'[1].'symbol'", containsString("$"))
                .body("[34].'languages'.size()", equalTo(1))
                .body("[34].'languages'[0].'iso639_1'", containsString("en"))
                .body("[34].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[34].'languages'[0].'name'", containsString("English"))
                .body("[34].'languages'[0].'nativeName'", containsString("English"))
                .body("[34].'translations'.'de'", containsString("Britische Jungferninseln"))
                .body("[34].'translations'.'es'", containsString("Islas Vírgenes del Reino Unido"))
                .body("[34].'translations'.'fr'", containsString("Îles Vierges britanniques"))
                .body("[34].'translations'.'ja'", containsString("イギリス領ヴァージン諸島"))
                .body("[34].'translations'.'it'", containsString("Isole Vergini Britanniche"))
                .body("[34].'translations'.'br'", containsString("Ilhas Virgens Britânicas"))
                .body("[34].'translations'.'pt'", containsString("Ilhas Virgens Britânicas"))
                .body("[34].'translations'.'nl'", containsString("Britse Maagdeneilanden"))
                .body("[34].'translations'.'hr'", containsString("Britanski Djevičanski Otoci"))
                .body("[34].'translations'.'fa'", containsString("جزایر ویرجین بریتانیا"))
                .body("[34].'flag'", containsString("https://restcountries.eu/data/vgb.svg"))
                .body("[34].'regionalBlocs'.size()", equalTo(0))
                .body("[34].'cioc'", containsString("IVB"))
                .body("[35].'name'", containsString("Virgin Islands (U.S.)"))
                .body("[35].'topLevelDomain'.size()", equalTo(1))
                .body("[35].'topLevelDomain'", hasItems(".vi"))
                .body("[35].'alpha2Code'", containsString("VI"))
                .body("[35].'alpha3Code'", containsString("VIR"))
                .body("[35].'callingCodes'.size()", equalTo(1))
                .body("[35].'callingCodes'", hasItems("1 340"))
                .body("[35].'capital'", containsString("Charlotte Amalie"))
                .body("[35].'altSpellings'.size()", equalTo(4))
                .body("[35].'altSpellings'", hasItems("VI", "USVI", "American Virgin Islands", "U.S. Virgin Islands"))
                .body("[35].'region'", containsString("Americas"))
                .body("[35].'subregion'", containsString("Caribbean"))
                .body("[35].'population'", numberMatches(114743.0))
                .body("[35].'latlng'.size()", equalTo(2))
                .body("[35].'latlng'[0]", numberMatches(18.34))
                .body("[35].'latlng'[1]", numberMatches(-64.93))
                .body("[35].'demonym'", containsString("Virgin Islander"))
                .body("[35].'area'", numberMatches(346.36))
                .body("[35].'gini'", nullValue())
                .body("[35].'timezones'.size()", equalTo(1))
                .body("[35].'timezones'", hasItems("UTC-04:00"))
                .body("[35].'borders'.size()", equalTo(0))
                .body("[35].'nativeName'", containsString("Virgin Islands of the United States"))
                .body("[35].'numericCode'", containsString("850"))
                .body("[35].'currencies'.size()", equalTo(1))
                .body("[35].'currencies'[0].'code'", containsString("USD"))
                .body("[35].'currencies'[0].'name'", containsString("United States dollar"))
                .body("[35].'currencies'[0].'symbol'", containsString("$"))
                .body("[35].'languages'.size()", equalTo(1))
                .body("[35].'languages'[0].'iso639_1'", containsString("en"))
                .body("[35].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[35].'languages'[0].'name'", containsString("English"))
                .body("[35].'languages'[0].'nativeName'", containsString("English"))
                .body("[35].'translations'.'de'", containsString("Amerikanische Jungferninseln"))
                .body("[35].'translations'.'es'", containsString("Islas Vírgenes de los Estados Unidos"))
                .body("[35].'translations'.'fr'", containsString("Îles Vierges des États-Unis"))
                .body("[35].'translations'.'ja'", containsString("アメリカ領ヴァージン諸島"))
                .body("[35].'translations'.'it'", containsString("Isole Vergini americane"))
                .body("[35].'translations'.'br'", containsString("Ilhas Virgens Americanas"))
                .body("[35].'translations'.'pt'", containsString("Ilhas Virgens Americanas"))
                .body("[35].'translations'.'nl'", containsString("Verenigde Staten Maagdeneilanden"))
                .body("[35].'translations'.'hr'", nullValue())
                .body("[35].'translations'.'fa'", containsString("جزایر ویرجین آمریکا"))
                .body("[35].'flag'", containsString("https://restcountries.eu/data/vir.svg"))
                .body("[35].'regionalBlocs'.size()", equalTo(0))
                .body("[35].'cioc'", containsString("ISV"))
                .body("[36].'name'", containsString("Brunei Darussalam"))
                .body("[36].'topLevelDomain'.size()", equalTo(1))
                .body("[36].'topLevelDomain'", hasItems(".bn"))
                .body("[36].'alpha2Code'", containsString("BN"))
                .body("[36].'alpha3Code'", containsString("BRN"))
                .body("[36].'callingCodes'.size()", equalTo(1))
                .body("[36].'callingCodes'", hasItems("673"))
                .body("[36].'capital'", containsString("Bandar Seri Begawan"))
                .body("[36].'altSpellings'.size()", equalTo(3))
                .body("[36].'altSpellings'", hasItems("BN", "Nation of Brunei", " the Abode of Peace"))
                .body("[36].'region'", containsString("Asia"))
                .body("[36].'subregion'", containsString("South-Eastern Asia"))
                .body("[36].'population'", numberMatches(411900.0))
                .body("[36].'latlng'.size()", equalTo(2))
                .body("[36].'latlng'[0]", numberMatches(4.5))
                .body("[36].'latlng'[1]", numberMatches(114.66666666))
                .body("[36].'demonym'", containsString("Bruneian"))
                .body("[36].'area'", numberMatches(5765.0))
                .body("[36].'gini'", nullValue())
                .body("[36].'timezones'.size()", equalTo(1))
                .body("[36].'timezones'", hasItems("UTC+08:00"))
                .body("[36].'borders'.size()", equalTo(1))
                .body("[36].'borders'", hasItems("MYS"))
                .body("[36].'nativeName'", containsString("Negara Brunei Darussalam"))
                .body("[36].'numericCode'", containsString("096"))
                .body("[36].'currencies'.size()", equalTo(2))
                .body("[36].'currencies'[0].'code'", containsString("BND"))
                .body("[36].'currencies'[0].'name'", containsString("Brunei dollar"))
                .body("[36].'currencies'[0].'symbol'", containsString("$"))
                .body("[36].'currencies'[1].'code'", containsString("SGD"))
                .body("[36].'currencies'[1].'name'", containsString("Singapore dollar"))
                .body("[36].'currencies'[1].'symbol'", containsString("$"))
                .body("[36].'languages'.size()", equalTo(1))
                .body("[36].'languages'[0].'iso639_1'", containsString("ms"))
                .body("[36].'languages'[0].'iso639_2'", containsString("msa"))
                .body("[36].'languages'[0].'name'", containsString("Malay"))
                .body("[36].'languages'[0].'nativeName'", containsString("bahasa Melayu"))
                .body("[36].'translations'.'de'", containsString("Brunei"))
                .body("[36].'translations'.'es'", containsString("Brunei"))
                .body("[36].'translations'.'fr'", containsString("Brunei"))
                .body("[36].'translations'.'ja'", containsString("ブルネイ・ダルサラーム"))
                .body("[36].'translations'.'it'", containsString("Brunei"))
                .body("[36].'translations'.'br'", containsString("Brunei"))
                .body("[36].'translations'.'pt'", containsString("Brunei"))
                .body("[36].'translations'.'nl'", containsString("Brunei"))
                .body("[36].'translations'.'hr'", containsString("Brunej"))
                .body("[36].'translations'.'fa'", containsString("برونئی"))
                .body("[36].'flag'", containsString("https://restcountries.eu/data/brn.svg"))
                .body("[36].'regionalBlocs'.size()", equalTo(1))
                .body("[36].'regionalBlocs'[0].'acronym'", containsString("ASEAN"))
                .body("[36].'regionalBlocs'[0].'name'", containsString("Association of Southeast Asian Nations"))
                .body("[36].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[36].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[36].'cioc'", containsString("BRU"))
                .body("[37].'name'", containsString("Bulgaria"))
                .body("[37].'topLevelDomain'.size()", equalTo(1))
                .body("[37].'topLevelDomain'", hasItems(".bg"))
                .body("[37].'alpha2Code'", containsString("BG"))
                .body("[37].'alpha3Code'", containsString("BGR"))
                .body("[37].'callingCodes'.size()", equalTo(1))
                .body("[37].'callingCodes'", hasItems("359"))
                .body("[37].'capital'", containsString("Sofia"))
                .body("[37].'altSpellings'.size()", equalTo(3))
                .body("[37].'altSpellings'", hasItems("BG", "Republic of Bulgaria", "Република България"))
                .body("[37].'region'", containsString("Europe"))
                .body("[37].'subregion'", containsString("Eastern Europe"))
                .body("[37].'population'", numberMatches(7153784.0))
                .body("[37].'latlng'.size()", equalTo(2))
                .body("[37].'latlng'[0]", numberMatches(43.0))
                .body("[37].'latlng'[1]", numberMatches(25.0))
                .body("[37].'demonym'", containsString("Bulgarian"))
                .body("[37].'area'", numberMatches(110879.0))
                .body("[37].'gini'", numberMatches(28.2))
                .body("[37].'timezones'.size()", equalTo(1))
                .body("[37].'timezones'", hasItems("UTC+02:00"))
                .body("[37].'borders'.size()", equalTo(5))
                .body("[37].'borders'", hasItems("GRC", "MKD", "ROU", "SRB", "TUR"))
                .body("[37].'nativeName'", containsString("България"))
                .body("[37].'numericCode'", containsString("100"))
                .body("[37].'currencies'.size()", equalTo(1))
                .body("[37].'currencies'[0].'code'", containsString("BGN"))
                .body("[37].'currencies'[0].'name'", containsString("Bulgarian lev"))
                .body("[37].'currencies'[0].'symbol'", containsString("лв"))
                .body("[37].'languages'.size()", equalTo(1))
                .body("[37].'languages'[0].'iso639_1'", containsString("bg"))
                .body("[37].'languages'[0].'iso639_2'", containsString("bul"))
                .body("[37].'languages'[0].'name'", containsString("Bulgarian"))
                .body("[37].'languages'[0].'nativeName'", containsString("български език"))
                .body("[37].'translations'.'de'", containsString("Bulgarien"))
                .body("[37].'translations'.'es'", containsString("Bulgaria"))
                .body("[37].'translations'.'fr'", containsString("Bulgarie"))
                .body("[37].'translations'.'ja'", containsString("ブルガリア"))
                .body("[37].'translations'.'it'", containsString("Bulgaria"))
                .body("[37].'translations'.'br'", containsString("Bulgária"))
                .body("[37].'translations'.'pt'", containsString("Bulgária"))
                .body("[37].'translations'.'nl'", containsString("Bulgarije"))
                .body("[37].'translations'.'hr'", containsString("Bugarska"))
                .body("[37].'translations'.'fa'", containsString("بلغارستان"))
                .body("[37].'flag'", containsString("https://restcountries.eu/data/bgr.svg"))
                .body("[37].'regionalBlocs'.size()", equalTo(1))
                .body("[37].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[37].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[37].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[37].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[37].'cioc'", containsString("BUL"))
                .body("[38].'name'", containsString("Burkina Faso"))
                .body("[38].'topLevelDomain'.size()", equalTo(1))
                .body("[38].'topLevelDomain'", hasItems(".bf"))
                .body("[38].'alpha2Code'", containsString("BF"))
                .body("[38].'alpha3Code'", containsString("BFA"))
                .body("[38].'callingCodes'.size()", equalTo(1))
                .body("[38].'callingCodes'", hasItems("226"))
                .body("[38].'capital'", containsString("Ouagadougou"))
                .body("[38].'altSpellings'.size()", equalTo(1))
                .body("[38].'altSpellings'", hasItems("BF"))
                .body("[38].'region'", containsString("Africa"))
                .body("[38].'subregion'", containsString("Western Africa"))
                .body("[38].'population'", numberMatches(1.9034397E7))
                .body("[38].'latlng'.size()", equalTo(2))
                .body("[38].'latlng'[0]", numberMatches(13.0))
                .body("[38].'latlng'[1]", numberMatches(-2.0))
                .body("[38].'demonym'", containsString("Burkinabe"))
                .body("[38].'area'", numberMatches(272967.0))
                .body("[38].'gini'", numberMatches(39.8))
                .body("[38].'timezones'.size()", equalTo(1))
                .body("[38].'timezones'", hasItems("UTC"))
                .body("[38].'borders'.size()", equalTo(6))
                .body("[38].'borders'", hasItems("BEN", "CIV", "GHA", "MLI", "NER", "TGO"))
                .body("[38].'nativeName'", containsString("Burkina Faso"))
                .body("[38].'numericCode'", containsString("854"))
                .body("[38].'currencies'.size()", equalTo(1))
                .body("[38].'currencies'[0].'code'", containsString("XOF"))
                .body("[38].'currencies'[0].'name'", containsString("West African CFA franc"))
                .body("[38].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[38].'languages'.size()", equalTo(2))
                .body("[38].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[38].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[38].'languages'[0].'name'", containsString("French"))
                .body("[38].'languages'[0].'nativeName'", containsString("français"))
                .body("[38].'languages'[1].'iso639_1'", containsString("ff"))
                .body("[38].'languages'[1].'iso639_2'", containsString("ful"))
                .body("[38].'languages'[1].'name'", containsString("Fula"))
                .body("[38].'languages'[1].'nativeName'", containsString("Fulfulde"))
                .body("[38].'translations'.'de'", containsString("Burkina Faso"))
                .body("[38].'translations'.'es'", containsString("Burkina Faso"))
                .body("[38].'translations'.'fr'", containsString("Burkina Faso"))
                .body("[38].'translations'.'ja'", containsString("ブルキナファソ"))
                .body("[38].'translations'.'it'", containsString("Burkina Faso"))
                .body("[38].'translations'.'br'", containsString("Burkina Faso"))
                .body("[38].'translations'.'pt'", containsString("Burquina Faso"))
                .body("[38].'translations'.'nl'", containsString("Burkina Faso"))
                .body("[38].'translations'.'hr'", containsString("Burkina Faso"))
                .body("[38].'translations'.'fa'", containsString("بورکینافاسو"))
                .body("[38].'flag'", containsString("https://restcountries.eu/data/bfa.svg"))
                .body("[38].'regionalBlocs'.size()", equalTo(1))
                .body("[38].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[38].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[38].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[38].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[38].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[38].'cioc'", containsString("BUR"))
                .body("[39].'name'", containsString("Burundi"))
                .body("[39].'topLevelDomain'.size()", equalTo(1))
                .body("[39].'topLevelDomain'", hasItems(".bi"))
                .body("[39].'alpha2Code'", containsString("BI"))
                .body("[39].'alpha3Code'", containsString("BDI"))
                .body("[39].'callingCodes'.size()", equalTo(1))
                .body("[39].'callingCodes'", hasItems("257"))
                .body("[39].'capital'", containsString("Bujumbura"))
                .body("[39].'altSpellings'.size()", equalTo(4))
                .body("[39].'altSpellings'", hasItems("BI", "Republic of Burundi", "Republika y'Uburundi", "République du Burundi"))
                .body("[39].'region'", containsString("Africa"))
                .body("[39].'subregion'", containsString("Eastern Africa"))
                .body("[39].'population'", numberMatches(1.0114505E7))
                .body("[39].'latlng'.size()", equalTo(2))
                .body("[39].'latlng'[0]", numberMatches(-3.5))
                .body("[39].'latlng'[1]", numberMatches(30.0))
                .body("[39].'demonym'", containsString("Burundian"))
                .body("[39].'area'", numberMatches(27834.0))
                .body("[39].'gini'", numberMatches(33.3))
                .body("[39].'timezones'.size()", equalTo(1))
                .body("[39].'timezones'", hasItems("UTC+02:00"))
                .body("[39].'borders'.size()", equalTo(3))
                .body("[39].'borders'", hasItems("COD", "RWA", "TZA"))
                .body("[39].'nativeName'", containsString("Burundi"))
                .body("[39].'numericCode'", containsString("108"))
                .body("[39].'currencies'.size()", equalTo(1))
                .body("[39].'currencies'[0].'code'", containsString("BIF"))
                .body("[39].'currencies'[0].'name'", containsString("Burundian franc"))
                .body("[39].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[39].'languages'.size()", equalTo(2))
                .body("[39].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[39].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[39].'languages'[0].'name'", containsString("French"))
                .body("[39].'languages'[0].'nativeName'", containsString("français"))
                .body("[39].'languages'[1].'iso639_1'", containsString("rn"))
                .body("[39].'languages'[1].'iso639_2'", containsString("run"))
                .body("[39].'languages'[1].'name'", containsString("Kirundi"))
                .body("[39].'languages'[1].'nativeName'", containsString("Ikirundi"))
                .body("[39].'translations'.'de'", containsString("Burundi"))
                .body("[39].'translations'.'es'", containsString("Burundi"))
                .body("[39].'translations'.'fr'", containsString("Burundi"))
                .body("[39].'translations'.'ja'", containsString("ブルンジ"))
                .body("[39].'translations'.'it'", containsString("Burundi"))
                .body("[39].'translations'.'br'", containsString("Burundi"))
                .body("[39].'translations'.'pt'", containsString("Burúndi"))
                .body("[39].'translations'.'nl'", containsString("Burundi"))
                .body("[39].'translations'.'hr'", containsString("Burundi"))
                .body("[39].'translations'.'fa'", containsString("بوروندی"))
                .body("[39].'flag'", containsString("https://restcountries.eu/data/bdi.svg"))
                .body("[39].'regionalBlocs'.size()", equalTo(1))
                .body("[39].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[39].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[39].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[39].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[39].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[39].'cioc'", containsString("BDI"))
                .body("[40].'name'", containsString("Cambodia"))
                .body("[40].'topLevelDomain'.size()", equalTo(1))
                .body("[40].'topLevelDomain'", hasItems(".kh"))
                .body("[40].'alpha2Code'", containsString("KH"))
                .body("[40].'alpha3Code'", containsString("KHM"))
                .body("[40].'callingCodes'.size()", equalTo(1))
                .body("[40].'callingCodes'", hasItems("855"))
                .body("[40].'capital'", containsString("Phnom Penh"))
                .body("[40].'altSpellings'.size()", equalTo(2))
                .body("[40].'altSpellings'", hasItems("KH", "Kingdom of Cambodia"))
                .body("[40].'region'", containsString("Asia"))
                .body("[40].'subregion'", containsString("South-Eastern Asia"))
                .body("[40].'population'", numberMatches(1.5626444E7))
                .body("[40].'latlng'.size()", equalTo(2))
                .body("[40].'latlng'[0]", numberMatches(13.0))
                .body("[40].'latlng'[1]", numberMatches(105.0))
                .body("[40].'demonym'", containsString("Cambodian"))
                .body("[40].'area'", numberMatches(181035.0))
                .body("[40].'gini'", numberMatches(37.9))
                .body("[40].'timezones'.size()", equalTo(1))
                .body("[40].'timezones'", hasItems("UTC+07:00"))
                .body("[40].'borders'.size()", equalTo(3))
                .body("[40].'borders'", hasItems("LAO", "THA", "VNM"))
                .body("[40].'nativeName'", containsString("Kâmpŭchéa"))
                .body("[40].'numericCode'", containsString("116"))
                .body("[40].'currencies'.size()", equalTo(2))
                .body("[40].'currencies'[0].'code'", containsString("KHR"))
                .body("[40].'currencies'[0].'name'", containsString("Cambodian riel"))
                .body("[40].'currencies'[0].'symbol'", containsString("៛"))
                .body("[40].'currencies'[1].'code'", containsString("USD"))
                .body("[40].'currencies'[1].'name'", containsString("United States dollar"))
                .body("[40].'currencies'[1].'symbol'", containsString("$"))
                .body("[40].'languages'.size()", equalTo(1))
                .body("[40].'languages'[0].'iso639_1'", containsString("km"))
                .body("[40].'languages'[0].'iso639_2'", containsString("khm"))
                .body("[40].'languages'[0].'name'", containsString("Khmer"))
                .body("[40].'languages'[0].'nativeName'", containsString("ខ្មែរ"))
                .body("[40].'translations'.'de'", containsString("Kambodscha"))
                .body("[40].'translations'.'es'", containsString("Camboya"))
                .body("[40].'translations'.'fr'", containsString("Cambodge"))
                .body("[40].'translations'.'ja'", containsString("カンボジア"))
                .body("[40].'translations'.'it'", containsString("Cambogia"))
                .body("[40].'translations'.'br'", containsString("Camboja"))
                .body("[40].'translations'.'pt'", containsString("Camboja"))
                .body("[40].'translations'.'nl'", containsString("Cambodja"))
                .body("[40].'translations'.'hr'", containsString("Kambodža"))
                .body("[40].'translations'.'fa'", containsString("کامبوج"))
                .body("[40].'flag'", containsString("https://restcountries.eu/data/khm.svg"))
                .body("[40].'regionalBlocs'.size()", equalTo(1))
                .body("[40].'regionalBlocs'[0].'acronym'", containsString("ASEAN"))
                .body("[40].'regionalBlocs'[0].'name'", containsString("Association of Southeast Asian Nations"))
                .body("[40].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[40].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[40].'cioc'", containsString("CAM"))
                .body("[41].'name'", containsString("Cameroon"))
                .body("[41].'topLevelDomain'.size()", equalTo(1))
                .body("[41].'topLevelDomain'", hasItems(".cm"))
                .body("[41].'alpha2Code'", containsString("CM"))
                .body("[41].'alpha3Code'", containsString("CMR"))
                .body("[41].'callingCodes'.size()", equalTo(1))
                .body("[41].'callingCodes'", hasItems("237"))
                .body("[41].'capital'", containsString("Yaoundé"))
                .body("[41].'altSpellings'.size()", equalTo(3))
                .body("[41].'altSpellings'", hasItems("CM", "Republic of Cameroon", "République du Cameroun"))
                .body("[41].'region'", containsString("Africa"))
                .body("[41].'subregion'", containsString("Middle Africa"))
                .body("[41].'population'", numberMatches(2.2709892E7))
                .body("[41].'latlng'.size()", equalTo(2))
                .body("[41].'latlng'[0]", numberMatches(6.0))
                .body("[41].'latlng'[1]", numberMatches(12.0))
                .body("[41].'demonym'", containsString("Cameroonian"))
                .body("[41].'area'", numberMatches(475442.0))
                .body("[41].'gini'", numberMatches(38.9))
                .body("[41].'timezones'.size()", equalTo(1))
                .body("[41].'timezones'", hasItems("UTC+01:00"))
                .body("[41].'borders'.size()", equalTo(6))
                .body("[41].'borders'", hasItems("CAF", "TCD", "COG", "GNQ", "GAB", "NGA"))
                .body("[41].'nativeName'", containsString("Cameroon"))
                .body("[41].'numericCode'", containsString("120"))
                .body("[41].'currencies'.size()", equalTo(1))
                .body("[41].'currencies'[0].'code'", containsString("XAF"))
                .body("[41].'currencies'[0].'name'", containsString("Central African CFA franc"))
                .body("[41].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[41].'languages'.size()", equalTo(2))
                .body("[41].'languages'[0].'iso639_1'", containsString("en"))
                .body("[41].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[41].'languages'[0].'name'", containsString("English"))
                .body("[41].'languages'[0].'nativeName'", containsString("English"))
                .body("[41].'languages'[1].'iso639_1'", containsString("fr"))
                .body("[41].'languages'[1].'iso639_2'", containsString("fra"))
                .body("[41].'languages'[1].'name'", containsString("French"))
                .body("[41].'languages'[1].'nativeName'", containsString("français"))
                .body("[41].'translations'.'de'", containsString("Kamerun"))
                .body("[41].'translations'.'es'", containsString("Camerún"))
                .body("[41].'translations'.'fr'", containsString("Cameroun"))
                .body("[41].'translations'.'ja'", containsString("カメルーン"))
                .body("[41].'translations'.'it'", containsString("Camerun"))
                .body("[41].'translations'.'br'", containsString("Camarões"))
                .body("[41].'translations'.'pt'", containsString("Camarões"))
                .body("[41].'translations'.'nl'", containsString("Kameroen"))
                .body("[41].'translations'.'hr'", containsString("Kamerun"))
                .body("[41].'translations'.'fa'", containsString("کامرون"))
                .body("[41].'flag'", containsString("https://restcountries.eu/data/cmr.svg"))
                .body("[41].'regionalBlocs'.size()", equalTo(1))
                .body("[41].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[41].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[41].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[41].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[41].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[41].'cioc'", containsString("CMR"))
                .body("[42].'name'", containsString("Canada"))
                .body("[42].'topLevelDomain'.size()", equalTo(1))
                .body("[42].'topLevelDomain'", hasItems(".ca"))
                .body("[42].'alpha2Code'", containsString("CA"))
                .body("[42].'alpha3Code'", containsString("CAN"))
                .body("[42].'callingCodes'.size()", equalTo(1))
                .body("[42].'callingCodes'", hasItems("1"))
                .body("[42].'capital'", containsString("Ottawa"))
                .body("[42].'altSpellings'.size()", equalTo(1))
                .body("[42].'altSpellings'", hasItems("CA"))
                .body("[42].'region'", containsString("Americas"))
                .body("[42].'subregion'", containsString("Northern America"))
                .body("[42].'population'", numberMatches(3.6155487E7))
                .body("[42].'latlng'.size()", equalTo(2))
                .body("[42].'latlng'[0]", numberMatches(60.0))
                .body("[42].'latlng'[1]", numberMatches(-95.0))
                .body("[42].'demonym'", containsString("Canadian"))
                .body("[42].'area'", numberMatches(9984670.0))
                .body("[42].'gini'", numberMatches(32.6))
                .body("[42].'timezones'.size()", equalTo(6))
                .body("[42].'timezones'", hasItems("UTC-08:00", "UTC-07:00", "UTC-06:00", "UTC-05:00", "UTC-04:00", "UTC-03:30"))
                .body("[42].'borders'.size()", equalTo(1))
                .body("[42].'borders'", hasItems("USA"))
                .body("[42].'nativeName'", containsString("Canada"))
                .body("[42].'numericCode'", containsString("124"))
                .body("[42].'currencies'.size()", equalTo(1))
                .body("[42].'currencies'[0].'code'", containsString("CAD"))
                .body("[42].'currencies'[0].'name'", containsString("Canadian dollar"))
                .body("[42].'currencies'[0].'symbol'", containsString("$"))
                .body("[42].'languages'.size()", equalTo(2))
                .body("[42].'languages'[0].'iso639_1'", containsString("en"))
                .body("[42].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[42].'languages'[0].'name'", containsString("English"))
                .body("[42].'languages'[0].'nativeName'", containsString("English"))
                .body("[42].'languages'[1].'iso639_1'", containsString("fr"))
                .body("[42].'languages'[1].'iso639_2'", containsString("fra"))
                .body("[42].'languages'[1].'name'", containsString("French"))
                .body("[42].'languages'[1].'nativeName'", containsString("français"))
                .body("[42].'translations'.'de'", containsString("Kanada"))
                .body("[42].'translations'.'es'", containsString("Canadá"))
                .body("[42].'translations'.'fr'", containsString("Canada"))
                .body("[42].'translations'.'ja'", containsString("カナダ"))
                .body("[42].'translations'.'it'", containsString("Canada"))
                .body("[42].'translations'.'br'", containsString("Canadá"))
                .body("[42].'translations'.'pt'", containsString("Canadá"))
                .body("[42].'translations'.'nl'", containsString("Canada"))
                .body("[42].'translations'.'hr'", containsString("Kanada"))
                .body("[42].'translations'.'fa'", containsString("کانادا"))
                .body("[42].'flag'", containsString("https://restcountries.eu/data/can.svg"))
                .body("[42].'regionalBlocs'.size()", equalTo(1))
                .body("[42].'regionalBlocs'[0].'acronym'", containsString("NAFTA"))
                .body("[42].'regionalBlocs'[0].'name'", containsString("North American Free Trade Agreement"))
                .body("[42].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[42].'regionalBlocs'[0].'otherNames'.size()", equalTo(2))
                .body("[42].'regionalBlocs'[0].'otherNames'", hasItems("Tratado de Libre Comercio de América del Norte", "Accord de Libre-échange Nord-Américain"))
                .body("[42].'cioc'", containsString("CAN"))
                .body("[43].'name'", containsString("Cabo Verde"))
                .body("[43].'topLevelDomain'.size()", equalTo(1))
                .body("[43].'topLevelDomain'", hasItems(".cv"))
                .body("[43].'alpha2Code'", containsString("CV"))
                .body("[43].'alpha3Code'", containsString("CPV"))
                .body("[43].'callingCodes'.size()", equalTo(1))
                .body("[43].'callingCodes'", hasItems("238"))
                .body("[43].'capital'", containsString("Praia"))
                .body("[43].'altSpellings'.size()", equalTo(3))
                .body("[43].'altSpellings'", hasItems("CV", "Republic of Cabo Verde", "República de Cabo Verde"))
                .body("[43].'region'", containsString("Africa"))
                .body("[43].'subregion'", containsString("Western Africa"))
                .body("[43].'population'", numberMatches(531239.0))
                .body("[43].'latlng'.size()", equalTo(2))
                .body("[43].'latlng'[0]", numberMatches(16.0))
                .body("[43].'latlng'[1]", numberMatches(-24.0))
                .body("[43].'demonym'", containsString("Cape Verdian"))
                .body("[43].'area'", numberMatches(4033.0))
                .body("[43].'gini'", numberMatches(50.5))
                .body("[43].'timezones'.size()", equalTo(1))
                .body("[43].'timezones'", hasItems("UTC-01:00"))
                .body("[43].'borders'.size()", equalTo(0))
                .body("[43].'nativeName'", containsString("Cabo Verde"))
                .body("[43].'numericCode'", containsString("132"))
                .body("[43].'currencies'.size()", equalTo(1))
                .body("[43].'currencies'[0].'code'", containsString("CVE"))
                .body("[43].'currencies'[0].'name'", containsString("Cape Verdean escudo"))
                .body("[43].'currencies'[0].'symbol'", containsString("Esc"))
                .body("[43].'languages'.size()", equalTo(1))
                .body("[43].'languages'[0].'iso639_1'", containsString("pt"))
                .body("[43].'languages'[0].'iso639_2'", containsString("por"))
                .body("[43].'languages'[0].'name'", containsString("Portuguese"))
                .body("[43].'languages'[0].'nativeName'", containsString("Português"))
                .body("[43].'translations'.'de'", containsString("Kap Verde"))
                .body("[43].'translations'.'es'", containsString("Cabo Verde"))
                .body("[43].'translations'.'fr'", containsString("Cap Vert"))
                .body("[43].'translations'.'ja'", containsString("カーボベルデ"))
                .body("[43].'translations'.'it'", containsString("Capo Verde"))
                .body("[43].'translations'.'br'", containsString("Cabo Verde"))
                .body("[43].'translations'.'pt'", containsString("Cabo Verde"))
                .body("[43].'translations'.'nl'", containsString("Kaapverdië"))
                .body("[43].'translations'.'hr'", containsString("Zelenortska Republika"))
                .body("[43].'translations'.'fa'", containsString("کیپ ورد"))
                .body("[43].'flag'", containsString("https://restcountries.eu/data/cpv.svg"))
                .body("[43].'regionalBlocs'.size()", equalTo(1))
                .body("[43].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[43].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[43].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[43].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[43].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[43].'cioc'", containsString("CPV"))
                .body("[44].'name'", containsString("Cayman Islands"))
                .body("[44].'topLevelDomain'.size()", equalTo(1))
                .body("[44].'topLevelDomain'", hasItems(".ky"))
                .body("[44].'alpha2Code'", containsString("KY"))
                .body("[44].'alpha3Code'", containsString("CYM"))
                .body("[44].'callingCodes'.size()", equalTo(1))
                .body("[44].'callingCodes'", hasItems("1"))
                .body("[44].'capital'", containsString("George Town"))
                .body("[44].'altSpellings'.size()", equalTo(1))
                .body("[44].'altSpellings'", hasItems("KY"))
                .body("[44].'region'", containsString("Americas"))
                .body("[44].'subregion'", containsString("Caribbean"))
                .body("[44].'population'", numberMatches(58238.0))
                .body("[44].'latlng'.size()", equalTo(2))
                .body("[44].'latlng'[0]", numberMatches(19.5))
                .body("[44].'latlng'[1]", numberMatches(-80.5))
                .body("[44].'demonym'", containsString("Caymanian"))
                .body("[44].'area'", numberMatches(264.0))
                .body("[44].'gini'", nullValue())
                .body("[44].'timezones'.size()", equalTo(1))
                .body("[44].'timezones'", hasItems("UTC-05:00"))
                .body("[44].'borders'.size()", equalTo(0))
                .body("[44].'nativeName'", containsString("Cayman Islands"))
                .body("[44].'numericCode'", containsString("136"))
                .body("[44].'currencies'.size()", equalTo(1))
                .body("[44].'currencies'[0].'code'", containsString("KYD"))
                .body("[44].'currencies'[0].'name'", containsString("Cayman Islands dollar"))
                .body("[44].'currencies'[0].'symbol'", containsString("$"))
                .body("[44].'languages'.size()", equalTo(1))
                .body("[44].'languages'[0].'iso639_1'", containsString("en"))
                .body("[44].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[44].'languages'[0].'name'", containsString("English"))
                .body("[44].'languages'[0].'nativeName'", containsString("English"))
                .body("[44].'translations'.'de'", containsString("Kaimaninseln"))
                .body("[44].'translations'.'es'", containsString("Islas Caimán"))
                .body("[44].'translations'.'fr'", containsString("Îles Caïmans"))
                .body("[44].'translations'.'ja'", containsString("ケイマン諸島"))
                .body("[44].'translations'.'it'", containsString("Isole Cayman"))
                .body("[44].'translations'.'br'", containsString("Ilhas Cayman"))
                .body("[44].'translations'.'pt'", containsString("Ilhas Caimão"))
                .body("[44].'translations'.'nl'", containsString("Caymaneilanden"))
                .body("[44].'translations'.'hr'", containsString("Kajmanski otoci"))
                .body("[44].'translations'.'fa'", containsString("جزایر کیمن"))
                .body("[44].'flag'", containsString("https://restcountries.eu/data/cym.svg"))
                .body("[44].'regionalBlocs'.size()", equalTo(0))
                .body("[44].'cioc'", containsString("CAY"))
                .body("[45].'name'", containsString("Central African Republic"))
                .body("[45].'topLevelDomain'.size()", equalTo(1))
                .body("[45].'topLevelDomain'", hasItems(".cf"))
                .body("[45].'alpha2Code'", containsString("CF"))
                .body("[45].'alpha3Code'", containsString("CAF"))
                .body("[45].'callingCodes'.size()", equalTo(1))
                .body("[45].'callingCodes'", hasItems("236"))
                .body("[45].'capital'", containsString("Bangui"))
                .body("[45].'altSpellings'.size()", equalTo(3))
                .body("[45].'altSpellings'", hasItems("CF", "Central African Republic", "République centrafricaine"))
                .body("[45].'region'", containsString("Africa"))
                .body("[45].'subregion'", containsString("Middle Africa"))
                .body("[45].'population'", numberMatches(4998000.0))
                .body("[45].'latlng'.size()", equalTo(2))
                .body("[45].'latlng'[0]", numberMatches(7.0))
                .body("[45].'latlng'[1]", numberMatches(21.0))
                .body("[45].'demonym'", containsString("Central African"))
                .body("[45].'area'", numberMatches(622984.0))
                .body("[45].'gini'", numberMatches(56.3))
                .body("[45].'timezones'.size()", equalTo(1))
                .body("[45].'timezones'", hasItems("UTC+01:00"))
                .body("[45].'borders'.size()", equalTo(6))
                .body("[45].'borders'", hasItems("CMR", "TCD", "COD", "COG", "SSD", "SDN"))
                .body("[45].'nativeName'", containsString("Ködörösêse tî Bêafrîka"))
                .body("[45].'numericCode'", containsString("140"))
                .body("[45].'currencies'.size()", equalTo(1))
                .body("[45].'currencies'[0].'code'", containsString("XAF"))
                .body("[45].'currencies'[0].'name'", containsString("Central African CFA franc"))
                .body("[45].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[45].'languages'.size()", equalTo(2))
                .body("[45].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[45].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[45].'languages'[0].'name'", containsString("French"))
                .body("[45].'languages'[0].'nativeName'", containsString("français"))
                .body("[45].'languages'[1].'iso639_1'", containsString("sg"))
                .body("[45].'languages'[1].'iso639_2'", containsString("sag"))
                .body("[45].'languages'[1].'name'", containsString("Sango"))
                .body("[45].'languages'[1].'nativeName'", containsString("yângâ tî sängö"))
                .body("[45].'translations'.'de'", containsString("Zentralafrikanische Republik"))
                .body("[45].'translations'.'es'", containsString("República Centroafricana"))
                .body("[45].'translations'.'fr'", containsString("République centrafricaine"))
                .body("[45].'translations'.'ja'", containsString("中央アフリカ共和国"))
                .body("[45].'translations'.'it'", containsString("Repubblica Centrafricana"))
                .body("[45].'translations'.'br'", containsString("República Centro-Africana"))
                .body("[45].'translations'.'pt'", containsString("República Centro-Africana"))
                .body("[45].'translations'.'nl'", containsString("Centraal-Afrikaanse Republiek"))
                .body("[45].'translations'.'hr'", containsString("Srednjoafrička Republika"))
                .body("[45].'translations'.'fa'", containsString("جمهوری آفریقای مرکزی"))
                .body("[45].'flag'", containsString("https://restcountries.eu/data/caf.svg"))
                .body("[45].'regionalBlocs'.size()", equalTo(1))
                .body("[45].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[45].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[45].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[45].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[45].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[45].'cioc'", containsString("CAF"))
                .body("[46].'name'", containsString("Chad"))
                .body("[46].'topLevelDomain'.size()", equalTo(1))
                .body("[46].'topLevelDomain'", hasItems(".td"))
                .body("[46].'alpha2Code'", containsString("TD"))
                .body("[46].'alpha3Code'", containsString("TCD"))
                .body("[46].'callingCodes'.size()", equalTo(1))
                .body("[46].'callingCodes'", hasItems("235"))
                .body("[46].'capital'", containsString("N'Djamena"))
                .body("[46].'altSpellings'.size()", equalTo(4))
                .body("[46].'altSpellings'", hasItems("TD", "Tchad", "Republic of Chad", "République du Tchad"))
                .body("[46].'region'", containsString("Africa"))
                .body("[46].'subregion'", containsString("Middle Africa"))
                .body("[46].'population'", numberMatches(1.4497E7))
                .body("[46].'latlng'.size()", equalTo(2))
                .body("[46].'latlng'[0]", numberMatches(15.0))
                .body("[46].'latlng'[1]", numberMatches(19.0))
                .body("[46].'demonym'", containsString("Chadian"))
                .body("[46].'area'", numberMatches(1284000.0))
                .body("[46].'gini'", numberMatches(39.8))
                .body("[46].'timezones'.size()", equalTo(1))
                .body("[46].'timezones'", hasItems("UTC+01:00"))
                .body("[46].'borders'.size()", equalTo(6))
                .body("[46].'borders'", hasItems("CMR", "CAF", "LBY", "NER", "NGA", "SSD"))
                .body("[46].'nativeName'", containsString("Tchad"))
                .body("[46].'numericCode'", containsString("148"))
                .body("[46].'currencies'.size()", equalTo(1))
                .body("[46].'currencies'[0].'code'", containsString("XAF"))
                .body("[46].'currencies'[0].'name'", containsString("Central African CFA franc"))
                .body("[46].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[46].'languages'.size()", equalTo(2))
                .body("[46].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[46].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[46].'languages'[0].'name'", containsString("French"))
                .body("[46].'languages'[0].'nativeName'", containsString("français"))
                .body("[46].'languages'[1].'iso639_1'", containsString("ar"))
                .body("[46].'languages'[1].'iso639_2'", containsString("ara"))
                .body("[46].'languages'[1].'name'", containsString("Arabic"))
                .body("[46].'languages'[1].'nativeName'", containsString("العربية"))
                .body("[46].'translations'.'de'", containsString("Tschad"))
                .body("[46].'translations'.'es'", containsString("Chad"))
                .body("[46].'translations'.'fr'", containsString("Tchad"))
                .body("[46].'translations'.'ja'", containsString("チャド"))
                .body("[46].'translations'.'it'", containsString("Ciad"))
                .body("[46].'translations'.'br'", containsString("Chade"))
                .body("[46].'translations'.'pt'", containsString("Chade"))
                .body("[46].'translations'.'nl'", containsString("Tsjaad"))
                .body("[46].'translations'.'hr'", containsString("Čad"))
                .body("[46].'translations'.'fa'", containsString("چاد"))
                .body("[46].'flag'", containsString("https://restcountries.eu/data/tcd.svg"))
                .body("[46].'regionalBlocs'.size()", equalTo(1))
                .body("[46].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[46].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[46].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[46].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[46].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[46].'cioc'", containsString("CHA"))
                .body("[47].'name'", containsString("Chile"))
                .body("[47].'topLevelDomain'.size()", equalTo(1))
                .body("[47].'topLevelDomain'", hasItems(".cl"))
                .body("[47].'alpha2Code'", containsString("CL"))
                .body("[47].'alpha3Code'", containsString("CHL"))
                .body("[47].'callingCodes'.size()", equalTo(1))
                .body("[47].'callingCodes'", hasItems("56"))
                .body("[47].'capital'", containsString("Santiago"))
                .body("[47].'altSpellings'.size()", equalTo(3))
                .body("[47].'altSpellings'", hasItems("CL", "Republic of Chile", "República de Chile"))
                .body("[47].'region'", containsString("Americas"))
                .body("[47].'subregion'", containsString("South America"))
                .body("[47].'population'", numberMatches(1.81919E7))
                .body("[47].'latlng'.size()", equalTo(2))
                .body("[47].'latlng'[0]", numberMatches(-30.0))
                .body("[47].'latlng'[1]", numberMatches(-71.0))
                .body("[47].'demonym'", containsString("Chilean"))
                .body("[47].'area'", numberMatches(756102.0))
                .body("[47].'gini'", numberMatches(52.1))
                .body("[47].'timezones'.size()", equalTo(2))
                .body("[47].'timezones'", hasItems("UTC-06:00", "UTC-04:00"))
                .body("[47].'borders'.size()", equalTo(3))
                .body("[47].'borders'", hasItems("ARG", "BOL", "PER"))
                .body("[47].'nativeName'", containsString("Chile"))
                .body("[47].'numericCode'", containsString("152"))
                .body("[47].'currencies'.size()", equalTo(1))
                .body("[47].'currencies'[0].'code'", containsString("CLP"))
                .body("[47].'currencies'[0].'name'", containsString("Chilean peso"))
                .body("[47].'currencies'[0].'symbol'", containsString("$"))
                .body("[47].'languages'.size()", equalTo(1))
                .body("[47].'languages'[0].'iso639_1'", containsString("es"))
                .body("[47].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[47].'languages'[0].'name'", containsString("Spanish"))
                .body("[47].'languages'[0].'nativeName'", containsString("Español"))
                .body("[47].'translations'.'de'", containsString("Chile"))
                .body("[47].'translations'.'es'", containsString("Chile"))
                .body("[47].'translations'.'fr'", containsString("Chili"))
                .body("[47].'translations'.'ja'", containsString("チリ"))
                .body("[47].'translations'.'it'", containsString("Cile"))
                .body("[47].'translations'.'br'", containsString("Chile"))
                .body("[47].'translations'.'pt'", containsString("Chile"))
                .body("[47].'translations'.'nl'", containsString("Chili"))
                .body("[47].'translations'.'hr'", containsString("Čile"))
                .body("[47].'translations'.'fa'", containsString("شیلی"))
                .body("[47].'flag'", containsString("https://restcountries.eu/data/chl.svg"))
                .body("[47].'regionalBlocs'.size()", equalTo(2))
                .body("[47].'regionalBlocs'[0].'acronym'", containsString("PA"))
                .body("[47].'regionalBlocs'[0].'name'", containsString("Pacific Alliance"))
                .body("[47].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[47].'regionalBlocs'[0].'otherNames'.size()", equalTo(1))
                .body("[47].'regionalBlocs'[0].'otherNames'", hasItems("Alianza del Pacífico"))
                .body("[47].'regionalBlocs'[1].'acronym'", containsString("USAN"))
                .body("[47].'regionalBlocs'[1].'name'", containsString("Union of South American Nations"))
                .body("[47].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(3))
                .body("[47].'regionalBlocs'[1].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[47].'regionalBlocs'[1].'otherNames'.size()", equalTo(4))
                .body("[47].'regionalBlocs'[1].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[47].'cioc'", containsString("CHI"))
                .body("[48].'name'", containsString("China"))
                .body("[48].'topLevelDomain'.size()", equalTo(1))
                .body("[48].'topLevelDomain'", hasItems(".cn"))
                .body("[48].'alpha2Code'", containsString("CN"))
                .body("[48].'alpha3Code'", containsString("CHN"))
                .body("[48].'callingCodes'.size()", equalTo(1))
                .body("[48].'callingCodes'", hasItems("86"))
                .body("[48].'capital'", containsString("Beijing"))
                .body("[48].'altSpellings'.size()", equalTo(7))
                .body("[48].'altSpellings'", hasItems("CN", "Zhōngguó", "Zhongguo", "Zhonghua", "People's Republic of China", "中华人民共和国", "Zhōnghuá Rénmín Gònghéguó"))
                .body("[48].'region'", containsString("Asia"))
                .body("[48].'subregion'", containsString("Eastern Asia"))
                .body("[48].'population'", numberMatches(1.377422166E9))
                .body("[48].'latlng'.size()", equalTo(2))
                .body("[48].'latlng'[0]", numberMatches(35.0))
                .body("[48].'latlng'[1]", numberMatches(105.0))
                .body("[48].'demonym'", containsString("Chinese"))
                .body("[48].'area'", numberMatches(9640011.0))
                .body("[48].'gini'", numberMatches(47.0))
                .body("[48].'timezones'.size()", equalTo(1))
                .body("[48].'timezones'", hasItems("UTC+08:00"))
                .body("[48].'borders'.size()", equalTo(15))
                .body("[48].'borders'", hasItems("AFG", "BTN", "MMR", "HKG", "IND", "KAZ", "PRK", "KGZ", "LAO", "MAC", "MNG", "PAK", "RUS", "TJK", "VNM"))
                .body("[48].'nativeName'", containsString("中国"))
                .body("[48].'numericCode'", containsString("156"))
                .body("[48].'currencies'.size()", equalTo(1))
                .body("[48].'currencies'[0].'code'", containsString("CNY"))
                .body("[48].'currencies'[0].'name'", containsString("Chinese yuan"))
                .body("[48].'currencies'[0].'symbol'", containsString("¥"))
                .body("[48].'languages'.size()", equalTo(1))
                .body("[48].'languages'[0].'iso639_1'", containsString("zh"))
                .body("[48].'languages'[0].'iso639_2'", containsString("zho"))
                .body("[48].'languages'[0].'name'", containsString("Chinese"))
                .body("[48].'languages'[0].'nativeName'", containsString("中文 (Zhōngwén)"))
                .body("[48].'translations'.'de'", containsString("China"))
                .body("[48].'translations'.'es'", containsString("China"))
                .body("[48].'translations'.'fr'", containsString("Chine"))
                .body("[48].'translations'.'ja'", containsString("中国"))
                .body("[48].'translations'.'it'", containsString("Cina"))
                .body("[48].'translations'.'br'", containsString("China"))
                .body("[48].'translations'.'pt'", containsString("China"))
                .body("[48].'translations'.'nl'", containsString("China"))
                .body("[48].'translations'.'hr'", containsString("Kina"))
                .body("[48].'translations'.'fa'", containsString("چین"))
                .body("[48].'flag'", containsString("https://restcountries.eu/data/chn.svg"))
                .body("[48].'regionalBlocs'.size()", equalTo(0))
                .body("[48].'cioc'", containsString("CHN"))
                .body("[49].'name'", containsString("Christmas Island"))
                .body("[49].'topLevelDomain'.size()", equalTo(1))
                .body("[49].'topLevelDomain'", hasItems(".cx"))
                .body("[49].'alpha2Code'", containsString("CX"))
                .body("[49].'alpha3Code'", containsString("CXR"))
                .body("[49].'callingCodes'.size()", equalTo(1))
                .body("[49].'callingCodes'", hasItems("61"))
                .body("[49].'capital'", containsString("Flying Fish Cove"))
                .body("[49].'altSpellings'.size()", equalTo(2))
                .body("[49].'altSpellings'", hasItems("CX", "Territory of Christmas Island"))
                .body("[49].'region'", containsString("Oceania"))
                .body("[49].'subregion'", containsString("Australia and New Zealand"))
                .body("[49].'population'", numberMatches(2072.0))
                .body("[49].'latlng'.size()", equalTo(2))
                .body("[49].'latlng'[0]", numberMatches(-10.5))
                .body("[49].'latlng'[1]", numberMatches(105.66666666))
                .body("[49].'demonym'", containsString("Christmas Island"))
                .body("[49].'area'", numberMatches(135.0))
                .body("[49].'gini'", nullValue())
                .body("[49].'timezones'.size()", equalTo(1))
                .body("[49].'timezones'", hasItems("UTC+07:00"))
                .body("[49].'borders'.size()", equalTo(0))
                .body("[49].'nativeName'", containsString("Christmas Island"))
                .body("[49].'numericCode'", containsString("162"))
                .body("[49].'currencies'.size()", equalTo(1))
                .body("[49].'currencies'[0].'code'", containsString("AUD"))
                .body("[49].'currencies'[0].'name'", containsString("Australian dollar"))
                .body("[49].'currencies'[0].'symbol'", containsString("$"))
                .body("[49].'languages'.size()", equalTo(1))
                .body("[49].'languages'[0].'iso639_1'", containsString("en"))
                .body("[49].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[49].'languages'[0].'name'", containsString("English"))
                .body("[49].'languages'[0].'nativeName'", containsString("English"))
                .body("[49].'translations'.'de'", containsString("Weihnachtsinsel"))
                .body("[49].'translations'.'es'", containsString("Isla de Navidad"))
                .body("[49].'translations'.'fr'", containsString("Île Christmas"))
                .body("[49].'translations'.'ja'", containsString("クリスマス島"))
                .body("[49].'translations'.'it'", containsString("Isola di Natale"))
                .body("[49].'translations'.'br'", containsString("Ilha Christmas"))
                .body("[49].'translations'.'pt'", containsString("Ilha do Natal"))
                .body("[49].'translations'.'nl'", containsString("Christmaseiland"))
                .body("[49].'translations'.'hr'", containsString("Božićni otok"))
                .body("[49].'translations'.'fa'", containsString("جزیره کریسمس"))
                .body("[49].'flag'", containsString("https://restcountries.eu/data/cxr.svg"))
                .body("[49].'regionalBlocs'.size()", equalTo(0))
                .body("[49].'cioc'", containsString(""))
                .body("[50].'name'", containsString("Cocos (Keeling) Islands"))
                .body("[50].'topLevelDomain'.size()", equalTo(1))
                .body("[50].'topLevelDomain'", hasItems(".cc"))
                .body("[50].'alpha2Code'", containsString("CC"))
                .body("[50].'alpha3Code'", containsString("CCK"))
                .body("[50].'callingCodes'.size()", equalTo(1))
                .body("[50].'callingCodes'", hasItems("61"))
                .body("[50].'capital'", containsString("West Island"))
                .body("[50].'altSpellings'.size()", equalTo(3))
                .body("[50].'altSpellings'", hasItems("CC", "Territory of the Cocos (Keeling) Islands", "Keeling Islands"))
                .body("[50].'region'", containsString("Oceania"))
                .body("[50].'subregion'", containsString("Australia and New Zealand"))
                .body("[50].'population'", numberMatches(550.0))
                .body("[50].'latlng'.size()", equalTo(2))
                .body("[50].'latlng'[0]", numberMatches(-12.5))
                .body("[50].'latlng'[1]", numberMatches(96.83333333))
                .body("[50].'demonym'", containsString("Cocos Islander"))
                .body("[50].'area'", numberMatches(14.0))
                .body("[50].'gini'", nullValue())
                .body("[50].'timezones'.size()", equalTo(1))
                .body("[50].'timezones'", hasItems("UTC+06:30"))
                .body("[50].'borders'.size()", equalTo(0))
                .body("[50].'nativeName'", containsString("Cocos (Keeling) Islands"))
                .body("[50].'numericCode'", containsString("166"))
                .body("[50].'currencies'.size()", equalTo(1))
                .body("[50].'currencies'[0].'code'", containsString("AUD"))
                .body("[50].'currencies'[0].'name'", containsString("Australian dollar"))
                .body("[50].'currencies'[0].'symbol'", containsString("$"))
                .body("[50].'languages'.size()", equalTo(1))
                .body("[50].'languages'[0].'iso639_1'", containsString("en"))
                .body("[50].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[50].'languages'[0].'name'", containsString("English"))
                .body("[50].'languages'[0].'nativeName'", containsString("English"))
                .body("[50].'translations'.'de'", containsString("Kokosinseln"))
                .body("[50].'translations'.'es'", containsString("Islas Cocos o Islas Keeling"))
                .body("[50].'translations'.'fr'", containsString("Îles Cocos"))
                .body("[50].'translations'.'ja'", containsString("ココス（キーリング）諸島"))
                .body("[50].'translations'.'it'", containsString("Isole Cocos e Keeling"))
                .body("[50].'translations'.'br'", containsString("Ilhas Cocos"))
                .body("[50].'translations'.'pt'", containsString("Ilhas dos Cocos"))
                .body("[50].'translations'.'nl'", containsString("Cocoseilanden"))
                .body("[50].'translations'.'hr'", containsString("Kokosovi Otoci"))
                .body("[50].'translations'.'fa'", containsString("جزایر کوکوس"))
                .body("[50].'flag'", containsString("https://restcountries.eu/data/cck.svg"))
                .body("[50].'regionalBlocs'.size()", equalTo(0))
                .body("[50].'cioc'", containsString(""))
                .body("[51].'name'", containsString("Colombia"))
                .body("[51].'topLevelDomain'.size()", equalTo(1))
                .body("[51].'topLevelDomain'", hasItems(".co"))
                .body("[51].'alpha2Code'", containsString("CO"))
                .body("[51].'alpha3Code'", containsString("COL"))
                .body("[51].'callingCodes'.size()", equalTo(1))
                .body("[51].'callingCodes'", hasItems("57"))
                .body("[51].'capital'", containsString("Bogotá"))
                .body("[51].'altSpellings'.size()", equalTo(3))
                .body("[51].'altSpellings'", hasItems("CO", "Republic of Colombia", "República de Colombia"))
                .body("[51].'region'", containsString("Americas"))
                .body("[51].'subregion'", containsString("South America"))
                .body("[51].'population'", numberMatches(4.8759958E7))
                .body("[51].'latlng'.size()", equalTo(2))
                .body("[51].'latlng'[0]", numberMatches(4.0))
                .body("[51].'latlng'[1]", numberMatches(-72.0))
                .body("[51].'demonym'", containsString("Colombian"))
                .body("[51].'area'", numberMatches(1141748.0))
                .body("[51].'gini'", numberMatches(55.9))
                .body("[51].'timezones'.size()", equalTo(1))
                .body("[51].'timezones'", hasItems("UTC-05:00"))
                .body("[51].'borders'.size()", equalTo(5))
                .body("[51].'borders'", hasItems("BRA", "ECU", "PAN", "PER", "VEN"))
                .body("[51].'nativeName'", containsString("Colombia"))
                .body("[51].'numericCode'", containsString("170"))
                .body("[51].'currencies'.size()", equalTo(1))
                .body("[51].'currencies'[0].'code'", containsString("COP"))
                .body("[51].'currencies'[0].'name'", containsString("Colombian peso"))
                .body("[51].'currencies'[0].'symbol'", containsString("$"))
                .body("[51].'languages'.size()", equalTo(1))
                .body("[51].'languages'[0].'iso639_1'", containsString("es"))
                .body("[51].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[51].'languages'[0].'name'", containsString("Spanish"))
                .body("[51].'languages'[0].'nativeName'", containsString("Español"))
                .body("[51].'translations'.'de'", containsString("Kolumbien"))
                .body("[51].'translations'.'es'", containsString("Colombia"))
                .body("[51].'translations'.'fr'", containsString("Colombie"))
                .body("[51].'translations'.'ja'", containsString("コロンビア"))
                .body("[51].'translations'.'it'", containsString("Colombia"))
                .body("[51].'translations'.'br'", containsString("Colômbia"))
                .body("[51].'translations'.'pt'", containsString("Colômbia"))
                .body("[51].'translations'.'nl'", containsString("Colombia"))
                .body("[51].'translations'.'hr'", containsString("Kolumbija"))
                .body("[51].'translations'.'fa'", containsString("کلمبیا"))
                .body("[51].'flag'", containsString("https://restcountries.eu/data/col.svg"))
                .body("[51].'regionalBlocs'.size()", equalTo(2))
                .body("[51].'regionalBlocs'[0].'acronym'", containsString("PA"))
                .body("[51].'regionalBlocs'[0].'name'", containsString("Pacific Alliance"))
                .body("[51].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[51].'regionalBlocs'[0].'otherNames'.size()", equalTo(1))
                .body("[51].'regionalBlocs'[0].'otherNames'", hasItems("Alianza del Pacífico"))
                .body("[51].'regionalBlocs'[1].'acronym'", containsString("USAN"))
                .body("[51].'regionalBlocs'[1].'name'", containsString("Union of South American Nations"))
                .body("[51].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(3))
                .body("[51].'regionalBlocs'[1].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[51].'regionalBlocs'[1].'otherNames'.size()", equalTo(4))
                .body("[51].'regionalBlocs'[1].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[51].'cioc'", containsString("COL"))
                .body("[52].'name'", containsString("Comoros"))
                .body("[52].'topLevelDomain'.size()", equalTo(1))
                .body("[52].'topLevelDomain'", hasItems(".km"))
                .body("[52].'alpha2Code'", containsString("KM"))
                .body("[52].'alpha3Code'", containsString("COM"))
                .body("[52].'callingCodes'.size()", equalTo(1))
                .body("[52].'callingCodes'", hasItems("269"))
                .body("[52].'capital'", containsString("Moroni"))
                .body("[52].'altSpellings'.size()", equalTo(5))
                .body("[52].'altSpellings'", hasItems("KM", "Union of the Comoros", "Union des Comores", "Udzima wa Komori", "al-Ittiḥād al-Qumurī"))
                .body("[52].'region'", containsString("Africa"))
                .body("[52].'subregion'", containsString("Eastern Africa"))
                .body("[52].'population'", numberMatches(806153.0))
                .body("[52].'latlng'.size()", equalTo(2))
                .body("[52].'latlng'[0]", numberMatches(-12.16666666))
                .body("[52].'latlng'[1]", numberMatches(44.25))
                .body("[52].'demonym'", containsString("Comoran"))
                .body("[52].'area'", numberMatches(1862.0))
                .body("[52].'gini'", numberMatches(64.3))
                .body("[52].'timezones'.size()", equalTo(1))
                .body("[52].'timezones'", hasItems("UTC+03:00"))
                .body("[52].'borders'.size()", equalTo(0))
                .body("[52].'nativeName'", containsString("Komori"))
                .body("[52].'numericCode'", containsString("174"))
                .body("[52].'currencies'.size()", equalTo(1))
                .body("[52].'currencies'[0].'code'", containsString("KMF"))
                .body("[52].'currencies'[0].'name'", containsString("Comorian franc"))
                .body("[52].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[52].'languages'.size()", equalTo(2))
                .body("[52].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[52].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[52].'languages'[0].'name'", containsString("Arabic"))
                .body("[52].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[52].'languages'[1].'iso639_1'", containsString("fr"))
                .body("[52].'languages'[1].'iso639_2'", containsString("fra"))
                .body("[52].'languages'[1].'name'", containsString("French"))
                .body("[52].'languages'[1].'nativeName'", containsString("français"))
                .body("[52].'translations'.'de'", containsString("Union der Komoren"))
                .body("[52].'translations'.'es'", containsString("Comoras"))
                .body("[52].'translations'.'fr'", containsString("Comores"))
                .body("[52].'translations'.'ja'", containsString("コモロ"))
                .body("[52].'translations'.'it'", containsString("Comore"))
                .body("[52].'translations'.'br'", containsString("Comores"))
                .body("[52].'translations'.'pt'", containsString("Comores"))
                .body("[52].'translations'.'nl'", containsString("Comoren"))
                .body("[52].'translations'.'hr'", containsString("Komori"))
                .body("[52].'translations'.'fa'", containsString("کومور"))
                .body("[52].'flag'", containsString("https://restcountries.eu/data/com.svg"))
                .body("[52].'regionalBlocs'.size()", equalTo(2))
                .body("[52].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[52].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[52].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[52].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[52].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[52].'regionalBlocs'[1].'acronym'", containsString("AL"))
                .body("[52].'regionalBlocs'[1].'name'", containsString("Arab League"))
                .body("[52].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(0))
                .body("[52].'regionalBlocs'[1].'otherNames'.size()", equalTo(3))
                .body("[52].'regionalBlocs'[1].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[52].'cioc'", containsString("COM"))
                .body("[53].'name'", containsString("Congo"))
                .body("[53].'topLevelDomain'.size()", equalTo(1))
                .body("[53].'topLevelDomain'", hasItems(".cg"))
                .body("[53].'alpha2Code'", containsString("CG"))
                .body("[53].'alpha3Code'", containsString("COG"))
                .body("[53].'callingCodes'.size()", equalTo(1))
                .body("[53].'callingCodes'", hasItems("242"))
                .body("[53].'capital'", containsString("Brazzaville"))
                .body("[53].'altSpellings'.size()", equalTo(2))
                .body("[53].'altSpellings'", hasItems("CG", "Congo-Brazzaville"))
                .body("[53].'region'", containsString("Africa"))
                .body("[53].'subregion'", containsString("Middle Africa"))
                .body("[53].'population'", numberMatches(4741000.0))
                .body("[53].'latlng'.size()", equalTo(2))
                .body("[53].'latlng'[0]", numberMatches(-1.0))
                .body("[53].'latlng'[1]", numberMatches(15.0))
                .body("[53].'demonym'", containsString("Congolese"))
                .body("[53].'area'", numberMatches(342000.0))
                .body("[53].'gini'", numberMatches(47.3))
                .body("[53].'timezones'.size()", equalTo(1))
                .body("[53].'timezones'", hasItems("UTC+01:00"))
                .body("[53].'borders'.size()", equalTo(5))
                .body("[53].'borders'", hasItems("AGO", "CMR", "CAF", "COD", "GAB"))
                .body("[53].'nativeName'", containsString("République du Congo"))
                .body("[53].'numericCode'", containsString("178"))
                .body("[53].'currencies'.size()", equalTo(1))
                .body("[53].'currencies'[0].'code'", containsString("XAF"))
                .body("[53].'currencies'[0].'name'", containsString("Central African CFA franc"))
                .body("[53].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[53].'languages'.size()", equalTo(2))
                .body("[53].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[53].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[53].'languages'[0].'name'", containsString("French"))
                .body("[53].'languages'[0].'nativeName'", containsString("français"))
                .body("[53].'languages'[1].'iso639_1'", containsString("ln"))
                .body("[53].'languages'[1].'iso639_2'", containsString("lin"))
                .body("[53].'languages'[1].'name'", containsString("Lingala"))
                .body("[53].'languages'[1].'nativeName'", containsString("Lingála"))
                .body("[53].'translations'.'de'", containsString("Kongo"))
                .body("[53].'translations'.'es'", containsString("Congo"))
                .body("[53].'translations'.'fr'", containsString("Congo"))
                .body("[53].'translations'.'ja'", containsString("コンゴ共和国"))
                .body("[53].'translations'.'it'", containsString("Congo"))
                .body("[53].'translations'.'br'", containsString("Congo"))
                .body("[53].'translations'.'pt'", containsString("Congo"))
                .body("[53].'translations'.'nl'", containsString("Congo [Republiek]"))
                .body("[53].'translations'.'hr'", containsString("Kongo"))
                .body("[53].'translations'.'fa'", containsString("کنگو"))
                .body("[53].'flag'", containsString("https://restcountries.eu/data/cog.svg"))
                .body("[53].'regionalBlocs'.size()", equalTo(1))
                .body("[53].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[53].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[53].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[53].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[53].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[53].'cioc'", containsString("CGO"))
                .body("[54].'name'", containsString("Congo (Democratic Republic of the)"))
                .body("[54].'topLevelDomain'.size()", equalTo(1))
                .body("[54].'topLevelDomain'", hasItems(".cd"))
                .body("[54].'alpha2Code'", containsString("CD"))
                .body("[54].'alpha3Code'", containsString("COD"))
                .body("[54].'callingCodes'.size()", equalTo(1))
                .body("[54].'callingCodes'", hasItems("243"))
                .body("[54].'capital'", containsString("Kinshasa"))
                .body("[54].'altSpellings'.size()", equalTo(4))
                .body("[54].'altSpellings'", hasItems("CD", "DR Congo", "Congo-Kinshasa", "DRC"))
                .body("[54].'region'", containsString("Africa"))
                .body("[54].'subregion'", containsString("Middle Africa"))
                .body("[54].'population'", numberMatches(8.5026E7))
                .body("[54].'latlng'.size()", equalTo(2))
                .body("[54].'latlng'[0]", numberMatches(0.0))
                .body("[54].'latlng'[1]", numberMatches(25.0))
                .body("[54].'demonym'", containsString("Congolese"))
                .body("[54].'area'", numberMatches(2344858.0))
                .body("[54].'gini'", nullValue())
                .body("[54].'timezones'.size()", equalTo(2))
                .body("[54].'timezones'", hasItems("UTC+01:00", "UTC+02:00"))
                .body("[54].'borders'.size()", equalTo(9))
                .body("[54].'borders'", hasItems("AGO", "BDI", "CAF", "COG", "RWA", "SSD", "TZA", "UGA", "ZMB"))
                .body("[54].'nativeName'", containsString("République démocratique du Congo"))
                .body("[54].'numericCode'", containsString("180"))
                .body("[54].'currencies'.size()", equalTo(1))
                .body("[54].'currencies'[0].'code'", containsString("CDF"))
                .body("[54].'currencies'[0].'name'", containsString("Congolese franc"))
                .body("[54].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[54].'languages'.size()", equalTo(5))
                .body("[54].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[54].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[54].'languages'[0].'name'", containsString("French"))
                .body("[54].'languages'[0].'nativeName'", containsString("français"))
                .body("[54].'languages'[1].'iso639_1'", containsString("ln"))
                .body("[54].'languages'[1].'iso639_2'", containsString("lin"))
                .body("[54].'languages'[1].'name'", containsString("Lingala"))
                .body("[54].'languages'[1].'nativeName'", containsString("Lingála"))
                .body("[54].'languages'[2].'iso639_1'", containsString("kg"))
                .body("[54].'languages'[2].'iso639_2'", containsString("kon"))
                .body("[54].'languages'[2].'name'", containsString("Kongo"))
                .body("[54].'languages'[2].'nativeName'", containsString("Kikongo"))
                .body("[54].'languages'[3].'iso639_1'", containsString("sw"))
                .body("[54].'languages'[3].'iso639_2'", containsString("swa"))
                .body("[54].'languages'[3].'name'", containsString("Swahili"))
                .body("[54].'languages'[3].'nativeName'", containsString("Kiswahili"))
                .body("[54].'languages'[4].'iso639_1'", containsString("lu"))
                .body("[54].'languages'[4].'iso639_2'", containsString("lub"))
                .body("[54].'languages'[4].'name'", containsString("Luba-Katanga"))
                .body("[54].'languages'[4].'nativeName'", containsString("Tshiluba"))
                .body("[54].'translations'.'de'", containsString("Kongo (Dem. Rep.)"))
                .body("[54].'translations'.'es'", containsString("Congo (Rep. Dem.)"))
                .body("[54].'translations'.'fr'", containsString("Congo (Rép. dém.)"))
                .body("[54].'translations'.'ja'", containsString("コンゴ民主共和国"))
                .body("[54].'translations'.'it'", containsString("Congo (Rep. Dem.)"))
                .body("[54].'translations'.'br'", containsString("RD Congo"))
                .body("[54].'translations'.'pt'", containsString("RD Congo"))
                .body("[54].'translations'.'nl'", containsString("Congo [DRC]"))
                .body("[54].'translations'.'hr'", containsString("Kongo, Demokratska Republika"))
                .body("[54].'translations'.'fa'", containsString("جمهوری کنگو"))
                .body("[54].'flag'", containsString("https://restcountries.eu/data/cod.svg"))
                .body("[54].'regionalBlocs'.size()", equalTo(1))
                .body("[54].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[54].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[54].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[54].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[54].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[54].'cioc'", containsString("COD"))
                .body("[55].'name'", containsString("Cook Islands"))
                .body("[55].'topLevelDomain'.size()", equalTo(1))
                .body("[55].'topLevelDomain'", hasItems(".ck"))
                .body("[55].'alpha2Code'", containsString("CK"))
                .body("[55].'alpha3Code'", containsString("COK"))
                .body("[55].'callingCodes'.size()", equalTo(1))
                .body("[55].'callingCodes'", hasItems("682"))
                .body("[55].'capital'", containsString("Avarua"))
                .body("[55].'altSpellings'.size()", equalTo(2))
                .body("[55].'altSpellings'", hasItems("CK", "Kūki 'Āirani"))
                .body("[55].'region'", containsString("Oceania"))
                .body("[55].'subregion'", containsString("Polynesia"))
                .body("[55].'population'", numberMatches(18100.0))
                .body("[55].'latlng'.size()", equalTo(2))
                .body("[55].'latlng'[0]", numberMatches(-21.23333333))
                .body("[55].'latlng'[1]", numberMatches(-159.76666666))
                .body("[55].'demonym'", containsString("Cook Islander"))
                .body("[55].'area'", numberMatches(236.0))
                .body("[55].'gini'", nullValue())
                .body("[55].'timezones'.size()", equalTo(1))
                .body("[55].'timezones'", hasItems("UTC-10:00"))
                .body("[55].'borders'.size()", equalTo(0))
                .body("[55].'nativeName'", containsString("Cook Islands"))
                .body("[55].'numericCode'", containsString("184"))
                .body("[55].'currencies'.size()", equalTo(2))
                .body("[55].'currencies'[0].'code'", containsString("NZD"))
                .body("[55].'currencies'[0].'name'", containsString("New Zealand dollar"))
                .body("[55].'currencies'[0].'symbol'", containsString("$"))
                .body("[55].'currencies'[1].'code'", containsString("CKD"))
                .body("[55].'currencies'[1].'name'", containsString("Cook Islands dollar"))
                .body("[55].'currencies'[1].'symbol'", containsString("$"))
                .body("[55].'languages'.size()", equalTo(1))
                .body("[55].'languages'[0].'iso639_1'", containsString("en"))
                .body("[55].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[55].'languages'[0].'name'", containsString("English"))
                .body("[55].'languages'[0].'nativeName'", containsString("English"))
                .body("[55].'translations'.'de'", containsString("Cookinseln"))
                .body("[55].'translations'.'es'", containsString("Islas Cook"))
                .body("[55].'translations'.'fr'", containsString("Îles Cook"))
                .body("[55].'translations'.'ja'", containsString("クック諸島"))
                .body("[55].'translations'.'it'", containsString("Isole Cook"))
                .body("[55].'translations'.'br'", containsString("Ilhas Cook"))
                .body("[55].'translations'.'pt'", containsString("Ilhas Cook"))
                .body("[55].'translations'.'nl'", containsString("Cookeilanden"))
                .body("[55].'translations'.'hr'", containsString("Cookovo Otočje"))
                .body("[55].'translations'.'fa'", containsString("جزایر کوک"))
                .body("[55].'flag'", containsString("https://restcountries.eu/data/cok.svg"))
                .body("[55].'regionalBlocs'.size()", equalTo(0))
                .body("[55].'cioc'", containsString("COK"))
                .body("[56].'name'", containsString("Costa Rica"))
                .body("[56].'topLevelDomain'.size()", equalTo(1))
                .body("[56].'topLevelDomain'", hasItems(".cr"))
                .body("[56].'alpha2Code'", containsString("CR"))
                .body("[56].'alpha3Code'", containsString("CRI"))
                .body("[56].'callingCodes'.size()", equalTo(1))
                .body("[56].'callingCodes'", hasItems("506"))
                .body("[56].'capital'", containsString("San José"))
                .body("[56].'altSpellings'.size()", equalTo(3))
                .body("[56].'altSpellings'", hasItems("CR", "Republic of Costa Rica", "República de Costa Rica"))
                .body("[56].'region'", containsString("Americas"))
                .body("[56].'subregion'", containsString("Central America"))
                .body("[56].'population'", numberMatches(4890379.0))
                .body("[56].'latlng'.size()", equalTo(2))
                .body("[56].'latlng'[0]", numberMatches(10.0))
                .body("[56].'latlng'[1]", numberMatches(-84.0))
                .body("[56].'demonym'", containsString("Costa Rican"))
                .body("[56].'area'", numberMatches(51100.0))
                .body("[56].'gini'", numberMatches(50.7))
                .body("[56].'timezones'.size()", equalTo(1))
                .body("[56].'timezones'", hasItems("UTC-06:00"))
                .body("[56].'borders'.size()", equalTo(2))
                .body("[56].'borders'", hasItems("NIC", "PAN"))
                .body("[56].'nativeName'", containsString("Costa Rica"))
                .body("[56].'numericCode'", containsString("188"))
                .body("[56].'currencies'.size()", equalTo(1))
                .body("[56].'currencies'[0].'code'", containsString("CRC"))
                .body("[56].'currencies'[0].'name'", containsString("Costa Rican colón"))
                .body("[56].'currencies'[0].'symbol'", containsString("₡"))
                .body("[56].'languages'.size()", equalTo(1))
                .body("[56].'languages'[0].'iso639_1'", containsString("es"))
                .body("[56].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[56].'languages'[0].'name'", containsString("Spanish"))
                .body("[56].'languages'[0].'nativeName'", containsString("Español"))
                .body("[56].'translations'.'de'", containsString("Costa Rica"))
                .body("[56].'translations'.'es'", containsString("Costa Rica"))
                .body("[56].'translations'.'fr'", containsString("Costa Rica"))
                .body("[56].'translations'.'ja'", containsString("コスタリカ"))
                .body("[56].'translations'.'it'", containsString("Costa Rica"))
                .body("[56].'translations'.'br'", containsString("Costa Rica"))
                .body("[56].'translations'.'pt'", containsString("Costa Rica"))
                .body("[56].'translations'.'nl'", containsString("Costa Rica"))
                .body("[56].'translations'.'hr'", containsString("Kostarika"))
                .body("[56].'translations'.'fa'", containsString("کاستاریکا"))
                .body("[56].'flag'", containsString("https://restcountries.eu/data/cri.svg"))
                .body("[56].'regionalBlocs'.size()", equalTo(1))
                .body("[56].'regionalBlocs'[0].'acronym'", containsString("CAIS"))
                .body("[56].'regionalBlocs'[0].'name'", containsString("Central American Integration System"))
                .body("[56].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(1))
                .body("[56].'regionalBlocs'[0].'otherAcronyms'", hasItems("SICA"))
                .body("[56].'regionalBlocs'[0].'otherNames'.size()", equalTo(1))
                .body("[56].'regionalBlocs'[0].'otherNames'", hasItems("Sistema de la Integración Centroamericana,"))
                .body("[56].'cioc'", containsString("CRC"))
                .body("[57].'name'", containsString("Croatia"))
                .body("[57].'topLevelDomain'.size()", equalTo(1))
                .body("[57].'topLevelDomain'", hasItems(".hr"))
                .body("[57].'alpha2Code'", containsString("HR"))
                .body("[57].'alpha3Code'", containsString("HRV"))
                .body("[57].'callingCodes'.size()", equalTo(1))
                .body("[57].'callingCodes'", hasItems("385"))
                .body("[57].'capital'", containsString("Zagreb"))
                .body("[57].'altSpellings'.size()", equalTo(4))
                .body("[57].'altSpellings'", hasItems("HR", "Hrvatska", "Republic of Croatia", "Republika Hrvatska"))
                .body("[57].'region'", containsString("Europe"))
                .body("[57].'subregion'", containsString("Southern Europe"))
                .body("[57].'population'", numberMatches(4190669.0))
                .body("[57].'latlng'.size()", equalTo(2))
                .body("[57].'latlng'[0]", numberMatches(45.16666666))
                .body("[57].'latlng'[1]", numberMatches(15.5))
                .body("[57].'demonym'", containsString("Croatian"))
                .body("[57].'area'", numberMatches(56594.0))
                .body("[57].'gini'", numberMatches(33.7))
                .body("[57].'timezones'.size()", equalTo(1))
                .body("[57].'timezones'", hasItems("UTC+01:00"))
                .body("[57].'borders'.size()", equalTo(5))
                .body("[57].'borders'", hasItems("BIH", "HUN", "MNE", "SRB", "SVN"))
                .body("[57].'nativeName'", containsString("Hrvatska"))
                .body("[57].'numericCode'", containsString("191"))
                .body("[57].'currencies'.size()", equalTo(1))
                .body("[57].'currencies'[0].'code'", containsString("HRK"))
                .body("[57].'currencies'[0].'name'", containsString("Croatian kuna"))
                .body("[57].'currencies'[0].'symbol'", containsString("kn"))
                .body("[57].'languages'.size()", equalTo(1))
                .body("[57].'languages'[0].'iso639_1'", containsString("hr"))
                .body("[57].'languages'[0].'iso639_2'", containsString("hrv"))
                .body("[57].'languages'[0].'name'", containsString("Croatian"))
                .body("[57].'languages'[0].'nativeName'", containsString("hrvatski jezik"))
                .body("[57].'translations'.'de'", containsString("Kroatien"))
                .body("[57].'translations'.'es'", containsString("Croacia"))
                .body("[57].'translations'.'fr'", containsString("Croatie"))
                .body("[57].'translations'.'ja'", containsString("クロアチア"))
                .body("[57].'translations'.'it'", containsString("Croazia"))
                .body("[57].'translations'.'br'", containsString("Croácia"))
                .body("[57].'translations'.'pt'", containsString("Croácia"))
                .body("[57].'translations'.'nl'", containsString("Kroatië"))
                .body("[57].'translations'.'hr'", containsString("Hrvatska"))
                .body("[57].'translations'.'fa'", containsString("کرواسی"))
                .body("[57].'flag'", containsString("https://restcountries.eu/data/hrv.svg"))
                .body("[57].'regionalBlocs'.size()", equalTo(1))
                .body("[57].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[57].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[57].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[57].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[57].'cioc'", containsString("CRO"))
                .body("[58].'name'", containsString("Cuba"))
                .body("[58].'topLevelDomain'.size()", equalTo(1))
                .body("[58].'topLevelDomain'", hasItems(".cu"))
                .body("[58].'alpha2Code'", containsString("CU"))
                .body("[58].'alpha3Code'", containsString("CUB"))
                .body("[58].'callingCodes'.size()", equalTo(1))
                .body("[58].'callingCodes'", hasItems("53"))
                .body("[58].'capital'", containsString("Havana"))
                .body("[58].'altSpellings'.size()", equalTo(3))
                .body("[58].'altSpellings'", hasItems("CU", "Republic of Cuba", "República de Cuba"))
                .body("[58].'region'", containsString("Americas"))
                .body("[58].'subregion'", containsString("Caribbean"))
                .body("[58].'population'", numberMatches(1.1239004E7))
                .body("[58].'latlng'.size()", equalTo(2))
                .body("[58].'latlng'[0]", numberMatches(21.5))
                .body("[58].'latlng'[1]", numberMatches(-80.0))
                .body("[58].'demonym'", containsString("Cuban"))
                .body("[58].'area'", numberMatches(109884.0))
                .body("[58].'gini'", nullValue())
                .body("[58].'timezones'.size()", equalTo(1))
                .body("[58].'timezones'", hasItems("UTC-05:00"))
                .body("[58].'borders'.size()", equalTo(0))
                .body("[58].'nativeName'", containsString("Cuba"))
                .body("[58].'numericCode'", containsString("192"))
                .body("[58].'currencies'.size()", equalTo(2))
                .body("[58].'currencies'[0].'code'", containsString("CUC"))
                .body("[58].'currencies'[0].'name'", containsString("Cuban convertible peso"))
                .body("[58].'currencies'[0].'symbol'", containsString("$"))
                .body("[58].'currencies'[1].'code'", containsString("CUP"))
                .body("[58].'currencies'[1].'name'", containsString("Cuban peso"))
                .body("[58].'currencies'[1].'symbol'", containsString("$"))
                .body("[58].'languages'.size()", equalTo(1))
                .body("[58].'languages'[0].'iso639_1'", containsString("es"))
                .body("[58].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[58].'languages'[0].'name'", containsString("Spanish"))
                .body("[58].'languages'[0].'nativeName'", containsString("Español"))
                .body("[58].'translations'.'de'", containsString("Kuba"))
                .body("[58].'translations'.'es'", containsString("Cuba"))
                .body("[58].'translations'.'fr'", containsString("Cuba"))
                .body("[58].'translations'.'ja'", containsString("キューバ"))
                .body("[58].'translations'.'it'", containsString("Cuba"))
                .body("[58].'translations'.'br'", containsString("Cuba"))
                .body("[58].'translations'.'pt'", containsString("Cuba"))
                .body("[58].'translations'.'nl'", containsString("Cuba"))
                .body("[58].'translations'.'hr'", containsString("Kuba"))
                .body("[58].'translations'.'fa'", containsString("کوبا"))
                .body("[58].'flag'", containsString("https://restcountries.eu/data/cub.svg"))
                .body("[58].'regionalBlocs'.size()", equalTo(0))
                .body("[58].'cioc'", containsString("CUB"))
                .body("[59].'name'", containsString("Curaçao"))
                .body("[59].'topLevelDomain'.size()", equalTo(1))
                .body("[59].'topLevelDomain'", hasItems(".cw"))
                .body("[59].'alpha2Code'", containsString("CW"))
                .body("[59].'alpha3Code'", containsString("CUW"))
                .body("[59].'callingCodes'.size()", equalTo(1))
                .body("[59].'callingCodes'", hasItems("599"))
                .body("[59].'capital'", containsString("Willemstad"))
                .body("[59].'altSpellings'.size()", equalTo(6))
                .body("[59].'altSpellings'", hasItems("CW", "Curacao", "Kòrsou", "Country of Curaçao", "Land Curaçao", "Pais Kòrsou"))
                .body("[59].'region'", containsString("Americas"))
                .body("[59].'subregion'", containsString("Caribbean"))
                .body("[59].'population'", numberMatches(154843.0))
                .body("[59].'latlng'.size()", equalTo(2))
                .body("[59].'latlng'[0]", numberMatches(12.116667))
                .body("[59].'latlng'[1]", numberMatches(-68.933333))
                .body("[59].'demonym'", containsString("Dutch"))
                .body("[59].'area'", numberMatches(444.0))
                .body("[59].'gini'", nullValue())
                .body("[59].'timezones'.size()", equalTo(1))
                .body("[59].'timezones'", hasItems("UTC-04:00"))
                .body("[59].'borders'.size()", equalTo(0))
                .body("[59].'nativeName'", containsString("Curaçao"))
                .body("[59].'numericCode'", containsString("531"))
                .body("[59].'currencies'.size()", equalTo(1))
                .body("[59].'currencies'[0].'code'", containsString("ANG"))
                .body("[59].'currencies'[0].'name'", containsString("Netherlands Antillean guilder"))
                .body("[59].'currencies'[0].'symbol'", containsString("ƒ"))
                .body("[59].'languages'.size()", equalTo(3))
                .body("[59].'languages'[0].'iso639_1'", containsString("nl"))
                .body("[59].'languages'[0].'iso639_2'", containsString("nld"))
                .body("[59].'languages'[0].'name'", containsString("Dutch"))
                .body("[59].'languages'[0].'nativeName'", containsString("Nederlands"))
                .body("[59].'languages'[1].'iso639_1'", containsString("pa"))
                .body("[59].'languages'[1].'iso639_2'", containsString("pan"))
                .body("[59].'languages'[1].'name'", containsString("(Eastern) Punjabi"))
                .body("[59].'languages'[1].'nativeName'", containsString("ਪੰਜਾਬੀ"))
                .body("[59].'languages'[2].'iso639_1'", containsString("en"))
                .body("[59].'languages'[2].'iso639_2'", containsString("eng"))
                .body("[59].'languages'[2].'name'", containsString("English"))
                .body("[59].'languages'[2].'nativeName'", containsString("English"))
                .body("[59].'translations'.'de'", containsString("Curaçao"))
                .body("[59].'translations'.'es'", nullValue())
                .body("[59].'translations'.'fr'", containsString("Curaçao"))
                .body("[59].'translations'.'ja'", nullValue())
                .body("[59].'translations'.'it'", containsString("Curaçao"))
                .body("[59].'translations'.'br'", containsString("Curaçao"))
                .body("[59].'translations'.'pt'", containsString("Curaçao"))
                .body("[59].'translations'.'nl'", containsString("Curaçao"))
                .body("[59].'translations'.'hr'", nullValue())
                .body("[59].'translations'.'fa'", containsString("کوراسائو"))
                .body("[59].'flag'", containsString("https://restcountries.eu/data/cuw.svg"))
                .body("[59].'regionalBlocs'.size()", equalTo(0))
                .body("[59].'cioc'", containsString(""))
                .body("[60].'name'", containsString("Cyprus"))
                .body("[60].'topLevelDomain'.size()", equalTo(1))
                .body("[60].'topLevelDomain'", hasItems(".cy"))
                .body("[60].'alpha2Code'", containsString("CY"))
                .body("[60].'alpha3Code'", containsString("CYP"))
                .body("[60].'callingCodes'.size()", equalTo(1))
                .body("[60].'callingCodes'", hasItems("357"))
                .body("[60].'capital'", containsString("Nicosia"))
                .body("[60].'altSpellings'.size()", equalTo(6))
                .body("[60].'altSpellings'", hasItems("CY", "Kýpros", "Kıbrıs", "Republic of Cyprus", "Κυπριακή Δημοκρατία", "Kıbrıs Cumhuriyeti"))
                .body("[60].'region'", containsString("Europe"))
                .body("[60].'subregion'", containsString("Southern Europe"))
                .body("[60].'population'", numberMatches(847000.0))
                .body("[60].'latlng'.size()", equalTo(2))
                .body("[60].'latlng'[0]", numberMatches(35.0))
                .body("[60].'latlng'[1]", numberMatches(33.0))
                .body("[60].'demonym'", containsString("Cypriot"))
                .body("[60].'area'", numberMatches(9251.0))
                .body("[60].'gini'", nullValue())
                .body("[60].'timezones'.size()", equalTo(1))
                .body("[60].'timezones'", hasItems("UTC+02:00"))
                .body("[60].'borders'.size()", equalTo(1))
                .body("[60].'borders'", hasItems("GBR"))
                .body("[60].'nativeName'", containsString("Κύπρος"))
                .body("[60].'numericCode'", containsString("196"))
                .body("[60].'currencies'.size()", equalTo(1))
                .body("[60].'currencies'[0].'code'", containsString("EUR"))
                .body("[60].'currencies'[0].'name'", containsString("Euro"))
                .body("[60].'currencies'[0].'symbol'", containsString("€"))
                .body("[60].'languages'.size()", equalTo(3))
                .body("[60].'languages'[0].'iso639_1'", containsString("el"))
                .body("[60].'languages'[0].'iso639_2'", containsString("ell"))
                .body("[60].'languages'[0].'name'", containsString("Greek (modern)"))
                .body("[60].'languages'[0].'nativeName'", containsString("ελληνικά"))
                .body("[60].'languages'[1].'iso639_1'", containsString("tr"))
                .body("[60].'languages'[1].'iso639_2'", containsString("tur"))
                .body("[60].'languages'[1].'name'", containsString("Turkish"))
                .body("[60].'languages'[1].'nativeName'", containsString("Türkçe"))
                .body("[60].'languages'[2].'iso639_1'", containsString("hy"))
                .body("[60].'languages'[2].'iso639_2'", containsString("hye"))
                .body("[60].'languages'[2].'name'", containsString("Armenian"))
                .body("[60].'languages'[2].'nativeName'", containsString("Հայերեն"))
                .body("[60].'translations'.'de'", containsString("Zypern"))
                .body("[60].'translations'.'es'", containsString("Chipre"))
                .body("[60].'translations'.'fr'", containsString("Chypre"))
                .body("[60].'translations'.'ja'", containsString("キプロス"))
                .body("[60].'translations'.'it'", containsString("Cipro"))
                .body("[60].'translations'.'br'", containsString("Chipre"))
                .body("[60].'translations'.'pt'", containsString("Chipre"))
                .body("[60].'translations'.'nl'", containsString("Cyprus"))
                .body("[60].'translations'.'hr'", containsString("Cipar"))
                .body("[60].'translations'.'fa'", containsString("قبرس"))
                .body("[60].'flag'", containsString("https://restcountries.eu/data/cyp.svg"))
                .body("[60].'regionalBlocs'.size()", equalTo(1))
                .body("[60].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[60].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[60].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[60].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[60].'cioc'", containsString("CYP"))
                .body("[61].'name'", containsString("Czech Republic"))
                .body("[61].'topLevelDomain'.size()", equalTo(1))
                .body("[61].'topLevelDomain'", hasItems(".cz"))
                .body("[61].'alpha2Code'", containsString("CZ"))
                .body("[61].'alpha3Code'", containsString("CZE"))
                .body("[61].'callingCodes'.size()", equalTo(1))
                .body("[61].'callingCodes'", hasItems("420"))
                .body("[61].'capital'", containsString("Prague"))
                .body("[61].'altSpellings'.size()", equalTo(3))
                .body("[61].'altSpellings'", hasItems("CZ", "Česká republika", "Česko"))
                .body("[61].'region'", containsString("Europe"))
                .body("[61].'subregion'", containsString("Eastern Europe"))
                .body("[61].'population'", numberMatches(1.0558524E7))
                .body("[61].'latlng'.size()", equalTo(2))
                .body("[61].'latlng'[0]", numberMatches(49.75))
                .body("[61].'latlng'[1]", numberMatches(15.5))
                .body("[61].'demonym'", containsString("Czech"))
                .body("[61].'area'", numberMatches(78865.0))
                .body("[61].'gini'", numberMatches(26.0))
                .body("[61].'timezones'.size()", equalTo(1))
                .body("[61].'timezones'", hasItems("UTC+01:00"))
                .body("[61].'borders'.size()", equalTo(4))
                .body("[61].'borders'", hasItems("AUT", "DEU", "POL", "SVK"))
                .body("[61].'nativeName'", containsString("Česká republika"))
                .body("[61].'numericCode'", containsString("203"))
                .body("[61].'currencies'.size()", equalTo(1))
                .body("[61].'currencies'[0].'code'", containsString("CZK"))
                .body("[61].'currencies'[0].'name'", containsString("Czech koruna"))
                .body("[61].'currencies'[0].'symbol'", containsString("Kč"))
                .body("[61].'languages'.size()", equalTo(2))
                .body("[61].'languages'[0].'iso639_1'", containsString("cs"))
                .body("[61].'languages'[0].'iso639_2'", containsString("ces"))
                .body("[61].'languages'[0].'name'", containsString("Czech"))
                .body("[61].'languages'[0].'nativeName'", containsString("čeština"))
                .body("[61].'languages'[1].'iso639_1'", containsString("sk"))
                .body("[61].'languages'[1].'iso639_2'", containsString("slk"))
                .body("[61].'languages'[1].'name'", containsString("Slovak"))
                .body("[61].'languages'[1].'nativeName'", containsString("slovenčina"))
                .body("[61].'translations'.'de'", containsString("Tschechische Republik"))
                .body("[61].'translations'.'es'", containsString("República Checa"))
                .body("[61].'translations'.'fr'", containsString("République tchèque"))
                .body("[61].'translations'.'ja'", containsString("チェコ"))
                .body("[61].'translations'.'it'", containsString("Repubblica Ceca"))
                .body("[61].'translations'.'br'", containsString("República Tcheca"))
                .body("[61].'translations'.'pt'", containsString("República Checa"))
                .body("[61].'translations'.'nl'", containsString("Tsjechië"))
                .body("[61].'translations'.'hr'", containsString("Češka"))
                .body("[61].'translations'.'fa'", containsString("جمهوری چک"))
                .body("[61].'flag'", containsString("https://restcountries.eu/data/cze.svg"))
                .body("[61].'regionalBlocs'.size()", equalTo(1))
                .body("[61].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[61].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[61].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[61].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[61].'cioc'", containsString("CZE"))
                .body("[62].'name'", containsString("Denmark"))
                .body("[62].'topLevelDomain'.size()", equalTo(1))
                .body("[62].'topLevelDomain'", hasItems(".dk"))
                .body("[62].'alpha2Code'", containsString("DK"))
                .body("[62].'alpha3Code'", containsString("DNK"))
                .body("[62].'callingCodes'.size()", equalTo(1))
                .body("[62].'callingCodes'", hasItems("45"))
                .body("[62].'capital'", containsString("Copenhagen"))
                .body("[62].'altSpellings'.size()", equalTo(4))
                .body("[62].'altSpellings'", hasItems("DK", "Danmark", "Kingdom of Denmark", "Kongeriget Danmark"))
                .body("[62].'region'", containsString("Europe"))
                .body("[62].'subregion'", containsString("Northern Europe"))
                .body("[62].'population'", numberMatches(5717014.0))
                .body("[62].'latlng'.size()", equalTo(2))
                .body("[62].'latlng'[0]", numberMatches(56.0))
                .body("[62].'latlng'[1]", numberMatches(10.0))
                .body("[62].'demonym'", containsString("Danish"))
                .body("[62].'area'", numberMatches(43094.0))
                .body("[62].'gini'", numberMatches(24.0))
                .body("[62].'timezones'.size()", equalTo(5))
                .body("[62].'timezones'", hasItems("UTC-04:00", "UTC-03:00", "UTC-01:00", "UTC", "UTC+01:00"))
                .body("[62].'borders'.size()", equalTo(1))
                .body("[62].'borders'", hasItems("DEU"))
                .body("[62].'nativeName'", containsString("Danmark"))
                .body("[62].'numericCode'", containsString("208"))
                .body("[62].'currencies'.size()", equalTo(1))
                .body("[62].'currencies'[0].'code'", containsString("DKK"))
                .body("[62].'currencies'[0].'name'", containsString("Danish krone"))
                .body("[62].'currencies'[0].'symbol'", containsString("kr"))
                .body("[62].'languages'.size()", equalTo(1))
                .body("[62].'languages'[0].'iso639_1'", containsString("da"))
                .body("[62].'languages'[0].'iso639_2'", containsString("dan"))
                .body("[62].'languages'[0].'name'", containsString("Danish"))
                .body("[62].'languages'[0].'nativeName'", containsString("dansk"))
                .body("[62].'translations'.'de'", containsString("Dänemark"))
                .body("[62].'translations'.'es'", containsString("Dinamarca"))
                .body("[62].'translations'.'fr'", containsString("Danemark"))
                .body("[62].'translations'.'ja'", containsString("デンマーク"))
                .body("[62].'translations'.'it'", containsString("Danimarca"))
                .body("[62].'translations'.'br'", containsString("Dinamarca"))
                .body("[62].'translations'.'pt'", containsString("Dinamarca"))
                .body("[62].'translations'.'nl'", containsString("Denemarken"))
                .body("[62].'translations'.'hr'", containsString("Danska"))
                .body("[62].'translations'.'fa'", containsString("دانمارک"))
                .body("[62].'flag'", containsString("https://restcountries.eu/data/dnk.svg"))
                .body("[62].'regionalBlocs'.size()", equalTo(1))
                .body("[62].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[62].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[62].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[62].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[62].'cioc'", containsString("DEN"))
                .body("[63].'name'", containsString("Djibouti"))
                .body("[63].'topLevelDomain'.size()", equalTo(1))
                .body("[63].'topLevelDomain'", hasItems(".dj"))
                .body("[63].'alpha2Code'", containsString("DJ"))
                .body("[63].'alpha3Code'", containsString("DJI"))
                .body("[63].'callingCodes'.size()", equalTo(1))
                .body("[63].'callingCodes'", hasItems("253"))
                .body("[63].'capital'", containsString("Djibouti"))
                .body("[63].'altSpellings'.size()", equalTo(7))
                .body("[63].'altSpellings'", hasItems("DJ", "Jabuuti", "Gabuuti", "Republic of Djibouti", "République de Djibouti", "Gabuutih Ummuuno", "Jamhuuriyadda Jabuuti"))
                .body("[63].'region'", containsString("Africa"))
                .body("[63].'subregion'", containsString("Eastern Africa"))
                .body("[63].'population'", numberMatches(900000.0))
                .body("[63].'latlng'.size()", equalTo(2))
                .body("[63].'latlng'[0]", numberMatches(11.5))
                .body("[63].'latlng'[1]", numberMatches(43.0))
                .body("[63].'demonym'", containsString("Djibouti"))
                .body("[63].'area'", numberMatches(23200.0))
                .body("[63].'gini'", numberMatches(40.0))
                .body("[63].'timezones'.size()", equalTo(1))
                .body("[63].'timezones'", hasItems("UTC+03:00"))
                .body("[63].'borders'.size()", equalTo(3))
                .body("[63].'borders'", hasItems("ERI", "ETH", "SOM"))
                .body("[63].'nativeName'", containsString("Djibouti"))
                .body("[63].'numericCode'", containsString("262"))
                .body("[63].'currencies'.size()", equalTo(1))
                .body("[63].'currencies'[0].'code'", containsString("DJF"))
                .body("[63].'currencies'[0].'name'", containsString("Djiboutian franc"))
                .body("[63].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[63].'languages'.size()", equalTo(2))
                .body("[63].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[63].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[63].'languages'[0].'name'", containsString("French"))
                .body("[63].'languages'[0].'nativeName'", containsString("français"))
                .body("[63].'languages'[1].'iso639_1'", containsString("ar"))
                .body("[63].'languages'[1].'iso639_2'", containsString("ara"))
                .body("[63].'languages'[1].'name'", containsString("Arabic"))
                .body("[63].'languages'[1].'nativeName'", containsString("العربية"))
                .body("[63].'translations'.'de'", containsString("Dschibuti"))
                .body("[63].'translations'.'es'", containsString("Yibuti"))
                .body("[63].'translations'.'fr'", containsString("Djibouti"))
                .body("[63].'translations'.'ja'", containsString("ジブチ"))
                .body("[63].'translations'.'it'", containsString("Gibuti"))
                .body("[63].'translations'.'br'", containsString("Djibuti"))
                .body("[63].'translations'.'pt'", containsString("Djibuti"))
                .body("[63].'translations'.'nl'", containsString("Djibouti"))
                .body("[63].'translations'.'hr'", containsString("Džibuti"))
                .body("[63].'translations'.'fa'", containsString("جیبوتی"))
                .body("[63].'flag'", containsString("https://restcountries.eu/data/dji.svg"))
                .body("[63].'regionalBlocs'.size()", equalTo(2))
                .body("[63].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[63].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[63].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[63].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[63].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[63].'regionalBlocs'[1].'acronym'", containsString("AL"))
                .body("[63].'regionalBlocs'[1].'name'", containsString("Arab League"))
                .body("[63].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(0))
                .body("[63].'regionalBlocs'[1].'otherNames'.size()", equalTo(3))
                .body("[63].'regionalBlocs'[1].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[63].'cioc'", containsString("DJI"))
                .body("[64].'name'", containsString("Dominica"))
                .body("[64].'topLevelDomain'.size()", equalTo(1))
                .body("[64].'topLevelDomain'", hasItems(".dm"))
                .body("[64].'alpha2Code'", containsString("DM"))
                .body("[64].'alpha3Code'", containsString("DMA"))
                .body("[64].'callingCodes'.size()", equalTo(1))
                .body("[64].'callingCodes'", hasItems("1"))
                .body("[64].'capital'", containsString("Roseau"))
                .body("[64].'altSpellings'.size()", equalTo(4))
                .body("[64].'altSpellings'", hasItems("DM", "Dominique", "Wai‘tu kubuli", "Commonwealth of Dominica"))
                .body("[64].'region'", containsString("Americas"))
                .body("[64].'subregion'", containsString("Caribbean"))
                .body("[64].'population'", numberMatches(71293.0))
                .body("[64].'latlng'.size()", equalTo(2))
                .body("[64].'latlng'[0]", numberMatches(15.41666666))
                .body("[64].'latlng'[1]", numberMatches(-61.33333333))
                .body("[64].'demonym'", containsString("Dominican"))
                .body("[64].'area'", numberMatches(751.0))
                .body("[64].'gini'", nullValue())
                .body("[64].'timezones'.size()", equalTo(1))
                .body("[64].'timezones'", hasItems("UTC-04:00"))
                .body("[64].'borders'.size()", equalTo(0))
                .body("[64].'nativeName'", containsString("Dominica"))
                .body("[64].'numericCode'", containsString("212"))
                .body("[64].'currencies'.size()", equalTo(1))
                .body("[64].'currencies'[0].'code'", containsString("XCD"))
                .body("[64].'currencies'[0].'name'", containsString("East Caribbean dollar"))
                .body("[64].'currencies'[0].'symbol'", containsString("$"))
                .body("[64].'languages'.size()", equalTo(1))
                .body("[64].'languages'[0].'iso639_1'", containsString("en"))
                .body("[64].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[64].'languages'[0].'name'", containsString("English"))
                .body("[64].'languages'[0].'nativeName'", containsString("English"))
                .body("[64].'translations'.'de'", containsString("Dominica"))
                .body("[64].'translations'.'es'", containsString("Dominica"))
                .body("[64].'translations'.'fr'", containsString("Dominique"))
                .body("[64].'translations'.'ja'", containsString("ドミニカ国"))
                .body("[64].'translations'.'it'", containsString("Dominica"))
                .body("[64].'translations'.'br'", containsString("Dominica"))
                .body("[64].'translations'.'pt'", containsString("Dominica"))
                .body("[64].'translations'.'nl'", containsString("Dominica"))
                .body("[64].'translations'.'hr'", containsString("Dominika"))
                .body("[64].'translations'.'fa'", containsString("دومینیکا"))
                .body("[64].'flag'", containsString("https://restcountries.eu/data/dma.svg"))
                .body("[64].'regionalBlocs'.size()", equalTo(0))
                .body("[64].'cioc'", containsString("DMA"))
                .body("[65].'name'", containsString("Dominican Republic"))
                .body("[65].'topLevelDomain'.size()", equalTo(1))
                .body("[65].'topLevelDomain'", hasItems(".do"))
                .body("[65].'alpha2Code'", containsString("DO"))
                .body("[65].'alpha3Code'", containsString("DOM"))
                .body("[65].'callingCodes'.size()", equalTo(1))
                .body("[65].'callingCodes'", hasItems("1"))
                .body("[65].'capital'", containsString("Santo Domingo"))
                .body("[65].'altSpellings'.size()", equalTo(1))
                .body("[65].'altSpellings'", hasItems("DO"))
                .body("[65].'region'", containsString("Americas"))
                .body("[65].'subregion'", containsString("Caribbean"))
                .body("[65].'population'", numberMatches(1.0075045E7))
                .body("[65].'latlng'.size()", equalTo(2))
                .body("[65].'latlng'[0]", numberMatches(19.0))
                .body("[65].'latlng'[1]", numberMatches(-70.66666666))
                .body("[65].'demonym'", containsString("Dominican"))
                .body("[65].'area'", numberMatches(48671.0))
                .body("[65].'gini'", numberMatches(47.2))
                .body("[65].'timezones'.size()", equalTo(1))
                .body("[65].'timezones'", hasItems("UTC-04:00"))
                .body("[65].'borders'.size()", equalTo(1))
                .body("[65].'borders'", hasItems("HTI"))
                .body("[65].'nativeName'", containsString("República Dominicana"))
                .body("[65].'numericCode'", containsString("214"))
                .body("[65].'currencies'.size()", equalTo(1))
                .body("[65].'currencies'[0].'code'", containsString("DOP"))
                .body("[65].'currencies'[0].'name'", containsString("Dominican peso"))
                .body("[65].'currencies'[0].'symbol'", containsString("$"))
                .body("[65].'languages'.size()", equalTo(1))
                .body("[65].'languages'[0].'iso639_1'", containsString("es"))
                .body("[65].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[65].'languages'[0].'name'", containsString("Spanish"))
                .body("[65].'languages'[0].'nativeName'", containsString("Español"))
                .body("[65].'translations'.'de'", containsString("Dominikanische Republik"))
                .body("[65].'translations'.'es'", containsString("República Dominicana"))
                .body("[65].'translations'.'fr'", containsString("République dominicaine"))
                .body("[65].'translations'.'ja'", containsString("ドミニカ共和国"))
                .body("[65].'translations'.'it'", containsString("Repubblica Dominicana"))
                .body("[65].'translations'.'br'", containsString("República Dominicana"))
                .body("[65].'translations'.'pt'", containsString("República Dominicana"))
                .body("[65].'translations'.'nl'", containsString("Dominicaanse Republiek"))
                .body("[65].'translations'.'hr'", containsString("Dominikanska Republika"))
                .body("[65].'translations'.'fa'", containsString("جمهوری دومینیکن"))
                .body("[65].'flag'", containsString("https://restcountries.eu/data/dom.svg"))
                .body("[65].'regionalBlocs'.size()", equalTo(2))
                .body("[65].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[65].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[65].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[65].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[65].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[65].'regionalBlocs'[1].'acronym'", containsString("CAIS"))
                .body("[65].'regionalBlocs'[1].'name'", containsString("Central American Integration System"))
                .body("[65].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(1))
                .body("[65].'regionalBlocs'[1].'otherAcronyms'", hasItems("SICA"))
                .body("[65].'regionalBlocs'[1].'otherNames'.size()", equalTo(1))
                .body("[65].'regionalBlocs'[1].'otherNames'", hasItems("Sistema de la Integración Centroamericana,"))
                .body("[65].'cioc'", containsString("DOM"))
                .body("[66].'name'", containsString("Ecuador"))
                .body("[66].'topLevelDomain'.size()", equalTo(1))
                .body("[66].'topLevelDomain'", hasItems(".ec"))
                .body("[66].'alpha2Code'", containsString("EC"))
                .body("[66].'alpha3Code'", containsString("ECU"))
                .body("[66].'callingCodes'.size()", equalTo(1))
                .body("[66].'callingCodes'", hasItems("593"))
                .body("[66].'capital'", containsString("Quito"))
                .body("[66].'altSpellings'.size()", equalTo(3))
                .body("[66].'altSpellings'", hasItems("EC", "Republic of Ecuador", "República del Ecuador"))
                .body("[66].'region'", containsString("Americas"))
                .body("[66].'subregion'", containsString("South America"))
                .body("[66].'population'", numberMatches(1.6545799E7))
                .body("[66].'latlng'.size()", equalTo(2))
                .body("[66].'latlng'[0]", numberMatches(-2.0))
                .body("[66].'latlng'[1]", numberMatches(-77.5))
                .body("[66].'demonym'", containsString("Ecuadorean"))
                .body("[66].'area'", numberMatches(276841.0))
                .body("[66].'gini'", numberMatches(49.3))
                .body("[66].'timezones'.size()", equalTo(2))
                .body("[66].'timezones'", hasItems("UTC-06:00", "UTC-05:00"))
                .body("[66].'borders'.size()", equalTo(2))
                .body("[66].'borders'", hasItems("COL", "PER"))
                .body("[66].'nativeName'", containsString("Ecuador"))
                .body("[66].'numericCode'", containsString("218"))
                .body("[66].'currencies'.size()", equalTo(1))
                .body("[66].'currencies'[0].'code'", containsString("USD"))
                .body("[66].'currencies'[0].'name'", containsString("United States dollar"))
                .body("[66].'currencies'[0].'symbol'", containsString("$"))
                .body("[66].'languages'.size()", equalTo(1))
                .body("[66].'languages'[0].'iso639_1'", containsString("es"))
                .body("[66].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[66].'languages'[0].'name'", containsString("Spanish"))
                .body("[66].'languages'[0].'nativeName'", containsString("Español"))
                .body("[66].'translations'.'de'", containsString("Ecuador"))
                .body("[66].'translations'.'es'", containsString("Ecuador"))
                .body("[66].'translations'.'fr'", containsString("Équateur"))
                .body("[66].'translations'.'ja'", containsString("エクアドル"))
                .body("[66].'translations'.'it'", containsString("Ecuador"))
                .body("[66].'translations'.'br'", containsString("Equador"))
                .body("[66].'translations'.'pt'", containsString("Equador"))
                .body("[66].'translations'.'nl'", containsString("Ecuador"))
                .body("[66].'translations'.'hr'", containsString("Ekvador"))
                .body("[66].'translations'.'fa'", containsString("اکوادور"))
                .body("[66].'flag'", containsString("https://restcountries.eu/data/ecu.svg"))
                .body("[66].'regionalBlocs'.size()", equalTo(1))
                .body("[66].'regionalBlocs'[0].'acronym'", containsString("USAN"))
                .body("[66].'regionalBlocs'[0].'name'", containsString("Union of South American Nations"))
                .body("[66].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(3))
                .body("[66].'regionalBlocs'[0].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[66].'regionalBlocs'[0].'otherNames'.size()", equalTo(4))
                .body("[66].'regionalBlocs'[0].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[66].'cioc'", containsString("ECU"))
                .body("[67].'name'", containsString("Egypt"))
                .body("[67].'topLevelDomain'.size()", equalTo(1))
                .body("[67].'topLevelDomain'", hasItems(".eg"))
                .body("[67].'alpha2Code'", containsString("EG"))
                .body("[67].'alpha3Code'", containsString("EGY"))
                .body("[67].'callingCodes'.size()", equalTo(1))
                .body("[67].'callingCodes'", hasItems("20"))
                .body("[67].'capital'", containsString("Cairo"))
                .body("[67].'altSpellings'.size()", equalTo(2))
                .body("[67].'altSpellings'", hasItems("EG", "Arab Republic of Egypt"))
                .body("[67].'region'", containsString("Africa"))
                .body("[67].'subregion'", containsString("Northern Africa"))
                .body("[67].'population'", numberMatches(9.129E7))
                .body("[67].'latlng'.size()", equalTo(2))
                .body("[67].'latlng'[0]", numberMatches(27.0))
                .body("[67].'latlng'[1]", numberMatches(30.0))
                .body("[67].'demonym'", containsString("Egyptian"))
                .body("[67].'area'", numberMatches(1002450.0))
                .body("[67].'gini'", numberMatches(30.8))
                .body("[67].'timezones'.size()", equalTo(1))
                .body("[67].'timezones'", hasItems("UTC+02:00"))
                .body("[67].'borders'.size()", equalTo(3))
                .body("[67].'borders'", hasItems("ISR", "LBY", "SDN"))
                .body("[67].'nativeName'", containsString("مصر‎"))
                .body("[67].'numericCode'", containsString("818"))
                .body("[67].'currencies'.size()", equalTo(1))
                .body("[67].'currencies'[0].'code'", containsString("EGP"))
                .body("[67].'currencies'[0].'name'", containsString("Egyptian pound"))
                .body("[67].'currencies'[0].'symbol'", containsString("£"))
                .body("[67].'languages'.size()", equalTo(1))
                .body("[67].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[67].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[67].'languages'[0].'name'", containsString("Arabic"))
                .body("[67].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[67].'translations'.'de'", containsString("Ägypten"))
                .body("[67].'translations'.'es'", containsString("Egipto"))
                .body("[67].'translations'.'fr'", containsString("Égypte"))
                .body("[67].'translations'.'ja'", containsString("エジプト"))
                .body("[67].'translations'.'it'", containsString("Egitto"))
                .body("[67].'translations'.'br'", containsString("Egito"))
                .body("[67].'translations'.'pt'", containsString("Egipto"))
                .body("[67].'translations'.'nl'", containsString("Egypte"))
                .body("[67].'translations'.'hr'", containsString("Egipat"))
                .body("[67].'translations'.'fa'", containsString("مصر"))
                .body("[67].'flag'", containsString("https://restcountries.eu/data/egy.svg"))
                .body("[67].'regionalBlocs'.size()", equalTo(2))
                .body("[67].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[67].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[67].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[67].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[67].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[67].'regionalBlocs'[1].'acronym'", containsString("AL"))
                .body("[67].'regionalBlocs'[1].'name'", containsString("Arab League"))
                .body("[67].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(0))
                .body("[67].'regionalBlocs'[1].'otherNames'.size()", equalTo(3))
                .body("[67].'regionalBlocs'[1].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[67].'cioc'", containsString("EGY"))
                .body("[68].'name'", containsString("El Salvador"))
                .body("[68].'topLevelDomain'.size()", equalTo(1))
                .body("[68].'topLevelDomain'", hasItems(".sv"))
                .body("[68].'alpha2Code'", containsString("SV"))
                .body("[68].'alpha3Code'", containsString("SLV"))
                .body("[68].'callingCodes'.size()", equalTo(1))
                .body("[68].'callingCodes'", hasItems("503"))
                .body("[68].'capital'", containsString("San Salvador"))
                .body("[68].'altSpellings'.size()", equalTo(3))
                .body("[68].'altSpellings'", hasItems("SV", "Republic of El Salvador", "República de El Salvador"))
                .body("[68].'region'", containsString("Americas"))
                .body("[68].'subregion'", containsString("Central America"))
                .body("[68].'population'", numberMatches(6520675.0))
                .body("[68].'latlng'.size()", equalTo(2))
                .body("[68].'latlng'[0]", numberMatches(13.83333333))
                .body("[68].'latlng'[1]", numberMatches(-88.91666666))
                .body("[68].'demonym'", containsString("Salvadoran"))
                .body("[68].'area'", numberMatches(21041.0))
                .body("[68].'gini'", numberMatches(48.3))
                .body("[68].'timezones'.size()", equalTo(1))
                .body("[68].'timezones'", hasItems("UTC-06:00"))
                .body("[68].'borders'.size()", equalTo(2))
                .body("[68].'borders'", hasItems("GTM", "HND"))
                .body("[68].'nativeName'", containsString("El Salvador"))
                .body("[68].'numericCode'", containsString("222"))
                .body("[68].'currencies'.size()", equalTo(1))
                .body("[68].'currencies'[0].'code'", containsString("USD"))
                .body("[68].'currencies'[0].'name'", containsString("United States dollar"))
                .body("[68].'currencies'[0].'symbol'", containsString("$"))
                .body("[68].'languages'.size()", equalTo(1))
                .body("[68].'languages'[0].'iso639_1'", containsString("es"))
                .body("[68].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[68].'languages'[0].'name'", containsString("Spanish"))
                .body("[68].'languages'[0].'nativeName'", containsString("Español"))
                .body("[68].'translations'.'de'", containsString("El Salvador"))
                .body("[68].'translations'.'es'", containsString("El Salvador"))
                .body("[68].'translations'.'fr'", containsString("Salvador"))
                .body("[68].'translations'.'ja'", containsString("エルサルバドル"))
                .body("[68].'translations'.'it'", containsString("El Salvador"))
                .body("[68].'translations'.'br'", containsString("El Salvador"))
                .body("[68].'translations'.'pt'", containsString("El Salvador"))
                .body("[68].'translations'.'nl'", containsString("El Salvador"))
                .body("[68].'translations'.'hr'", containsString("Salvador"))
                .body("[68].'translations'.'fa'", containsString("السالوادور"))
                .body("[68].'flag'", containsString("https://restcountries.eu/data/slv.svg"))
                .body("[68].'regionalBlocs'.size()", equalTo(1))
                .body("[68].'regionalBlocs'[0].'acronym'", containsString("CAIS"))
                .body("[68].'regionalBlocs'[0].'name'", containsString("Central American Integration System"))
                .body("[68].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(1))
                .body("[68].'regionalBlocs'[0].'otherAcronyms'", hasItems("SICA"))
                .body("[68].'regionalBlocs'[0].'otherNames'.size()", equalTo(1))
                .body("[68].'regionalBlocs'[0].'otherNames'", hasItems("Sistema de la Integración Centroamericana,"))
                .body("[68].'cioc'", containsString("ESA"))
                .body("[69].'name'", containsString("Equatorial Guinea"))
                .body("[69].'topLevelDomain'.size()", equalTo(1))
                .body("[69].'topLevelDomain'", hasItems(".gq"))
                .body("[69].'alpha2Code'", containsString("GQ"))
                .body("[69].'alpha3Code'", containsString("GNQ"))
                .body("[69].'callingCodes'.size()", equalTo(1))
                .body("[69].'callingCodes'", hasItems("240"))
                .body("[69].'capital'", containsString("Malabo"))
                .body("[69].'altSpellings'.size()", equalTo(5))
                .body("[69].'altSpellings'", hasItems("GQ", "Republic of Equatorial Guinea", "República de Guinea Ecuatorial", "République de Guinée équatoriale", "República da Guiné Equatorial"))
                .body("[69].'region'", containsString("Africa"))
                .body("[69].'subregion'", containsString("Middle Africa"))
                .body("[69].'population'", numberMatches(1222442.0))
                .body("[69].'latlng'.size()", equalTo(2))
                .body("[69].'latlng'[0]", numberMatches(2.0))
                .body("[69].'latlng'[1]", numberMatches(10.0))
                .body("[69].'demonym'", containsString("Equatorial Guinean"))
                .body("[69].'area'", numberMatches(28051.0))
                .body("[69].'gini'", nullValue())
                .body("[69].'timezones'.size()", equalTo(1))
                .body("[69].'timezones'", hasItems("UTC+01:00"))
                .body("[69].'borders'.size()", equalTo(2))
                .body("[69].'borders'", hasItems("CMR", "GAB"))
                .body("[69].'nativeName'", containsString("Guinea Ecuatorial"))
                .body("[69].'numericCode'", containsString("226"))
                .body("[69].'currencies'.size()", equalTo(1))
                .body("[69].'currencies'[0].'code'", containsString("XAF"))
                .body("[69].'currencies'[0].'name'", containsString("Central African CFA franc"))
                .body("[69].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[69].'languages'.size()", equalTo(2))
                .body("[69].'languages'[0].'iso639_1'", containsString("es"))
                .body("[69].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[69].'languages'[0].'name'", containsString("Spanish"))
                .body("[69].'languages'[0].'nativeName'", containsString("Español"))
                .body("[69].'languages'[1].'iso639_1'", containsString("fr"))
                .body("[69].'languages'[1].'iso639_2'", containsString("fra"))
                .body("[69].'languages'[1].'name'", containsString("French"))
                .body("[69].'languages'[1].'nativeName'", containsString("français"))
                .body("[69].'translations'.'de'", containsString("Äquatorial-Guinea"))
                .body("[69].'translations'.'es'", containsString("Guinea Ecuatorial"))
                .body("[69].'translations'.'fr'", containsString("Guinée-Équatoriale"))
                .body("[69].'translations'.'ja'", containsString("赤道ギニア"))
                .body("[69].'translations'.'it'", containsString("Guinea Equatoriale"))
                .body("[69].'translations'.'br'", containsString("Guiné Equatorial"))
                .body("[69].'translations'.'pt'", containsString("Guiné Equatorial"))
                .body("[69].'translations'.'nl'", containsString("Equatoriaal-Guinea"))
                .body("[69].'translations'.'hr'", containsString("Ekvatorijalna Gvineja"))
                .body("[69].'translations'.'fa'", containsString("گینه استوایی"))
                .body("[69].'flag'", containsString("https://restcountries.eu/data/gnq.svg"))
                .body("[69].'regionalBlocs'.size()", equalTo(1))
                .body("[69].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[69].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[69].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[69].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[69].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[69].'cioc'", containsString("GEQ"))
                .body("[70].'name'", containsString("Eritrea"))
                .body("[70].'topLevelDomain'.size()", equalTo(1))
                .body("[70].'topLevelDomain'", hasItems(".er"))
                .body("[70].'alpha2Code'", containsString("ER"))
                .body("[70].'alpha3Code'", containsString("ERI"))
                .body("[70].'callingCodes'.size()", equalTo(1))
                .body("[70].'callingCodes'", hasItems("291"))
                .body("[70].'capital'", containsString("Asmara"))
                .body("[70].'altSpellings'.size()", equalTo(7))
                .body("[70].'altSpellings'", hasItems("ER", "State of Eritrea", "ሃገረ ኤርትራ", "Dawlat Iritriyá", "ʾErtrā", "Iritriyā", ""))
                .body("[70].'region'", containsString("Africa"))
                .body("[70].'subregion'", containsString("Eastern Africa"))
                .body("[70].'population'", numberMatches(5352000.0))
                .body("[70].'latlng'.size()", equalTo(2))
                .body("[70].'latlng'[0]", numberMatches(15.0))
                .body("[70].'latlng'[1]", numberMatches(39.0))
                .body("[70].'demonym'", containsString("Eritrean"))
                .body("[70].'area'", numberMatches(117600.0))
                .body("[70].'gini'", nullValue())
                .body("[70].'timezones'.size()", equalTo(1))
                .body("[70].'timezones'", hasItems("UTC+03:00"))
                .body("[70].'borders'.size()", equalTo(3))
                .body("[70].'borders'", hasItems("DJI", "ETH", "SDN"))
                .body("[70].'nativeName'", containsString("ኤርትራ"))
                .body("[70].'numericCode'", containsString("232"))
                .body("[70].'currencies'.size()", equalTo(1))
                .body("[70].'currencies'[0].'code'", containsString("ERN"))
                .body("[70].'currencies'[0].'name'", containsString("Eritrean nakfa"))
                .body("[70].'currencies'[0].'symbol'", containsString("Nfk"))
                .body("[70].'languages'.size()", equalTo(3))
                .body("[70].'languages'[0].'iso639_1'", containsString("ti"))
                .body("[70].'languages'[0].'iso639_2'", containsString("tir"))
                .body("[70].'languages'[0].'name'", containsString("Tigrinya"))
                .body("[70].'languages'[0].'nativeName'", containsString("ትግርኛ"))
                .body("[70].'languages'[1].'iso639_1'", containsString("ar"))
                .body("[70].'languages'[1].'iso639_2'", containsString("ara"))
                .body("[70].'languages'[1].'name'", containsString("Arabic"))
                .body("[70].'languages'[1].'nativeName'", containsString("العربية"))
                .body("[70].'languages'[2].'iso639_1'", containsString("en"))
                .body("[70].'languages'[2].'iso639_2'", containsString("eng"))
                .body("[70].'languages'[2].'name'", containsString("English"))
                .body("[70].'languages'[2].'nativeName'", containsString("English"))
                .body("[70].'translations'.'de'", containsString("Eritrea"))
                .body("[70].'translations'.'es'", containsString("Eritrea"))
                .body("[70].'translations'.'fr'", containsString("Érythrée"))
                .body("[70].'translations'.'ja'", containsString("エリトリア"))
                .body("[70].'translations'.'it'", containsString("Eritrea"))
                .body("[70].'translations'.'br'", containsString("Eritreia"))
                .body("[70].'translations'.'pt'", containsString("Eritreia"))
                .body("[70].'translations'.'nl'", containsString("Eritrea"))
                .body("[70].'translations'.'hr'", containsString("Eritreja"))
                .body("[70].'translations'.'fa'", containsString("اریتره"))
                .body("[70].'flag'", containsString("https://restcountries.eu/data/eri.svg"))
                .body("[70].'regionalBlocs'.size()", equalTo(1))
                .body("[70].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[70].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[70].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[70].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[70].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[70].'cioc'", containsString("ERI"))
                .body("[71].'name'", containsString("Estonia"))
                .body("[71].'topLevelDomain'.size()", equalTo(1))
                .body("[71].'topLevelDomain'", hasItems(".ee"))
                .body("[71].'alpha2Code'", containsString("EE"))
                .body("[71].'alpha3Code'", containsString("EST"))
                .body("[71].'callingCodes'.size()", equalTo(1))
                .body("[71].'callingCodes'", hasItems("372"))
                .body("[71].'capital'", containsString("Tallinn"))
                .body("[71].'altSpellings'.size()", equalTo(4))
                .body("[71].'altSpellings'", hasItems("EE", "Eesti", "Republic of Estonia", "Eesti Vabariik"))
                .body("[71].'region'", containsString("Europe"))
                .body("[71].'subregion'", containsString("Northern Europe"))
                .body("[71].'population'", numberMatches(1315944.0))
                .body("[71].'latlng'.size()", equalTo(2))
                .body("[71].'latlng'[0]", numberMatches(59.0))
                .body("[71].'latlng'[1]", numberMatches(26.0))
                .body("[71].'demonym'", containsString("Estonian"))
                .body("[71].'area'", numberMatches(45227.0))
                .body("[71].'gini'", numberMatches(36.0))
                .body("[71].'timezones'.size()", equalTo(1))
                .body("[71].'timezones'", hasItems("UTC+02:00"))
                .body("[71].'borders'.size()", equalTo(2))
                .body("[71].'borders'", hasItems("LVA", "RUS"))
                .body("[71].'nativeName'", containsString("Eesti"))
                .body("[71].'numericCode'", containsString("233"))
                .body("[71].'currencies'.size()", equalTo(1))
                .body("[71].'currencies'[0].'code'", containsString("EUR"))
                .body("[71].'currencies'[0].'name'", containsString("Euro"))
                .body("[71].'currencies'[0].'symbol'", containsString("€"))
                .body("[71].'languages'.size()", equalTo(1))
                .body("[71].'languages'[0].'iso639_1'", containsString("et"))
                .body("[71].'languages'[0].'iso639_2'", containsString("est"))
                .body("[71].'languages'[0].'name'", containsString("Estonian"))
                .body("[71].'languages'[0].'nativeName'", containsString("eesti"))
                .body("[71].'translations'.'de'", containsString("Estland"))
                .body("[71].'translations'.'es'", containsString("Estonia"))
                .body("[71].'translations'.'fr'", containsString("Estonie"))
                .body("[71].'translations'.'ja'", containsString("エストニア"))
                .body("[71].'translations'.'it'", containsString("Estonia"))
                .body("[71].'translations'.'br'", containsString("Estônia"))
                .body("[71].'translations'.'pt'", containsString("Estónia"))
                .body("[71].'translations'.'nl'", containsString("Estland"))
                .body("[71].'translations'.'hr'", containsString("Estonija"))
                .body("[71].'translations'.'fa'", containsString("استونی"))
                .body("[71].'flag'", containsString("https://restcountries.eu/data/est.svg"))
                .body("[71].'regionalBlocs'.size()", equalTo(1))
                .body("[71].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[71].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[71].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[71].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[71].'cioc'", containsString("EST"))
                .body("[72].'name'", containsString("Ethiopia"))
                .body("[72].'topLevelDomain'.size()", equalTo(1))
                .body("[72].'topLevelDomain'", hasItems(".et"))
                .body("[72].'alpha2Code'", containsString("ET"))
                .body("[72].'alpha3Code'", containsString("ETH"))
                .body("[72].'callingCodes'.size()", equalTo(1))
                .body("[72].'callingCodes'", hasItems("251"))
                .body("[72].'capital'", containsString("Addis Ababa"))
                .body("[72].'altSpellings'.size()", equalTo(4))
                .body("[72].'altSpellings'", hasItems("ET", "ʾĪtyōṗṗyā", "Federal Democratic Republic of Ethiopia", "የኢትዮጵያ ፌዴራላዊ ዲሞክራሲያዊ ሪፐብሊክ"))
                .body("[72].'region'", containsString("Africa"))
                .body("[72].'subregion'", containsString("Eastern Africa"))
                .body("[72].'population'", numberMatches(9.2206005E7))
                .body("[72].'latlng'.size()", equalTo(2))
                .body("[72].'latlng'[0]", numberMatches(8.0))
                .body("[72].'latlng'[1]", numberMatches(38.0))
                .body("[72].'demonym'", containsString("Ethiopian"))
                .body("[72].'area'", numberMatches(1104300.0))
                .body("[72].'gini'", numberMatches(29.8))
                .body("[72].'timezones'.size()", equalTo(1))
                .body("[72].'timezones'", hasItems("UTC+03:00"))
                .body("[72].'borders'.size()", equalTo(6))
                .body("[72].'borders'", hasItems("DJI", "ERI", "KEN", "SOM", "SSD", "SDN"))
                .body("[72].'nativeName'", containsString("ኢትዮጵያ"))
                .body("[72].'numericCode'", containsString("231"))
                .body("[72].'currencies'.size()", equalTo(1))
                .body("[72].'currencies'[0].'code'", containsString("ETB"))
                .body("[72].'currencies'[0].'name'", containsString("Ethiopian birr"))
                .body("[72].'currencies'[0].'symbol'", containsString("Br"))
                .body("[72].'languages'.size()", equalTo(1))
                .body("[72].'languages'[0].'iso639_1'", containsString("am"))
                .body("[72].'languages'[0].'iso639_2'", containsString("amh"))
                .body("[72].'languages'[0].'name'", containsString("Amharic"))
                .body("[72].'languages'[0].'nativeName'", containsString("አማርኛ"))
                .body("[72].'translations'.'de'", containsString("Äthiopien"))
                .body("[72].'translations'.'es'", containsString("Etiopía"))
                .body("[72].'translations'.'fr'", containsString("Éthiopie"))
                .body("[72].'translations'.'ja'", containsString("エチオピア"))
                .body("[72].'translations'.'it'", containsString("Etiopia"))
                .body("[72].'translations'.'br'", containsString("Etiópia"))
                .body("[72].'translations'.'pt'", containsString("Etiópia"))
                .body("[72].'translations'.'nl'", containsString("Ethiopië"))
                .body("[72].'translations'.'hr'", containsString("Etiopija"))
                .body("[72].'translations'.'fa'", containsString("اتیوپی"))
                .body("[72].'flag'", containsString("https://restcountries.eu/data/eth.svg"))
                .body("[72].'regionalBlocs'.size()", equalTo(1))
                .body("[72].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[72].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[72].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[72].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[72].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[72].'cioc'", containsString("ETH"))
                .body("[73].'name'", containsString("Falkland Islands (Malvinas)"))
                .body("[73].'topLevelDomain'.size()", equalTo(1))
                .body("[73].'topLevelDomain'", hasItems(".fk"))
                .body("[73].'alpha2Code'", containsString("FK"))
                .body("[73].'alpha3Code'", containsString("FLK"))
                .body("[73].'callingCodes'.size()", equalTo(1))
                .body("[73].'callingCodes'", hasItems("500"))
                .body("[73].'capital'", containsString("Stanley"))
                .body("[73].'altSpellings'.size()", equalTo(2))
                .body("[73].'altSpellings'", hasItems("FK", "Islas Malvinas"))
                .body("[73].'region'", containsString("Americas"))
                .body("[73].'subregion'", containsString("South America"))
                .body("[73].'population'", numberMatches(2563.0))
                .body("[73].'latlng'.size()", equalTo(2))
                .body("[73].'latlng'[0]", numberMatches(-51.75))
                .body("[73].'latlng'[1]", numberMatches(-59.0))
                .body("[73].'demonym'", containsString("Falkland Islander"))
                .body("[73].'area'", numberMatches(12173.0))
                .body("[73].'gini'", nullValue())
                .body("[73].'timezones'.size()", equalTo(1))
                .body("[73].'timezones'", hasItems("UTC-04:00"))
                .body("[73].'borders'.size()", equalTo(0))
                .body("[73].'nativeName'", containsString("Falkland Islands"))
                .body("[73].'numericCode'", containsString("238"))
                .body("[73].'currencies'.size()", equalTo(1))
                .body("[73].'currencies'[0].'code'", containsString("FKP"))
                .body("[73].'currencies'[0].'name'", containsString("Falkland Islands pound"))
                .body("[73].'currencies'[0].'symbol'", containsString("£"))
                .body("[73].'languages'.size()", equalTo(1))
                .body("[73].'languages'[0].'iso639_1'", containsString("en"))
                .body("[73].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[73].'languages'[0].'name'", containsString("English"))
                .body("[73].'languages'[0].'nativeName'", containsString("English"))
                .body("[73].'translations'.'de'", containsString("Falklandinseln"))
                .body("[73].'translations'.'es'", containsString("Islas Malvinas"))
                .body("[73].'translations'.'fr'", containsString("Îles Malouines"))
                .body("[73].'translations'.'ja'", containsString("フォークランド（マルビナス）諸島"))
                .body("[73].'translations'.'it'", containsString("Isole Falkland o Isole Malvine"))
                .body("[73].'translations'.'br'", containsString("Ilhas Malvinas"))
                .body("[73].'translations'.'pt'", containsString("Ilhas Falkland"))
                .body("[73].'translations'.'nl'", containsString("Falklandeilanden [Islas Malvinas]"))
                .body("[73].'translations'.'hr'", containsString("Falklandski Otoci"))
                .body("[73].'translations'.'fa'", containsString("جزایر فالکلند"))
                .body("[73].'flag'", containsString("https://restcountries.eu/data/flk.svg"))
                .body("[73].'regionalBlocs'.size()", equalTo(1))
                .body("[73].'regionalBlocs'[0].'acronym'", containsString("USAN"))
                .body("[73].'regionalBlocs'[0].'name'", containsString("Union of South American Nations"))
                .body("[73].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(3))
                .body("[73].'regionalBlocs'[0].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[73].'regionalBlocs'[0].'otherNames'.size()", equalTo(4))
                .body("[73].'regionalBlocs'[0].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[73].'cioc'", containsString(""))
                .body("[74].'name'", containsString("Faroe Islands"))
                .body("[74].'topLevelDomain'.size()", equalTo(1))
                .body("[74].'topLevelDomain'", hasItems(".fo"))
                .body("[74].'alpha2Code'", containsString("FO"))
                .body("[74].'alpha3Code'", containsString("FRO"))
                .body("[74].'callingCodes'.size()", equalTo(1))
                .body("[74].'callingCodes'", hasItems("298"))
                .body("[74].'capital'", containsString("Tórshavn"))
                .body("[74].'altSpellings'.size()", equalTo(3))
                .body("[74].'altSpellings'", hasItems("FO", "Føroyar", "Færøerne"))
                .body("[74].'region'", containsString("Europe"))
                .body("[74].'subregion'", containsString("Northern Europe"))
                .body("[74].'population'", numberMatches(49376.0))
                .body("[74].'latlng'.size()", equalTo(2))
                .body("[74].'latlng'[0]", numberMatches(62.0))
                .body("[74].'latlng'[1]", numberMatches(-7.0))
                .body("[74].'demonym'", containsString("Faroese"))
                .body("[74].'area'", numberMatches(1393.0))
                .body("[74].'gini'", nullValue())
                .body("[74].'timezones'.size()", equalTo(1))
                .body("[74].'timezones'", hasItems("UTC+00:00"))
                .body("[74].'borders'.size()", equalTo(0))
                .body("[74].'nativeName'", containsString("Føroyar"))
                .body("[74].'numericCode'", containsString("234"))
                .body("[74].'currencies'.size()", equalTo(2))
                .body("[74].'currencies'[0].'code'", containsString("DKK"))
                .body("[74].'currencies'[0].'name'", containsString("Danish krone"))
                .body("[74].'currencies'[0].'symbol'", containsString("kr"))
                .body("[74].'currencies'[1].'code'", containsString("(none)"))
                .body("[74].'currencies'[1].'name'", containsString("Faroese króna"))
                .body("[74].'currencies'[1].'symbol'", containsString("kr"))
                .body("[74].'languages'.size()", equalTo(1))
                .body("[74].'languages'[0].'iso639_1'", containsString("fo"))
                .body("[74].'languages'[0].'iso639_2'", containsString("fao"))
                .body("[74].'languages'[0].'name'", containsString("Faroese"))
                .body("[74].'languages'[0].'nativeName'", containsString("føroyskt"))
                .body("[74].'translations'.'de'", containsString("Färöer-Inseln"))
                .body("[74].'translations'.'es'", containsString("Islas Faroe"))
                .body("[74].'translations'.'fr'", containsString("Îles Féroé"))
                .body("[74].'translations'.'ja'", containsString("フェロー諸島"))
                .body("[74].'translations'.'it'", containsString("Isole Far Oer"))
                .body("[74].'translations'.'br'", containsString("Ilhas Faroé"))
                .body("[74].'translations'.'pt'", containsString("Ilhas Faroé"))
                .body("[74].'translations'.'nl'", containsString("Faeröer"))
                .body("[74].'translations'.'hr'", containsString("Farski Otoci"))
                .body("[74].'translations'.'fa'", containsString("جزایر فارو"))
                .body("[74].'flag'", containsString("https://restcountries.eu/data/fro.svg"))
                .body("[74].'regionalBlocs'.size()", equalTo(1))
                .body("[74].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[74].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[74].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[74].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[74].'cioc'", containsString(""))
                .body("[75].'name'", containsString("Fiji"))
                .body("[75].'topLevelDomain'.size()", equalTo(1))
                .body("[75].'topLevelDomain'", hasItems(".fj"))
                .body("[75].'alpha2Code'", containsString("FJ"))
                .body("[75].'alpha3Code'", containsString("FJI"))
                .body("[75].'callingCodes'.size()", equalTo(1))
                .body("[75].'callingCodes'", hasItems("679"))
                .body("[75].'capital'", containsString("Suva"))
                .body("[75].'altSpellings'.size()", equalTo(5))
                .body("[75].'altSpellings'", hasItems("FJ", "Viti", "Republic of Fiji", "Matanitu ko Viti", "Fijī Gaṇarājya"))
                .body("[75].'region'", containsString("Oceania"))
                .body("[75].'subregion'", containsString("Melanesia"))
                .body("[75].'population'", numberMatches(867000.0))
                .body("[75].'latlng'.size()", equalTo(2))
                .body("[75].'latlng'[0]", numberMatches(-18.0))
                .body("[75].'latlng'[1]", numberMatches(175.0))
                .body("[75].'demonym'", containsString("Fijian"))
                .body("[75].'area'", numberMatches(18272.0))
                .body("[75].'gini'", numberMatches(42.8))
                .body("[75].'timezones'.size()", equalTo(1))
                .body("[75].'timezones'", hasItems("UTC+12:00"))
                .body("[75].'borders'.size()", equalTo(0))
                .body("[75].'nativeName'", containsString("Fiji"))
                .body("[75].'numericCode'", containsString("242"))
                .body("[75].'currencies'.size()", equalTo(1))
                .body("[75].'currencies'[0].'code'", containsString("FJD"))
                .body("[75].'currencies'[0].'name'", containsString("Fijian dollar"))
                .body("[75].'currencies'[0].'symbol'", containsString("$"))
                .body("[75].'languages'.size()", equalTo(4))
                .body("[75].'languages'[0].'iso639_1'", containsString("en"))
                .body("[75].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[75].'languages'[0].'name'", containsString("English"))
                .body("[75].'languages'[0].'nativeName'", containsString("English"))
                .body("[75].'languages'[1].'iso639_1'", containsString("fj"))
                .body("[75].'languages'[1].'iso639_2'", containsString("fij"))
                .body("[75].'languages'[1].'name'", containsString("Fijian"))
                .body("[75].'languages'[1].'nativeName'", containsString("vosa Vakaviti"))
                .body("[75].'languages'[2].'iso639_1'", containsString("hi"))
                .body("[75].'languages'[2].'iso639_2'", containsString("hin"))
                .body("[75].'languages'[2].'name'", containsString("Hindi"))
                .body("[75].'languages'[2].'nativeName'", containsString("हिन्दी"))
                .body("[75].'languages'[3].'iso639_1'", containsString("ur"))
                .body("[75].'languages'[3].'iso639_2'", containsString("urd"))
                .body("[75].'languages'[3].'name'", containsString("Urdu"))
                .body("[75].'languages'[3].'nativeName'", containsString("اردو"))
                .body("[75].'translations'.'de'", containsString("Fidschi"))
                .body("[75].'translations'.'es'", containsString("Fiyi"))
                .body("[75].'translations'.'fr'", containsString("Fidji"))
                .body("[75].'translations'.'ja'", containsString("フィジー"))
                .body("[75].'translations'.'it'", containsString("Figi"))
                .body("[75].'translations'.'br'", containsString("Fiji"))
                .body("[75].'translations'.'pt'", containsString("Fiji"))
                .body("[75].'translations'.'nl'", containsString("Fiji"))
                .body("[75].'translations'.'hr'", containsString("Fiđi"))
                .body("[75].'translations'.'fa'", containsString("فیجی"))
                .body("[75].'flag'", containsString("https://restcountries.eu/data/fji.svg"))
                .body("[75].'regionalBlocs'.size()", equalTo(0))
                .body("[75].'cioc'", containsString("FIJ"))
                .body("[76].'name'", containsString("Finland"))
                .body("[76].'topLevelDomain'.size()", equalTo(1))
                .body("[76].'topLevelDomain'", hasItems(".fi"))
                .body("[76].'alpha2Code'", containsString("FI"))
                .body("[76].'alpha3Code'", containsString("FIN"))
                .body("[76].'callingCodes'.size()", equalTo(1))
                .body("[76].'callingCodes'", hasItems("358"))
                .body("[76].'capital'", containsString("Helsinki"))
                .body("[76].'altSpellings'.size()", equalTo(5))
                .body("[76].'altSpellings'", hasItems("FI", "Suomi", "Republic of Finland", "Suomen tasavalta", "Republiken Finland"))
                .body("[76].'region'", containsString("Europe"))
                .body("[76].'subregion'", containsString("Northern Europe"))
                .body("[76].'population'", numberMatches(5491817.0))
                .body("[76].'latlng'.size()", equalTo(2))
                .body("[76].'latlng'[0]", numberMatches(64.0))
                .body("[76].'latlng'[1]", numberMatches(26.0))
                .body("[76].'demonym'", containsString("Finnish"))
                .body("[76].'area'", numberMatches(338424.0))
                .body("[76].'gini'", numberMatches(26.9))
                .body("[76].'timezones'.size()", equalTo(1))
                .body("[76].'timezones'", hasItems("UTC+02:00"))
                .body("[76].'borders'.size()", equalTo(3))
                .body("[76].'borders'", hasItems("NOR", "SWE", "RUS"))
                .body("[76].'nativeName'", containsString("Suomi"))
                .body("[76].'numericCode'", containsString("246"))
                .body("[76].'currencies'.size()", equalTo(1))
                .body("[76].'currencies'[0].'code'", containsString("EUR"))
                .body("[76].'currencies'[0].'name'", containsString("Euro"))
                .body("[76].'currencies'[0].'symbol'", containsString("€"))
                .body("[76].'languages'.size()", equalTo(2))
                .body("[76].'languages'[0].'iso639_1'", containsString("fi"))
                .body("[76].'languages'[0].'iso639_2'", containsString("fin"))
                .body("[76].'languages'[0].'name'", containsString("Finnish"))
                .body("[76].'languages'[0].'nativeName'", containsString("suomi"))
                .body("[76].'languages'[1].'iso639_1'", containsString("sv"))
                .body("[76].'languages'[1].'iso639_2'", containsString("swe"))
                .body("[76].'languages'[1].'name'", containsString("Swedish"))
                .body("[76].'languages'[1].'nativeName'", containsString("svenska"))
                .body("[76].'translations'.'de'", containsString("Finnland"))
                .body("[76].'translations'.'es'", containsString("Finlandia"))
                .body("[76].'translations'.'fr'", containsString("Finlande"))
                .body("[76].'translations'.'ja'", containsString("フィンランド"))
                .body("[76].'translations'.'it'", containsString("Finlandia"))
                .body("[76].'translations'.'br'", containsString("Finlândia"))
                .body("[76].'translations'.'pt'", containsString("Finlândia"))
                .body("[76].'translations'.'nl'", containsString("Finland"))
                .body("[76].'translations'.'hr'", containsString("Finska"))
                .body("[76].'translations'.'fa'", containsString("فنلاند"))
                .body("[76].'flag'", containsString("https://restcountries.eu/data/fin.svg"))
                .body("[76].'regionalBlocs'.size()", equalTo(1))
                .body("[76].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[76].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[76].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[76].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[76].'cioc'", containsString("FIN"))
                .body("[77].'name'", containsString("France"))
                .body("[77].'topLevelDomain'.size()", equalTo(1))
                .body("[77].'topLevelDomain'", hasItems(".fr"))
                .body("[77].'alpha2Code'", containsString("FR"))
                .body("[77].'alpha3Code'", containsString("FRA"))
                .body("[77].'callingCodes'.size()", equalTo(1))
                .body("[77].'callingCodes'", hasItems("33"))
                .body("[77].'capital'", containsString("Paris"))
                .body("[77].'altSpellings'.size()", equalTo(3))
                .body("[77].'altSpellings'", hasItems("FR", "French Republic", "République française"))
                .body("[77].'region'", containsString("Europe"))
                .body("[77].'subregion'", containsString("Western Europe"))
                .body("[77].'population'", numberMatches(6.671E7))
                .body("[77].'latlng'.size()", equalTo(2))
                .body("[77].'latlng'[0]", numberMatches(46.0))
                .body("[77].'latlng'[1]", numberMatches(2.0))
                .body("[77].'demonym'", containsString("French"))
                .body("[77].'area'", numberMatches(640679.0))
                .body("[77].'gini'", numberMatches(32.7))
                .body("[77].'timezones'.size()", equalTo(12))
                .body("[77].'timezones'", hasItems("UTC-10:00", "UTC-09:30", "UTC-09:00", "UTC-08:00", "UTC-04:00", "UTC-03:00", "UTC+01:00", "UTC+03:00", "UTC+04:00", "UTC+05:00", "UTC+11:00", "UTC+12:00"))
                .body("[77].'borders'.size()", equalTo(8))
                .body("[77].'borders'", hasItems("AND", "BEL", "DEU", "ITA", "LUX", "MCO", "ESP", "CHE"))
                .body("[77].'nativeName'", containsString("France"))
                .body("[77].'numericCode'", containsString("250"))
                .body("[77].'currencies'.size()", equalTo(1))
                .body("[77].'currencies'[0].'code'", containsString("EUR"))
                .body("[77].'currencies'[0].'name'", containsString("Euro"))
                .body("[77].'currencies'[0].'symbol'", containsString("€"))
                .body("[77].'languages'.size()", equalTo(1))
                .body("[77].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[77].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[77].'languages'[0].'name'", containsString("French"))
                .body("[77].'languages'[0].'nativeName'", containsString("français"))
                .body("[77].'translations'.'de'", containsString("Frankreich"))
                .body("[77].'translations'.'es'", containsString("Francia"))
                .body("[77].'translations'.'fr'", containsString("France"))
                .body("[77].'translations'.'ja'", containsString("フランス"))
                .body("[77].'translations'.'it'", containsString("Francia"))
                .body("[77].'translations'.'br'", containsString("França"))
                .body("[77].'translations'.'pt'", containsString("França"))
                .body("[77].'translations'.'nl'", containsString("Frankrijk"))
                .body("[77].'translations'.'hr'", containsString("Francuska"))
                .body("[77].'translations'.'fa'", containsString("فرانسه"))
                .body("[77].'flag'", containsString("https://restcountries.eu/data/fra.svg"))
                .body("[77].'regionalBlocs'.size()", equalTo(1))
                .body("[77].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[77].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[77].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[77].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[77].'cioc'", containsString("FRA"))
                .body("[78].'name'", containsString("French Guiana"))
                .body("[78].'topLevelDomain'.size()", equalTo(1))
                .body("[78].'topLevelDomain'", hasItems(".gf"))
                .body("[78].'alpha2Code'", containsString("GF"))
                .body("[78].'alpha3Code'", containsString("GUF"))
                .body("[78].'callingCodes'.size()", equalTo(1))
                .body("[78].'callingCodes'", hasItems("594"))
                .body("[78].'capital'", containsString("Cayenne"))
                .body("[78].'altSpellings'.size()", equalTo(3))
                .body("[78].'altSpellings'", hasItems("GF", "Guiana", "Guyane"))
                .body("[78].'region'", containsString("Americas"))
                .body("[78].'subregion'", containsString("South America"))
                .body("[78].'population'", numberMatches(254541.0))
                .body("[78].'latlng'.size()", equalTo(2))
                .body("[78].'latlng'[0]", numberMatches(4.0))
                .body("[78].'latlng'[1]", numberMatches(-53.0))
                .body("[78].'demonym'", containsString(""))
                .body("[78].'area'", nullValue())
                .body("[78].'gini'", nullValue())
                .body("[78].'timezones'.size()", equalTo(1))
                .body("[78].'timezones'", hasItems("UTC-03:00"))
                .body("[78].'borders'.size()", equalTo(2))
                .body("[78].'borders'", hasItems("BRA", "SUR"))
                .body("[78].'nativeName'", containsString("Guyane française"))
                .body("[78].'numericCode'", containsString("254"))
                .body("[78].'currencies'.size()", equalTo(1))
                .body("[78].'currencies'[0].'code'", containsString("EUR"))
                .body("[78].'currencies'[0].'name'", containsString("Euro"))
                .body("[78].'currencies'[0].'symbol'", containsString("€"))
                .body("[78].'languages'.size()", equalTo(1))
                .body("[78].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[78].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[78].'languages'[0].'name'", containsString("French"))
                .body("[78].'languages'[0].'nativeName'", containsString("français"))
                .body("[78].'translations'.'de'", containsString("Französisch Guyana"))
                .body("[78].'translations'.'es'", containsString("Guayana Francesa"))
                .body("[78].'translations'.'fr'", containsString("Guayane"))
                .body("[78].'translations'.'ja'", containsString("フランス領ギアナ"))
                .body("[78].'translations'.'it'", containsString("Guyana francese"))
                .body("[78].'translations'.'br'", containsString("Guiana Francesa"))
                .body("[78].'translations'.'pt'", containsString("Guiana Francesa"))
                .body("[78].'translations'.'nl'", containsString("Frans-Guyana"))
                .body("[78].'translations'.'hr'", containsString("Francuska Gvajana"))
                .body("[78].'translations'.'fa'", containsString("گویان فرانسه"))
                .body("[78].'flag'", containsString("https://restcountries.eu/data/guf.svg"))
                .body("[78].'regionalBlocs'.size()", equalTo(2))
                .body("[78].'regionalBlocs'[0].'acronym'", containsString("USAN"))
                .body("[78].'regionalBlocs'[0].'name'", containsString("Union of South American Nations"))
                .body("[78].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(3))
                .body("[78].'regionalBlocs'[0].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[78].'regionalBlocs'[0].'otherNames'.size()", equalTo(4))
                .body("[78].'regionalBlocs'[0].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[78].'regionalBlocs'[1].'acronym'", containsString("EU"))
                .body("[78].'regionalBlocs'[1].'name'", containsString("European Union"))
                .body("[78].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(0))
                .body("[78].'regionalBlocs'[1].'otherNames'.size()", equalTo(0))
                .body("[78].'cioc'", containsString(""))
                .body("[79].'name'", containsString("French Polynesia"))
                .body("[79].'topLevelDomain'.size()", equalTo(1))
                .body("[79].'topLevelDomain'", hasItems(".pf"))
                .body("[79].'alpha2Code'", containsString("PF"))
                .body("[79].'alpha3Code'", containsString("PYF"))
                .body("[79].'callingCodes'.size()", equalTo(1))
                .body("[79].'callingCodes'", hasItems("689"))
                .body("[79].'capital'", containsString("Papeetē"))
                .body("[79].'altSpellings'.size()", equalTo(4))
                .body("[79].'altSpellings'", hasItems("PF", "Polynésie française", "French Polynesia", "Pōrīnetia Farāni"))
                .body("[79].'region'", containsString("Oceania"))
                .body("[79].'subregion'", containsString("Polynesia"))
                .body("[79].'population'", numberMatches(271800.0))
                .body("[79].'latlng'.size()", equalTo(2))
                .body("[79].'latlng'[0]", numberMatches(-15.0))
                .body("[79].'latlng'[1]", numberMatches(-140.0))
                .body("[79].'demonym'", containsString("French Polynesian"))
                .body("[79].'area'", numberMatches(4167.0))
                .body("[79].'gini'", nullValue())
                .body("[79].'timezones'.size()", equalTo(3))
                .body("[79].'timezones'", hasItems("UTC-10:00", "UTC-09:30", "UTC-09:00"))
                .body("[79].'borders'.size()", equalTo(0))
                .body("[79].'nativeName'", containsString("Polynésie française"))
                .body("[79].'numericCode'", containsString("258"))
                .body("[79].'currencies'.size()", equalTo(1))
                .body("[79].'currencies'[0].'code'", containsString("XPF"))
                .body("[79].'currencies'[0].'name'", containsString("CFP franc"))
                .body("[79].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[79].'languages'.size()", equalTo(1))
                .body("[79].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[79].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[79].'languages'[0].'name'", containsString("French"))
                .body("[79].'languages'[0].'nativeName'", containsString("français"))
                .body("[79].'translations'.'de'", containsString("Französisch-Polynesien"))
                .body("[79].'translations'.'es'", containsString("Polinesia Francesa"))
                .body("[79].'translations'.'fr'", containsString("Polynésie française"))
                .body("[79].'translations'.'ja'", containsString("フランス領ポリネシア"))
                .body("[79].'translations'.'it'", containsString("Polinesia Francese"))
                .body("[79].'translations'.'br'", containsString("Polinésia Francesa"))
                .body("[79].'translations'.'pt'", containsString("Polinésia Francesa"))
                .body("[79].'translations'.'nl'", containsString("Frans-Polynesië"))
                .body("[79].'translations'.'hr'", containsString("Francuska Polinezija"))
                .body("[79].'translations'.'fa'", containsString("پلی‌نزی فرانسه"))
                .body("[79].'flag'", containsString("https://restcountries.eu/data/pyf.svg"))
                .body("[79].'regionalBlocs'.size()", equalTo(0))
                .body("[79].'cioc'", containsString(""))
                .body("[80].'name'", containsString("French Southern Territories"))
                .body("[80].'topLevelDomain'.size()", equalTo(1))
                .body("[80].'topLevelDomain'", hasItems(".tf"))
                .body("[80].'alpha2Code'", containsString("TF"))
                .body("[80].'alpha3Code'", containsString("ATF"))
                .body("[80].'callingCodes'.size()", equalTo(1))
                .body("[80].'callingCodes'", hasItems("262"))
                .body("[80].'capital'", containsString("Port-aux-Français"))
                .body("[80].'altSpellings'.size()", equalTo(1))
                .body("[80].'altSpellings'", hasItems("TF"))
                .body("[80].'region'", containsString("Africa"))
                .body("[80].'subregion'", containsString("Southern Africa"))
                .body("[80].'population'", numberMatches(140.0))
                .body("[80].'latlng'.size()", equalTo(2))
                .body("[80].'latlng'[0]", numberMatches(-49.25))
                .body("[80].'latlng'[1]", numberMatches(69.167))
                .body("[80].'demonym'", containsString("French"))
                .body("[80].'area'", numberMatches(7747.0))
                .body("[80].'gini'", nullValue())
                .body("[80].'timezones'.size()", equalTo(1))
                .body("[80].'timezones'", hasItems("UTC+05:00"))
                .body("[80].'borders'.size()", equalTo(0))
                .body("[80].'nativeName'", containsString("Territoire des Terres australes et antarctiques françaises"))
                .body("[80].'numericCode'", containsString("260"))
                .body("[80].'currencies'.size()", equalTo(1))
                .body("[80].'currencies'[0].'code'", containsString("EUR"))
                .body("[80].'currencies'[0].'name'", containsString("Euro"))
                .body("[80].'currencies'[0].'symbol'", containsString("€"))
                .body("[80].'languages'.size()", equalTo(1))
                .body("[80].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[80].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[80].'languages'[0].'name'", containsString("French"))
                .body("[80].'languages'[0].'nativeName'", containsString("français"))
                .body("[80].'translations'.'de'", containsString("Französische Süd- und Antarktisgebiete"))
                .body("[80].'translations'.'es'", containsString("Tierras Australes y Antárticas Francesas"))
                .body("[80].'translations'.'fr'", containsString("Terres australes et antarctiques françaises"))
                .body("[80].'translations'.'ja'", containsString("フランス領南方・南極地域"))
                .body("[80].'translations'.'it'", containsString("Territori Francesi del Sud"))
                .body("[80].'translations'.'br'", containsString("Terras Austrais e Antárticas Francesas"))
                .body("[80].'translations'.'pt'", containsString("Terras Austrais e Antárticas Francesas"))
                .body("[80].'translations'.'nl'", containsString("Franse Gebieden in de zuidelijke Indische Oceaan"))
                .body("[80].'translations'.'hr'", containsString("Francuski južni i antarktički teritoriji"))
                .body("[80].'translations'.'fa'", containsString("سرزمین‌های جنوبی و جنوبگانی فرانسه"))
                .body("[80].'flag'", containsString("https://restcountries.eu/data/atf.svg"))
                .body("[80].'regionalBlocs'.size()", equalTo(1))
                .body("[80].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[80].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[80].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[80].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[80].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[80].'cioc'", containsString(""))
                .body("[81].'name'", containsString("Gabon"))
                .body("[81].'topLevelDomain'.size()", equalTo(1))
                .body("[81].'topLevelDomain'", hasItems(".ga"))
                .body("[81].'alpha2Code'", containsString("GA"))
                .body("[81].'alpha3Code'", containsString("GAB"))
                .body("[81].'callingCodes'.size()", equalTo(1))
                .body("[81].'callingCodes'", hasItems("241"))
                .body("[81].'capital'", containsString("Libreville"))
                .body("[81].'altSpellings'.size()", equalTo(3))
                .body("[81].'altSpellings'", hasItems("GA", "Gabonese Republic", "République Gabonaise"))
                .body("[81].'region'", containsString("Africa"))
                .body("[81].'subregion'", containsString("Middle Africa"))
                .body("[81].'population'", numberMatches(1802278.0))
                .body("[81].'latlng'.size()", equalTo(2))
                .body("[81].'latlng'[0]", numberMatches(-1.0))
                .body("[81].'latlng'[1]", numberMatches(11.75))
                .body("[81].'demonym'", containsString("Gabonese"))
                .body("[81].'area'", numberMatches(267668.0))
                .body("[81].'gini'", numberMatches(41.5))
                .body("[81].'timezones'.size()", equalTo(1))
                .body("[81].'timezones'", hasItems("UTC+01:00"))
                .body("[81].'borders'.size()", equalTo(3))
                .body("[81].'borders'", hasItems("CMR", "COG", "GNQ"))
                .body("[81].'nativeName'", containsString("Gabon"))
                .body("[81].'numericCode'", containsString("266"))
                .body("[81].'currencies'.size()", equalTo(1))
                .body("[81].'currencies'[0].'code'", containsString("XAF"))
                .body("[81].'currencies'[0].'name'", containsString("Central African CFA franc"))
                .body("[81].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[81].'languages'.size()", equalTo(1))
                .body("[81].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[81].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[81].'languages'[0].'name'", containsString("French"))
                .body("[81].'languages'[0].'nativeName'", containsString("français"))
                .body("[81].'translations'.'de'", containsString("Gabun"))
                .body("[81].'translations'.'es'", containsString("Gabón"))
                .body("[81].'translations'.'fr'", containsString("Gabon"))
                .body("[81].'translations'.'ja'", containsString("ガボン"))
                .body("[81].'translations'.'it'", containsString("Gabon"))
                .body("[81].'translations'.'br'", containsString("Gabão"))
                .body("[81].'translations'.'pt'", containsString("Gabão"))
                .body("[81].'translations'.'nl'", containsString("Gabon"))
                .body("[81].'translations'.'hr'", containsString("Gabon"))
                .body("[81].'translations'.'fa'", containsString("گابن"))
                .body("[81].'flag'", containsString("https://restcountries.eu/data/gab.svg"))
                .body("[81].'regionalBlocs'.size()", equalTo(1))
                .body("[81].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[81].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[81].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[81].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[81].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[81].'cioc'", containsString("GAB"))
                .body("[82].'name'", containsString("Gambia"))
                .body("[82].'topLevelDomain'.size()", equalTo(1))
                .body("[82].'topLevelDomain'", hasItems(".gm"))
                .body("[82].'alpha2Code'", containsString("GM"))
                .body("[82].'alpha3Code'", containsString("GMB"))
                .body("[82].'callingCodes'.size()", equalTo(1))
                .body("[82].'callingCodes'", hasItems("220"))
                .body("[82].'capital'", containsString("Banjul"))
                .body("[82].'altSpellings'.size()", equalTo(2))
                .body("[82].'altSpellings'", hasItems("GM", "Republic of the Gambia"))
                .body("[82].'region'", containsString("Africa"))
                .body("[82].'subregion'", containsString("Western Africa"))
                .body("[82].'population'", numberMatches(1882450.0))
                .body("[82].'latlng'.size()", equalTo(2))
                .body("[82].'latlng'[0]", numberMatches(13.46666666))
                .body("[82].'latlng'[1]", numberMatches(-16.56666666))
                .body("[82].'demonym'", containsString("Gambian"))
                .body("[82].'area'", numberMatches(11295.0))
                .body("[82].'gini'", nullValue())
                .body("[82].'timezones'.size()", equalTo(1))
                .body("[82].'timezones'", hasItems("UTC+00:00"))
                .body("[82].'borders'.size()", equalTo(1))
                .body("[82].'borders'", hasItems("SEN"))
                .body("[82].'nativeName'", containsString("Gambia"))
                .body("[82].'numericCode'", containsString("270"))
                .body("[82].'currencies'.size()", equalTo(1))
                .body("[82].'currencies'[0].'code'", containsString("GMD"))
                .body("[82].'currencies'[0].'name'", containsString("Gambian dalasi"))
                .body("[82].'currencies'[0].'symbol'", containsString("D"))
                .body("[82].'languages'.size()", equalTo(1))
                .body("[82].'languages'[0].'iso639_1'", containsString("en"))
                .body("[82].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[82].'languages'[0].'name'", containsString("English"))
                .body("[82].'languages'[0].'nativeName'", containsString("English"))
                .body("[82].'translations'.'de'", containsString("Gambia"))
                .body("[82].'translations'.'es'", containsString("Gambia"))
                .body("[82].'translations'.'fr'", containsString("Gambie"))
                .body("[82].'translations'.'ja'", containsString("ガンビア"))
                .body("[82].'translations'.'it'", containsString("Gambia"))
                .body("[82].'translations'.'br'", containsString("Gâmbia"))
                .body("[82].'translations'.'pt'", containsString("Gâmbia"))
                .body("[82].'translations'.'nl'", containsString("Gambia"))
                .body("[82].'translations'.'hr'", containsString("Gambija"))
                .body("[82].'translations'.'fa'", containsString("گامبیا"))
                .body("[82].'flag'", containsString("https://restcountries.eu/data/gmb.svg"))
                .body("[82].'regionalBlocs'.size()", equalTo(1))
                .body("[82].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[82].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[82].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[82].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[82].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[82].'cioc'", containsString("GAM"))
                .body("[83].'name'", containsString("Georgia"))
                .body("[83].'topLevelDomain'.size()", equalTo(1))
                .body("[83].'topLevelDomain'", hasItems(".ge"))
                .body("[83].'alpha2Code'", containsString("GE"))
                .body("[83].'alpha3Code'", containsString("GEO"))
                .body("[83].'callingCodes'.size()", equalTo(1))
                .body("[83].'callingCodes'", hasItems("995"))
                .body("[83].'capital'", containsString("Tbilisi"))
                .body("[83].'altSpellings'.size()", equalTo(2))
                .body("[83].'altSpellings'", hasItems("GE", "Sakartvelo"))
                .body("[83].'region'", containsString("Asia"))
                .body("[83].'subregion'", containsString("Western Asia"))
                .body("[83].'population'", numberMatches(3720400.0))
                .body("[83].'latlng'.size()", equalTo(2))
                .body("[83].'latlng'[0]", numberMatches(42.0))
                .body("[83].'latlng'[1]", numberMatches(43.5))
                .body("[83].'demonym'", containsString("Georgian"))
                .body("[83].'area'", numberMatches(69700.0))
                .body("[83].'gini'", numberMatches(41.3))
                .body("[83].'timezones'.size()", equalTo(1))
                .body("[83].'timezones'", hasItems("UTC-05:00"))
                .body("[83].'borders'.size()", equalTo(4))
                .body("[83].'borders'", hasItems("ARM", "AZE", "RUS", "TUR"))
                .body("[83].'nativeName'", containsString("საქართველო"))
                .body("[83].'numericCode'", containsString("268"))
                .body("[83].'currencies'.size()", equalTo(1))
                .body("[83].'currencies'[0].'code'", containsString("GEL"))
                .body("[83].'currencies'[0].'name'", containsString("Georgian Lari"))
                .body("[83].'currencies'[0].'symbol'", containsString("ლ"))
                .body("[83].'languages'.size()", equalTo(1))
                .body("[83].'languages'[0].'iso639_1'", containsString("ka"))
                .body("[83].'languages'[0].'iso639_2'", containsString("kat"))
                .body("[83].'languages'[0].'name'", containsString("Georgian"))
                .body("[83].'languages'[0].'nativeName'", containsString("ქართული"))
                .body("[83].'translations'.'de'", containsString("Georgien"))
                .body("[83].'translations'.'es'", containsString("Georgia"))
                .body("[83].'translations'.'fr'", containsString("Géorgie"))
                .body("[83].'translations'.'ja'", containsString("グルジア"))
                .body("[83].'translations'.'it'", containsString("Georgia"))
                .body("[83].'translations'.'br'", containsString("Geórgia"))
                .body("[83].'translations'.'pt'", containsString("Geórgia"))
                .body("[83].'translations'.'nl'", containsString("Georgië"))
                .body("[83].'translations'.'hr'", containsString("Gruzija"))
                .body("[83].'translations'.'fa'", containsString("گرجستان"))
                .body("[83].'flag'", containsString("https://restcountries.eu/data/geo.svg"))
                .body("[83].'regionalBlocs'.size()", equalTo(0))
                .body("[83].'cioc'", containsString("GEO"))
                .body("[84].'name'", containsString("Germany"))
                .body("[84].'topLevelDomain'.size()", equalTo(1))
                .body("[84].'topLevelDomain'", hasItems(".de"))
                .body("[84].'alpha2Code'", containsString("DE"))
                .body("[84].'alpha3Code'", containsString("DEU"))
                .body("[84].'callingCodes'.size()", equalTo(1))
                .body("[84].'callingCodes'", hasItems("49"))
                .body("[84].'capital'", containsString("Berlin"))
                .body("[84].'altSpellings'.size()", equalTo(3))
                .body("[84].'altSpellings'", hasItems("DE", "Federal Republic of Germany", "Bundesrepublik Deutschland"))
                .body("[84].'region'", containsString("Europe"))
                .body("[84].'subregion'", containsString("Western Europe"))
                .body("[84].'population'", numberMatches(8.17709E7))
                .body("[84].'latlng'.size()", equalTo(2))
                .body("[84].'latlng'[0]", numberMatches(51.0))
                .body("[84].'latlng'[1]", numberMatches(9.0))
                .body("[84].'demonym'", containsString("German"))
                .body("[84].'area'", numberMatches(357114.0))
                .body("[84].'gini'", numberMatches(28.3))
                .body("[84].'timezones'.size()", equalTo(1))
                .body("[84].'timezones'", hasItems("UTC+01:00"))
                .body("[84].'borders'.size()", equalTo(9))
                .body("[84].'borders'", hasItems("AUT", "BEL", "CZE", "DNK", "FRA", "LUX", "NLD", "POL", "CHE"))
                .body("[84].'nativeName'", containsString("Deutschland"))
                .body("[84].'numericCode'", containsString("276"))
                .body("[84].'currencies'.size()", equalTo(1))
                .body("[84].'currencies'[0].'code'", containsString("EUR"))
                .body("[84].'currencies'[0].'name'", containsString("Euro"))
                .body("[84].'currencies'[0].'symbol'", containsString("€"))
                .body("[84].'languages'.size()", equalTo(1))
                .body("[84].'languages'[0].'iso639_1'", containsString("de"))
                .body("[84].'languages'[0].'iso639_2'", containsString("deu"))
                .body("[84].'languages'[0].'name'", containsString("German"))
                .body("[84].'languages'[0].'nativeName'", containsString("Deutsch"))
                .body("[84].'translations'.'de'", containsString("Deutschland"))
                .body("[84].'translations'.'es'", containsString("Alemania"))
                .body("[84].'translations'.'fr'", containsString("Allemagne"))
                .body("[84].'translations'.'ja'", containsString("ドイツ"))
                .body("[84].'translations'.'it'", containsString("Germania"))
                .body("[84].'translations'.'br'", containsString("Alemanha"))
                .body("[84].'translations'.'pt'", containsString("Alemanha"))
                .body("[84].'translations'.'nl'", containsString("Duitsland"))
                .body("[84].'translations'.'hr'", containsString("Njemačka"))
                .body("[84].'translations'.'fa'", containsString("آلمان"))
                .body("[84].'flag'", containsString("https://restcountries.eu/data/deu.svg"))
                .body("[84].'regionalBlocs'.size()", equalTo(1))
                .body("[84].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[84].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[84].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[84].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[84].'cioc'", containsString("GER"))
                .body("[85].'name'", containsString("Ghana"))
                .body("[85].'topLevelDomain'.size()", equalTo(1))
                .body("[85].'topLevelDomain'", hasItems(".gh"))
                .body("[85].'alpha2Code'", containsString("GH"))
                .body("[85].'alpha3Code'", containsString("GHA"))
                .body("[85].'callingCodes'.size()", equalTo(1))
                .body("[85].'callingCodes'", hasItems("233"))
                .body("[85].'capital'", containsString("Accra"))
                .body("[85].'altSpellings'.size()", equalTo(1))
                .body("[85].'altSpellings'", hasItems("GH"))
                .body("[85].'region'", containsString("Africa"))
                .body("[85].'subregion'", containsString("Western Africa"))
                .body("[85].'population'", numberMatches(2.7670174E7))
                .body("[85].'latlng'.size()", equalTo(2))
                .body("[85].'latlng'[0]", numberMatches(8.0))
                .body("[85].'latlng'[1]", numberMatches(-2.0))
                .body("[85].'demonym'", containsString("Ghanaian"))
                .body("[85].'area'", numberMatches(238533.0))
                .body("[85].'gini'", numberMatches(42.8))
                .body("[85].'timezones'.size()", equalTo(1))
                .body("[85].'timezones'", hasItems("UTC"))
                .body("[85].'borders'.size()", equalTo(3))
                .body("[85].'borders'", hasItems("BFA", "CIV", "TGO"))
                .body("[85].'nativeName'", containsString("Ghana"))
                .body("[85].'numericCode'", containsString("288"))
                .body("[85].'currencies'.size()", equalTo(1))
                .body("[85].'currencies'[0].'code'", containsString("GHS"))
                .body("[85].'currencies'[0].'name'", containsString("Ghanaian cedi"))
                .body("[85].'currencies'[0].'symbol'", containsString("₵"))
                .body("[85].'languages'.size()", equalTo(1))
                .body("[85].'languages'[0].'iso639_1'", containsString("en"))
                .body("[85].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[85].'languages'[0].'name'", containsString("English"))
                .body("[85].'languages'[0].'nativeName'", containsString("English"))
                .body("[85].'translations'.'de'", containsString("Ghana"))
                .body("[85].'translations'.'es'", containsString("Ghana"))
                .body("[85].'translations'.'fr'", containsString("Ghana"))
                .body("[85].'translations'.'ja'", containsString("ガーナ"))
                .body("[85].'translations'.'it'", containsString("Ghana"))
                .body("[85].'translations'.'br'", containsString("Gana"))
                .body("[85].'translations'.'pt'", containsString("Gana"))
                .body("[85].'translations'.'nl'", containsString("Ghana"))
                .body("[85].'translations'.'hr'", containsString("Gana"))
                .body("[85].'translations'.'fa'", containsString("غنا"))
                .body("[85].'flag'", containsString("https://restcountries.eu/data/gha.svg"))
                .body("[85].'regionalBlocs'.size()", equalTo(1))
                .body("[85].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[85].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[85].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[85].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[85].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[85].'cioc'", containsString("GHA"))
                .body("[86].'name'", containsString("Gibraltar"))
                .body("[86].'topLevelDomain'.size()", equalTo(1))
                .body("[86].'topLevelDomain'", hasItems(".gi"))
                .body("[86].'alpha2Code'", containsString("GI"))
                .body("[86].'alpha3Code'", containsString("GIB"))
                .body("[86].'callingCodes'.size()", equalTo(1))
                .body("[86].'callingCodes'", hasItems("350"))
                .body("[86].'capital'", containsString("Gibraltar"))
                .body("[86].'altSpellings'.size()", equalTo(1))
                .body("[86].'altSpellings'", hasItems("GI"))
                .body("[86].'region'", containsString("Europe"))
                .body("[86].'subregion'", containsString("Southern Europe"))
                .body("[86].'population'", numberMatches(33140.0))
                .body("[86].'latlng'.size()", equalTo(2))
                .body("[86].'latlng'[0]", numberMatches(36.13333333))
                .body("[86].'latlng'[1]", numberMatches(-5.35))
                .body("[86].'demonym'", containsString("Gibraltar"))
                .body("[86].'area'", numberMatches(6.0))
                .body("[86].'gini'", nullValue())
                .body("[86].'timezones'.size()", equalTo(1))
                .body("[86].'timezones'", hasItems("UTC+01:00"))
                .body("[86].'borders'.size()", equalTo(1))
                .body("[86].'borders'", hasItems("ESP"))
                .body("[86].'nativeName'", containsString("Gibraltar"))
                .body("[86].'numericCode'", containsString("292"))
                .body("[86].'currencies'.size()", equalTo(1))
                .body("[86].'currencies'[0].'code'", containsString("GIP"))
                .body("[86].'currencies'[0].'name'", containsString("Gibraltar pound"))
                .body("[86].'currencies'[0].'symbol'", containsString("£"))
                .body("[86].'languages'.size()", equalTo(1))
                .body("[86].'languages'[0].'iso639_1'", containsString("en"))
                .body("[86].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[86].'languages'[0].'name'", containsString("English"))
                .body("[86].'languages'[0].'nativeName'", containsString("English"))
                .body("[86].'translations'.'de'", containsString("Gibraltar"))
                .body("[86].'translations'.'es'", containsString("Gibraltar"))
                .body("[86].'translations'.'fr'", containsString("Gibraltar"))
                .body("[86].'translations'.'ja'", containsString("ジブラルタル"))
                .body("[86].'translations'.'it'", containsString("Gibilterra"))
                .body("[86].'translations'.'br'", containsString("Gibraltar"))
                .body("[86].'translations'.'pt'", containsString("Gibraltar"))
                .body("[86].'translations'.'nl'", containsString("Gibraltar"))
                .body("[86].'translations'.'hr'", containsString("Gibraltar"))
                .body("[86].'translations'.'fa'", containsString("جبل‌طارق"))
                .body("[86].'flag'", containsString("https://restcountries.eu/data/gib.svg"))
                .body("[86].'regionalBlocs'.size()", equalTo(1))
                .body("[86].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[86].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[86].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[86].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[86].'cioc'", containsString(""))
                .body("[87].'name'", containsString("Greece"))
                .body("[87].'topLevelDomain'.size()", equalTo(1))
                .body("[87].'topLevelDomain'", hasItems(".gr"))
                .body("[87].'alpha2Code'", containsString("GR"))
                .body("[87].'alpha3Code'", containsString("GRC"))
                .body("[87].'callingCodes'.size()", equalTo(1))
                .body("[87].'callingCodes'", hasItems("30"))
                .body("[87].'capital'", containsString("Athens"))
                .body("[87].'altSpellings'.size()", equalTo(4))
                .body("[87].'altSpellings'", hasItems("GR", "Elláda", "Hellenic Republic", "Ελληνική Δημοκρατία"))
                .body("[87].'region'", containsString("Europe"))
                .body("[87].'subregion'", containsString("Southern Europe"))
                .body("[87].'population'", numberMatches(1.0858018E7))
                .body("[87].'latlng'.size()", equalTo(2))
                .body("[87].'latlng'[0]", numberMatches(39.0))
                .body("[87].'latlng'[1]", numberMatches(22.0))
                .body("[87].'demonym'", containsString("Greek"))
                .body("[87].'area'", numberMatches(131990.0))
                .body("[87].'gini'", numberMatches(34.3))
                .body("[87].'timezones'.size()", equalTo(1))
                .body("[87].'timezones'", hasItems("UTC+02:00"))
                .body("[87].'borders'.size()", equalTo(4))
                .body("[87].'borders'", hasItems("ALB", "BGR", "TUR", "MKD"))
                .body("[87].'nativeName'", containsString("Ελλάδα"))
                .body("[87].'numericCode'", containsString("300"))
                .body("[87].'currencies'.size()", equalTo(1))
                .body("[87].'currencies'[0].'code'", containsString("EUR"))
                .body("[87].'currencies'[0].'name'", containsString("Euro"))
                .body("[87].'currencies'[0].'symbol'", containsString("€"))
                .body("[87].'languages'.size()", equalTo(1))
                .body("[87].'languages'[0].'iso639_1'", containsString("el"))
                .body("[87].'languages'[0].'iso639_2'", containsString("ell"))
                .body("[87].'languages'[0].'name'", containsString("Greek (modern)"))
                .body("[87].'languages'[0].'nativeName'", containsString("ελληνικά"))
                .body("[87].'translations'.'de'", containsString("Griechenland"))
                .body("[87].'translations'.'es'", containsString("Grecia"))
                .body("[87].'translations'.'fr'", containsString("Grèce"))
                .body("[87].'translations'.'ja'", containsString("ギリシャ"))
                .body("[87].'translations'.'it'", containsString("Grecia"))
                .body("[87].'translations'.'br'", containsString("Grécia"))
                .body("[87].'translations'.'pt'", containsString("Grécia"))
                .body("[87].'translations'.'nl'", containsString("Griekenland"))
                .body("[87].'translations'.'hr'", containsString("Grčka"))
                .body("[87].'translations'.'fa'", containsString("یونان"))
                .body("[87].'flag'", containsString("https://restcountries.eu/data/grc.svg"))
                .body("[87].'regionalBlocs'.size()", equalTo(1))
                .body("[87].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[87].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[87].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[87].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[87].'cioc'", containsString("GRE"))
                .body("[88].'name'", containsString("Greenland"))
                .body("[88].'topLevelDomain'.size()", equalTo(1))
                .body("[88].'topLevelDomain'", hasItems(".gl"))
                .body("[88].'alpha2Code'", containsString("GL"))
                .body("[88].'alpha3Code'", containsString("GRL"))
                .body("[88].'callingCodes'.size()", equalTo(1))
                .body("[88].'callingCodes'", hasItems("299"))
                .body("[88].'capital'", containsString("Nuuk"))
                .body("[88].'altSpellings'.size()", equalTo(2))
                .body("[88].'altSpellings'", hasItems("GL", "Grønland"))
                .body("[88].'region'", containsString("Americas"))
                .body("[88].'subregion'", containsString("Northern America"))
                .body("[88].'population'", numberMatches(55847.0))
                .body("[88].'latlng'.size()", equalTo(2))
                .body("[88].'latlng'[0]", numberMatches(72.0))
                .body("[88].'latlng'[1]", numberMatches(-40.0))
                .body("[88].'demonym'", containsString("Greenlandic"))
                .body("[88].'area'", numberMatches(2166086.0))
                .body("[88].'gini'", nullValue())
                .body("[88].'timezones'.size()", equalTo(4))
                .body("[88].'timezones'", hasItems("UTC-04:00", "UTC-03:00", "UTC-01:00", "UTC+00:00"))
                .body("[88].'borders'.size()", equalTo(0))
                .body("[88].'nativeName'", containsString("Kalaallit Nunaat"))
                .body("[88].'numericCode'", containsString("304"))
                .body("[88].'currencies'.size()", equalTo(1))
                .body("[88].'currencies'[0].'code'", containsString("DKK"))
                .body("[88].'currencies'[0].'name'", containsString("Danish krone"))
                .body("[88].'currencies'[0].'symbol'", containsString("kr"))
                .body("[88].'languages'.size()", equalTo(1))
                .body("[88].'languages'[0].'iso639_1'", containsString("kl"))
                .body("[88].'languages'[0].'iso639_2'", containsString("kal"))
                .body("[88].'languages'[0].'name'", containsString("Kalaallisut"))
                .body("[88].'languages'[0].'nativeName'", containsString("kalaallisut"))
                .body("[88].'translations'.'de'", containsString("Grönland"))
                .body("[88].'translations'.'es'", containsString("Groenlandia"))
                .body("[88].'translations'.'fr'", containsString("Groenland"))
                .body("[88].'translations'.'ja'", containsString("グリーンランド"))
                .body("[88].'translations'.'it'", containsString("Groenlandia"))
                .body("[88].'translations'.'br'", containsString("Groelândia"))
                .body("[88].'translations'.'pt'", containsString("Gronelândia"))
                .body("[88].'translations'.'nl'", containsString("Groenland"))
                .body("[88].'translations'.'hr'", containsString("Grenland"))
                .body("[88].'translations'.'fa'", containsString("گرینلند"))
                .body("[88].'flag'", containsString("https://restcountries.eu/data/grl.svg"))
                .body("[88].'regionalBlocs'.size()", equalTo(0))
                .body("[88].'cioc'", containsString(""))
                .body("[89].'name'", containsString("Grenada"))
                .body("[89].'topLevelDomain'.size()", equalTo(1))
                .body("[89].'topLevelDomain'", hasItems(".gd"))
                .body("[89].'alpha2Code'", containsString("GD"))
                .body("[89].'alpha3Code'", containsString("GRD"))
                .body("[89].'callingCodes'.size()", equalTo(1))
                .body("[89].'callingCodes'", hasItems("1"))
                .body("[89].'capital'", containsString("St. George's"))
                .body("[89].'altSpellings'.size()", equalTo(1))
                .body("[89].'altSpellings'", hasItems("GD"))
                .body("[89].'region'", containsString("Americas"))
                .body("[89].'subregion'", containsString("Caribbean"))
                .body("[89].'population'", numberMatches(103328.0))
                .body("[89].'latlng'.size()", equalTo(2))
                .body("[89].'latlng'[0]", numberMatches(12.11666666))
                .body("[89].'latlng'[1]", numberMatches(-61.66666666))
                .body("[89].'demonym'", containsString("Grenadian"))
                .body("[89].'area'", numberMatches(344.0))
                .body("[89].'gini'", nullValue())
                .body("[89].'timezones'.size()", equalTo(1))
                .body("[89].'timezones'", hasItems("UTC-04:00"))
                .body("[89].'borders'.size()", equalTo(0))
                .body("[89].'nativeName'", containsString("Grenada"))
                .body("[89].'numericCode'", containsString("308"))
                .body("[89].'currencies'.size()", equalTo(1))
                .body("[89].'currencies'[0].'code'", containsString("XCD"))
                .body("[89].'currencies'[0].'name'", containsString("East Caribbean dollar"))
                .body("[89].'currencies'[0].'symbol'", containsString("$"))
                .body("[89].'languages'.size()", equalTo(1))
                .body("[89].'languages'[0].'iso639_1'", containsString("en"))
                .body("[89].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[89].'languages'[0].'name'", containsString("English"))
                .body("[89].'languages'[0].'nativeName'", containsString("English"))
                .body("[89].'translations'.'de'", containsString("Grenada"))
                .body("[89].'translations'.'es'", containsString("Grenada"))
                .body("[89].'translations'.'fr'", containsString("Grenade"))
                .body("[89].'translations'.'ja'", containsString("グレナダ"))
                .body("[89].'translations'.'it'", containsString("Grenada"))
                .body("[89].'translations'.'br'", containsString("Granada"))
                .body("[89].'translations'.'pt'", containsString("Granada"))
                .body("[89].'translations'.'nl'", containsString("Grenada"))
                .body("[89].'translations'.'hr'", containsString("Grenada"))
                .body("[89].'translations'.'fa'", containsString("گرنادا"))
                .body("[89].'flag'", containsString("https://restcountries.eu/data/grd.svg"))
                .body("[89].'regionalBlocs'.size()", equalTo(1))
                .body("[89].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[89].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[89].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[89].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[89].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[89].'cioc'", containsString("GRN"))
                .body("[90].'name'", containsString("Guadeloupe"))
                .body("[90].'topLevelDomain'.size()", equalTo(1))
                .body("[90].'topLevelDomain'", hasItems(".gp"))
                .body("[90].'alpha2Code'", containsString("GP"))
                .body("[90].'alpha3Code'", containsString("GLP"))
                .body("[90].'callingCodes'.size()", equalTo(1))
                .body("[90].'callingCodes'", hasItems("590"))
                .body("[90].'capital'", containsString("Basse-Terre"))
                .body("[90].'altSpellings'.size()", equalTo(2))
                .body("[90].'altSpellings'", hasItems("GP", "Gwadloup"))
                .body("[90].'region'", containsString("Americas"))
                .body("[90].'subregion'", containsString("Caribbean"))
                .body("[90].'population'", numberMatches(400132.0))
                .body("[90].'latlng'.size()", equalTo(2))
                .body("[90].'latlng'[0]", numberMatches(16.25))
                .body("[90].'latlng'[1]", numberMatches(-61.583333))
                .body("[90].'demonym'", containsString("Guadeloupian"))
                .body("[90].'area'", nullValue())
                .body("[90].'gini'", nullValue())
                .body("[90].'timezones'.size()", equalTo(1))
                .body("[90].'timezones'", hasItems("UTC-04:00"))
                .body("[90].'borders'.size()", equalTo(0))
                .body("[90].'nativeName'", containsString("Guadeloupe"))
                .body("[90].'numericCode'", containsString("312"))
                .body("[90].'currencies'.size()", equalTo(1))
                .body("[90].'currencies'[0].'code'", containsString("EUR"))
                .body("[90].'currencies'[0].'name'", containsString("Euro"))
                .body("[90].'currencies'[0].'symbol'", containsString("€"))
                .body("[90].'languages'.size()", equalTo(1))
                .body("[90].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[90].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[90].'languages'[0].'name'", containsString("French"))
                .body("[90].'languages'[0].'nativeName'", containsString("français"))
                .body("[90].'translations'.'de'", containsString("Guadeloupe"))
                .body("[90].'translations'.'es'", containsString("Guadalupe"))
                .body("[90].'translations'.'fr'", containsString("Guadeloupe"))
                .body("[90].'translations'.'ja'", containsString("グアドループ"))
                .body("[90].'translations'.'it'", containsString("Guadeloupa"))
                .body("[90].'translations'.'br'", containsString("Guadalupe"))
                .body("[90].'translations'.'pt'", containsString("Guadalupe"))
                .body("[90].'translations'.'nl'", containsString("Guadeloupe"))
                .body("[90].'translations'.'hr'", containsString("Gvadalupa"))
                .body("[90].'translations'.'fa'", containsString("جزیره گوادلوپ"))
                .body("[90].'flag'", containsString("https://restcountries.eu/data/glp.svg"))
                .body("[90].'regionalBlocs'.size()", equalTo(0))
                .body("[90].'cioc'", containsString(""))
                .body("[91].'name'", containsString("Guam"))
                .body("[91].'topLevelDomain'.size()", equalTo(1))
                .body("[91].'topLevelDomain'", hasItems(".gu"))
                .body("[91].'alpha2Code'", containsString("GU"))
                .body("[91].'alpha3Code'", containsString("GUM"))
                .body("[91].'callingCodes'.size()", equalTo(1))
                .body("[91].'callingCodes'", hasItems("1"))
                .body("[91].'capital'", containsString("Hagåtña"))
                .body("[91].'altSpellings'.size()", equalTo(2))
                .body("[91].'altSpellings'", hasItems("GU", "Guåhån"))
                .body("[91].'region'", containsString("Oceania"))
                .body("[91].'subregion'", containsString("Micronesia"))
                .body("[91].'population'", numberMatches(184200.0))
                .body("[91].'latlng'.size()", equalTo(2))
                .body("[91].'latlng'[0]", numberMatches(13.46666666))
                .body("[91].'latlng'[1]", numberMatches(144.78333333))
                .body("[91].'demonym'", containsString("Guamanian"))
                .body("[91].'area'", numberMatches(549.0))
                .body("[91].'gini'", nullValue())
                .body("[91].'timezones'.size()", equalTo(1))
                .body("[91].'timezones'", hasItems("UTC+10:00"))
                .body("[91].'borders'.size()", equalTo(0))
                .body("[91].'nativeName'", containsString("Guam"))
                .body("[91].'numericCode'", containsString("316"))
                .body("[91].'currencies'.size()", equalTo(1))
                .body("[91].'currencies'[0].'code'", containsString("USD"))
                .body("[91].'currencies'[0].'name'", containsString("United States dollar"))
                .body("[91].'currencies'[0].'symbol'", containsString("$"))
                .body("[91].'languages'.size()", equalTo(3))
                .body("[91].'languages'[0].'iso639_1'", containsString("en"))
                .body("[91].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[91].'languages'[0].'name'", containsString("English"))
                .body("[91].'languages'[0].'nativeName'", containsString("English"))
                .body("[91].'languages'[1].'iso639_1'", containsString("ch"))
                .body("[91].'languages'[1].'iso639_2'", containsString("cha"))
                .body("[91].'languages'[1].'name'", containsString("Chamorro"))
                .body("[91].'languages'[1].'nativeName'", containsString("Chamoru"))
                .body("[91].'languages'[2].'iso639_1'", containsString("es"))
                .body("[91].'languages'[2].'iso639_2'", containsString("spa"))
                .body("[91].'languages'[2].'name'", containsString("Spanish"))
                .body("[91].'languages'[2].'nativeName'", containsString("Español"))
                .body("[91].'translations'.'de'", containsString("Guam"))
                .body("[91].'translations'.'es'", containsString("Guam"))
                .body("[91].'translations'.'fr'", containsString("Guam"))
                .body("[91].'translations'.'ja'", containsString("グアム"))
                .body("[91].'translations'.'it'", containsString("Guam"))
                .body("[91].'translations'.'br'", containsString("Guam"))
                .body("[91].'translations'.'pt'", containsString("Guame"))
                .body("[91].'translations'.'nl'", containsString("Guam"))
                .body("[91].'translations'.'hr'", containsString("Guam"))
                .body("[91].'translations'.'fa'", containsString("گوام"))
                .body("[91].'flag'", containsString("https://restcountries.eu/data/gum.svg"))
                .body("[91].'regionalBlocs'.size()", equalTo(0))
                .body("[91].'cioc'", containsString("GUM"))
                .body("[92].'name'", containsString("Guatemala"))
                .body("[92].'topLevelDomain'.size()", equalTo(1))
                .body("[92].'topLevelDomain'", hasItems(".gt"))
                .body("[92].'alpha2Code'", containsString("GT"))
                .body("[92].'alpha3Code'", containsString("GTM"))
                .body("[92].'callingCodes'.size()", equalTo(1))
                .body("[92].'callingCodes'", hasItems("502"))
                .body("[92].'capital'", containsString("Guatemala City"))
                .body("[92].'altSpellings'.size()", equalTo(1))
                .body("[92].'altSpellings'", hasItems("GT"))
                .body("[92].'region'", containsString("Americas"))
                .body("[92].'subregion'", containsString("Central America"))
                .body("[92].'population'", numberMatches(1.6176133E7))
                .body("[92].'latlng'.size()", equalTo(2))
                .body("[92].'latlng'[0]", numberMatches(15.5))
                .body("[92].'latlng'[1]", numberMatches(-90.25))
                .body("[92].'demonym'", containsString("Guatemalan"))
                .body("[92].'area'", numberMatches(108889.0))
                .body("[92].'gini'", numberMatches(55.9))
                .body("[92].'timezones'.size()", equalTo(1))
                .body("[92].'timezones'", hasItems("UTC-06:00"))
                .body("[92].'borders'.size()", equalTo(4))
                .body("[92].'borders'", hasItems("BLZ", "SLV", "HND", "MEX"))
                .body("[92].'nativeName'", containsString("Guatemala"))
                .body("[92].'numericCode'", containsString("320"))
                .body("[92].'currencies'.size()", equalTo(1))
                .body("[92].'currencies'[0].'code'", containsString("GTQ"))
                .body("[92].'currencies'[0].'name'", containsString("Guatemalan quetzal"))
                .body("[92].'currencies'[0].'symbol'", containsString("Q"))
                .body("[92].'languages'.size()", equalTo(1))
                .body("[92].'languages'[0].'iso639_1'", containsString("es"))
                .body("[92].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[92].'languages'[0].'name'", containsString("Spanish"))
                .body("[92].'languages'[0].'nativeName'", containsString("Español"))
                .body("[92].'translations'.'de'", containsString("Guatemala"))
                .body("[92].'translations'.'es'", containsString("Guatemala"))
                .body("[92].'translations'.'fr'", containsString("Guatemala"))
                .body("[92].'translations'.'ja'", containsString("グアテマラ"))
                .body("[92].'translations'.'it'", containsString("Guatemala"))
                .body("[92].'translations'.'br'", containsString("Guatemala"))
                .body("[92].'translations'.'pt'", containsString("Guatemala"))
                .body("[92].'translations'.'nl'", containsString("Guatemala"))
                .body("[92].'translations'.'hr'", containsString("Gvatemala"))
                .body("[92].'translations'.'fa'", containsString("گواتمالا"))
                .body("[92].'flag'", containsString("https://restcountries.eu/data/gtm.svg"))
                .body("[92].'regionalBlocs'.size()", equalTo(1))
                .body("[92].'regionalBlocs'[0].'acronym'", containsString("CAIS"))
                .body("[92].'regionalBlocs'[0].'name'", containsString("Central American Integration System"))
                .body("[92].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(1))
                .body("[92].'regionalBlocs'[0].'otherAcronyms'", hasItems("SICA"))
                .body("[92].'regionalBlocs'[0].'otherNames'.size()", equalTo(1))
                .body("[92].'regionalBlocs'[0].'otherNames'", hasItems("Sistema de la Integración Centroamericana,"))
                .body("[92].'cioc'", containsString("GUA"))
                .body("[93].'name'", containsString("Guernsey"))
                .body("[93].'topLevelDomain'.size()", equalTo(1))
                .body("[93].'topLevelDomain'", hasItems(".gg"))
                .body("[93].'alpha2Code'", containsString("GG"))
                .body("[93].'alpha3Code'", containsString("GGY"))
                .body("[93].'callingCodes'.size()", equalTo(1))
                .body("[93].'callingCodes'", hasItems("44"))
                .body("[93].'capital'", containsString("St. Peter Port"))
                .body("[93].'altSpellings'.size()", equalTo(3))
                .body("[93].'altSpellings'", hasItems("GG", "Bailiwick of Guernsey", "Bailliage de Guernesey"))
                .body("[93].'region'", containsString("Europe"))
                .body("[93].'subregion'", containsString("Northern Europe"))
                .body("[93].'population'", numberMatches(62999.0))
                .body("[93].'latlng'.size()", equalTo(2))
                .body("[93].'latlng'[0]", numberMatches(49.46666666))
                .body("[93].'latlng'[1]", numberMatches(-2.58333333))
                .body("[93].'demonym'", containsString("Channel Islander"))
                .body("[93].'area'", numberMatches(78.0))
                .body("[93].'gini'", nullValue())
                .body("[93].'timezones'.size()", equalTo(1))
                .body("[93].'timezones'", hasItems("UTC+00:00"))
                .body("[93].'borders'.size()", equalTo(0))
                .body("[93].'nativeName'", containsString("Guernsey"))
                .body("[93].'numericCode'", containsString("831"))
                .body("[93].'currencies'.size()", equalTo(2))
                .body("[93].'currencies'[0].'code'", containsString("GBP"))
                .body("[93].'currencies'[0].'name'", containsString("British pound"))
                .body("[93].'currencies'[0].'symbol'", containsString("£"))
                .body("[93].'currencies'[1].'code'", containsString("(none)"))
                .body("[93].'currencies'[1].'name'", containsString("Guernsey pound"))
                .body("[93].'currencies'[1].'symbol'", containsString("£"))
                .body("[93].'languages'.size()", equalTo(2))
                .body("[93].'languages'[0].'iso639_1'", containsString("en"))
                .body("[93].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[93].'languages'[0].'name'", containsString("English"))
                .body("[93].'languages'[0].'nativeName'", containsString("English"))
                .body("[93].'languages'[1].'iso639_1'", containsString("fr"))
                .body("[93].'languages'[1].'iso639_2'", containsString("fra"))
                .body("[93].'languages'[1].'name'", containsString("French"))
                .body("[93].'languages'[1].'nativeName'", containsString("français"))
                .body("[93].'translations'.'de'", containsString("Guernsey"))
                .body("[93].'translations'.'es'", containsString("Guernsey"))
                .body("[93].'translations'.'fr'", containsString("Guernesey"))
                .body("[93].'translations'.'ja'", containsString("ガーンジー"))
                .body("[93].'translations'.'it'", containsString("Guernsey"))
                .body("[93].'translations'.'br'", containsString("Guernsey"))
                .body("[93].'translations'.'pt'", containsString("Guernsey"))
                .body("[93].'translations'.'nl'", containsString("Guernsey"))
                .body("[93].'translations'.'hr'", containsString("Guernsey"))
                .body("[93].'translations'.'fa'", containsString("گرنزی"))
                .body("[93].'flag'", containsString("https://restcountries.eu/data/ggy.svg"))
                .body("[93].'regionalBlocs'.size()", equalTo(0))
                .body("[93].'cioc'", containsString(""))
                .body("[94].'name'", containsString("Guinea"))
                .body("[94].'topLevelDomain'.size()", equalTo(1))
                .body("[94].'topLevelDomain'", hasItems(".gn"))
                .body("[94].'alpha2Code'", containsString("GN"))
                .body("[94].'alpha3Code'", containsString("GIN"))
                .body("[94].'callingCodes'.size()", equalTo(1))
                .body("[94].'callingCodes'", hasItems("224"))
                .body("[94].'capital'", containsString("Conakry"))
                .body("[94].'altSpellings'.size()", equalTo(3))
                .body("[94].'altSpellings'", hasItems("GN", "Republic of Guinea", "République de Guinée"))
                .body("[94].'region'", containsString("Africa"))
                .body("[94].'subregion'", containsString("Western Africa"))
                .body("[94].'population'", numberMatches(1.2947E7))
                .body("[94].'latlng'.size()", equalTo(2))
                .body("[94].'latlng'[0]", numberMatches(11.0))
                .body("[94].'latlng'[1]", numberMatches(-10.0))
                .body("[94].'demonym'", containsString("Guinean"))
                .body("[94].'area'", numberMatches(245857.0))
                .body("[94].'gini'", numberMatches(39.4))
                .body("[94].'timezones'.size()", equalTo(1))
                .body("[94].'timezones'", hasItems("UTC"))
                .body("[94].'borders'.size()", equalTo(6))
                .body("[94].'borders'", hasItems("CIV", "GNB", "LBR", "MLI", "SEN", "SLE"))
                .body("[94].'nativeName'", containsString("Guinée"))
                .body("[94].'numericCode'", containsString("324"))
                .body("[94].'currencies'.size()", equalTo(1))
                .body("[94].'currencies'[0].'code'", containsString("GNF"))
                .body("[94].'currencies'[0].'name'", containsString("Guinean franc"))
                .body("[94].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[94].'languages'.size()", equalTo(2))
                .body("[94].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[94].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[94].'languages'[0].'name'", containsString("French"))
                .body("[94].'languages'[0].'nativeName'", containsString("français"))
                .body("[94].'languages'[1].'iso639_1'", containsString("ff"))
                .body("[94].'languages'[1].'iso639_2'", containsString("ful"))
                .body("[94].'languages'[1].'name'", containsString("Fula"))
                .body("[94].'languages'[1].'nativeName'", containsString("Fulfulde"))
                .body("[94].'translations'.'de'", containsString("Guinea"))
                .body("[94].'translations'.'es'", containsString("Guinea"))
                .body("[94].'translations'.'fr'", containsString("Guinée"))
                .body("[94].'translations'.'ja'", containsString("ギニア"))
                .body("[94].'translations'.'it'", containsString("Guinea"))
                .body("[94].'translations'.'br'", containsString("Guiné"))
                .body("[94].'translations'.'pt'", containsString("Guiné"))
                .body("[94].'translations'.'nl'", containsString("Guinee"))
                .body("[94].'translations'.'hr'", containsString("Gvineja"))
                .body("[94].'translations'.'fa'", containsString("گینه"))
                .body("[94].'flag'", containsString("https://restcountries.eu/data/gin.svg"))
                .body("[94].'regionalBlocs'.size()", equalTo(1))
                .body("[94].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[94].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[94].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[94].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[94].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[94].'cioc'", containsString("GUI"))
                .body("[95].'name'", containsString("Guinea-Bissau"))
                .body("[95].'topLevelDomain'.size()", equalTo(1))
                .body("[95].'topLevelDomain'", hasItems(".gw"))
                .body("[95].'alpha2Code'", containsString("GW"))
                .body("[95].'alpha3Code'", containsString("GNB"))
                .body("[95].'callingCodes'.size()", equalTo(1))
                .body("[95].'callingCodes'", hasItems("245"))
                .body("[95].'capital'", containsString("Bissau"))
                .body("[95].'altSpellings'.size()", equalTo(3))
                .body("[95].'altSpellings'", hasItems("GW", "Republic of Guinea-Bissau", "República da Guiné-Bissau"))
                .body("[95].'region'", containsString("Africa"))
                .body("[95].'subregion'", containsString("Western Africa"))
                .body("[95].'population'", numberMatches(1547777.0))
                .body("[95].'latlng'.size()", equalTo(2))
                .body("[95].'latlng'[0]", numberMatches(12.0))
                .body("[95].'latlng'[1]", numberMatches(-15.0))
                .body("[95].'demonym'", containsString("Guinea-Bissauan"))
                .body("[95].'area'", numberMatches(36125.0))
                .body("[95].'gini'", numberMatches(35.5))
                .body("[95].'timezones'.size()", equalTo(1))
                .body("[95].'timezones'", hasItems("UTC"))
                .body("[95].'borders'.size()", equalTo(2))
                .body("[95].'borders'", hasItems("GIN", "SEN"))
                .body("[95].'nativeName'", containsString("Guiné-Bissau"))
                .body("[95].'numericCode'", containsString("624"))
                .body("[95].'currencies'.size()", equalTo(1))
                .body("[95].'currencies'[0].'code'", containsString("XOF"))
                .body("[95].'currencies'[0].'name'", containsString("West African CFA franc"))
                .body("[95].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[95].'languages'.size()", equalTo(1))
                .body("[95].'languages'[0].'iso639_1'", containsString("pt"))
                .body("[95].'languages'[0].'iso639_2'", containsString("por"))
                .body("[95].'languages'[0].'name'", containsString("Portuguese"))
                .body("[95].'languages'[0].'nativeName'", containsString("Português"))
                .body("[95].'translations'.'de'", containsString("Guinea-Bissau"))
                .body("[95].'translations'.'es'", containsString("Guinea-Bisáu"))
                .body("[95].'translations'.'fr'", containsString("Guinée-Bissau"))
                .body("[95].'translations'.'ja'", containsString("ギニアビサウ"))
                .body("[95].'translations'.'it'", containsString("Guinea-Bissau"))
                .body("[95].'translations'.'br'", containsString("Guiné-Bissau"))
                .body("[95].'translations'.'pt'", containsString("Guiné-Bissau"))
                .body("[95].'translations'.'nl'", containsString("Guinee-Bissau"))
                .body("[95].'translations'.'hr'", containsString("Gvineja Bisau"))
                .body("[95].'translations'.'fa'", containsString("گینه بیسائو"))
                .body("[95].'flag'", containsString("https://restcountries.eu/data/gnb.svg"))
                .body("[95].'regionalBlocs'.size()", equalTo(1))
                .body("[95].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[95].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[95].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[95].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[95].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[95].'cioc'", containsString("GBS"))
                .body("[96].'name'", containsString("Guyana"))
                .body("[96].'topLevelDomain'.size()", equalTo(1))
                .body("[96].'topLevelDomain'", hasItems(".gy"))
                .body("[96].'alpha2Code'", containsString("GY"))
                .body("[96].'alpha3Code'", containsString("GUY"))
                .body("[96].'callingCodes'.size()", equalTo(1))
                .body("[96].'callingCodes'", hasItems("592"))
                .body("[96].'capital'", containsString("Georgetown"))
                .body("[96].'altSpellings'.size()", equalTo(2))
                .body("[96].'altSpellings'", hasItems("GY", "Co-operative Republic of Guyana"))
                .body("[96].'region'", containsString("Americas"))
                .body("[96].'subregion'", containsString("South America"))
                .body("[96].'population'", numberMatches(746900.0))
                .body("[96].'latlng'.size()", equalTo(2))
                .body("[96].'latlng'[0]", numberMatches(5.0))
                .body("[96].'latlng'[1]", numberMatches(-59.0))
                .body("[96].'demonym'", containsString("Guyanese"))
                .body("[96].'area'", numberMatches(214969.0))
                .body("[96].'gini'", numberMatches(44.5))
                .body("[96].'timezones'.size()", equalTo(1))
                .body("[96].'timezones'", hasItems("UTC-04:00"))
                .body("[96].'borders'.size()", equalTo(3))
                .body("[96].'borders'", hasItems("BRA", "SUR", "VEN"))
                .body("[96].'nativeName'", containsString("Guyana"))
                .body("[96].'numericCode'", containsString("328"))
                .body("[96].'currencies'.size()", equalTo(1))
                .body("[96].'currencies'[0].'code'", containsString("GYD"))
                .body("[96].'currencies'[0].'name'", containsString("Guyanese dollar"))
                .body("[96].'currencies'[0].'symbol'", containsString("$"))
                .body("[96].'languages'.size()", equalTo(1))
                .body("[96].'languages'[0].'iso639_1'", containsString("en"))
                .body("[96].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[96].'languages'[0].'name'", containsString("English"))
                .body("[96].'languages'[0].'nativeName'", containsString("English"))
                .body("[96].'translations'.'de'", containsString("Guyana"))
                .body("[96].'translations'.'es'", containsString("Guyana"))
                .body("[96].'translations'.'fr'", containsString("Guyane"))
                .body("[96].'translations'.'ja'", containsString("ガイアナ"))
                .body("[96].'translations'.'it'", containsString("Guyana"))
                .body("[96].'translations'.'br'", containsString("Guiana"))
                .body("[96].'translations'.'pt'", containsString("Guiana"))
                .body("[96].'translations'.'nl'", containsString("Guyana"))
                .body("[96].'translations'.'hr'", containsString("Gvajana"))
                .body("[96].'translations'.'fa'", containsString("گویان"))
                .body("[96].'flag'", containsString("https://restcountries.eu/data/guy.svg"))
                .body("[96].'regionalBlocs'.size()", equalTo(2))
                .body("[96].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[96].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[96].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[96].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[96].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[96].'regionalBlocs'[1].'acronym'", containsString("USAN"))
                .body("[96].'regionalBlocs'[1].'name'", containsString("Union of South American Nations"))
                .body("[96].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(3))
                .body("[96].'regionalBlocs'[1].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[96].'regionalBlocs'[1].'otherNames'.size()", equalTo(4))
                .body("[96].'regionalBlocs'[1].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[96].'cioc'", containsString("GUY"))
                .body("[97].'name'", containsString("Haiti"))
                .body("[97].'topLevelDomain'.size()", equalTo(1))
                .body("[97].'topLevelDomain'", hasItems(".ht"))
                .body("[97].'alpha2Code'", containsString("HT"))
                .body("[97].'alpha3Code'", containsString("HTI"))
                .body("[97].'callingCodes'.size()", equalTo(1))
                .body("[97].'callingCodes'", hasItems("509"))
                .body("[97].'capital'", containsString("Port-au-Prince"))
                .body("[97].'altSpellings'.size()", equalTo(4))
                .body("[97].'altSpellings'", hasItems("HT", "Republic of Haiti", "République d'Haïti", "Repiblik Ayiti"))
                .body("[97].'region'", containsString("Americas"))
                .body("[97].'subregion'", containsString("Caribbean"))
                .body("[97].'population'", numberMatches(1.1078033E7))
                .body("[97].'latlng'.size()", equalTo(2))
                .body("[97].'latlng'[0]", numberMatches(19.0))
                .body("[97].'latlng'[1]", numberMatches(-72.41666666))
                .body("[97].'demonym'", containsString("Haitian"))
                .body("[97].'area'", numberMatches(27750.0))
                .body("[97].'gini'", numberMatches(59.2))
                .body("[97].'timezones'.size()", equalTo(1))
                .body("[97].'timezones'", hasItems("UTC-05:00"))
                .body("[97].'borders'.size()", equalTo(1))
                .body("[97].'borders'", hasItems("DOM"))
                .body("[97].'nativeName'", containsString("Haïti"))
                .body("[97].'numericCode'", containsString("332"))
                .body("[97].'currencies'.size()", equalTo(1))
                .body("[97].'currencies'[0].'code'", containsString("HTG"))
                .body("[97].'currencies'[0].'name'", containsString("Haitian gourde"))
                .body("[97].'currencies'[0].'symbol'", containsString("G"))
                .body("[97].'languages'.size()", equalTo(2))
                .body("[97].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[97].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[97].'languages'[0].'name'", containsString("French"))
                .body("[97].'languages'[0].'nativeName'", containsString("français"))
                .body("[97].'languages'[1].'iso639_1'", containsString("ht"))
                .body("[97].'languages'[1].'iso639_2'", containsString("hat"))
                .body("[97].'languages'[1].'name'", containsString("Haitian"))
                .body("[97].'languages'[1].'nativeName'", containsString("Kreyòl ayisyen"))
                .body("[97].'translations'.'de'", containsString("Haiti"))
                .body("[97].'translations'.'es'", containsString("Haiti"))
                .body("[97].'translations'.'fr'", containsString("Haïti"))
                .body("[97].'translations'.'ja'", containsString("ハイチ"))
                .body("[97].'translations'.'it'", containsString("Haiti"))
                .body("[97].'translations'.'br'", containsString("Haiti"))
                .body("[97].'translations'.'pt'", containsString("Haiti"))
                .body("[97].'translations'.'nl'", containsString("Haïti"))
                .body("[97].'translations'.'hr'", containsString("Haiti"))
                .body("[97].'translations'.'fa'", containsString("هائیتی"))
                .body("[97].'flag'", containsString("https://restcountries.eu/data/hti.svg"))
                .body("[97].'regionalBlocs'.size()", equalTo(1))
                .body("[97].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[97].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[97].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[97].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[97].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[97].'cioc'", containsString("HAI"))
                .body("[98].'name'", containsString("Heard Island and McDonald Islands"))
                .body("[98].'topLevelDomain'.size()", equalTo(2))
                .body("[98].'topLevelDomain'", hasItems(".hm", ".aq"))
                .body("[98].'alpha2Code'", containsString("HM"))
                .body("[98].'alpha3Code'", containsString("HMD"))
                .body("[98].'callingCodes'.size()", equalTo(1))
                .body("[98].'callingCodes'", hasItems("672"))
                .body("[98].'capital'", containsString(""))
                .body("[98].'altSpellings'.size()", equalTo(1))
                .body("[98].'altSpellings'", hasItems("HM"))
                .body("[98].'region'", containsString(""))
                .body("[98].'subregion'", containsString(""))
                .body("[98].'population'", numberMatches(0.0))
                .body("[98].'latlng'.size()", equalTo(2))
                .body("[98].'latlng'[0]", numberMatches(-53.1))
                .body("[98].'latlng'[1]", numberMatches(72.51666666))
                .body("[98].'demonym'", containsString("Heard and McDonald Islander"))
                .body("[98].'area'", numberMatches(412.0))
                .body("[98].'gini'", nullValue())
                .body("[98].'timezones'.size()", equalTo(1))
                .body("[98].'timezones'", hasItems("UTC+05:00"))
                .body("[98].'borders'.size()", equalTo(0))
                .body("[98].'nativeName'", containsString("Heard Island and McDonald Islands"))
                .body("[98].'numericCode'", containsString("334"))
                .body("[98].'currencies'.size()", equalTo(1))
                .body("[98].'currencies'[0].'code'", containsString("AUD"))
                .body("[98].'currencies'[0].'name'", containsString("Australian dollar"))
                .body("[98].'currencies'[0].'symbol'", containsString("$"))
                .body("[98].'languages'.size()", equalTo(1))
                .body("[98].'languages'[0].'iso639_1'", containsString("en"))
                .body("[98].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[98].'languages'[0].'name'", containsString("English"))
                .body("[98].'languages'[0].'nativeName'", containsString("English"))
                .body("[98].'translations'.'de'", containsString("Heard und die McDonaldinseln"))
                .body("[98].'translations'.'es'", containsString("Islas Heard y McDonald"))
                .body("[98].'translations'.'fr'", containsString("Îles Heard-et-MacDonald"))
                .body("[98].'translations'.'ja'", containsString("ハード島とマクドナルド諸島"))
                .body("[98].'translations'.'it'", containsString("Isole Heard e McDonald"))
                .body("[98].'translations'.'br'", containsString("Ilha Heard e Ilhas McDonald"))
                .body("[98].'translations'.'pt'", containsString("Ilha Heard e Ilhas McDonald"))
                .body("[98].'translations'.'nl'", containsString("Heard- en McDonaldeilanden"))
                .body("[98].'translations'.'hr'", containsString("Otok Heard i otočje McDonald"))
                .body("[98].'translations'.'fa'", containsString("جزیره هرد و جزایر مک‌دونالد"))
                .body("[98].'flag'", containsString("https://restcountries.eu/data/hmd.svg"))
                .body("[98].'regionalBlocs'.size()", equalTo(0))
                .body("[98].'cioc'", containsString(""))
                .body("[99].'name'", containsString("Holy See"))
                .body("[99].'topLevelDomain'.size()", equalTo(1))
                .body("[99].'topLevelDomain'", hasItems(".va"))
                .body("[99].'alpha2Code'", containsString("VA"))
                .body("[99].'alpha3Code'", containsString("VAT"))
                .body("[99].'callingCodes'.size()", equalTo(1))
                .body("[99].'callingCodes'", hasItems("379"))
                .body("[99].'capital'", containsString("Rome"))
                .body("[99].'altSpellings'.size()", equalTo(3))
                .body("[99].'altSpellings'", hasItems("Sancta Sedes", "Vatican", "The Vatican"))
                .body("[99].'region'", containsString("Europe"))
                .body("[99].'subregion'", containsString("Southern Europe"))
                .body("[99].'population'", numberMatches(451.0))
                .body("[99].'latlng'.size()", equalTo(2))
                .body("[99].'latlng'[0]", numberMatches(41.9))
                .body("[99].'latlng'[1]", numberMatches(12.45))
                .body("[99].'demonym'", containsString(""))
                .body("[99].'area'", numberMatches(0.44))
                .body("[99].'gini'", nullValue())
                .body("[99].'timezones'.size()", equalTo(1))
                .body("[99].'timezones'", hasItems("UTC+01:00"))
                .body("[99].'borders'.size()", equalTo(1))
                .body("[99].'borders'", hasItems("ITA"))
                .body("[99].'nativeName'", containsString("Sancta Sedes"))
                .body("[99].'numericCode'", containsString("336"))
                .body("[99].'currencies'.size()", equalTo(1))
                .body("[99].'currencies'[0].'code'", containsString("EUR"))
                .body("[99].'currencies'[0].'name'", containsString("Euro"))
                .body("[99].'currencies'[0].'symbol'", containsString("€"))
                .body("[99].'languages'.size()", equalTo(4))
                .body("[99].'languages'[0].'iso639_1'", containsString("la"))
                .body("[99].'languages'[0].'iso639_2'", containsString("lat"))
                .body("[99].'languages'[0].'name'", containsString("Latin"))
                .body("[99].'languages'[0].'nativeName'", containsString("latine"))
                .body("[99].'languages'[1].'iso639_1'", containsString("it"))
                .body("[99].'languages'[1].'iso639_2'", containsString("ita"))
                .body("[99].'languages'[1].'name'", containsString("Italian"))
                .body("[99].'languages'[1].'nativeName'", containsString("Italiano"))
                .body("[99].'languages'[2].'iso639_1'", containsString("fr"))
                .body("[99].'languages'[2].'iso639_2'", containsString("fra"))
                .body("[99].'languages'[2].'name'", containsString("French"))
                .body("[99].'languages'[2].'nativeName'", containsString("français"))
                .body("[99].'languages'[3].'iso639_1'", containsString("de"))
                .body("[99].'languages'[3].'iso639_2'", containsString("deu"))
                .body("[99].'languages'[3].'name'", containsString("German"))
                .body("[99].'languages'[3].'nativeName'", containsString("Deutsch"))
                .body("[99].'translations'.'de'", containsString("Heiliger Stuhl"))
                .body("[99].'translations'.'es'", containsString("Santa Sede"))
                .body("[99].'translations'.'fr'", containsString("voir Saint"))
                .body("[99].'translations'.'ja'", containsString("聖座"))
                .body("[99].'translations'.'it'", containsString("Santa Sede"))
                .body("[99].'translations'.'br'", containsString("Vaticano"))
                .body("[99].'translations'.'pt'", containsString("Vaticano"))
                .body("[99].'translations'.'nl'", containsString("Heilige Stoel"))
                .body("[99].'translations'.'hr'", containsString("Sveta Stolica"))
                .body("[99].'translations'.'fa'", containsString("سریر مقدس"))
                .body("[99].'flag'", containsString("https://restcountries.eu/data/vat.svg"))
                .body("[99].'regionalBlocs'.size()", equalTo(0))
                .body("[99].'cioc'", containsString(""))
                .body("[100].'name'", containsString("Honduras"))
                .body("[100].'topLevelDomain'.size()", equalTo(1))
                .body("[100].'topLevelDomain'", hasItems(".hn"))
                .body("[100].'alpha2Code'", containsString("HN"))
                .body("[100].'alpha3Code'", containsString("HND"))
                .body("[100].'callingCodes'.size()", equalTo(1))
                .body("[100].'callingCodes'", hasItems("504"))
                .body("[100].'capital'", containsString("Tegucigalpa"))
                .body("[100].'altSpellings'.size()", equalTo(3))
                .body("[100].'altSpellings'", hasItems("HN", "Republic of Honduras", "República de Honduras"))
                .body("[100].'region'", containsString("Americas"))
                .body("[100].'subregion'", containsString("Central America"))
                .body("[100].'population'", numberMatches(8576532.0))
                .body("[100].'latlng'.size()", equalTo(2))
                .body("[100].'latlng'[0]", numberMatches(15.0))
                .body("[100].'latlng'[1]", numberMatches(-86.5))
                .body("[100].'demonym'", containsString("Honduran"))
                .body("[100].'area'", numberMatches(112492.0))
                .body("[100].'gini'", numberMatches(57.0))
                .body("[100].'timezones'.size()", equalTo(1))
                .body("[100].'timezones'", hasItems("UTC-06:00"))
                .body("[100].'borders'.size()", equalTo(3))
                .body("[100].'borders'", hasItems("GTM", "SLV", "NIC"))
                .body("[100].'nativeName'", containsString("Honduras"))
                .body("[100].'numericCode'", containsString("340"))
                .body("[100].'currencies'.size()", equalTo(1))
                .body("[100].'currencies'[0].'code'", containsString("HNL"))
                .body("[100].'currencies'[0].'name'", containsString("Honduran lempira"))
                .body("[100].'currencies'[0].'symbol'", containsString("L"))
                .body("[100].'languages'.size()", equalTo(1))
                .body("[100].'languages'[0].'iso639_1'", containsString("es"))
                .body("[100].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[100].'languages'[0].'name'", containsString("Spanish"))
                .body("[100].'languages'[0].'nativeName'", containsString("Español"))
                .body("[100].'translations'.'de'", containsString("Honduras"))
                .body("[100].'translations'.'es'", containsString("Honduras"))
                .body("[100].'translations'.'fr'", containsString("Honduras"))
                .body("[100].'translations'.'ja'", containsString("ホンジュラス"))
                .body("[100].'translations'.'it'", containsString("Honduras"))
                .body("[100].'translations'.'br'", containsString("Honduras"))
                .body("[100].'translations'.'pt'", containsString("Honduras"))
                .body("[100].'translations'.'nl'", containsString("Honduras"))
                .body("[100].'translations'.'hr'", containsString("Honduras"))
                .body("[100].'translations'.'fa'", containsString("هندوراس"))
                .body("[100].'flag'", containsString("https://restcountries.eu/data/hnd.svg"))
                .body("[100].'regionalBlocs'.size()", equalTo(1))
                .body("[100].'regionalBlocs'[0].'acronym'", containsString("CAIS"))
                .body("[100].'regionalBlocs'[0].'name'", containsString("Central American Integration System"))
                .body("[100].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(1))
                .body("[100].'regionalBlocs'[0].'otherAcronyms'", hasItems("SICA"))
                .body("[100].'regionalBlocs'[0].'otherNames'.size()", equalTo(1))
                .body("[100].'regionalBlocs'[0].'otherNames'", hasItems("Sistema de la Integración Centroamericana,"))
                .body("[100].'cioc'", containsString("HON"))
                .body("[101].'name'", containsString("Hong Kong"))
                .body("[101].'topLevelDomain'.size()", equalTo(1))
                .body("[101].'topLevelDomain'", hasItems(".hk"))
                .body("[101].'alpha2Code'", containsString("HK"))
                .body("[101].'alpha3Code'", containsString("HKG"))
                .body("[101].'callingCodes'.size()", equalTo(1))
                .body("[101].'callingCodes'", hasItems("852"))
                .body("[101].'capital'", containsString("City of Victoria"))
                .body("[101].'altSpellings'.size()", equalTo(2))
                .body("[101].'altSpellings'", hasItems("HK", "香港"))
                .body("[101].'region'", containsString("Asia"))
                .body("[101].'subregion'", containsString("Eastern Asia"))
                .body("[101].'population'", numberMatches(7324300.0))
                .body("[101].'latlng'.size()", equalTo(2))
                .body("[101].'latlng'[0]", numberMatches(22.25))
                .body("[101].'latlng'[1]", numberMatches(114.16666666))
                .body("[101].'demonym'", containsString("Chinese"))
                .body("[101].'area'", numberMatches(1104.0))
                .body("[101].'gini'", numberMatches(53.3))
                .body("[101].'timezones'.size()", equalTo(1))
                .body("[101].'timezones'", hasItems("UTC+08:00"))
                .body("[101].'borders'.size()", equalTo(1))
                .body("[101].'borders'", hasItems("CHN"))
                .body("[101].'nativeName'", containsString("香港"))
                .body("[101].'numericCode'", containsString("344"))
                .body("[101].'currencies'.size()", equalTo(1))
                .body("[101].'currencies'[0].'code'", containsString("HKD"))
                .body("[101].'currencies'[0].'name'", containsString("Hong Kong dollar"))
                .body("[101].'currencies'[0].'symbol'", containsString("$"))
                .body("[101].'languages'.size()", equalTo(2))
                .body("[101].'languages'[0].'iso639_1'", containsString("en"))
                .body("[101].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[101].'languages'[0].'name'", containsString("English"))
                .body("[101].'languages'[0].'nativeName'", containsString("English"))
                .body("[101].'languages'[1].'iso639_1'", containsString("zh"))
                .body("[101].'languages'[1].'iso639_2'", containsString("zho"))
                .body("[101].'languages'[1].'name'", containsString("Chinese"))
                .body("[101].'languages'[1].'nativeName'", containsString("中文 (Zhōngwén)"))
                .body("[101].'translations'.'de'", containsString("Hong Kong"))
                .body("[101].'translations'.'es'", containsString("Hong Kong"))
                .body("[101].'translations'.'fr'", containsString("Hong Kong"))
                .body("[101].'translations'.'ja'", containsString("香港"))
                .body("[101].'translations'.'it'", containsString("Hong Kong"))
                .body("[101].'translations'.'br'", containsString("Hong Kong"))
                .body("[101].'translations'.'pt'", containsString("Hong Kong"))
                .body("[101].'translations'.'nl'", containsString("Hongkong"))
                .body("[101].'translations'.'hr'", containsString("Hong Kong"))
                .body("[101].'translations'.'fa'", containsString("هنگ‌کنگ"))
                .body("[101].'flag'", containsString("https://restcountries.eu/data/hkg.svg"))
                .body("[101].'regionalBlocs'.size()", equalTo(0))
                .body("[101].'cioc'", containsString("HKG"))
                .body("[102].'name'", containsString("Hungary"))
                .body("[102].'topLevelDomain'.size()", equalTo(1))
                .body("[102].'topLevelDomain'", hasItems(".hu"))
                .body("[102].'alpha2Code'", containsString("HU"))
                .body("[102].'alpha3Code'", containsString("HUN"))
                .body("[102].'callingCodes'.size()", equalTo(1))
                .body("[102].'callingCodes'", hasItems("36"))
                .body("[102].'capital'", containsString("Budapest"))
                .body("[102].'altSpellings'.size()", equalTo(1))
                .body("[102].'altSpellings'", hasItems("HU"))
                .body("[102].'region'", containsString("Europe"))
                .body("[102].'subregion'", containsString("Eastern Europe"))
                .body("[102].'population'", numberMatches(9823000.0))
                .body("[102].'latlng'.size()", equalTo(2))
                .body("[102].'latlng'[0]", numberMatches(47.0))
                .body("[102].'latlng'[1]", numberMatches(20.0))
                .body("[102].'demonym'", containsString("Hungarian"))
                .body("[102].'area'", numberMatches(93028.0))
                .body("[102].'gini'", numberMatches(31.2))
                .body("[102].'timezones'.size()", equalTo(1))
                .body("[102].'timezones'", hasItems("UTC+01:00"))
                .body("[102].'borders'.size()", equalTo(7))
                .body("[102].'borders'", hasItems("AUT", "HRV", "ROU", "SRB", "SVK", "SVN", "UKR"))
                .body("[102].'nativeName'", containsString("Magyarország"))
                .body("[102].'numericCode'", containsString("348"))
                .body("[102].'currencies'.size()", equalTo(1))
                .body("[102].'currencies'[0].'code'", containsString("HUF"))
                .body("[102].'currencies'[0].'name'", containsString("Hungarian forint"))
                .body("[102].'currencies'[0].'symbol'", containsString("Ft"))
                .body("[102].'languages'.size()", equalTo(1))
                .body("[102].'languages'[0].'iso639_1'", containsString("hu"))
                .body("[102].'languages'[0].'iso639_2'", containsString("hun"))
                .body("[102].'languages'[0].'name'", containsString("Hungarian"))
                .body("[102].'languages'[0].'nativeName'", containsString("magyar"))
                .body("[102].'translations'.'de'", containsString("Ungarn"))
                .body("[102].'translations'.'es'", containsString("Hungría"))
                .body("[102].'translations'.'fr'", containsString("Hongrie"))
                .body("[102].'translations'.'ja'", containsString("ハンガリー"))
                .body("[102].'translations'.'it'", containsString("Ungheria"))
                .body("[102].'translations'.'br'", containsString("Hungria"))
                .body("[102].'translations'.'pt'", containsString("Hungria"))
                .body("[102].'translations'.'nl'", containsString("Hongarije"))
                .body("[102].'translations'.'hr'", containsString("Mađarska"))
                .body("[102].'translations'.'fa'", containsString("مجارستان"))
                .body("[102].'flag'", containsString("https://restcountries.eu/data/hun.svg"))
                .body("[102].'regionalBlocs'.size()", equalTo(1))
                .body("[102].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[102].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[102].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[102].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[102].'cioc'", containsString("HUN"))
                .body("[103].'name'", containsString("Iceland"))
                .body("[103].'topLevelDomain'.size()", equalTo(1))
                .body("[103].'topLevelDomain'", hasItems(".is"))
                .body("[103].'alpha2Code'", containsString("IS"))
                .body("[103].'alpha3Code'", containsString("ISL"))
                .body("[103].'callingCodes'.size()", equalTo(1))
                .body("[103].'callingCodes'", hasItems("354"))
                .body("[103].'capital'", containsString("Reykjavík"))
                .body("[103].'altSpellings'.size()", equalTo(4))
                .body("[103].'altSpellings'", hasItems("IS", "Island", "Republic of Iceland", "Lýðveldið Ísland"))
                .body("[103].'region'", containsString("Europe"))
                .body("[103].'subregion'", containsString("Northern Europe"))
                .body("[103].'population'", numberMatches(334300.0))
                .body("[103].'latlng'.size()", equalTo(2))
                .body("[103].'latlng'[0]", numberMatches(65.0))
                .body("[103].'latlng'[1]", numberMatches(-18.0))
                .body("[103].'demonym'", containsString("Icelander"))
                .body("[103].'area'", numberMatches(103000.0))
                .body("[103].'gini'", nullValue())
                .body("[103].'timezones'.size()", equalTo(1))
                .body("[103].'timezones'", hasItems("UTC"))
                .body("[103].'borders'.size()", equalTo(0))
                .body("[103].'nativeName'", containsString("Ísland"))
                .body("[103].'numericCode'", containsString("352"))
                .body("[103].'currencies'.size()", equalTo(1))
                .body("[103].'currencies'[0].'code'", containsString("ISK"))
                .body("[103].'currencies'[0].'name'", containsString("Icelandic króna"))
                .body("[103].'currencies'[0].'symbol'", containsString("kr"))
                .body("[103].'languages'.size()", equalTo(1))
                .body("[103].'languages'[0].'iso639_1'", containsString("is"))
                .body("[103].'languages'[0].'iso639_2'", containsString("isl"))
                .body("[103].'languages'[0].'name'", containsString("Icelandic"))
                .body("[103].'languages'[0].'nativeName'", containsString("Íslenska"))
                .body("[103].'translations'.'de'", containsString("Island"))
                .body("[103].'translations'.'es'", containsString("Islandia"))
                .body("[103].'translations'.'fr'", containsString("Islande"))
                .body("[103].'translations'.'ja'", containsString("アイスランド"))
                .body("[103].'translations'.'it'", containsString("Islanda"))
                .body("[103].'translations'.'br'", containsString("Islândia"))
                .body("[103].'translations'.'pt'", containsString("Islândia"))
                .body("[103].'translations'.'nl'", containsString("IJsland"))
                .body("[103].'translations'.'hr'", containsString("Island"))
                .body("[103].'translations'.'fa'", containsString("ایسلند"))
                .body("[103].'flag'", containsString("https://restcountries.eu/data/isl.svg"))
                .body("[103].'regionalBlocs'.size()", equalTo(1))
                .body("[103].'regionalBlocs'[0].'acronym'", containsString("EFTA"))
                .body("[103].'regionalBlocs'[0].'name'", containsString("European Free Trade Association"))
                .body("[103].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[103].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[103].'cioc'", containsString("ISL"))
                .body("[104].'name'", containsString("India"))
                .body("[104].'topLevelDomain'.size()", equalTo(1))
                .body("[104].'topLevelDomain'", hasItems(".in"))
                .body("[104].'alpha2Code'", containsString("IN"))
                .body("[104].'alpha3Code'", containsString("IND"))
                .body("[104].'callingCodes'.size()", equalTo(1))
                .body("[104].'callingCodes'", hasItems("91"))
                .body("[104].'capital'", containsString("New Delhi"))
                .body("[104].'altSpellings'.size()", equalTo(4))
                .body("[104].'altSpellings'", hasItems("IN", "Bhārat", "Republic of India", "Bharat Ganrajya"))
                .body("[104].'region'", containsString("Asia"))
                .body("[104].'subregion'", containsString("Southern Asia"))
                .body("[104].'population'", numberMatches(1.29521E9))
                .body("[104].'latlng'.size()", equalTo(2))
                .body("[104].'latlng'[0]", numberMatches(20.0))
                .body("[104].'latlng'[1]", numberMatches(77.0))
                .body("[104].'demonym'", containsString("Indian"))
                .body("[104].'area'", numberMatches(3287590.0))
                .body("[104].'gini'", numberMatches(33.4))
                .body("[104].'timezones'.size()", equalTo(1))
                .body("[104].'timezones'", hasItems("UTC+05:30"))
                .body("[104].'borders'.size()", equalTo(8))
                .body("[104].'borders'", hasItems("AFG", "BGD", "BTN", "MMR", "CHN", "NPL", "PAK", "LKA"))
                .body("[104].'nativeName'", containsString("भारत"))
                .body("[104].'numericCode'", containsString("356"))
                .body("[104].'currencies'.size()", equalTo(1))
                .body("[104].'currencies'[0].'code'", containsString("INR"))
                .body("[104].'currencies'[0].'name'", containsString("Indian rupee"))
                .body("[104].'currencies'[0].'symbol'", containsString("₹"))
                .body("[104].'languages'.size()", equalTo(2))
                .body("[104].'languages'[0].'iso639_1'", containsString("hi"))
                .body("[104].'languages'[0].'iso639_2'", containsString("hin"))
                .body("[104].'languages'[0].'name'", containsString("Hindi"))
                .body("[104].'languages'[0].'nativeName'", containsString("हिन्दी"))
                .body("[104].'languages'[1].'iso639_1'", containsString("en"))
                .body("[104].'languages'[1].'iso639_2'", containsString("eng"))
                .body("[104].'languages'[1].'name'", containsString("English"))
                .body("[104].'languages'[1].'nativeName'", containsString("English"))
                .body("[104].'translations'.'de'", containsString("Indien"))
                .body("[104].'translations'.'es'", containsString("India"))
                .body("[104].'translations'.'fr'", containsString("Inde"))
                .body("[104].'translations'.'ja'", containsString("インド"))
                .body("[104].'translations'.'it'", containsString("India"))
                .body("[104].'translations'.'br'", containsString("Índia"))
                .body("[104].'translations'.'pt'", containsString("Índia"))
                .body("[104].'translations'.'nl'", containsString("India"))
                .body("[104].'translations'.'hr'", containsString("Indija"))
                .body("[104].'translations'.'fa'", containsString("هند"))
                .body("[104].'flag'", containsString("https://restcountries.eu/data/ind.svg"))
                .body("[104].'regionalBlocs'.size()", equalTo(1))
                .body("[104].'regionalBlocs'[0].'acronym'", containsString("SAARC"))
                .body("[104].'regionalBlocs'[0].'name'", containsString("South Asian Association for Regional Cooperation"))
                .body("[104].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[104].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[104].'cioc'", containsString("IND"))
                .body("[105].'name'", containsString("Indonesia"))
                .body("[105].'topLevelDomain'.size()", equalTo(1))
                .body("[105].'topLevelDomain'", hasItems(".id"))
                .body("[105].'alpha2Code'", containsString("ID"))
                .body("[105].'alpha3Code'", containsString("IDN"))
                .body("[105].'callingCodes'.size()", equalTo(1))
                .body("[105].'callingCodes'", hasItems("62"))
                .body("[105].'capital'", containsString("Jakarta"))
                .body("[105].'altSpellings'.size()", equalTo(3))
                .body("[105].'altSpellings'", hasItems("ID", "Republic of Indonesia", "Republik Indonesia"))
                .body("[105].'region'", containsString("Asia"))
                .body("[105].'subregion'", containsString("South-Eastern Asia"))
                .body("[105].'population'", numberMatches(2.58705E8))
                .body("[105].'latlng'.size()", equalTo(2))
                .body("[105].'latlng'[0]", numberMatches(-5.0))
                .body("[105].'latlng'[1]", numberMatches(120.0))
                .body("[105].'demonym'", containsString("Indonesian"))
                .body("[105].'area'", numberMatches(1904569.0))
                .body("[105].'gini'", numberMatches(34.0))
                .body("[105].'timezones'.size()", equalTo(3))
                .body("[105].'timezones'", hasItems("UTC+07:00", "UTC+08:00", "UTC+09:00"))
                .body("[105].'borders'.size()", equalTo(3))
                .body("[105].'borders'", hasItems("TLS", "MYS", "PNG"))
                .body("[105].'nativeName'", containsString("Indonesia"))
                .body("[105].'numericCode'", containsString("360"))
                .body("[105].'currencies'.size()", equalTo(1))
                .body("[105].'currencies'[0].'code'", containsString("IDR"))
                .body("[105].'currencies'[0].'name'", containsString("Indonesian rupiah"))
                .body("[105].'currencies'[0].'symbol'", containsString("Rp"))
                .body("[105].'languages'.size()", equalTo(1))
                .body("[105].'languages'[0].'iso639_1'", containsString("id"))
                .body("[105].'languages'[0].'iso639_2'", containsString("ind"))
                .body("[105].'languages'[0].'name'", containsString("Indonesian"))
                .body("[105].'languages'[0].'nativeName'", containsString("Bahasa Indonesia"))
                .body("[105].'translations'.'de'", containsString("Indonesien"))
                .body("[105].'translations'.'es'", containsString("Indonesia"))
                .body("[105].'translations'.'fr'", containsString("Indonésie"))
                .body("[105].'translations'.'ja'", containsString("インドネシア"))
                .body("[105].'translations'.'it'", containsString("Indonesia"))
                .body("[105].'translations'.'br'", containsString("Indonésia"))
                .body("[105].'translations'.'pt'", containsString("Indonésia"))
                .body("[105].'translations'.'nl'", containsString("Indonesië"))
                .body("[105].'translations'.'hr'", containsString("Indonezija"))
                .body("[105].'translations'.'fa'", containsString("اندونزی"))
                .body("[105].'flag'", containsString("https://restcountries.eu/data/idn.svg"))
                .body("[105].'regionalBlocs'.size()", equalTo(1))
                .body("[105].'regionalBlocs'[0].'acronym'", containsString("ASEAN"))
                .body("[105].'regionalBlocs'[0].'name'", containsString("Association of Southeast Asian Nations"))
                .body("[105].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[105].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[105].'cioc'", containsString("INA"))
                .body("[106].'name'", containsString("Côte d'Ivoire"))
                .body("[106].'topLevelDomain'.size()", equalTo(1))
                .body("[106].'topLevelDomain'", hasItems(".ci"))
                .body("[106].'alpha2Code'", containsString("CI"))
                .body("[106].'alpha3Code'", containsString("CIV"))
                .body("[106].'callingCodes'.size()", equalTo(1))
                .body("[106].'callingCodes'", hasItems("225"))
                .body("[106].'capital'", containsString("Yamoussoukro"))
                .body("[106].'altSpellings'.size()", equalTo(4))
                .body("[106].'altSpellings'", hasItems("CI", "Ivory Coast", "Republic of Côte d'Ivoire", "République de Côte d'Ivoire"))
                .body("[106].'region'", containsString("Africa"))
                .body("[106].'subregion'", containsString("Western Africa"))
                .body("[106].'population'", numberMatches(2.2671331E7))
                .body("[106].'latlng'.size()", equalTo(2))
                .body("[106].'latlng'[0]", numberMatches(8.0))
                .body("[106].'latlng'[1]", numberMatches(-5.0))
                .body("[106].'demonym'", containsString("Ivorian"))
                .body("[106].'area'", numberMatches(322463.0))
                .body("[106].'gini'", numberMatches(41.5))
                .body("[106].'timezones'.size()", equalTo(1))
                .body("[106].'timezones'", hasItems("UTC"))
                .body("[106].'borders'.size()", equalTo(5))
                .body("[106].'borders'", hasItems("BFA", "GHA", "GIN", "LBR", "MLI"))
                .body("[106].'nativeName'", containsString("Côte d'Ivoire"))
                .body("[106].'numericCode'", containsString("384"))
                .body("[106].'currencies'.size()", equalTo(1))
                .body("[106].'currencies'[0].'code'", containsString("XOF"))
                .body("[106].'currencies'[0].'name'", containsString("West African CFA franc"))
                .body("[106].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[106].'languages'.size()", equalTo(1))
                .body("[106].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[106].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[106].'languages'[0].'name'", containsString("French"))
                .body("[106].'languages'[0].'nativeName'", containsString("français"))
                .body("[106].'translations'.'de'", containsString("Elfenbeinküste"))
                .body("[106].'translations'.'es'", containsString("Costa de Marfil"))
                .body("[106].'translations'.'fr'", containsString("Côte d'Ivoire"))
                .body("[106].'translations'.'ja'", containsString("コートジボワール"))
                .body("[106].'translations'.'it'", containsString("Costa D'Avorio"))
                .body("[106].'translations'.'br'", containsString("Costa do Marfim"))
                .body("[106].'translations'.'pt'", containsString("Costa do Marfim"))
                .body("[106].'translations'.'nl'", containsString("Ivoorkust"))
                .body("[106].'translations'.'hr'", containsString("Obala Bjelokosti"))
                .body("[106].'translations'.'fa'", containsString("ساحل عاج"))
                .body("[106].'flag'", containsString("https://restcountries.eu/data/civ.svg"))
                .body("[106].'regionalBlocs'.size()", equalTo(1))
                .body("[106].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[106].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[106].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[106].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[106].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[106].'cioc'", containsString("CIV"))
                .body("[107].'name'", containsString("Iran (Islamic Republic of)"))
                .body("[107].'topLevelDomain'.size()", equalTo(1))
                .body("[107].'topLevelDomain'", hasItems(".ir"))
                .body("[107].'alpha2Code'", containsString("IR"))
                .body("[107].'alpha3Code'", containsString("IRN"))
                .body("[107].'callingCodes'.size()", equalTo(1))
                .body("[107].'callingCodes'", hasItems("98"))
                .body("[107].'capital'", containsString("Tehran"))
                .body("[107].'altSpellings'.size()", equalTo(3))
                .body("[107].'altSpellings'", hasItems("IR", "Islamic Republic of Iran", "Jomhuri-ye Eslāmi-ye Irān"))
                .body("[107].'region'", containsString("Asia"))
                .body("[107].'subregion'", containsString("Southern Asia"))
                .body("[107].'population'", numberMatches(7.93699E7))
                .body("[107].'latlng'.size()", equalTo(2))
                .body("[107].'latlng'[0]", numberMatches(32.0))
                .body("[107].'latlng'[1]", numberMatches(53.0))
                .body("[107].'demonym'", containsString("Iranian"))
                .body("[107].'area'", numberMatches(1648195.0))
                .body("[107].'gini'", numberMatches(38.3))
                .body("[107].'timezones'.size()", equalTo(1))
                .body("[107].'timezones'", hasItems("UTC+03:30"))
                .body("[107].'borders'.size()", equalTo(7))
                .body("[107].'borders'", hasItems("AFG", "ARM", "AZE", "IRQ", "PAK", "TUR", "TKM"))
                .body("[107].'nativeName'", containsString("ایران"))
                .body("[107].'numericCode'", containsString("364"))
                .body("[107].'currencies'.size()", equalTo(1))
                .body("[107].'currencies'[0].'code'", containsString("IRR"))
                .body("[107].'currencies'[0].'name'", containsString("Iranian rial"))
                .body("[107].'currencies'[0].'symbol'", containsString("﷼"))
                .body("[107].'languages'.size()", equalTo(1))
                .body("[107].'languages'[0].'iso639_1'", containsString("fa"))
                .body("[107].'languages'[0].'iso639_2'", containsString("fas"))
                .body("[107].'languages'[0].'name'", containsString("Persian (Farsi)"))
                .body("[107].'languages'[0].'nativeName'", containsString("فارسی"))
                .body("[107].'translations'.'de'", containsString("Iran"))
                .body("[107].'translations'.'es'", containsString("Iran"))
                .body("[107].'translations'.'fr'", containsString("Iran"))
                .body("[107].'translations'.'ja'", containsString("イラン・イスラム共和国"))
                .body("[107].'translations'.'it'", nullValue())
                .body("[107].'translations'.'br'", containsString("Irã"))
                .body("[107].'translations'.'pt'", containsString("Irão"))
                .body("[107].'translations'.'nl'", containsString("Iran"))
                .body("[107].'translations'.'hr'", containsString("Iran"))
                .body("[107].'translations'.'fa'", containsString("ایران"))
                .body("[107].'flag'", containsString("https://restcountries.eu/data/irn.svg"))
                .body("[107].'regionalBlocs'.size()", equalTo(0))
                .body("[107].'cioc'", containsString("IRI"))
                .body("[108].'name'", containsString("Iraq"))
                .body("[108].'topLevelDomain'.size()", equalTo(1))
                .body("[108].'topLevelDomain'", hasItems(".iq"))
                .body("[108].'alpha2Code'", containsString("IQ"))
                .body("[108].'alpha3Code'", containsString("IRQ"))
                .body("[108].'callingCodes'.size()", equalTo(1))
                .body("[108].'callingCodes'", hasItems("964"))
                .body("[108].'capital'", containsString("Baghdad"))
                .body("[108].'altSpellings'.size()", equalTo(3))
                .body("[108].'altSpellings'", hasItems("IQ", "Republic of Iraq", "Jumhūriyyat al-‘Irāq"))
                .body("[108].'region'", containsString("Asia"))
                .body("[108].'subregion'", containsString("Western Asia"))
                .body("[108].'population'", numberMatches(3.7883543E7))
                .body("[108].'latlng'.size()", equalTo(2))
                .body("[108].'latlng'[0]", numberMatches(33.0))
                .body("[108].'latlng'[1]", numberMatches(44.0))
                .body("[108].'demonym'", containsString("Iraqi"))
                .body("[108].'area'", numberMatches(438317.0))
                .body("[108].'gini'", numberMatches(30.9))
                .body("[108].'timezones'.size()", equalTo(1))
                .body("[108].'timezones'", hasItems("UTC+03:00"))
                .body("[108].'borders'.size()", equalTo(6))
                .body("[108].'borders'", hasItems("IRN", "JOR", "KWT", "SAU", "SYR", "TUR"))
                .body("[108].'nativeName'", containsString("العراق"))
                .body("[108].'numericCode'", containsString("368"))
                .body("[108].'currencies'.size()", equalTo(1))
                .body("[108].'currencies'[0].'code'", containsString("IQD"))
                .body("[108].'currencies'[0].'name'", containsString("Iraqi dinar"))
                .body("[108].'currencies'[0].'symbol'", containsString("ع.د"))
                .body("[108].'languages'.size()", equalTo(2))
                .body("[108].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[108].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[108].'languages'[0].'name'", containsString("Arabic"))
                .body("[108].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[108].'languages'[1].'iso639_1'", containsString("ku"))
                .body("[108].'languages'[1].'iso639_2'", containsString("kur"))
                .body("[108].'languages'[1].'name'", containsString("Kurdish"))
                .body("[108].'languages'[1].'nativeName'", containsString("Kurdî"))
                .body("[108].'translations'.'de'", containsString("Irak"))
                .body("[108].'translations'.'es'", containsString("Irak"))
                .body("[108].'translations'.'fr'", containsString("Irak"))
                .body("[108].'translations'.'ja'", containsString("イラク"))
                .body("[108].'translations'.'it'", containsString("Iraq"))
                .body("[108].'translations'.'br'", containsString("Iraque"))
                .body("[108].'translations'.'pt'", containsString("Iraque"))
                .body("[108].'translations'.'nl'", containsString("Irak"))
                .body("[108].'translations'.'hr'", containsString("Irak"))
                .body("[108].'translations'.'fa'", containsString("عراق"))
                .body("[108].'flag'", containsString("https://restcountries.eu/data/irq.svg"))
                .body("[108].'regionalBlocs'.size()", equalTo(1))
                .body("[108].'regionalBlocs'[0].'acronym'", containsString("AL"))
                .body("[108].'regionalBlocs'[0].'name'", containsString("Arab League"))
                .body("[108].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[108].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[108].'regionalBlocs'[0].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[108].'cioc'", containsString("IRQ"))
                .body("[109].'name'", containsString("Ireland"))
                .body("[109].'topLevelDomain'.size()", equalTo(1))
                .body("[109].'topLevelDomain'", hasItems(".ie"))
                .body("[109].'alpha2Code'", containsString("IE"))
                .body("[109].'alpha3Code'", containsString("IRL"))
                .body("[109].'callingCodes'.size()", equalTo(1))
                .body("[109].'callingCodes'", hasItems("353"))
                .body("[109].'capital'", containsString("Dublin"))
                .body("[109].'altSpellings'.size()", equalTo(4))
                .body("[109].'altSpellings'", hasItems("IE", "Éire", "Republic of Ireland", "Poblacht na hÉireann"))
                .body("[109].'region'", containsString("Europe"))
                .body("[109].'subregion'", containsString("Northern Europe"))
                .body("[109].'population'", numberMatches(6378000.0))
                .body("[109].'latlng'.size()", equalTo(2))
                .body("[109].'latlng'[0]", numberMatches(53.0))
                .body("[109].'latlng'[1]", numberMatches(-8.0))
                .body("[109].'demonym'", containsString("Irish"))
                .body("[109].'area'", numberMatches(70273.0))
                .body("[109].'gini'", numberMatches(34.3))
                .body("[109].'timezones'.size()", equalTo(1))
                .body("[109].'timezones'", hasItems("UTC"))
                .body("[109].'borders'.size()", equalTo(1))
                .body("[109].'borders'", hasItems("GBR"))
                .body("[109].'nativeName'", containsString("Éire"))
                .body("[109].'numericCode'", containsString("372"))
                .body("[109].'currencies'.size()", equalTo(1))
                .body("[109].'currencies'[0].'code'", containsString("EUR"))
                .body("[109].'currencies'[0].'name'", containsString("Euro"))
                .body("[109].'currencies'[0].'symbol'", containsString("€"))
                .body("[109].'languages'.size()", equalTo(2))
                .body("[109].'languages'[0].'iso639_1'", containsString("ga"))
                .body("[109].'languages'[0].'iso639_2'", containsString("gle"))
                .body("[109].'languages'[0].'name'", containsString("Irish"))
                .body("[109].'languages'[0].'nativeName'", containsString("Gaeilge"))
                .body("[109].'languages'[1].'iso639_1'", containsString("en"))
                .body("[109].'languages'[1].'iso639_2'", containsString("eng"))
                .body("[109].'languages'[1].'name'", containsString("English"))
                .body("[109].'languages'[1].'nativeName'", containsString("English"))
                .body("[109].'translations'.'de'", containsString("Irland"))
                .body("[109].'translations'.'es'", containsString("Irlanda"))
                .body("[109].'translations'.'fr'", containsString("Irlande"))
                .body("[109].'translations'.'ja'", containsString("アイルランド"))
                .body("[109].'translations'.'it'", containsString("Irlanda"))
                .body("[109].'translations'.'br'", containsString("Irlanda"))
                .body("[109].'translations'.'pt'", containsString("Irlanda"))
                .body("[109].'translations'.'nl'", containsString("Ierland"))
                .body("[109].'translations'.'hr'", containsString("Irska"))
                .body("[109].'translations'.'fa'", containsString("ایرلند"))
                .body("[109].'flag'", containsString("https://restcountries.eu/data/irl.svg"))
                .body("[109].'regionalBlocs'.size()", equalTo(1))
                .body("[109].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[109].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[109].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[109].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[109].'cioc'", containsString("IRL"))
                .body("[110].'name'", containsString("Isle of Man"))
                .body("[110].'topLevelDomain'.size()", equalTo(1))
                .body("[110].'topLevelDomain'", hasItems(".im"))
                .body("[110].'alpha2Code'", containsString("IM"))
                .body("[110].'alpha3Code'", containsString("IMN"))
                .body("[110].'callingCodes'.size()", equalTo(1))
                .body("[110].'callingCodes'", hasItems("44"))
                .body("[110].'capital'", containsString("Douglas"))
                .body("[110].'altSpellings'.size()", equalTo(4))
                .body("[110].'altSpellings'", hasItems("IM", "Ellan Vannin", "Mann", "Mannin"))
                .body("[110].'region'", containsString("Europe"))
                .body("[110].'subregion'", containsString("Northern Europe"))
                .body("[110].'population'", numberMatches(84497.0))
                .body("[110].'latlng'.size()", equalTo(2))
                .body("[110].'latlng'[0]", numberMatches(54.25))
                .body("[110].'latlng'[1]", numberMatches(-4.5))
                .body("[110].'demonym'", containsString("Manx"))
                .body("[110].'area'", numberMatches(572.0))
                .body("[110].'gini'", nullValue())
                .body("[110].'timezones'.size()", equalTo(1))
                .body("[110].'timezones'", hasItems("UTC+00:00"))
                .body("[110].'borders'.size()", equalTo(0))
                .body("[110].'nativeName'", containsString("Isle of Man"))
                .body("[110].'numericCode'", containsString("833"))
                .body("[110].'currencies'.size()", equalTo(2))
                .body("[110].'currencies'[0].'code'", containsString("GBP"))
                .body("[110].'currencies'[0].'name'", containsString("British pound"))
                .body("[110].'currencies'[0].'symbol'", containsString("£"))
                .body("[110].'currencies'[1].'code'", containsString("IMP[G]"))
                .body("[110].'currencies'[1].'name'", containsString("Manx pound"))
                .body("[110].'currencies'[1].'symbol'", containsString("£"))
                .body("[110].'languages'.size()", equalTo(2))
                .body("[110].'languages'[0].'iso639_1'", containsString("en"))
                .body("[110].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[110].'languages'[0].'name'", containsString("English"))
                .body("[110].'languages'[0].'nativeName'", containsString("English"))
                .body("[110].'languages'[1].'iso639_1'", containsString("gv"))
                .body("[110].'languages'[1].'iso639_2'", containsString("glv"))
                .body("[110].'languages'[1].'name'", containsString("Manx"))
                .body("[110].'languages'[1].'nativeName'", containsString("Gaelg"))
                .body("[110].'translations'.'de'", containsString("Insel Man"))
                .body("[110].'translations'.'es'", containsString("Isla de Man"))
                .body("[110].'translations'.'fr'", containsString("Île de Man"))
                .body("[110].'translations'.'ja'", containsString("マン島"))
                .body("[110].'translations'.'it'", containsString("Isola di Man"))
                .body("[110].'translations'.'br'", containsString("Ilha de Man"))
                .body("[110].'translations'.'pt'", containsString("Ilha de Man"))
                .body("[110].'translations'.'nl'", containsString("Isle of Man"))
                .body("[110].'translations'.'hr'", containsString("Otok Man"))
                .body("[110].'translations'.'fa'", containsString("جزیره من"))
                .body("[110].'flag'", containsString("https://restcountries.eu/data/imn.svg"))
                .body("[110].'regionalBlocs'.size()", equalTo(1))
                .body("[110].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[110].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[110].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[110].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[110].'cioc'", containsString(""))
                .body("[111].'name'", containsString("Israel"))
                .body("[111].'topLevelDomain'.size()", equalTo(1))
                .body("[111].'topLevelDomain'", hasItems(".il"))
                .body("[111].'alpha2Code'", containsString("IL"))
                .body("[111].'alpha3Code'", containsString("ISR"))
                .body("[111].'callingCodes'.size()", equalTo(1))
                .body("[111].'callingCodes'", hasItems("972"))
                .body("[111].'capital'", containsString("Jerusalem"))
                .body("[111].'altSpellings'.size()", equalTo(3))
                .body("[111].'altSpellings'", hasItems("IL", "State of Israel", "Medīnat Yisrā'el"))
                .body("[111].'region'", containsString("Asia"))
                .body("[111].'subregion'", containsString("Western Asia"))
                .body("[111].'population'", numberMatches(8527400.0))
                .body("[111].'latlng'.size()", equalTo(2))
                .body("[111].'latlng'[0]", numberMatches(31.5))
                .body("[111].'latlng'[1]", numberMatches(34.75))
                .body("[111].'demonym'", containsString("Israeli"))
                .body("[111].'area'", numberMatches(20770.0))
                .body("[111].'gini'", numberMatches(39.2))
                .body("[111].'timezones'.size()", equalTo(1))
                .body("[111].'timezones'", hasItems("UTC+02:00"))
                .body("[111].'borders'.size()", equalTo(4))
                .body("[111].'borders'", hasItems("EGY", "JOR", "LBN", "SYR"))
                .body("[111].'nativeName'", containsString("יִשְׂרָאֵל"))
                .body("[111].'numericCode'", containsString("376"))
                .body("[111].'currencies'.size()", equalTo(1))
                .body("[111].'currencies'[0].'code'", containsString("ILS"))
                .body("[111].'currencies'[0].'name'", containsString("Israeli new shekel"))
                .body("[111].'currencies'[0].'symbol'", containsString("₪"))
                .body("[111].'languages'.size()", equalTo(2))
                .body("[111].'languages'[0].'iso639_1'", containsString("he"))
                .body("[111].'languages'[0].'iso639_2'", containsString("heb"))
                .body("[111].'languages'[0].'name'", containsString("Hebrew (modern)"))
                .body("[111].'languages'[0].'nativeName'", containsString("עברית"))
                .body("[111].'languages'[1].'iso639_1'", containsString("ar"))
                .body("[111].'languages'[1].'iso639_2'", containsString("ara"))
                .body("[111].'languages'[1].'name'", containsString("Arabic"))
                .body("[111].'languages'[1].'nativeName'", containsString("العربية"))
                .body("[111].'translations'.'de'", containsString("Israel"))
                .body("[111].'translations'.'es'", containsString("Israel"))
                .body("[111].'translations'.'fr'", containsString("Israël"))
                .body("[111].'translations'.'ja'", containsString("イスラエル"))
                .body("[111].'translations'.'it'", containsString("Israele"))
                .body("[111].'translations'.'br'", containsString("Israel"))
                .body("[111].'translations'.'pt'", containsString("Israel"))
                .body("[111].'translations'.'nl'", containsString("Israël"))
                .body("[111].'translations'.'hr'", containsString("Izrael"))
                .body("[111].'translations'.'fa'", containsString("اسرائیل"))
                .body("[111].'flag'", containsString("https://restcountries.eu/data/isr.svg"))
                .body("[111].'regionalBlocs'.size()", equalTo(0))
                .body("[111].'cioc'", containsString("ISR"))
                .body("[112].'name'", containsString("Italy"))
                .body("[112].'topLevelDomain'.size()", equalTo(1))
                .body("[112].'topLevelDomain'", hasItems(".it"))
                .body("[112].'alpha2Code'", containsString("IT"))
                .body("[112].'alpha3Code'", containsString("ITA"))
                .body("[112].'callingCodes'.size()", equalTo(1))
                .body("[112].'callingCodes'", hasItems("39"))
                .body("[112].'capital'", containsString("Rome"))
                .body("[112].'altSpellings'.size()", equalTo(3))
                .body("[112].'altSpellings'", hasItems("IT", "Italian Republic", "Repubblica italiana"))
                .body("[112].'region'", containsString("Europe"))
                .body("[112].'subregion'", containsString("Southern Europe"))
                .body("[112].'population'", numberMatches(6.0665551E7))
                .body("[112].'latlng'.size()", equalTo(2))
                .body("[112].'latlng'[0]", numberMatches(42.83333333))
                .body("[112].'latlng'[1]", numberMatches(12.83333333))
                .body("[112].'demonym'", containsString("Italian"))
                .body("[112].'area'", numberMatches(301336.0))
                .body("[112].'gini'", numberMatches(36.0))
                .body("[112].'timezones'.size()", equalTo(1))
                .body("[112].'timezones'", hasItems("UTC+01:00"))
                .body("[112].'borders'.size()", equalTo(6))
                .body("[112].'borders'", hasItems("AUT", "FRA", "SMR", "SVN", "CHE", "VAT"))
                .body("[112].'nativeName'", containsString("Italia"))
                .body("[112].'numericCode'", containsString("380"))
                .body("[112].'currencies'.size()", equalTo(1))
                .body("[112].'currencies'[0].'code'", containsString("EUR"))
                .body("[112].'currencies'[0].'name'", containsString("Euro"))
                .body("[112].'currencies'[0].'symbol'", containsString("€"))
                .body("[112].'languages'.size()", equalTo(1))
                .body("[112].'languages'[0].'iso639_1'", containsString("it"))
                .body("[112].'languages'[0].'iso639_2'", containsString("ita"))
                .body("[112].'languages'[0].'name'", containsString("Italian"))
                .body("[112].'languages'[0].'nativeName'", containsString("Italiano"))
                .body("[112].'translations'.'de'", containsString("Italien"))
                .body("[112].'translations'.'es'", containsString("Italia"))
                .body("[112].'translations'.'fr'", containsString("Italie"))
                .body("[112].'translations'.'ja'", containsString("イタリア"))
                .body("[112].'translations'.'it'", containsString("Italia"))
                .body("[112].'translations'.'br'", containsString("Itália"))
                .body("[112].'translations'.'pt'", containsString("Itália"))
                .body("[112].'translations'.'nl'", containsString("Italië"))
                .body("[112].'translations'.'hr'", containsString("Italija"))
                .body("[112].'translations'.'fa'", containsString("ایتالیا"))
                .body("[112].'flag'", containsString("https://restcountries.eu/data/ita.svg"))
                .body("[112].'regionalBlocs'.size()", equalTo(1))
                .body("[112].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[112].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[112].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[112].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[112].'cioc'", containsString("ITA"))
                .body("[113].'name'", containsString("Jamaica"))
                .body("[113].'topLevelDomain'.size()", equalTo(1))
                .body("[113].'topLevelDomain'", hasItems(".jm"))
                .body("[113].'alpha2Code'", containsString("JM"))
                .body("[113].'alpha3Code'", containsString("JAM"))
                .body("[113].'callingCodes'.size()", equalTo(1))
                .body("[113].'callingCodes'", hasItems("1"))
                .body("[113].'capital'", containsString("Kingston"))
                .body("[113].'altSpellings'.size()", equalTo(1))
                .body("[113].'altSpellings'", hasItems("JM"))
                .body("[113].'region'", containsString("Americas"))
                .body("[113].'subregion'", containsString("Caribbean"))
                .body("[113].'population'", numberMatches(2723246.0))
                .body("[113].'latlng'.size()", equalTo(2))
                .body("[113].'latlng'[0]", numberMatches(18.25))
                .body("[113].'latlng'[1]", numberMatches(-77.5))
                .body("[113].'demonym'", containsString("Jamaican"))
                .body("[113].'area'", numberMatches(10991.0))
                .body("[113].'gini'", numberMatches(45.5))
                .body("[113].'timezones'.size()", equalTo(1))
                .body("[113].'timezones'", hasItems("UTC-05:00"))
                .body("[113].'borders'.size()", equalTo(0))
                .body("[113].'nativeName'", containsString("Jamaica"))
                .body("[113].'numericCode'", containsString("388"))
                .body("[113].'currencies'.size()", equalTo(1))
                .body("[113].'currencies'[0].'code'", containsString("JMD"))
                .body("[113].'currencies'[0].'name'", containsString("Jamaican dollar"))
                .body("[113].'currencies'[0].'symbol'", containsString("$"))
                .body("[113].'languages'.size()", equalTo(1))
                .body("[113].'languages'[0].'iso639_1'", containsString("en"))
                .body("[113].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[113].'languages'[0].'name'", containsString("English"))
                .body("[113].'languages'[0].'nativeName'", containsString("English"))
                .body("[113].'translations'.'de'", containsString("Jamaika"))
                .body("[113].'translations'.'es'", containsString("Jamaica"))
                .body("[113].'translations'.'fr'", containsString("Jamaïque"))
                .body("[113].'translations'.'ja'", containsString("ジャマイカ"))
                .body("[113].'translations'.'it'", containsString("Giamaica"))
                .body("[113].'translations'.'br'", containsString("Jamaica"))
                .body("[113].'translations'.'pt'", containsString("Jamaica"))
                .body("[113].'translations'.'nl'", containsString("Jamaica"))
                .body("[113].'translations'.'hr'", containsString("Jamajka"))
                .body("[113].'translations'.'fa'", containsString("جامائیکا"))
                .body("[113].'flag'", containsString("https://restcountries.eu/data/jam.svg"))
                .body("[113].'regionalBlocs'.size()", equalTo(1))
                .body("[113].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[113].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[113].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[113].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[113].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[113].'cioc'", containsString("JAM"))
                .body("[114].'name'", containsString("Japan"))
                .body("[114].'topLevelDomain'.size()", equalTo(1))
                .body("[114].'topLevelDomain'", hasItems(".jp"))
                .body("[114].'alpha2Code'", containsString("JP"))
                .body("[114].'alpha3Code'", containsString("JPN"))
                .body("[114].'callingCodes'.size()", equalTo(1))
                .body("[114].'callingCodes'", hasItems("81"))
                .body("[114].'capital'", containsString("Tokyo"))
                .body("[114].'altSpellings'.size()", equalTo(3))
                .body("[114].'altSpellings'", hasItems("JP", "Nippon", "Nihon"))
                .body("[114].'region'", containsString("Asia"))
                .body("[114].'subregion'", containsString("Eastern Asia"))
                .body("[114].'population'", numberMatches(1.2696E8))
                .body("[114].'latlng'.size()", equalTo(2))
                .body("[114].'latlng'[0]", numberMatches(36.0))
                .body("[114].'latlng'[1]", numberMatches(138.0))
                .body("[114].'demonym'", containsString("Japanese"))
                .body("[114].'area'", numberMatches(377930.0))
                .body("[114].'gini'", numberMatches(38.1))
                .body("[114].'timezones'.size()", equalTo(1))
                .body("[114].'timezones'", hasItems("UTC+09:00"))
                .body("[114].'borders'.size()", equalTo(0))
                .body("[114].'nativeName'", containsString("日本"))
                .body("[114].'numericCode'", containsString("392"))
                .body("[114].'currencies'.size()", equalTo(1))
                .body("[114].'currencies'[0].'code'", containsString("JPY"))
                .body("[114].'currencies'[0].'name'", containsString("Japanese yen"))
                .body("[114].'currencies'[0].'symbol'", containsString("¥"))
                .body("[114].'languages'.size()", equalTo(1))
                .body("[114].'languages'[0].'iso639_1'", containsString("ja"))
                .body("[114].'languages'[0].'iso639_2'", containsString("jpn"))
                .body("[114].'languages'[0].'name'", containsString("Japanese"))
                .body("[114].'languages'[0].'nativeName'", containsString("日本語 (にほんご)"))
                .body("[114].'translations'.'de'", containsString("Japan"))
                .body("[114].'translations'.'es'", containsString("Japón"))
                .body("[114].'translations'.'fr'", containsString("Japon"))
                .body("[114].'translations'.'ja'", containsString("日本"))
                .body("[114].'translations'.'it'", containsString("Giappone"))
                .body("[114].'translations'.'br'", containsString("Japão"))
                .body("[114].'translations'.'pt'", containsString("Japão"))
                .body("[114].'translations'.'nl'", containsString("Japan"))
                .body("[114].'translations'.'hr'", containsString("Japan"))
                .body("[114].'translations'.'fa'", containsString("ژاپن"))
                .body("[114].'flag'", containsString("https://restcountries.eu/data/jpn.svg"))
                .body("[114].'regionalBlocs'.size()", equalTo(0))
                .body("[114].'cioc'", containsString("JPN"))
                .body("[115].'name'", containsString("Jersey"))
                .body("[115].'topLevelDomain'.size()", equalTo(1))
                .body("[115].'topLevelDomain'", hasItems(".je"))
                .body("[115].'alpha2Code'", containsString("JE"))
                .body("[115].'alpha3Code'", containsString("JEY"))
                .body("[115].'callingCodes'.size()", equalTo(1))
                .body("[115].'callingCodes'", hasItems("44"))
                .body("[115].'capital'", containsString("Saint Helier"))
                .body("[115].'altSpellings'.size()", equalTo(4))
                .body("[115].'altSpellings'", hasItems("JE", "Bailiwick of Jersey", "Bailliage de Jersey", "Bailliage dé Jèrri"))
                .body("[115].'region'", containsString("Europe"))
                .body("[115].'subregion'", containsString("Northern Europe"))
                .body("[115].'population'", numberMatches(100800.0))
                .body("[115].'latlng'.size()", equalTo(2))
                .body("[115].'latlng'[0]", numberMatches(49.25))
                .body("[115].'latlng'[1]", numberMatches(-2.16666666))
                .body("[115].'demonym'", containsString("Channel Islander"))
                .body("[115].'area'", numberMatches(116.0))
                .body("[115].'gini'", nullValue())
                .body("[115].'timezones'.size()", equalTo(1))
                .body("[115].'timezones'", hasItems("UTC+01:00"))
                .body("[115].'borders'.size()", equalTo(0))
                .body("[115].'nativeName'", containsString("Jersey"))
                .body("[115].'numericCode'", containsString("832"))
                .body("[115].'currencies'.size()", equalTo(2))
                .body("[115].'currencies'[0].'code'", containsString("GBP"))
                .body("[115].'currencies'[0].'name'", containsString("British pound"))
                .body("[115].'currencies'[0].'symbol'", containsString("£"))
                .body("[115].'currencies'[1].'code'", containsString("JEP[G]"))
                .body("[115].'currencies'[1].'name'", containsString("Jersey pound"))
                .body("[115].'currencies'[1].'symbol'", containsString("£"))
                .body("[115].'languages'.size()", equalTo(2))
                .body("[115].'languages'[0].'iso639_1'", containsString("en"))
                .body("[115].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[115].'languages'[0].'name'", containsString("English"))
                .body("[115].'languages'[0].'nativeName'", containsString("English"))
                .body("[115].'languages'[1].'iso639_1'", containsString("fr"))
                .body("[115].'languages'[1].'iso639_2'", containsString("fra"))
                .body("[115].'languages'[1].'name'", containsString("French"))
                .body("[115].'languages'[1].'nativeName'", containsString("français"))
                .body("[115].'translations'.'de'", containsString("Jersey"))
                .body("[115].'translations'.'es'", containsString("Jersey"))
                .body("[115].'translations'.'fr'", containsString("Jersey"))
                .body("[115].'translations'.'ja'", containsString("ジャージー"))
                .body("[115].'translations'.'it'", containsString("Isola di Jersey"))
                .body("[115].'translations'.'br'", containsString("Jersey"))
                .body("[115].'translations'.'pt'", containsString("Jersey"))
                .body("[115].'translations'.'nl'", containsString("Jersey"))
                .body("[115].'translations'.'hr'", containsString("Jersey"))
                .body("[115].'translations'.'fa'", containsString("جرزی"))
                .body("[115].'flag'", containsString("https://restcountries.eu/data/jey.svg"))
                .body("[115].'regionalBlocs'.size()", equalTo(0))
                .body("[115].'cioc'", containsString(""))
                .body("[116].'name'", containsString("Jordan"))
                .body("[116].'topLevelDomain'.size()", equalTo(1))
                .body("[116].'topLevelDomain'", hasItems(".jo"))
                .body("[116].'alpha2Code'", containsString("JO"))
                .body("[116].'alpha3Code'", containsString("JOR"))
                .body("[116].'callingCodes'.size()", equalTo(1))
                .body("[116].'callingCodes'", hasItems("962"))
                .body("[116].'capital'", containsString("Amman"))
                .body("[116].'altSpellings'.size()", equalTo(3))
                .body("[116].'altSpellings'", hasItems("JO", "Hashemite Kingdom of Jordan", "al-Mamlakah al-Urdunīyah al-Hāshimīyah"))
                .body("[116].'region'", containsString("Asia"))
                .body("[116].'subregion'", containsString("Western Asia"))
                .body("[116].'population'", numberMatches(9531712.0))
                .body("[116].'latlng'.size()", equalTo(2))
                .body("[116].'latlng'[0]", numberMatches(31.0))
                .body("[116].'latlng'[1]", numberMatches(36.0))
                .body("[116].'demonym'", containsString("Jordanian"))
                .body("[116].'area'", numberMatches(89342.0))
                .body("[116].'gini'", numberMatches(35.4))
                .body("[116].'timezones'.size()", equalTo(1))
                .body("[116].'timezones'", hasItems("UTC+03:00"))
                .body("[116].'borders'.size()", equalTo(4))
                .body("[116].'borders'", hasItems("IRQ", "ISR", "SAU", "SYR"))
                .body("[116].'nativeName'", containsString("الأردن"))
                .body("[116].'numericCode'", containsString("400"))
                .body("[116].'currencies'.size()", equalTo(1))
                .body("[116].'currencies'[0].'code'", containsString("JOD"))
                .body("[116].'currencies'[0].'name'", containsString("Jordanian dinar"))
                .body("[116].'currencies'[0].'symbol'", containsString("د.ا"))
                .body("[116].'languages'.size()", equalTo(1))
                .body("[116].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[116].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[116].'languages'[0].'name'", containsString("Arabic"))
                .body("[116].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[116].'translations'.'de'", containsString("Jordanien"))
                .body("[116].'translations'.'es'", containsString("Jordania"))
                .body("[116].'translations'.'fr'", containsString("Jordanie"))
                .body("[116].'translations'.'ja'", containsString("ヨルダン"))
                .body("[116].'translations'.'it'", containsString("Giordania"))
                .body("[116].'translations'.'br'", containsString("Jordânia"))
                .body("[116].'translations'.'pt'", containsString("Jordânia"))
                .body("[116].'translations'.'nl'", containsString("Jordanië"))
                .body("[116].'translations'.'hr'", containsString("Jordan"))
                .body("[116].'translations'.'fa'", containsString("اردن"))
                .body("[116].'flag'", containsString("https://restcountries.eu/data/jor.svg"))
                .body("[116].'regionalBlocs'.size()", equalTo(1))
                .body("[116].'regionalBlocs'[0].'acronym'", containsString("AL"))
                .body("[116].'regionalBlocs'[0].'name'", containsString("Arab League"))
                .body("[116].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[116].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[116].'regionalBlocs'[0].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[116].'cioc'", containsString("JOR"))
                .body("[117].'name'", containsString("Kazakhstan"))
                .body("[117].'topLevelDomain'.size()", equalTo(2))
                .body("[117].'topLevelDomain'", hasItems(".kz", ".қаз"))
                .body("[117].'alpha2Code'", containsString("KZ"))
                .body("[117].'alpha3Code'", containsString("KAZ"))
                .body("[117].'callingCodes'.size()", equalTo(2))
                .body("[117].'callingCodes'", hasItems("76", "77"))
                .body("[117].'capital'", containsString("Astana"))
                .body("[117].'altSpellings'.size()", equalTo(8))
                .body("[117].'altSpellings'", hasItems("KZ", "Qazaqstan", "Казахстан", "Republic of Kazakhstan", "Қазақстан Республикасы", "Qazaqstan Respublïkası", "Республика Казахстан", "Respublika Kazakhstan"))
                .body("[117].'region'", containsString("Asia"))
                .body("[117].'subregion'", containsString("Central Asia"))
                .body("[117].'population'", numberMatches(1.77532E7))
                .body("[117].'latlng'.size()", equalTo(2))
                .body("[117].'latlng'[0]", numberMatches(48.0))
                .body("[117].'latlng'[1]", numberMatches(68.0))
                .body("[117].'demonym'", containsString("Kazakhstani"))
                .body("[117].'area'", numberMatches(2724900.0))
                .body("[117].'gini'", numberMatches(29.0))
                .body("[117].'timezones'.size()", equalTo(2))
                .body("[117].'timezones'", hasItems("UTC+05:00", "UTC+06:00"))
                .body("[117].'borders'.size()", equalTo(5))
                .body("[117].'borders'", hasItems("CHN", "KGZ", "RUS", "TKM", "UZB"))
                .body("[117].'nativeName'", containsString("Қазақстан"))
                .body("[117].'numericCode'", containsString("398"))
                .body("[117].'currencies'.size()", equalTo(1))
                .body("[117].'currencies'[0].'code'", containsString("KZT"))
                .body("[117].'currencies'[0].'name'", containsString("Kazakhstani tenge"))
                .body("[117].'currencies'[0].'symbol'", nullValue())
                .body("[117].'languages'.size()", equalTo(2))
                .body("[117].'languages'[0].'iso639_1'", containsString("kk"))
                .body("[117].'languages'[0].'iso639_2'", containsString("kaz"))
                .body("[117].'languages'[0].'name'", containsString("Kazakh"))
                .body("[117].'languages'[0].'nativeName'", containsString("қазақ тілі"))
                .body("[117].'languages'[1].'iso639_1'", containsString("ru"))
                .body("[117].'languages'[1].'iso639_2'", containsString("rus"))
                .body("[117].'languages'[1].'name'", containsString("Russian"))
                .body("[117].'languages'[1].'nativeName'", containsString("Русский"))
                .body("[117].'translations'.'de'", containsString("Kasachstan"))
                .body("[117].'translations'.'es'", containsString("Kazajistán"))
                .body("[117].'translations'.'fr'", containsString("Kazakhstan"))
                .body("[117].'translations'.'ja'", containsString("カザフスタン"))
                .body("[117].'translations'.'it'", containsString("Kazakistan"))
                .body("[117].'translations'.'br'", containsString("Cazaquistão"))
                .body("[117].'translations'.'pt'", containsString("Cazaquistão"))
                .body("[117].'translations'.'nl'", containsString("Kazachstan"))
                .body("[117].'translations'.'hr'", containsString("Kazahstan"))
                .body("[117].'translations'.'fa'", containsString("قزاقستان"))
                .body("[117].'flag'", containsString("https://restcountries.eu/data/kaz.svg"))
                .body("[117].'regionalBlocs'.size()", equalTo(1))
                .body("[117].'regionalBlocs'[0].'acronym'", containsString("EEU"))
                .body("[117].'regionalBlocs'[0].'name'", containsString("Eurasian Economic Union"))
                .body("[117].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(1))
                .body("[117].'regionalBlocs'[0].'otherAcronyms'", hasItems("EAEU"))
                .body("[117].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[117].'cioc'", containsString("KAZ"))
                .body("[118].'name'", containsString("Kenya"))
                .body("[118].'topLevelDomain'.size()", equalTo(1))
                .body("[118].'topLevelDomain'", hasItems(".ke"))
                .body("[118].'alpha2Code'", containsString("KE"))
                .body("[118].'alpha3Code'", containsString("KEN"))
                .body("[118].'callingCodes'.size()", equalTo(1))
                .body("[118].'callingCodes'", hasItems("254"))
                .body("[118].'capital'", containsString("Nairobi"))
                .body("[118].'altSpellings'.size()", equalTo(3))
                .body("[118].'altSpellings'", hasItems("KE", "Republic of Kenya", "Jamhuri ya Kenya"))
                .body("[118].'region'", containsString("Africa"))
                .body("[118].'subregion'", containsString("Eastern Africa"))
                .body("[118].'population'", numberMatches(4.7251E7))
                .body("[118].'latlng'.size()", equalTo(2))
                .body("[118].'latlng'[0]", numberMatches(1.0))
                .body("[118].'latlng'[1]", numberMatches(38.0))
                .body("[118].'demonym'", containsString("Kenyan"))
                .body("[118].'area'", numberMatches(580367.0))
                .body("[118].'gini'", numberMatches(47.7))
                .body("[118].'timezones'.size()", equalTo(1))
                .body("[118].'timezones'", hasItems("UTC+03:00"))
                .body("[118].'borders'.size()", equalTo(5))
                .body("[118].'borders'", hasItems("ETH", "SOM", "SSD", "TZA", "UGA"))
                .body("[118].'nativeName'", containsString("Kenya"))
                .body("[118].'numericCode'", containsString("404"))
                .body("[118].'currencies'.size()", equalTo(1))
                .body("[118].'currencies'[0].'code'", containsString("KES"))
                .body("[118].'currencies'[0].'name'", containsString("Kenyan shilling"))
                .body("[118].'currencies'[0].'symbol'", containsString("Sh"))
                .body("[118].'languages'.size()", equalTo(2))
                .body("[118].'languages'[0].'iso639_1'", containsString("en"))
                .body("[118].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[118].'languages'[0].'name'", containsString("English"))
                .body("[118].'languages'[0].'nativeName'", containsString("English"))
                .body("[118].'languages'[1].'iso639_1'", containsString("sw"))
                .body("[118].'languages'[1].'iso639_2'", containsString("swa"))
                .body("[118].'languages'[1].'name'", containsString("Swahili"))
                .body("[118].'languages'[1].'nativeName'", containsString("Kiswahili"))
                .body("[118].'translations'.'de'", containsString("Kenia"))
                .body("[118].'translations'.'es'", containsString("Kenia"))
                .body("[118].'translations'.'fr'", containsString("Kenya"))
                .body("[118].'translations'.'ja'", containsString("ケニア"))
                .body("[118].'translations'.'it'", containsString("Kenya"))
                .body("[118].'translations'.'br'", containsString("Quênia"))
                .body("[118].'translations'.'pt'", containsString("Quénia"))
                .body("[118].'translations'.'nl'", containsString("Kenia"))
                .body("[118].'translations'.'hr'", containsString("Kenija"))
                .body("[118].'translations'.'fa'", containsString("کنیا"))
                .body("[118].'flag'", containsString("https://restcountries.eu/data/ken.svg"))
                .body("[118].'regionalBlocs'.size()", equalTo(1))
                .body("[118].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[118].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[118].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[118].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[118].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[118].'cioc'", containsString("KEN"))
                .body("[119].'name'", containsString("Kiribati"))
                .body("[119].'topLevelDomain'.size()", equalTo(1))
                .body("[119].'topLevelDomain'", hasItems(".ki"))
                .body("[119].'alpha2Code'", containsString("KI"))
                .body("[119].'alpha3Code'", containsString("KIR"))
                .body("[119].'callingCodes'.size()", equalTo(1))
                .body("[119].'callingCodes'", hasItems("686"))
                .body("[119].'capital'", containsString("South Tarawa"))
                .body("[119].'altSpellings'.size()", equalTo(3))
                .body("[119].'altSpellings'", hasItems("KI", "Republic of Kiribati", "Ribaberiki Kiribati"))
                .body("[119].'region'", containsString("Oceania"))
                .body("[119].'subregion'", containsString("Micronesia"))
                .body("[119].'population'", numberMatches(113400.0))
                .body("[119].'latlng'.size()", equalTo(2))
                .body("[119].'latlng'[0]", numberMatches(1.41666666))
                .body("[119].'latlng'[1]", numberMatches(173.0))
                .body("[119].'demonym'", containsString("I-Kiribati"))
                .body("[119].'area'", numberMatches(811.0))
                .body("[119].'gini'", nullValue())
                .body("[119].'timezones'.size()", equalTo(3))
                .body("[119].'timezones'", hasItems("UTC+12:00", "UTC+13:00", "UTC+14:00"))
                .body("[119].'borders'.size()", equalTo(0))
                .body("[119].'nativeName'", containsString("Kiribati"))
                .body("[119].'numericCode'", containsString("296"))
                .body("[119].'currencies'.size()", equalTo(2))
                .body("[119].'currencies'[0].'code'", containsString("AUD"))
                .body("[119].'currencies'[0].'name'", containsString("Australian dollar"))
                .body("[119].'currencies'[0].'symbol'", containsString("$"))
                .body("[119].'currencies'[1].'code'", containsString("(none)"))
                .body("[119].'currencies'[1].'name'", containsString("Kiribati dollar"))
                .body("[119].'currencies'[1].'symbol'", containsString("$"))
                .body("[119].'languages'.size()", equalTo(1))
                .body("[119].'languages'[0].'iso639_1'", containsString("en"))
                .body("[119].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[119].'languages'[0].'name'", containsString("English"))
                .body("[119].'languages'[0].'nativeName'", containsString("English"))
                .body("[119].'translations'.'de'", containsString("Kiribati"))
                .body("[119].'translations'.'es'", containsString("Kiribati"))
                .body("[119].'translations'.'fr'", containsString("Kiribati"))
                .body("[119].'translations'.'ja'", containsString("キリバス"))
                .body("[119].'translations'.'it'", containsString("Kiribati"))
                .body("[119].'translations'.'br'", containsString("Kiribati"))
                .body("[119].'translations'.'pt'", containsString("Quiribáti"))
                .body("[119].'translations'.'nl'", containsString("Kiribati"))
                .body("[119].'translations'.'hr'", containsString("Kiribati"))
                .body("[119].'translations'.'fa'", containsString("کیریباتی"))
                .body("[119].'flag'", containsString("https://restcountries.eu/data/kir.svg"))
                .body("[119].'regionalBlocs'.size()", equalTo(0))
                .body("[119].'cioc'", containsString("KIR"))
                .body("[120].'name'", containsString("Kuwait"))
                .body("[120].'topLevelDomain'.size()", equalTo(1))
                .body("[120].'topLevelDomain'", hasItems(".kw"))
                .body("[120].'alpha2Code'", containsString("KW"))
                .body("[120].'alpha3Code'", containsString("KWT"))
                .body("[120].'callingCodes'.size()", equalTo(1))
                .body("[120].'callingCodes'", hasItems("965"))
                .body("[120].'capital'", containsString("Kuwait City"))
                .body("[120].'altSpellings'.size()", equalTo(3))
                .body("[120].'altSpellings'", hasItems("KW", "State of Kuwait", "Dawlat al-Kuwait"))
                .body("[120].'region'", containsString("Asia"))
                .body("[120].'subregion'", containsString("Western Asia"))
                .body("[120].'population'", numberMatches(4183658.0))
                .body("[120].'latlng'.size()", equalTo(2))
                .body("[120].'latlng'[0]", numberMatches(29.5))
                .body("[120].'latlng'[1]", numberMatches(45.75))
                .body("[120].'demonym'", containsString("Kuwaiti"))
                .body("[120].'area'", numberMatches(17818.0))
                .body("[120].'gini'", nullValue())
                .body("[120].'timezones'.size()", equalTo(1))
                .body("[120].'timezones'", hasItems("UTC+03:00"))
                .body("[120].'borders'.size()", equalTo(2))
                .body("[120].'borders'", hasItems("IRN", "SAU"))
                .body("[120].'nativeName'", containsString("الكويت"))
                .body("[120].'numericCode'", containsString("414"))
                .body("[120].'currencies'.size()", equalTo(1))
                .body("[120].'currencies'[0].'code'", containsString("KWD"))
                .body("[120].'currencies'[0].'name'", containsString("Kuwaiti dinar"))
                .body("[120].'currencies'[0].'symbol'", containsString("د.ك"))
                .body("[120].'languages'.size()", equalTo(1))
                .body("[120].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[120].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[120].'languages'[0].'name'", containsString("Arabic"))
                .body("[120].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[120].'translations'.'de'", containsString("Kuwait"))
                .body("[120].'translations'.'es'", containsString("Kuwait"))
                .body("[120].'translations'.'fr'", containsString("Koweït"))
                .body("[120].'translations'.'ja'", containsString("クウェート"))
                .body("[120].'translations'.'it'", containsString("Kuwait"))
                .body("[120].'translations'.'br'", containsString("Kuwait"))
                .body("[120].'translations'.'pt'", containsString("Kuwait"))
                .body("[120].'translations'.'nl'", containsString("Koeweit"))
                .body("[120].'translations'.'hr'", containsString("Kuvajt"))
                .body("[120].'translations'.'fa'", containsString("کویت"))
                .body("[120].'flag'", containsString("https://restcountries.eu/data/kwt.svg"))
                .body("[120].'regionalBlocs'.size()", equalTo(1))
                .body("[120].'regionalBlocs'[0].'acronym'", containsString("AL"))
                .body("[120].'regionalBlocs'[0].'name'", containsString("Arab League"))
                .body("[120].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[120].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[120].'regionalBlocs'[0].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[120].'cioc'", containsString("KUW"))
                .body("[121].'name'", containsString("Kyrgyzstan"))
                .body("[121].'topLevelDomain'.size()", equalTo(1))
                .body("[121].'topLevelDomain'", hasItems(".kg"))
                .body("[121].'alpha2Code'", containsString("KG"))
                .body("[121].'alpha3Code'", containsString("KGZ"))
                .body("[121].'callingCodes'.size()", equalTo(1))
                .body("[121].'callingCodes'", hasItems("996"))
                .body("[121].'capital'", containsString("Bishkek"))
                .body("[121].'altSpellings'.size()", equalTo(5))
                .body("[121].'altSpellings'", hasItems("KG", "Киргизия", "Kyrgyz Republic", "Кыргыз Республикасы", "Kyrgyz Respublikasy"))
                .body("[121].'region'", containsString("Asia"))
                .body("[121].'subregion'", containsString("Central Asia"))
                .body("[121].'population'", numberMatches(6047800.0))
                .body("[121].'latlng'.size()", equalTo(2))
                .body("[121].'latlng'[0]", numberMatches(41.0))
                .body("[121].'latlng'[1]", numberMatches(75.0))
                .body("[121].'demonym'", containsString("Kirghiz"))
                .body("[121].'area'", numberMatches(199951.0))
                .body("[121].'gini'", numberMatches(36.2))
                .body("[121].'timezones'.size()", equalTo(1))
                .body("[121].'timezones'", hasItems("UTC+06:00"))
                .body("[121].'borders'.size()", equalTo(4))
                .body("[121].'borders'", hasItems("CHN", "KAZ", "TJK", "UZB"))
                .body("[121].'nativeName'", containsString("Кыргызстан"))
                .body("[121].'numericCode'", containsString("417"))
                .body("[121].'currencies'.size()", equalTo(1))
                .body("[121].'currencies'[0].'code'", containsString("KGS"))
                .body("[121].'currencies'[0].'name'", containsString("Kyrgyzstani som"))
                .body("[121].'currencies'[0].'symbol'", containsString("с"))
                .body("[121].'languages'.size()", equalTo(2))
                .body("[121].'languages'[0].'iso639_1'", containsString("ky"))
                .body("[121].'languages'[0].'iso639_2'", containsString("kir"))
                .body("[121].'languages'[0].'name'", containsString("Kyrgyz"))
                .body("[121].'languages'[0].'nativeName'", containsString("Кыргызча"))
                .body("[121].'languages'[1].'iso639_1'", containsString("ru"))
                .body("[121].'languages'[1].'iso639_2'", containsString("rus"))
                .body("[121].'languages'[1].'name'", containsString("Russian"))
                .body("[121].'languages'[1].'nativeName'", containsString("Русский"))
                .body("[121].'translations'.'de'", containsString("Kirgisistan"))
                .body("[121].'translations'.'es'", containsString("Kirguizistán"))
                .body("[121].'translations'.'fr'", containsString("Kirghizistan"))
                .body("[121].'translations'.'ja'", containsString("キルギス"))
                .body("[121].'translations'.'it'", containsString("Kirghizistan"))
                .body("[121].'translations'.'br'", containsString("Quirguistão"))
                .body("[121].'translations'.'pt'", containsString("Quirguizistão"))
                .body("[121].'translations'.'nl'", containsString("Kirgizië"))
                .body("[121].'translations'.'hr'", containsString("Kirgistan"))
                .body("[121].'translations'.'fa'", containsString("قرقیزستان"))
                .body("[121].'flag'", containsString("https://restcountries.eu/data/kgz.svg"))
                .body("[121].'regionalBlocs'.size()", equalTo(1))
                .body("[121].'regionalBlocs'[0].'acronym'", containsString("EEU"))
                .body("[121].'regionalBlocs'[0].'name'", containsString("Eurasian Economic Union"))
                .body("[121].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(1))
                .body("[121].'regionalBlocs'[0].'otherAcronyms'", hasItems("EAEU"))
                .body("[121].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[121].'cioc'", containsString("KGZ"))
                .body("[122].'name'", containsString("Lao People's Democratic Republic"))
                .body("[122].'topLevelDomain'.size()", equalTo(1))
                .body("[122].'topLevelDomain'", hasItems(".la"))
                .body("[122].'alpha2Code'", containsString("LA"))
                .body("[122].'alpha3Code'", containsString("LAO"))
                .body("[122].'callingCodes'.size()", equalTo(1))
                .body("[122].'callingCodes'", hasItems("856"))
                .body("[122].'capital'", containsString("Vientiane"))
                .body("[122].'altSpellings'.size()", equalTo(5))
                .body("[122].'altSpellings'", hasItems("LA", "Lao", "Laos", "Lao People's Democratic Republic", "Sathalanalat Paxathipatai Paxaxon Lao"))
                .body("[122].'region'", containsString("Asia"))
                .body("[122].'subregion'", containsString("South-Eastern Asia"))
                .body("[122].'population'", numberMatches(6492400.0))
                .body("[122].'latlng'.size()", equalTo(2))
                .body("[122].'latlng'[0]", numberMatches(18.0))
                .body("[122].'latlng'[1]", numberMatches(105.0))
                .body("[122].'demonym'", containsString("Laotian"))
                .body("[122].'area'", numberMatches(236800.0))
                .body("[122].'gini'", numberMatches(36.7))
                .body("[122].'timezones'.size()", equalTo(1))
                .body("[122].'timezones'", hasItems("UTC+07:00"))
                .body("[122].'borders'.size()", equalTo(5))
                .body("[122].'borders'", hasItems("MMR", "KHM", "CHN", "THA", "VNM"))
                .body("[122].'nativeName'", containsString("ສປປລາວ"))
                .body("[122].'numericCode'", containsString("418"))
                .body("[122].'currencies'.size()", equalTo(1))
                .body("[122].'currencies'[0].'code'", containsString("LAK"))
                .body("[122].'currencies'[0].'name'", containsString("Lao kip"))
                .body("[122].'currencies'[0].'symbol'", containsString("₭"))
                .body("[122].'languages'.size()", equalTo(1))
                .body("[122].'languages'[0].'iso639_1'", containsString("lo"))
                .body("[122].'languages'[0].'iso639_2'", containsString("lao"))
                .body("[122].'languages'[0].'name'", containsString("Lao"))
                .body("[122].'languages'[0].'nativeName'", containsString("ພາສາລາວ"))
                .body("[122].'translations'.'de'", containsString("Laos"))
                .body("[122].'translations'.'es'", containsString("Laos"))
                .body("[122].'translations'.'fr'", containsString("Laos"))
                .body("[122].'translations'.'ja'", containsString("ラオス人民民主共和国"))
                .body("[122].'translations'.'it'", containsString("Laos"))
                .body("[122].'translations'.'br'", containsString("Laos"))
                .body("[122].'translations'.'pt'", containsString("Laos"))
                .body("[122].'translations'.'nl'", containsString("Laos"))
                .body("[122].'translations'.'hr'", containsString("Laos"))
                .body("[122].'translations'.'fa'", containsString("لائوس"))
                .body("[122].'flag'", containsString("https://restcountries.eu/data/lao.svg"))
                .body("[122].'regionalBlocs'.size()", equalTo(1))
                .body("[122].'regionalBlocs'[0].'acronym'", containsString("ASEAN"))
                .body("[122].'regionalBlocs'[0].'name'", containsString("Association of Southeast Asian Nations"))
                .body("[122].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[122].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[122].'cioc'", containsString("LAO"))
                .body("[123].'name'", containsString("Latvia"))
                .body("[123].'topLevelDomain'.size()", equalTo(1))
                .body("[123].'topLevelDomain'", hasItems(".lv"))
                .body("[123].'alpha2Code'", containsString("LV"))
                .body("[123].'alpha3Code'", containsString("LVA"))
                .body("[123].'callingCodes'.size()", equalTo(1))
                .body("[123].'callingCodes'", hasItems("371"))
                .body("[123].'capital'", containsString("Riga"))
                .body("[123].'altSpellings'.size()", equalTo(3))
                .body("[123].'altSpellings'", hasItems("LV", "Republic of Latvia", "Latvijas Republika"))
                .body("[123].'region'", containsString("Europe"))
                .body("[123].'subregion'", containsString("Northern Europe"))
                .body("[123].'population'", numberMatches(1961600.0))
                .body("[123].'latlng'.size()", equalTo(2))
                .body("[123].'latlng'[0]", numberMatches(57.0))
                .body("[123].'latlng'[1]", numberMatches(25.0))
                .body("[123].'demonym'", containsString("Latvian"))
                .body("[123].'area'", numberMatches(64559.0))
                .body("[123].'gini'", numberMatches(36.6))
                .body("[123].'timezones'.size()", equalTo(1))
                .body("[123].'timezones'", hasItems("UTC+02:00"))
                .body("[123].'borders'.size()", equalTo(4))
                .body("[123].'borders'", hasItems("BLR", "EST", "LTU", "RUS"))
                .body("[123].'nativeName'", containsString("Latvija"))
                .body("[123].'numericCode'", containsString("428"))
                .body("[123].'currencies'.size()", equalTo(1))
                .body("[123].'currencies'[0].'code'", containsString("EUR"))
                .body("[123].'currencies'[0].'name'", containsString("Euro"))
                .body("[123].'currencies'[0].'symbol'", containsString("€"))
                .body("[123].'languages'.size()", equalTo(1))
                .body("[123].'languages'[0].'iso639_1'", containsString("lv"))
                .body("[123].'languages'[0].'iso639_2'", containsString("lav"))
                .body("[123].'languages'[0].'name'", containsString("Latvian"))
                .body("[123].'languages'[0].'nativeName'", containsString("latviešu valoda"))
                .body("[123].'translations'.'de'", containsString("Lettland"))
                .body("[123].'translations'.'es'", containsString("Letonia"))
                .body("[123].'translations'.'fr'", containsString("Lettonie"))
                .body("[123].'translations'.'ja'", containsString("ラトビア"))
                .body("[123].'translations'.'it'", containsString("Lettonia"))
                .body("[123].'translations'.'br'", containsString("Letônia"))
                .body("[123].'translations'.'pt'", containsString("Letónia"))
                .body("[123].'translations'.'nl'", containsString("Letland"))
                .body("[123].'translations'.'hr'", containsString("Latvija"))
                .body("[123].'translations'.'fa'", containsString("لتونی"))
                .body("[123].'flag'", containsString("https://restcountries.eu/data/lva.svg"))
                .body("[123].'regionalBlocs'.size()", equalTo(1))
                .body("[123].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[123].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[123].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[123].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[123].'cioc'", containsString("LAT"))
                .body("[124].'name'", containsString("Lebanon"))
                .body("[124].'topLevelDomain'.size()", equalTo(1))
                .body("[124].'topLevelDomain'", hasItems(".lb"))
                .body("[124].'alpha2Code'", containsString("LB"))
                .body("[124].'alpha3Code'", containsString("LBN"))
                .body("[124].'callingCodes'.size()", equalTo(1))
                .body("[124].'callingCodes'", hasItems("961"))
                .body("[124].'capital'", containsString("Beirut"))
                .body("[124].'altSpellings'.size()", equalTo(3))
                .body("[124].'altSpellings'", hasItems("LB", "Lebanese Republic", "Al-Jumhūrīyah Al-Libnānīyah"))
                .body("[124].'region'", containsString("Asia"))
                .body("[124].'subregion'", containsString("Western Asia"))
                .body("[124].'population'", numberMatches(5988000.0))
                .body("[124].'latlng'.size()", equalTo(2))
                .body("[124].'latlng'[0]", numberMatches(33.83333333))
                .body("[124].'latlng'[1]", numberMatches(35.83333333))
                .body("[124].'demonym'", containsString("Lebanese"))
                .body("[124].'area'", numberMatches(10452.0))
                .body("[124].'gini'", nullValue())
                .body("[124].'timezones'.size()", equalTo(1))
                .body("[124].'timezones'", hasItems("UTC+02:00"))
                .body("[124].'borders'.size()", equalTo(2))
                .body("[124].'borders'", hasItems("ISR", "SYR"))
                .body("[124].'nativeName'", containsString("لبنان"))
                .body("[124].'numericCode'", containsString("422"))
                .body("[124].'currencies'.size()", equalTo(1))
                .body("[124].'currencies'[0].'code'", containsString("LBP"))
                .body("[124].'currencies'[0].'name'", containsString("Lebanese pound"))
                .body("[124].'currencies'[0].'symbol'", containsString("ل.ل"))
                .body("[124].'languages'.size()", equalTo(2))
                .body("[124].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[124].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[124].'languages'[0].'name'", containsString("Arabic"))
                .body("[124].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[124].'languages'[1].'iso639_1'", containsString("fr"))
                .body("[124].'languages'[1].'iso639_2'", containsString("fra"))
                .body("[124].'languages'[1].'name'", containsString("French"))
                .body("[124].'languages'[1].'nativeName'", containsString("français"))
                .body("[124].'translations'.'de'", containsString("Libanon"))
                .body("[124].'translations'.'es'", containsString("Líbano"))
                .body("[124].'translations'.'fr'", containsString("Liban"))
                .body("[124].'translations'.'ja'", containsString("レバノン"))
                .body("[124].'translations'.'it'", containsString("Libano"))
                .body("[124].'translations'.'br'", containsString("Líbano"))
                .body("[124].'translations'.'pt'", containsString("Líbano"))
                .body("[124].'translations'.'nl'", containsString("Libanon"))
                .body("[124].'translations'.'hr'", containsString("Libanon"))
                .body("[124].'translations'.'fa'", containsString("لبنان"))
                .body("[124].'flag'", containsString("https://restcountries.eu/data/lbn.svg"))
                .body("[124].'regionalBlocs'.size()", equalTo(1))
                .body("[124].'regionalBlocs'[0].'acronym'", containsString("AL"))
                .body("[124].'regionalBlocs'[0].'name'", containsString("Arab League"))
                .body("[124].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[124].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[124].'regionalBlocs'[0].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[124].'cioc'", containsString("LIB"))
                .body("[125].'name'", containsString("Lesotho"))
                .body("[125].'topLevelDomain'.size()", equalTo(1))
                .body("[125].'topLevelDomain'", hasItems(".ls"))
                .body("[125].'alpha2Code'", containsString("LS"))
                .body("[125].'alpha3Code'", containsString("LSO"))
                .body("[125].'callingCodes'.size()", equalTo(1))
                .body("[125].'callingCodes'", hasItems("266"))
                .body("[125].'capital'", containsString("Maseru"))
                .body("[125].'altSpellings'.size()", equalTo(3))
                .body("[125].'altSpellings'", hasItems("LS", "Kingdom of Lesotho", "Muso oa Lesotho"))
                .body("[125].'region'", containsString("Africa"))
                .body("[125].'subregion'", containsString("Southern Africa"))
                .body("[125].'population'", numberMatches(1894194.0))
                .body("[125].'latlng'.size()", equalTo(2))
                .body("[125].'latlng'[0]", numberMatches(-29.5))
                .body("[125].'latlng'[1]", numberMatches(28.5))
                .body("[125].'demonym'", containsString("Mosotho"))
                .body("[125].'area'", numberMatches(30355.0))
                .body("[125].'gini'", numberMatches(52.5))
                .body("[125].'timezones'.size()", equalTo(1))
                .body("[125].'timezones'", hasItems("UTC+02:00"))
                .body("[125].'borders'.size()", equalTo(1))
                .body("[125].'borders'", hasItems("ZAF"))
                .body("[125].'nativeName'", containsString("Lesotho"))
                .body("[125].'numericCode'", containsString("426"))
                .body("[125].'currencies'.size()", equalTo(2))
                .body("[125].'currencies'[0].'code'", containsString("LSL"))
                .body("[125].'currencies'[0].'name'", containsString("Lesotho loti"))
                .body("[125].'currencies'[0].'symbol'", containsString("L"))
                .body("[125].'currencies'[1].'code'", containsString("ZAR"))
                .body("[125].'currencies'[1].'name'", containsString("South African rand"))
                .body("[125].'currencies'[1].'symbol'", containsString("R"))
                .body("[125].'languages'.size()", equalTo(2))
                .body("[125].'languages'[0].'iso639_1'", containsString("en"))
                .body("[125].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[125].'languages'[0].'name'", containsString("English"))
                .body("[125].'languages'[0].'nativeName'", containsString("English"))
                .body("[125].'languages'[1].'iso639_1'", containsString("st"))
                .body("[125].'languages'[1].'iso639_2'", containsString("sot"))
                .body("[125].'languages'[1].'name'", containsString("Southern Sotho"))
                .body("[125].'languages'[1].'nativeName'", containsString("Sesotho"))
                .body("[125].'translations'.'de'", containsString("Lesotho"))
                .body("[125].'translations'.'es'", containsString("Lesotho"))
                .body("[125].'translations'.'fr'", containsString("Lesotho"))
                .body("[125].'translations'.'ja'", containsString("レソト"))
                .body("[125].'translations'.'it'", containsString("Lesotho"))
                .body("[125].'translations'.'br'", containsString("Lesoto"))
                .body("[125].'translations'.'pt'", containsString("Lesoto"))
                .body("[125].'translations'.'nl'", containsString("Lesotho"))
                .body("[125].'translations'.'hr'", containsString("Lesoto"))
                .body("[125].'translations'.'fa'", containsString("لسوتو"))
                .body("[125].'flag'", containsString("https://restcountries.eu/data/lso.svg"))
                .body("[125].'regionalBlocs'.size()", equalTo(1))
                .body("[125].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[125].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[125].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[125].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[125].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[125].'cioc'", containsString("LES"))
                .body("[126].'name'", containsString("Liberia"))
                .body("[126].'topLevelDomain'.size()", equalTo(1))
                .body("[126].'topLevelDomain'", hasItems(".lr"))
                .body("[126].'alpha2Code'", containsString("LR"))
                .body("[126].'alpha3Code'", containsString("LBR"))
                .body("[126].'callingCodes'.size()", equalTo(1))
                .body("[126].'callingCodes'", hasItems("231"))
                .body("[126].'capital'", containsString("Monrovia"))
                .body("[126].'altSpellings'.size()", equalTo(2))
                .body("[126].'altSpellings'", hasItems("LR", "Republic of Liberia"))
                .body("[126].'region'", containsString("Africa"))
                .body("[126].'subregion'", containsString("Western Africa"))
                .body("[126].'population'", numberMatches(4615000.0))
                .body("[126].'latlng'.size()", equalTo(2))
                .body("[126].'latlng'[0]", numberMatches(6.5))
                .body("[126].'latlng'[1]", numberMatches(-9.5))
                .body("[126].'demonym'", containsString("Liberian"))
                .body("[126].'area'", numberMatches(111369.0))
                .body("[126].'gini'", numberMatches(38.2))
                .body("[126].'timezones'.size()", equalTo(1))
                .body("[126].'timezones'", hasItems("UTC"))
                .body("[126].'borders'.size()", equalTo(3))
                .body("[126].'borders'", hasItems("GIN", "CIV", "SLE"))
                .body("[126].'nativeName'", containsString("Liberia"))
                .body("[126].'numericCode'", containsString("430"))
                .body("[126].'currencies'.size()", equalTo(1))
                .body("[126].'currencies'[0].'code'", containsString("LRD"))
                .body("[126].'currencies'[0].'name'", containsString("Liberian dollar"))
                .body("[126].'currencies'[0].'symbol'", containsString("$"))
                .body("[126].'languages'.size()", equalTo(1))
                .body("[126].'languages'[0].'iso639_1'", containsString("en"))
                .body("[126].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[126].'languages'[0].'name'", containsString("English"))
                .body("[126].'languages'[0].'nativeName'", containsString("English"))
                .body("[126].'translations'.'de'", containsString("Liberia"))
                .body("[126].'translations'.'es'", containsString("Liberia"))
                .body("[126].'translations'.'fr'", containsString("Liberia"))
                .body("[126].'translations'.'ja'", containsString("リベリア"))
                .body("[126].'translations'.'it'", containsString("Liberia"))
                .body("[126].'translations'.'br'", containsString("Libéria"))
                .body("[126].'translations'.'pt'", containsString("Libéria"))
                .body("[126].'translations'.'nl'", containsString("Liberia"))
                .body("[126].'translations'.'hr'", containsString("Liberija"))
                .body("[126].'translations'.'fa'", containsString("لیبریا"))
                .body("[126].'flag'", containsString("https://restcountries.eu/data/lbr.svg"))
                .body("[126].'regionalBlocs'.size()", equalTo(1))
                .body("[126].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[126].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[126].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[126].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[126].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[126].'cioc'", containsString("LBR"))
                .body("[127].'name'", containsString("Libya"))
                .body("[127].'topLevelDomain'.size()", equalTo(1))
                .body("[127].'topLevelDomain'", hasItems(".ly"))
                .body("[127].'alpha2Code'", containsString("LY"))
                .body("[127].'alpha3Code'", containsString("LBY"))
                .body("[127].'callingCodes'.size()", equalTo(1))
                .body("[127].'callingCodes'", hasItems("218"))
                .body("[127].'capital'", containsString("Tripoli"))
                .body("[127].'altSpellings'.size()", equalTo(3))
                .body("[127].'altSpellings'", hasItems("LY", "State of Libya", "Dawlat Libya"))
                .body("[127].'region'", containsString("Africa"))
                .body("[127].'subregion'", containsString("Northern Africa"))
                .body("[127].'population'", numberMatches(6385000.0))
                .body("[127].'latlng'.size()", equalTo(2))
                .body("[127].'latlng'[0]", numberMatches(25.0))
                .body("[127].'latlng'[1]", numberMatches(17.0))
                .body("[127].'demonym'", containsString("Libyan"))
                .body("[127].'area'", numberMatches(1759540.0))
                .body("[127].'gini'", nullValue())
                .body("[127].'timezones'.size()", equalTo(1))
                .body("[127].'timezones'", hasItems("UTC+01:00"))
                .body("[127].'borders'.size()", equalTo(6))
                .body("[127].'borders'", hasItems("DZA", "TCD", "EGY", "NER", "SDN", "TUN"))
                .body("[127].'nativeName'", containsString("‏ليبيا"))
                .body("[127].'numericCode'", containsString("434"))
                .body("[127].'currencies'.size()", equalTo(1))
                .body("[127].'currencies'[0].'code'", containsString("LYD"))
                .body("[127].'currencies'[0].'name'", containsString("Libyan dinar"))
                .body("[127].'currencies'[0].'symbol'", containsString("ل.د"))
                .body("[127].'languages'.size()", equalTo(1))
                .body("[127].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[127].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[127].'languages'[0].'name'", containsString("Arabic"))
                .body("[127].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[127].'translations'.'de'", containsString("Libyen"))
                .body("[127].'translations'.'es'", containsString("Libia"))
                .body("[127].'translations'.'fr'", containsString("Libye"))
                .body("[127].'translations'.'ja'", containsString("リビア"))
                .body("[127].'translations'.'it'", containsString("Libia"))
                .body("[127].'translations'.'br'", containsString("Líbia"))
                .body("[127].'translations'.'pt'", containsString("Líbia"))
                .body("[127].'translations'.'nl'", containsString("Libië"))
                .body("[127].'translations'.'hr'", containsString("Libija"))
                .body("[127].'translations'.'fa'", containsString("لیبی"))
                .body("[127].'flag'", containsString("https://restcountries.eu/data/lby.svg"))
                .body("[127].'regionalBlocs'.size()", equalTo(2))
                .body("[127].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[127].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[127].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[127].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[127].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[127].'regionalBlocs'[1].'acronym'", containsString("AL"))
                .body("[127].'regionalBlocs'[1].'name'", containsString("Arab League"))
                .body("[127].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(0))
                .body("[127].'regionalBlocs'[1].'otherNames'.size()", equalTo(3))
                .body("[127].'regionalBlocs'[1].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[127].'cioc'", containsString("LBA"))
                .body("[128].'name'", containsString("Liechtenstein"))
                .body("[128].'topLevelDomain'.size()", equalTo(1))
                .body("[128].'topLevelDomain'", hasItems(".li"))
                .body("[128].'alpha2Code'", containsString("LI"))
                .body("[128].'alpha3Code'", containsString("LIE"))
                .body("[128].'callingCodes'.size()", equalTo(1))
                .body("[128].'callingCodes'", hasItems("423"))
                .body("[128].'capital'", containsString("Vaduz"))
                .body("[128].'altSpellings'.size()", equalTo(3))
                .body("[128].'altSpellings'", hasItems("LI", "Principality of Liechtenstein", "Fürstentum Liechtenstein"))
                .body("[128].'region'", containsString("Europe"))
                .body("[128].'subregion'", containsString("Western Europe"))
                .body("[128].'population'", numberMatches(37623.0))
                .body("[128].'latlng'.size()", equalTo(2))
                .body("[128].'latlng'[0]", numberMatches(47.26666666))
                .body("[128].'latlng'[1]", numberMatches(9.53333333))
                .body("[128].'demonym'", containsString("Liechtensteiner"))
                .body("[128].'area'", numberMatches(160.0))
                .body("[128].'gini'", nullValue())
                .body("[128].'timezones'.size()", equalTo(1))
                .body("[128].'timezones'", hasItems("UTC+01:00"))
                .body("[128].'borders'.size()", equalTo(2))
                .body("[128].'borders'", hasItems("AUT", "CHE"))
                .body("[128].'nativeName'", containsString("Liechtenstein"))
                .body("[128].'numericCode'", containsString("438"))
                .body("[128].'currencies'.size()", equalTo(1))
                .body("[128].'currencies'[0].'code'", containsString("CHF"))
                .body("[128].'currencies'[0].'name'", containsString("Swiss franc"))
                .body("[128].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[128].'languages'.size()", equalTo(1))
                .body("[128].'languages'[0].'iso639_1'", containsString("de"))
                .body("[128].'languages'[0].'iso639_2'", containsString("deu"))
                .body("[128].'languages'[0].'name'", containsString("German"))
                .body("[128].'languages'[0].'nativeName'", containsString("Deutsch"))
                .body("[128].'translations'.'de'", containsString("Liechtenstein"))
                .body("[128].'translations'.'es'", containsString("Liechtenstein"))
                .body("[128].'translations'.'fr'", containsString("Liechtenstein"))
                .body("[128].'translations'.'ja'", containsString("リヒテンシュタイン"))
                .body("[128].'translations'.'it'", containsString("Liechtenstein"))
                .body("[128].'translations'.'br'", containsString("Liechtenstein"))
                .body("[128].'translations'.'pt'", containsString("Listenstaine"))
                .body("[128].'translations'.'nl'", containsString("Liechtenstein"))
                .body("[128].'translations'.'hr'", containsString("Lihtenštajn"))
                .body("[128].'translations'.'fa'", containsString("لیختن‌اشتاین"))
                .body("[128].'flag'", containsString("https://restcountries.eu/data/lie.svg"))
                .body("[128].'regionalBlocs'.size()", equalTo(1))
                .body("[128].'regionalBlocs'[0].'acronym'", containsString("EFTA"))
                .body("[128].'regionalBlocs'[0].'name'", containsString("European Free Trade Association"))
                .body("[128].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[128].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[128].'cioc'", containsString("LIE"))
                .body("[129].'name'", containsString("Lithuania"))
                .body("[129].'topLevelDomain'.size()", equalTo(1))
                .body("[129].'topLevelDomain'", hasItems(".lt"))
                .body("[129].'alpha2Code'", containsString("LT"))
                .body("[129].'alpha3Code'", containsString("LTU"))
                .body("[129].'callingCodes'.size()", equalTo(1))
                .body("[129].'callingCodes'", hasItems("370"))
                .body("[129].'capital'", containsString("Vilnius"))
                .body("[129].'altSpellings'.size()", equalTo(3))
                .body("[129].'altSpellings'", hasItems("LT", "Republic of Lithuania", "Lietuvos Respublika"))
                .body("[129].'region'", containsString("Europe"))
                .body("[129].'subregion'", containsString("Northern Europe"))
                .body("[129].'population'", numberMatches(2872294.0))
                .body("[129].'latlng'.size()", equalTo(2))
                .body("[129].'latlng'[0]", numberMatches(56.0))
                .body("[129].'latlng'[1]", numberMatches(24.0))
                .body("[129].'demonym'", containsString("Lithuanian"))
                .body("[129].'area'", numberMatches(65300.0))
                .body("[129].'gini'", numberMatches(37.6))
                .body("[129].'timezones'.size()", equalTo(1))
                .body("[129].'timezones'", hasItems("UTC+02:00"))
                .body("[129].'borders'.size()", equalTo(4))
                .body("[129].'borders'", hasItems("BLR", "LVA", "POL", "RUS"))
                .body("[129].'nativeName'", containsString("Lietuva"))
                .body("[129].'numericCode'", containsString("440"))
                .body("[129].'currencies'.size()", equalTo(1))
                .body("[129].'currencies'[0].'code'", containsString("EUR"))
                .body("[129].'currencies'[0].'name'", containsString("Euro"))
                .body("[129].'currencies'[0].'symbol'", containsString("€"))
                .body("[129].'languages'.size()", equalTo(1))
                .body("[129].'languages'[0].'iso639_1'", containsString("lt"))
                .body("[129].'languages'[0].'iso639_2'", containsString("lit"))
                .body("[129].'languages'[0].'name'", containsString("Lithuanian"))
                .body("[129].'languages'[0].'nativeName'", containsString("lietuvių kalba"))
                .body("[129].'translations'.'de'", containsString("Litauen"))
                .body("[129].'translations'.'es'", containsString("Lituania"))
                .body("[129].'translations'.'fr'", containsString("Lituanie"))
                .body("[129].'translations'.'ja'", containsString("リトアニア"))
                .body("[129].'translations'.'it'", containsString("Lituania"))
                .body("[129].'translations'.'br'", containsString("Lituânia"))
                .body("[129].'translations'.'pt'", containsString("Lituânia"))
                .body("[129].'translations'.'nl'", containsString("Litouwen"))
                .body("[129].'translations'.'hr'", containsString("Litva"))
                .body("[129].'translations'.'fa'", containsString("لیتوانی"))
                .body("[129].'flag'", containsString("https://restcountries.eu/data/ltu.svg"))
                .body("[129].'regionalBlocs'.size()", equalTo(1))
                .body("[129].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[129].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[129].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[129].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[129].'cioc'", containsString("LTU"))
                .body("[130].'name'", containsString("Luxembourg"))
                .body("[130].'topLevelDomain'.size()", equalTo(1))
                .body("[130].'topLevelDomain'", hasItems(".lu"))
                .body("[130].'alpha2Code'", containsString("LU"))
                .body("[130].'alpha3Code'", containsString("LUX"))
                .body("[130].'callingCodes'.size()", equalTo(1))
                .body("[130].'callingCodes'", hasItems("352"))
                .body("[130].'capital'", containsString("Luxembourg"))
                .body("[130].'altSpellings'.size()", equalTo(5))
                .body("[130].'altSpellings'", hasItems("LU", "Grand Duchy of Luxembourg", "Grand-Duché de Luxembourg", "Großherzogtum Luxemburg", "Groussherzogtum Lëtzebuerg"))
                .body("[130].'region'", containsString("Europe"))
                .body("[130].'subregion'", containsString("Western Europe"))
                .body("[130].'population'", numberMatches(576200.0))
                .body("[130].'latlng'.size()", equalTo(2))
                .body("[130].'latlng'[0]", numberMatches(49.75))
                .body("[130].'latlng'[1]", numberMatches(6.16666666))
                .body("[130].'demonym'", containsString("Luxembourger"))
                .body("[130].'area'", numberMatches(2586.0))
                .body("[130].'gini'", numberMatches(30.8))
                .body("[130].'timezones'.size()", equalTo(1))
                .body("[130].'timezones'", hasItems("UTC+01:00"))
                .body("[130].'borders'.size()", equalTo(3))
                .body("[130].'borders'", hasItems("BEL", "FRA", "DEU"))
                .body("[130].'nativeName'", containsString("Luxembourg"))
                .body("[130].'numericCode'", containsString("442"))
                .body("[130].'currencies'.size()", equalTo(1))
                .body("[130].'currencies'[0].'code'", containsString("EUR"))
                .body("[130].'currencies'[0].'name'", containsString("Euro"))
                .body("[130].'currencies'[0].'symbol'", containsString("€"))
                .body("[130].'languages'.size()", equalTo(3))
                .body("[130].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[130].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[130].'languages'[0].'name'", containsString("French"))
                .body("[130].'languages'[0].'nativeName'", containsString("français"))
                .body("[130].'languages'[1].'iso639_1'", containsString("de"))
                .body("[130].'languages'[1].'iso639_2'", containsString("deu"))
                .body("[130].'languages'[1].'name'", containsString("German"))
                .body("[130].'languages'[1].'nativeName'", containsString("Deutsch"))
                .body("[130].'languages'[2].'iso639_1'", containsString("lb"))
                .body("[130].'languages'[2].'iso639_2'", containsString("ltz"))
                .body("[130].'languages'[2].'name'", containsString("Luxembourgish"))
                .body("[130].'languages'[2].'nativeName'", containsString("Lëtzebuergesch"))
                .body("[130].'translations'.'de'", containsString("Luxemburg"))
                .body("[130].'translations'.'es'", containsString("Luxemburgo"))
                .body("[130].'translations'.'fr'", containsString("Luxembourg"))
                .body("[130].'translations'.'ja'", containsString("ルクセンブルク"))
                .body("[130].'translations'.'it'", containsString("Lussemburgo"))
                .body("[130].'translations'.'br'", containsString("Luxemburgo"))
                .body("[130].'translations'.'pt'", containsString("Luxemburgo"))
                .body("[130].'translations'.'nl'", containsString("Luxemburg"))
                .body("[130].'translations'.'hr'", containsString("Luksemburg"))
                .body("[130].'translations'.'fa'", containsString("لوکزامبورگ"))
                .body("[130].'flag'", containsString("https://restcountries.eu/data/lux.svg"))
                .body("[130].'regionalBlocs'.size()", equalTo(1))
                .body("[130].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[130].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[130].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[130].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[130].'cioc'", containsString("LUX"))
                .body("[131].'name'", containsString("Macao"))
                .body("[131].'topLevelDomain'.size()", equalTo(1))
                .body("[131].'topLevelDomain'", hasItems(".mo"))
                .body("[131].'alpha2Code'", containsString("MO"))
                .body("[131].'alpha3Code'", containsString("MAC"))
                .body("[131].'callingCodes'.size()", equalTo(1))
                .body("[131].'callingCodes'", hasItems("853"))
                .body("[131].'capital'", containsString(""))
                .body("[131].'altSpellings'.size()", equalTo(5))
                .body("[131].'altSpellings'", hasItems("MO", "澳门", "Macao Special Administrative Region of the People's Republic of China", "中華人民共和國澳門特別行政區", "Região Administrativa Especial de Macau da República Popular da China"))
                .body("[131].'region'", containsString("Asia"))
                .body("[131].'subregion'", containsString("Eastern Asia"))
                .body("[131].'population'", numberMatches(649100.0))
                .body("[131].'latlng'.size()", equalTo(2))
                .body("[131].'latlng'[0]", numberMatches(22.16666666))
                .body("[131].'latlng'[1]", numberMatches(113.55))
                .body("[131].'demonym'", containsString("Chinese"))
                .body("[131].'area'", numberMatches(30.0))
                .body("[131].'gini'", nullValue())
                .body("[131].'timezones'.size()", equalTo(1))
                .body("[131].'timezones'", hasItems("UTC+08:00"))
                .body("[131].'borders'.size()", equalTo(1))
                .body("[131].'borders'", hasItems("CHN"))
                .body("[131].'nativeName'", containsString("澳門"))
                .body("[131].'numericCode'", containsString("446"))
                .body("[131].'currencies'.size()", equalTo(1))
                .body("[131].'currencies'[0].'code'", containsString("MOP"))
                .body("[131].'currencies'[0].'name'", containsString("Macanese pataca"))
                .body("[131].'currencies'[0].'symbol'", containsString("P"))
                .body("[131].'languages'.size()", equalTo(2))
                .body("[131].'languages'[0].'iso639_1'", containsString("zh"))
                .body("[131].'languages'[0].'iso639_2'", containsString("zho"))
                .body("[131].'languages'[0].'name'", containsString("Chinese"))
                .body("[131].'languages'[0].'nativeName'", containsString("中文 (Zhōngwén)"))
                .body("[131].'languages'[1].'iso639_1'", containsString("pt"))
                .body("[131].'languages'[1].'iso639_2'", containsString("por"))
                .body("[131].'languages'[1].'name'", containsString("Portuguese"))
                .body("[131].'languages'[1].'nativeName'", containsString("Português"))
                .body("[131].'translations'.'de'", containsString("Macao"))
                .body("[131].'translations'.'es'", containsString("Macao"))
                .body("[131].'translations'.'fr'", containsString("Macao"))
                .body("[131].'translations'.'ja'", containsString("マカオ"))
                .body("[131].'translations'.'it'", containsString("Macao"))
                .body("[131].'translations'.'br'", containsString("Macau"))
                .body("[131].'translations'.'pt'", containsString("Macau"))
                .body("[131].'translations'.'nl'", containsString("Macao"))
                .body("[131].'translations'.'hr'", containsString("Makao"))
                .body("[131].'translations'.'fa'", containsString("مکائو"))
                .body("[131].'flag'", containsString("https://restcountries.eu/data/mac.svg"))
                .body("[131].'regionalBlocs'.size()", equalTo(0))
                .body("[131].'cioc'", containsString(""))
                .body("[132].'name'", containsString("Macedonia (the former Yugoslav Republic of)"))
                .body("[132].'topLevelDomain'.size()", equalTo(1))
                .body("[132].'topLevelDomain'", hasItems(".mk"))
                .body("[132].'alpha2Code'", containsString("MK"))
                .body("[132].'alpha3Code'", containsString("MKD"))
                .body("[132].'callingCodes'.size()", equalTo(1))
                .body("[132].'callingCodes'", hasItems("389"))
                .body("[132].'capital'", containsString("Skopje"))
                .body("[132].'altSpellings'.size()", equalTo(3))
                .body("[132].'altSpellings'", hasItems("MK", "Republic of Macedonia", "Република Македонија"))
                .body("[132].'region'", containsString("Europe"))
                .body("[132].'subregion'", containsString("Southern Europe"))
                .body("[132].'population'", numberMatches(2058539.0))
                .body("[132].'latlng'.size()", equalTo(2))
                .body("[132].'latlng'[0]", numberMatches(41.83333333))
                .body("[132].'latlng'[1]", numberMatches(22.0))
                .body("[132].'demonym'", containsString("Macedonian"))
                .body("[132].'area'", numberMatches(25713.0))
                .body("[132].'gini'", numberMatches(43.2))
                .body("[132].'timezones'.size()", equalTo(1))
                .body("[132].'timezones'", hasItems("UTC+01:00"))
                .body("[132].'borders'.size()", equalTo(5))
                .body("[132].'borders'", hasItems("ALB", "BGR", "GRC", "KOS", "SRB"))
                .body("[132].'nativeName'", containsString("Македонија"))
                .body("[132].'numericCode'", containsString("807"))
                .body("[132].'currencies'.size()", equalTo(1))
                .body("[132].'currencies'[0].'code'", containsString("MKD"))
                .body("[132].'currencies'[0].'name'", containsString("Macedonian denar"))
                .body("[132].'currencies'[0].'symbol'", containsString("ден"))
                .body("[132].'languages'.size()", equalTo(1))
                .body("[132].'languages'[0].'iso639_1'", containsString("mk"))
                .body("[132].'languages'[0].'iso639_2'", containsString("mkd"))
                .body("[132].'languages'[0].'name'", containsString("Macedonian"))
                .body("[132].'languages'[0].'nativeName'", containsString("македонски јазик"))
                .body("[132].'translations'.'de'", containsString("Mazedonien"))
                .body("[132].'translations'.'es'", containsString("Macedonia"))
                .body("[132].'translations'.'fr'", containsString("Macédoine"))
                .body("[132].'translations'.'ja'", containsString("マケドニア旧ユーゴスラビア共和国"))
                .body("[132].'translations'.'it'", containsString("Macedonia"))
                .body("[132].'translations'.'br'", containsString("Macedônia"))
                .body("[132].'translations'.'pt'", containsString("Macedónia"))
                .body("[132].'translations'.'nl'", containsString("Macedonië"))
                .body("[132].'translations'.'hr'", containsString("Makedonija"))
                .body("[132].'translations'.'fa'", containsString(""))
                .body("[132].'flag'", containsString("https://restcountries.eu/data/mkd.svg"))
                .body("[132].'regionalBlocs'.size()", equalTo(1))
                .body("[132].'regionalBlocs'[0].'acronym'", containsString("CEFTA"))
                .body("[132].'regionalBlocs'[0].'name'", containsString("Central European Free Trade Agreement"))
                .body("[132].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[132].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[132].'cioc'", containsString("MKD"))
                .body("[133].'name'", containsString("Madagascar"))
                .body("[133].'topLevelDomain'.size()", equalTo(1))
                .body("[133].'topLevelDomain'", hasItems(".mg"))
                .body("[133].'alpha2Code'", containsString("MG"))
                .body("[133].'alpha3Code'", containsString("MDG"))
                .body("[133].'callingCodes'.size()", equalTo(1))
                .body("[133].'callingCodes'", hasItems("261"))
                .body("[133].'capital'", containsString("Antananarivo"))
                .body("[133].'altSpellings'.size()", equalTo(4))
                .body("[133].'altSpellings'", hasItems("MG", "Republic of Madagascar", "Repoblikan'i Madagasikara", "République de Madagascar"))
                .body("[133].'region'", containsString("Africa"))
                .body("[133].'subregion'", containsString("Eastern Africa"))
                .body("[133].'population'", numberMatches(2.2434363E7))
                .body("[133].'latlng'.size()", equalTo(2))
                .body("[133].'latlng'[0]", numberMatches(-20.0))
                .body("[133].'latlng'[1]", numberMatches(47.0))
                .body("[133].'demonym'", containsString("Malagasy"))
                .body("[133].'area'", numberMatches(587041.0))
                .body("[133].'gini'", numberMatches(44.1))
                .body("[133].'timezones'.size()", equalTo(1))
                .body("[133].'timezones'", hasItems("UTC+03:00"))
                .body("[133].'borders'.size()", equalTo(0))
                .body("[133].'nativeName'", containsString("Madagasikara"))
                .body("[133].'numericCode'", containsString("450"))
                .body("[133].'currencies'.size()", equalTo(1))
                .body("[133].'currencies'[0].'code'", containsString("MGA"))
                .body("[133].'currencies'[0].'name'", containsString("Malagasy ariary"))
                .body("[133].'currencies'[0].'symbol'", containsString("Ar"))
                .body("[133].'languages'.size()", equalTo(2))
                .body("[133].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[133].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[133].'languages'[0].'name'", containsString("French"))
                .body("[133].'languages'[0].'nativeName'", containsString("français"))
                .body("[133].'languages'[1].'iso639_1'", containsString("mg"))
                .body("[133].'languages'[1].'iso639_2'", containsString("mlg"))
                .body("[133].'languages'[1].'name'", containsString("Malagasy"))
                .body("[133].'languages'[1].'nativeName'", containsString("fiteny malagasy"))
                .body("[133].'translations'.'de'", containsString("Madagaskar"))
                .body("[133].'translations'.'es'", containsString("Madagascar"))
                .body("[133].'translations'.'fr'", containsString("Madagascar"))
                .body("[133].'translations'.'ja'", containsString("マダガスカル"))
                .body("[133].'translations'.'it'", containsString("Madagascar"))
                .body("[133].'translations'.'br'", containsString("Madagascar"))
                .body("[133].'translations'.'pt'", containsString("Madagáscar"))
                .body("[133].'translations'.'nl'", containsString("Madagaskar"))
                .body("[133].'translations'.'hr'", containsString("Madagaskar"))
                .body("[133].'translations'.'fa'", containsString("ماداگاسکار"))
                .body("[133].'flag'", containsString("https://restcountries.eu/data/mdg.svg"))
                .body("[133].'regionalBlocs'.size()", equalTo(1))
                .body("[133].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[133].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[133].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[133].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[133].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[133].'cioc'", containsString("MAD"))
                .body("[134].'name'", containsString("Malawi"))
                .body("[134].'topLevelDomain'.size()", equalTo(1))
                .body("[134].'topLevelDomain'", hasItems(".mw"))
                .body("[134].'alpha2Code'", containsString("MW"))
                .body("[134].'alpha3Code'", containsString("MWI"))
                .body("[134].'callingCodes'.size()", equalTo(1))
                .body("[134].'callingCodes'", hasItems("265"))
                .body("[134].'capital'", containsString("Lilongwe"))
                .body("[134].'altSpellings'.size()", equalTo(2))
                .body("[134].'altSpellings'", hasItems("MW", "Republic of Malawi"))
                .body("[134].'region'", containsString("Africa"))
                .body("[134].'subregion'", containsString("Eastern Africa"))
                .body("[134].'population'", numberMatches(1.683291E7))
                .body("[134].'latlng'.size()", equalTo(2))
                .body("[134].'latlng'[0]", numberMatches(-13.5))
                .body("[134].'latlng'[1]", numberMatches(34.0))
                .body("[134].'demonym'", containsString("Malawian"))
                .body("[134].'area'", numberMatches(118484.0))
                .body("[134].'gini'", numberMatches(39.0))
                .body("[134].'timezones'.size()", equalTo(1))
                .body("[134].'timezones'", hasItems("UTC+02:00"))
                .body("[134].'borders'.size()", equalTo(3))
                .body("[134].'borders'", hasItems("MOZ", "TZA", "ZMB"))
                .body("[134].'nativeName'", containsString("Malawi"))
                .body("[134].'numericCode'", containsString("454"))
                .body("[134].'currencies'.size()", equalTo(1))
                .body("[134].'currencies'[0].'code'", containsString("MWK"))
                .body("[134].'currencies'[0].'name'", containsString("Malawian kwacha"))
                .body("[134].'currencies'[0].'symbol'", containsString("MK"))
                .body("[134].'languages'.size()", equalTo(2))
                .body("[134].'languages'[0].'iso639_1'", containsString("en"))
                .body("[134].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[134].'languages'[0].'name'", containsString("English"))
                .body("[134].'languages'[0].'nativeName'", containsString("English"))
                .body("[134].'languages'[1].'iso639_1'", containsString("ny"))
                .body("[134].'languages'[1].'iso639_2'", containsString("nya"))
                .body("[134].'languages'[1].'name'", containsString("Chichewa"))
                .body("[134].'languages'[1].'nativeName'", containsString("chiCheŵa"))
                .body("[134].'translations'.'de'", containsString("Malawi"))
                .body("[134].'translations'.'es'", containsString("Malawi"))
                .body("[134].'translations'.'fr'", containsString("Malawi"))
                .body("[134].'translations'.'ja'", containsString("マラウイ"))
                .body("[134].'translations'.'it'", containsString("Malawi"))
                .body("[134].'translations'.'br'", containsString("Malawi"))
                .body("[134].'translations'.'pt'", containsString("Malávi"))
                .body("[134].'translations'.'nl'", containsString("Malawi"))
                .body("[134].'translations'.'hr'", containsString("Malavi"))
                .body("[134].'translations'.'fa'", containsString("مالاوی"))
                .body("[134].'flag'", containsString("https://restcountries.eu/data/mwi.svg"))
                .body("[134].'regionalBlocs'.size()", equalTo(1))
                .body("[134].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[134].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[134].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[134].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[134].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[134].'cioc'", containsString("MAW"))
                .body("[135].'name'", containsString("Malaysia"))
                .body("[135].'topLevelDomain'.size()", equalTo(1))
                .body("[135].'topLevelDomain'", hasItems(".my"))
                .body("[135].'alpha2Code'", containsString("MY"))
                .body("[135].'alpha3Code'", containsString("MYS"))
                .body("[135].'callingCodes'.size()", equalTo(1))
                .body("[135].'callingCodes'", hasItems("60"))
                .body("[135].'capital'", containsString("Kuala Lumpur"))
                .body("[135].'altSpellings'.size()", equalTo(1))
                .body("[135].'altSpellings'", hasItems("MY"))
                .body("[135].'region'", containsString("Asia"))
                .body("[135].'subregion'", containsString("South-Eastern Asia"))
                .body("[135].'population'", numberMatches(3.1405416E7))
                .body("[135].'latlng'.size()", equalTo(2))
                .body("[135].'latlng'[0]", numberMatches(2.5))
                .body("[135].'latlng'[1]", numberMatches(112.5))
                .body("[135].'demonym'", containsString("Malaysian"))
                .body("[135].'area'", numberMatches(330803.0))
                .body("[135].'gini'", numberMatches(46.2))
                .body("[135].'timezones'.size()", equalTo(1))
                .body("[135].'timezones'", hasItems("UTC+08:00"))
                .body("[135].'borders'.size()", equalTo(3))
                .body("[135].'borders'", hasItems("BRN", "IDN", "THA"))
                .body("[135].'nativeName'", containsString("Malaysia"))
                .body("[135].'numericCode'", containsString("458"))
                .body("[135].'currencies'.size()", equalTo(1))
                .body("[135].'currencies'[0].'code'", containsString("MYR"))
                .body("[135].'currencies'[0].'name'", containsString("Malaysian ringgit"))
                .body("[135].'currencies'[0].'symbol'", containsString("RM"))
                .body("[135].'languages'.size()", equalTo(1))
                .body("[135].'languages'[0].'iso639_1'", nullValue())
                .body("[135].'languages'[0].'iso639_2'", containsString("zsm"))
                .body("[135].'languages'[0].'name'", containsString("Malaysian"))
                .body("[135].'languages'[0].'nativeName'", containsString("بهاس مليسيا"))
                .body("[135].'translations'.'de'", containsString("Malaysia"))
                .body("[135].'translations'.'es'", containsString("Malasia"))
                .body("[135].'translations'.'fr'", containsString("Malaisie"))
                .body("[135].'translations'.'ja'", containsString("マレーシア"))
                .body("[135].'translations'.'it'", containsString("Malesia"))
                .body("[135].'translations'.'br'", containsString("Malásia"))
                .body("[135].'translations'.'pt'", containsString("Malásia"))
                .body("[135].'translations'.'nl'", containsString("Maleisië"))
                .body("[135].'translations'.'hr'", containsString("Malezija"))
                .body("[135].'translations'.'fa'", containsString("مالزی"))
                .body("[135].'flag'", containsString("https://restcountries.eu/data/mys.svg"))
                .body("[135].'regionalBlocs'.size()", equalTo(1))
                .body("[135].'regionalBlocs'[0].'acronym'", containsString("ASEAN"))
                .body("[135].'regionalBlocs'[0].'name'", containsString("Association of Southeast Asian Nations"))
                .body("[135].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[135].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[135].'cioc'", containsString("MAS"))
                .body("[136].'name'", containsString("Maldives"))
                .body("[136].'topLevelDomain'.size()", equalTo(1))
                .body("[136].'topLevelDomain'", hasItems(".mv"))
                .body("[136].'alpha2Code'", containsString("MV"))
                .body("[136].'alpha3Code'", containsString("MDV"))
                .body("[136].'callingCodes'.size()", equalTo(1))
                .body("[136].'callingCodes'", hasItems("960"))
                .body("[136].'capital'", containsString("Malé"))
                .body("[136].'altSpellings'.size()", equalTo(4))
                .body("[136].'altSpellings'", hasItems("MV", "Maldive Islands", "Republic of the Maldives", "Dhivehi Raajjeyge Jumhooriyya"))
                .body("[136].'region'", containsString("Asia"))
                .body("[136].'subregion'", containsString("Southern Asia"))
                .body("[136].'population'", numberMatches(344023.0))
                .body("[136].'latlng'.size()", equalTo(2))
                .body("[136].'latlng'[0]", numberMatches(3.25))
                .body("[136].'latlng'[1]", numberMatches(73.0))
                .body("[136].'demonym'", containsString("Maldivan"))
                .body("[136].'area'", numberMatches(300.0))
                .body("[136].'gini'", numberMatches(37.4))
                .body("[136].'timezones'.size()", equalTo(1))
                .body("[136].'timezones'", hasItems("UTC+05:00"))
                .body("[136].'borders'.size()", equalTo(0))
                .body("[136].'nativeName'", containsString("Maldives"))
                .body("[136].'numericCode'", containsString("462"))
                .body("[136].'currencies'.size()", equalTo(1))
                .body("[136].'currencies'[0].'code'", containsString("MVR"))
                .body("[136].'currencies'[0].'name'", containsString("Maldivian rufiyaa"))
                .body("[136].'currencies'[0].'symbol'", containsString(".ރ"))
                .body("[136].'languages'.size()", equalTo(1))
                .body("[136].'languages'[0].'iso639_1'", containsString("dv"))
                .body("[136].'languages'[0].'iso639_2'", containsString("div"))
                .body("[136].'languages'[0].'name'", containsString("Divehi"))
                .body("[136].'languages'[0].'nativeName'", containsString("ދިވެހި"))
                .body("[136].'translations'.'de'", containsString("Malediven"))
                .body("[136].'translations'.'es'", containsString("Maldivas"))
                .body("[136].'translations'.'fr'", containsString("Maldives"))
                .body("[136].'translations'.'ja'", containsString("モルディブ"))
                .body("[136].'translations'.'it'", containsString("Maldive"))
                .body("[136].'translations'.'br'", containsString("Maldivas"))
                .body("[136].'translations'.'pt'", containsString("Maldivas"))
                .body("[136].'translations'.'nl'", containsString("Maldiven"))
                .body("[136].'translations'.'hr'", containsString("Maldivi"))
                .body("[136].'translations'.'fa'", containsString("مالدیو"))
                .body("[136].'flag'", containsString("https://restcountries.eu/data/mdv.svg"))
                .body("[136].'regionalBlocs'.size()", equalTo(1))
                .body("[136].'regionalBlocs'[0].'acronym'", containsString("SAARC"))
                .body("[136].'regionalBlocs'[0].'name'", containsString("South Asian Association for Regional Cooperation"))
                .body("[136].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[136].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[136].'cioc'", containsString("MDV"))
                .body("[137].'name'", containsString("Mali"))
                .body("[137].'topLevelDomain'.size()", equalTo(1))
                .body("[137].'topLevelDomain'", hasItems(".ml"))
                .body("[137].'alpha2Code'", containsString("ML"))
                .body("[137].'alpha3Code'", containsString("MLI"))
                .body("[137].'callingCodes'.size()", equalTo(1))
                .body("[137].'callingCodes'", hasItems("223"))
                .body("[137].'capital'", containsString("Bamako"))
                .body("[137].'altSpellings'.size()", equalTo(3))
                .body("[137].'altSpellings'", hasItems("ML", "Republic of Mali", "République du Mali"))
                .body("[137].'region'", containsString("Africa"))
                .body("[137].'subregion'", containsString("Western Africa"))
                .body("[137].'population'", numberMatches(1.8135E7))
                .body("[137].'latlng'.size()", equalTo(2))
                .body("[137].'latlng'[0]", numberMatches(17.0))
                .body("[137].'latlng'[1]", numberMatches(-4.0))
                .body("[137].'demonym'", containsString("Malian"))
                .body("[137].'area'", numberMatches(1240192.0))
                .body("[137].'gini'", numberMatches(33.0))
                .body("[137].'timezones'.size()", equalTo(1))
                .body("[137].'timezones'", hasItems("UTC"))
                .body("[137].'borders'.size()", equalTo(7))
                .body("[137].'borders'", hasItems("DZA", "BFA", "GIN", "CIV", "MRT", "NER", "SEN"))
                .body("[137].'nativeName'", containsString("Mali"))
                .body("[137].'numericCode'", containsString("466"))
                .body("[137].'currencies'.size()", equalTo(1))
                .body("[137].'currencies'[0].'code'", containsString("XOF"))
                .body("[137].'currencies'[0].'name'", containsString("West African CFA franc"))
                .body("[137].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[137].'languages'.size()", equalTo(1))
                .body("[137].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[137].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[137].'languages'[0].'name'", containsString("French"))
                .body("[137].'languages'[0].'nativeName'", containsString("français"))
                .body("[137].'translations'.'de'", containsString("Mali"))
                .body("[137].'translations'.'es'", containsString("Mali"))
                .body("[137].'translations'.'fr'", containsString("Mali"))
                .body("[137].'translations'.'ja'", containsString("マリ"))
                .body("[137].'translations'.'it'", containsString("Mali"))
                .body("[137].'translations'.'br'", containsString("Mali"))
                .body("[137].'translations'.'pt'", containsString("Mali"))
                .body("[137].'translations'.'nl'", containsString("Mali"))
                .body("[137].'translations'.'hr'", containsString("Mali"))
                .body("[137].'translations'.'fa'", containsString("مالی"))
                .body("[137].'flag'", containsString("https://restcountries.eu/data/mli.svg"))
                .body("[137].'regionalBlocs'.size()", equalTo(1))
                .body("[137].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[137].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[137].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[137].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[137].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[137].'cioc'", containsString("MLI"))
                .body("[138].'name'", containsString("Malta"))
                .body("[138].'topLevelDomain'.size()", equalTo(1))
                .body("[138].'topLevelDomain'", hasItems(".mt"))
                .body("[138].'alpha2Code'", containsString("MT"))
                .body("[138].'alpha3Code'", containsString("MLT"))
                .body("[138].'callingCodes'.size()", equalTo(1))
                .body("[138].'callingCodes'", hasItems("356"))
                .body("[138].'capital'", containsString("Valletta"))
                .body("[138].'altSpellings'.size()", equalTo(3))
                .body("[138].'altSpellings'", hasItems("MT", "Republic of Malta", "Repubblika ta' Malta"))
                .body("[138].'region'", containsString("Europe"))
                .body("[138].'subregion'", containsString("Southern Europe"))
                .body("[138].'population'", numberMatches(425384.0))
                .body("[138].'latlng'.size()", equalTo(2))
                .body("[138].'latlng'[0]", numberMatches(35.83333333))
                .body("[138].'latlng'[1]", numberMatches(14.58333333))
                .body("[138].'demonym'", containsString("Maltese"))
                .body("[138].'area'", numberMatches(316.0))
                .body("[138].'gini'", nullValue())
                .body("[138].'timezones'.size()", equalTo(1))
                .body("[138].'timezones'", hasItems("UTC+01:00"))
                .body("[138].'borders'.size()", equalTo(0))
                .body("[138].'nativeName'", containsString("Malta"))
                .body("[138].'numericCode'", containsString("470"))
                .body("[138].'currencies'.size()", equalTo(1))
                .body("[138].'currencies'[0].'code'", containsString("EUR"))
                .body("[138].'currencies'[0].'name'", containsString("Euro"))
                .body("[138].'currencies'[0].'symbol'", containsString("€"))
                .body("[138].'languages'.size()", equalTo(2))
                .body("[138].'languages'[0].'iso639_1'", containsString("mt"))
                .body("[138].'languages'[0].'iso639_2'", containsString("mlt"))
                .body("[138].'languages'[0].'name'", containsString("Maltese"))
                .body("[138].'languages'[0].'nativeName'", containsString("Malti"))
                .body("[138].'languages'[1].'iso639_1'", containsString("en"))
                .body("[138].'languages'[1].'iso639_2'", containsString("eng"))
                .body("[138].'languages'[1].'name'", containsString("English"))
                .body("[138].'languages'[1].'nativeName'", containsString("English"))
                .body("[138].'translations'.'de'", containsString("Malta"))
                .body("[138].'translations'.'es'", containsString("Malta"))
                .body("[138].'translations'.'fr'", containsString("Malte"))
                .body("[138].'translations'.'ja'", containsString("マルタ"))
                .body("[138].'translations'.'it'", containsString("Malta"))
                .body("[138].'translations'.'br'", containsString("Malta"))
                .body("[138].'translations'.'pt'", containsString("Malta"))
                .body("[138].'translations'.'nl'", containsString("Malta"))
                .body("[138].'translations'.'hr'", containsString("Malta"))
                .body("[138].'translations'.'fa'", containsString("مالت"))
                .body("[138].'flag'", containsString("https://restcountries.eu/data/mlt.svg"))
                .body("[138].'regionalBlocs'.size()", equalTo(1))
                .body("[138].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[138].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[138].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[138].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[138].'cioc'", containsString("MLT"))
                .body("[139].'name'", containsString("Marshall Islands"))
                .body("[139].'topLevelDomain'.size()", equalTo(1))
                .body("[139].'topLevelDomain'", hasItems(".mh"))
                .body("[139].'alpha2Code'", containsString("MH"))
                .body("[139].'alpha3Code'", containsString("MHL"))
                .body("[139].'callingCodes'.size()", equalTo(1))
                .body("[139].'callingCodes'", hasItems("692"))
                .body("[139].'capital'", containsString("Majuro"))
                .body("[139].'altSpellings'.size()", equalTo(3))
                .body("[139].'altSpellings'", hasItems("MH", "Republic of the Marshall Islands", "Aolepān Aorōkin M̧ajeļ"))
                .body("[139].'region'", containsString("Oceania"))
                .body("[139].'subregion'", containsString("Micronesia"))
                .body("[139].'population'", numberMatches(54880.0))
                .body("[139].'latlng'.size()", equalTo(2))
                .body("[139].'latlng'[0]", numberMatches(9.0))
                .body("[139].'latlng'[1]", numberMatches(168.0))
                .body("[139].'demonym'", containsString("Marshallese"))
                .body("[139].'area'", numberMatches(181.0))
                .body("[139].'gini'", nullValue())
                .body("[139].'timezones'.size()", equalTo(1))
                .body("[139].'timezones'", hasItems("UTC+12:00"))
                .body("[139].'borders'.size()", equalTo(0))
                .body("[139].'nativeName'", containsString("M̧ajeļ"))
                .body("[139].'numericCode'", containsString("584"))
                .body("[139].'currencies'.size()", equalTo(1))
                .body("[139].'currencies'[0].'code'", containsString("USD"))
                .body("[139].'currencies'[0].'name'", containsString("United States dollar"))
                .body("[139].'currencies'[0].'symbol'", containsString("$"))
                .body("[139].'languages'.size()", equalTo(2))
                .body("[139].'languages'[0].'iso639_1'", containsString("en"))
                .body("[139].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[139].'languages'[0].'name'", containsString("English"))
                .body("[139].'languages'[0].'nativeName'", containsString("English"))
                .body("[139].'languages'[1].'iso639_1'", containsString("mh"))
                .body("[139].'languages'[1].'iso639_2'", containsString("mah"))
                .body("[139].'languages'[1].'name'", containsString("Marshallese"))
                .body("[139].'languages'[1].'nativeName'", containsString("Kajin M̧ajeļ"))
                .body("[139].'translations'.'de'", containsString("Marshallinseln"))
                .body("[139].'translations'.'es'", containsString("Islas Marshall"))
                .body("[139].'translations'.'fr'", containsString("Îles Marshall"))
                .body("[139].'translations'.'ja'", containsString("マーシャル諸島"))
                .body("[139].'translations'.'it'", containsString("Isole Marshall"))
                .body("[139].'translations'.'br'", containsString("Ilhas Marshall"))
                .body("[139].'translations'.'pt'", containsString("Ilhas Marshall"))
                .body("[139].'translations'.'nl'", containsString("Marshalleilanden"))
                .body("[139].'translations'.'hr'", containsString("Maršalovi Otoci"))
                .body("[139].'translations'.'fa'", containsString("جزایر مارشال"))
                .body("[139].'flag'", containsString("https://restcountries.eu/data/mhl.svg"))
                .body("[139].'regionalBlocs'.size()", equalTo(0))
                .body("[139].'cioc'", containsString("MHL"))
                .body("[140].'name'", containsString("Martinique"))
                .body("[140].'topLevelDomain'.size()", equalTo(1))
                .body("[140].'topLevelDomain'", hasItems(".mq"))
                .body("[140].'alpha2Code'", containsString("MQ"))
                .body("[140].'alpha3Code'", containsString("MTQ"))
                .body("[140].'callingCodes'.size()", equalTo(1))
                .body("[140].'callingCodes'", hasItems("596"))
                .body("[140].'capital'", containsString("Fort-de-France"))
                .body("[140].'altSpellings'.size()", equalTo(1))
                .body("[140].'altSpellings'", hasItems("MQ"))
                .body("[140].'region'", containsString("Americas"))
                .body("[140].'subregion'", containsString("Caribbean"))
                .body("[140].'population'", numberMatches(378243.0))
                .body("[140].'latlng'.size()", equalTo(2))
                .body("[140].'latlng'[0]", numberMatches(14.666667))
                .body("[140].'latlng'[1]", numberMatches(-61.0))
                .body("[140].'demonym'", containsString("French"))
                .body("[140].'area'", nullValue())
                .body("[140].'gini'", nullValue())
                .body("[140].'timezones'.size()", equalTo(1))
                .body("[140].'timezones'", hasItems("UTC-04:00"))
                .body("[140].'borders'.size()", equalTo(0))
                .body("[140].'nativeName'", containsString("Martinique"))
                .body("[140].'numericCode'", containsString("474"))
                .body("[140].'currencies'.size()", equalTo(1))
                .body("[140].'currencies'[0].'code'", containsString("EUR"))
                .body("[140].'currencies'[0].'name'", containsString("Euro"))
                .body("[140].'currencies'[0].'symbol'", containsString("€"))
                .body("[140].'languages'.size()", equalTo(1))
                .body("[140].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[140].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[140].'languages'[0].'name'", containsString("French"))
                .body("[140].'languages'[0].'nativeName'", containsString("français"))
                .body("[140].'translations'.'de'", containsString("Martinique"))
                .body("[140].'translations'.'es'", containsString("Martinica"))
                .body("[140].'translations'.'fr'", containsString("Martinique"))
                .body("[140].'translations'.'ja'", containsString("マルティニーク"))
                .body("[140].'translations'.'it'", containsString("Martinica"))
                .body("[140].'translations'.'br'", containsString("Martinica"))
                .body("[140].'translations'.'pt'", containsString("Martinica"))
                .body("[140].'translations'.'nl'", containsString("Martinique"))
                .body("[140].'translations'.'hr'", containsString("Martinique"))
                .body("[140].'translations'.'fa'", containsString("مونتسرات"))
                .body("[140].'flag'", containsString("https://restcountries.eu/data/mtq.svg"))
                .body("[140].'regionalBlocs'.size()", equalTo(0))
                .body("[140].'cioc'", containsString(""))
                .body("[141].'name'", containsString("Mauritania"))
                .body("[141].'topLevelDomain'.size()", equalTo(1))
                .body("[141].'topLevelDomain'", hasItems(".mr"))
                .body("[141].'alpha2Code'", containsString("MR"))
                .body("[141].'alpha3Code'", containsString("MRT"))
                .body("[141].'callingCodes'.size()", equalTo(1))
                .body("[141].'callingCodes'", hasItems("222"))
                .body("[141].'capital'", containsString("Nouakchott"))
                .body("[141].'altSpellings'.size()", equalTo(3))
                .body("[141].'altSpellings'", hasItems("MR", "Islamic Republic of Mauritania", "al-Jumhūriyyah al-ʾIslāmiyyah al-Mūrītāniyyah"))
                .body("[141].'region'", containsString("Africa"))
                .body("[141].'subregion'", containsString("Western Africa"))
                .body("[141].'population'", numberMatches(3718678.0))
                .body("[141].'latlng'.size()", equalTo(2))
                .body("[141].'latlng'[0]", numberMatches(20.0))
                .body("[141].'latlng'[1]", numberMatches(-12.0))
                .body("[141].'demonym'", containsString("Mauritanian"))
                .body("[141].'area'", numberMatches(1030700.0))
                .body("[141].'gini'", numberMatches(40.5))
                .body("[141].'timezones'.size()", equalTo(1))
                .body("[141].'timezones'", hasItems("UTC"))
                .body("[141].'borders'.size()", equalTo(4))
                .body("[141].'borders'", hasItems("DZA", "MLI", "SEN", "ESH"))
                .body("[141].'nativeName'", containsString("موريتانيا"))
                .body("[141].'numericCode'", containsString("478"))
                .body("[141].'currencies'.size()", equalTo(1))
                .body("[141].'currencies'[0].'code'", containsString("MRO"))
                .body("[141].'currencies'[0].'name'", containsString("Mauritanian ouguiya"))
                .body("[141].'currencies'[0].'symbol'", containsString("UM"))
                .body("[141].'languages'.size()", equalTo(1))
                .body("[141].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[141].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[141].'languages'[0].'name'", containsString("Arabic"))
                .body("[141].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[141].'translations'.'de'", containsString("Mauretanien"))
                .body("[141].'translations'.'es'", containsString("Mauritania"))
                .body("[141].'translations'.'fr'", containsString("Mauritanie"))
                .body("[141].'translations'.'ja'", containsString("モーリタニア"))
                .body("[141].'translations'.'it'", containsString("Mauritania"))
                .body("[141].'translations'.'br'", containsString("Mauritânia"))
                .body("[141].'translations'.'pt'", containsString("Mauritânia"))
                .body("[141].'translations'.'nl'", containsString("Mauritanië"))
                .body("[141].'translations'.'hr'", containsString("Mauritanija"))
                .body("[141].'translations'.'fa'", containsString("موریتانی"))
                .body("[141].'flag'", containsString("https://restcountries.eu/data/mrt.svg"))
                .body("[141].'regionalBlocs'.size()", equalTo(2))
                .body("[141].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[141].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[141].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[141].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[141].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[141].'regionalBlocs'[1].'acronym'", containsString("AL"))
                .body("[141].'regionalBlocs'[1].'name'", containsString("Arab League"))
                .body("[141].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(0))
                .body("[141].'regionalBlocs'[1].'otherNames'.size()", equalTo(3))
                .body("[141].'regionalBlocs'[1].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[141].'cioc'", containsString("MTN"))
                .body("[142].'name'", containsString("Mauritius"))
                .body("[142].'topLevelDomain'.size()", equalTo(1))
                .body("[142].'topLevelDomain'", hasItems(".mu"))
                .body("[142].'alpha2Code'", containsString("MU"))
                .body("[142].'alpha3Code'", containsString("MUS"))
                .body("[142].'callingCodes'.size()", equalTo(1))
                .body("[142].'callingCodes'", hasItems("230"))
                .body("[142].'capital'", containsString("Port Louis"))
                .body("[142].'altSpellings'.size()", equalTo(3))
                .body("[142].'altSpellings'", hasItems("MU", "Republic of Mauritius", "République de Maurice"))
                .body("[142].'region'", containsString("Africa"))
                .body("[142].'subregion'", containsString("Eastern Africa"))
                .body("[142].'population'", numberMatches(1262879.0))
                .body("[142].'latlng'.size()", equalTo(2))
                .body("[142].'latlng'[0]", numberMatches(-20.28333333))
                .body("[142].'latlng'[1]", numberMatches(57.55))
                .body("[142].'demonym'", containsString("Mauritian"))
                .body("[142].'area'", numberMatches(2040.0))
                .body("[142].'gini'", nullValue())
                .body("[142].'timezones'.size()", equalTo(1))
                .body("[142].'timezones'", hasItems("UTC+04:00"))
                .body("[142].'borders'.size()", equalTo(0))
                .body("[142].'nativeName'", containsString("Maurice"))
                .body("[142].'numericCode'", containsString("480"))
                .body("[142].'currencies'.size()", equalTo(1))
                .body("[142].'currencies'[0].'code'", containsString("MUR"))
                .body("[142].'currencies'[0].'name'", containsString("Mauritian rupee"))
                .body("[142].'currencies'[0].'symbol'", containsString("₨"))
                .body("[142].'languages'.size()", equalTo(1))
                .body("[142].'languages'[0].'iso639_1'", containsString("en"))
                .body("[142].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[142].'languages'[0].'name'", containsString("English"))
                .body("[142].'languages'[0].'nativeName'", containsString("English"))
                .body("[142].'translations'.'de'", containsString("Mauritius"))
                .body("[142].'translations'.'es'", containsString("Mauricio"))
                .body("[142].'translations'.'fr'", containsString("Île Maurice"))
                .body("[142].'translations'.'ja'", containsString("モーリシャス"))
                .body("[142].'translations'.'it'", containsString("Mauritius"))
                .body("[142].'translations'.'br'", containsString("Maurício"))
                .body("[142].'translations'.'pt'", containsString("Maurícia"))
                .body("[142].'translations'.'nl'", containsString("Mauritius"))
                .body("[142].'translations'.'hr'", containsString("Mauricijus"))
                .body("[142].'translations'.'fa'", containsString("موریس"))
                .body("[142].'flag'", containsString("https://restcountries.eu/data/mus.svg"))
                .body("[142].'regionalBlocs'.size()", equalTo(1))
                .body("[142].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[142].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[142].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[142].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[142].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[142].'cioc'", containsString("MRI"))
                .body("[143].'name'", containsString("Mayotte"))
                .body("[143].'topLevelDomain'.size()", equalTo(1))
                .body("[143].'topLevelDomain'", hasItems(".yt"))
                .body("[143].'alpha2Code'", containsString("YT"))
                .body("[143].'alpha3Code'", containsString("MYT"))
                .body("[143].'callingCodes'.size()", equalTo(1))
                .body("[143].'callingCodes'", hasItems("262"))
                .body("[143].'capital'", containsString("Mamoudzou"))
                .body("[143].'altSpellings'.size()", equalTo(3))
                .body("[143].'altSpellings'", hasItems("YT", "Department of Mayotte", "Département de Mayotte"))
                .body("[143].'region'", containsString("Africa"))
                .body("[143].'subregion'", containsString("Eastern Africa"))
                .body("[143].'population'", numberMatches(226915.0))
                .body("[143].'latlng'.size()", equalTo(2))
                .body("[143].'latlng'[0]", numberMatches(-12.83333333))
                .body("[143].'latlng'[1]", numberMatches(45.16666666))
                .body("[143].'demonym'", containsString("French"))
                .body("[143].'area'", nullValue())
                .body("[143].'gini'", nullValue())
                .body("[143].'timezones'.size()", equalTo(1))
                .body("[143].'timezones'", hasItems("UTC+03:00"))
                .body("[143].'borders'.size()", equalTo(0))
                .body("[143].'nativeName'", containsString("Mayotte"))
                .body("[143].'numericCode'", containsString("175"))
                .body("[143].'currencies'.size()", equalTo(1))
                .body("[143].'currencies'[0].'code'", containsString("EUR"))
                .body("[143].'currencies'[0].'name'", containsString("Euro"))
                .body("[143].'currencies'[0].'symbol'", containsString("€"))
                .body("[143].'languages'.size()", equalTo(1))
                .body("[143].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[143].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[143].'languages'[0].'name'", containsString("French"))
                .body("[143].'languages'[0].'nativeName'", containsString("français"))
                .body("[143].'translations'.'de'", containsString("Mayotte"))
                .body("[143].'translations'.'es'", containsString("Mayotte"))
                .body("[143].'translations'.'fr'", containsString("Mayotte"))
                .body("[143].'translations'.'ja'", containsString("マヨット"))
                .body("[143].'translations'.'it'", containsString("Mayotte"))
                .body("[143].'translations'.'br'", containsString("Mayotte"))
                .body("[143].'translations'.'pt'", containsString("Mayotte"))
                .body("[143].'translations'.'nl'", containsString("Mayotte"))
                .body("[143].'translations'.'hr'", containsString("Mayotte"))
                .body("[143].'translations'.'fa'", containsString("مایوت"))
                .body("[143].'flag'", containsString("https://restcountries.eu/data/myt.svg"))
                .body("[143].'regionalBlocs'.size()", equalTo(1))
                .body("[143].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[143].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[143].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[143].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[143].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[143].'cioc'", containsString(""))
                .body("[144].'name'", containsString("Mexico"))
                .body("[144].'topLevelDomain'.size()", equalTo(1))
                .body("[144].'topLevelDomain'", hasItems(".mx"))
                .body("[144].'alpha2Code'", containsString("MX"))
                .body("[144].'alpha3Code'", containsString("MEX"))
                .body("[144].'callingCodes'.size()", equalTo(1))
                .body("[144].'callingCodes'", hasItems("52"))
                .body("[144].'capital'", containsString("Mexico City"))
                .body("[144].'altSpellings'.size()", equalTo(4))
                .body("[144].'altSpellings'", hasItems("MX", "Mexicanos", "United Mexican States", "Estados Unidos Mexicanos"))
                .body("[144].'region'", containsString("Americas"))
                .body("[144].'subregion'", containsString("Central America"))
                .body("[144].'population'", numberMatches(1.22273473E8))
                .body("[144].'latlng'.size()", equalTo(2))
                .body("[144].'latlng'[0]", numberMatches(23.0))
                .body("[144].'latlng'[1]", numberMatches(-102.0))
                .body("[144].'demonym'", containsString("Mexican"))
                .body("[144].'area'", numberMatches(1964375.0))
                .body("[144].'gini'", numberMatches(47.0))
                .body("[144].'timezones'.size()", equalTo(3))
                .body("[144].'timezones'", hasItems("UTC-08:00", "UTC-07:00", "UTC-06:00"))
                .body("[144].'borders'.size()", equalTo(3))
                .body("[144].'borders'", hasItems("BLZ", "GTM", "USA"))
                .body("[144].'nativeName'", containsString("México"))
                .body("[144].'numericCode'", containsString("484"))
                .body("[144].'currencies'.size()", equalTo(1))
                .body("[144].'currencies'[0].'code'", containsString("MXN"))
                .body("[144].'currencies'[0].'name'", containsString("Mexican peso"))
                .body("[144].'currencies'[0].'symbol'", containsString("$"))
                .body("[144].'languages'.size()", equalTo(1))
                .body("[144].'languages'[0].'iso639_1'", containsString("es"))
                .body("[144].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[144].'languages'[0].'name'", containsString("Spanish"))
                .body("[144].'languages'[0].'nativeName'", containsString("Español"))
                .body("[144].'translations'.'de'", containsString("Mexiko"))
                .body("[144].'translations'.'es'", containsString("México"))
                .body("[144].'translations'.'fr'", containsString("Mexique"))
                .body("[144].'translations'.'ja'", containsString("メキシコ"))
                .body("[144].'translations'.'it'", containsString("Messico"))
                .body("[144].'translations'.'br'", containsString("México"))
                .body("[144].'translations'.'pt'", containsString("México"))
                .body("[144].'translations'.'nl'", containsString("Mexico"))
                .body("[144].'translations'.'hr'", containsString("Meksiko"))
                .body("[144].'translations'.'fa'", containsString("مکزیک"))
                .body("[144].'flag'", containsString("https://restcountries.eu/data/mex.svg"))
                .body("[144].'regionalBlocs'.size()", equalTo(2))
                .body("[144].'regionalBlocs'[0].'acronym'", containsString("PA"))
                .body("[144].'regionalBlocs'[0].'name'", containsString("Pacific Alliance"))
                .body("[144].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[144].'regionalBlocs'[0].'otherNames'.size()", equalTo(1))
                .body("[144].'regionalBlocs'[0].'otherNames'", hasItems("Alianza del Pacífico"))
                .body("[144].'regionalBlocs'[1].'acronym'", containsString("NAFTA"))
                .body("[144].'regionalBlocs'[1].'name'", containsString("North American Free Trade Agreement"))
                .body("[144].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(0))
                .body("[144].'regionalBlocs'[1].'otherNames'.size()", equalTo(2))
                .body("[144].'regionalBlocs'[1].'otherNames'", hasItems("Tratado de Libre Comercio de América del Norte", "Accord de Libre-échange Nord-Américain"))
                .body("[144].'cioc'", containsString("MEX"))
                .body("[145].'name'", containsString("Micronesia (Federated States of)"))
                .body("[145].'topLevelDomain'.size()", equalTo(1))
                .body("[145].'topLevelDomain'", hasItems(".fm"))
                .body("[145].'alpha2Code'", containsString("FM"))
                .body("[145].'alpha3Code'", containsString("FSM"))
                .body("[145].'callingCodes'.size()", equalTo(1))
                .body("[145].'callingCodes'", hasItems("691"))
                .body("[145].'capital'", containsString("Palikir"))
                .body("[145].'altSpellings'.size()", equalTo(2))
                .body("[145].'altSpellings'", hasItems("FM", "Federated States of Micronesia"))
                .body("[145].'region'", containsString("Oceania"))
                .body("[145].'subregion'", containsString("Micronesia"))
                .body("[145].'population'", numberMatches(102800.0))
                .body("[145].'latlng'.size()", equalTo(2))
                .body("[145].'latlng'[0]", numberMatches(6.91666666))
                .body("[145].'latlng'[1]", numberMatches(158.25))
                .body("[145].'demonym'", containsString("Micronesian"))
                .body("[145].'area'", numberMatches(702.0))
                .body("[145].'gini'", nullValue())
                .body("[145].'timezones'.size()", equalTo(2))
                .body("[145].'timezones'", hasItems("UTC+10:00", "UTC+11"))
                .body("[145].'borders'.size()", equalTo(0))
                .body("[145].'nativeName'", containsString("Micronesia"))
                .body("[145].'numericCode'", containsString("583"))
                .body("[145].'currencies'.size()", equalTo(2))
                .body("[145].'currencies'[0].'code'", nullValue())
                .body("[145].'currencies'[0].'name'", containsString("[D]"))
                .body("[145].'currencies'[0].'symbol'", containsString("$"))
                .body("[145].'currencies'[1].'code'", containsString("USD"))
                .body("[145].'currencies'[1].'name'", containsString("United States dollar"))
                .body("[145].'currencies'[1].'symbol'", containsString("$"))
                .body("[145].'languages'.size()", equalTo(1))
                .body("[145].'languages'[0].'iso639_1'", containsString("en"))
                .body("[145].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[145].'languages'[0].'name'", containsString("English"))
                .body("[145].'languages'[0].'nativeName'", containsString("English"))
                .body("[145].'translations'.'de'", containsString("Mikronesien"))
                .body("[145].'translations'.'es'", containsString("Micronesia"))
                .body("[145].'translations'.'fr'", containsString("Micronésie"))
                .body("[145].'translations'.'ja'", containsString("ミクロネシア連邦"))
                .body("[145].'translations'.'it'", containsString("Micronesia"))
                .body("[145].'translations'.'br'", containsString("Micronésia"))
                .body("[145].'translations'.'pt'", containsString("Micronésia"))
                .body("[145].'translations'.'nl'", containsString("Micronesië"))
                .body("[145].'translations'.'hr'", containsString("Mikronezija"))
                .body("[145].'translations'.'fa'", containsString("ایالات فدرال میکرونزی"))
                .body("[145].'flag'", containsString("https://restcountries.eu/data/fsm.svg"))
                .body("[145].'regionalBlocs'.size()", equalTo(0))
                .body("[145].'cioc'", containsString("FSM"))
                .body("[146].'name'", containsString("Moldova (Republic of)"))
                .body("[146].'topLevelDomain'.size()", equalTo(1))
                .body("[146].'topLevelDomain'", hasItems(".md"))
                .body("[146].'alpha2Code'", containsString("MD"))
                .body("[146].'alpha3Code'", containsString("MDA"))
                .body("[146].'callingCodes'.size()", equalTo(1))
                .body("[146].'callingCodes'", hasItems("373"))
                .body("[146].'capital'", containsString("Chișinău"))
                .body("[146].'altSpellings'.size()", equalTo(3))
                .body("[146].'altSpellings'", hasItems("MD", "Republic of Moldova", "Republica Moldova"))
                .body("[146].'region'", containsString("Europe"))
                .body("[146].'subregion'", containsString("Eastern Europe"))
                .body("[146].'population'", numberMatches(3553100.0))
                .body("[146].'latlng'.size()", equalTo(2))
                .body("[146].'latlng'[0]", numberMatches(47.0))
                .body("[146].'latlng'[1]", numberMatches(29.0))
                .body("[146].'demonym'", containsString("Moldovan"))
                .body("[146].'area'", numberMatches(33846.0))
                .body("[146].'gini'", numberMatches(33.0))
                .body("[146].'timezones'.size()", equalTo(1))
                .body("[146].'timezones'", hasItems("UTC+02:00"))
                .body("[146].'borders'.size()", equalTo(2))
                .body("[146].'borders'", hasItems("ROU", "UKR"))
                .body("[146].'nativeName'", containsString("Moldova"))
                .body("[146].'numericCode'", containsString("498"))
                .body("[146].'currencies'.size()", equalTo(1))
                .body("[146].'currencies'[0].'code'", containsString("MDL"))
                .body("[146].'currencies'[0].'name'", containsString("Moldovan leu"))
                .body("[146].'currencies'[0].'symbol'", containsString("L"))
                .body("[146].'languages'.size()", equalTo(1))
                .body("[146].'languages'[0].'iso639_1'", containsString("ro"))
                .body("[146].'languages'[0].'iso639_2'", containsString("ron"))
                .body("[146].'languages'[0].'name'", containsString("Romanian"))
                .body("[146].'languages'[0].'nativeName'", containsString("Română"))
                .body("[146].'translations'.'de'", containsString("Moldawie"))
                .body("[146].'translations'.'es'", containsString("Moldavia"))
                .body("[146].'translations'.'fr'", containsString("Moldavie"))
                .body("[146].'translations'.'ja'", containsString("モルドバ共和国"))
                .body("[146].'translations'.'it'", containsString("Moldavia"))
                .body("[146].'translations'.'br'", containsString("Moldávia"))
                .body("[146].'translations'.'pt'", containsString("Moldávia"))
                .body("[146].'translations'.'nl'", containsString("Moldavië"))
                .body("[146].'translations'.'hr'", containsString("Moldova"))
                .body("[146].'translations'.'fa'", containsString("مولداوی"))
                .body("[146].'flag'", containsString("https://restcountries.eu/data/mda.svg"))
                .body("[146].'regionalBlocs'.size()", equalTo(1))
                .body("[146].'regionalBlocs'[0].'acronym'", containsString("CEFTA"))
                .body("[146].'regionalBlocs'[0].'name'", containsString("Central European Free Trade Agreement"))
                .body("[146].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[146].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[146].'cioc'", containsString("MDA"))
                .body("[147].'name'", containsString("Monaco"))
                .body("[147].'topLevelDomain'.size()", equalTo(1))
                .body("[147].'topLevelDomain'", hasItems(".mc"))
                .body("[147].'alpha2Code'", containsString("MC"))
                .body("[147].'alpha3Code'", containsString("MCO"))
                .body("[147].'callingCodes'.size()", equalTo(1))
                .body("[147].'callingCodes'", hasItems("377"))
                .body("[147].'capital'", containsString("Monaco"))
                .body("[147].'altSpellings'.size()", equalTo(3))
                .body("[147].'altSpellings'", hasItems("MC", "Principality of Monaco", "Principauté de Monaco"))
                .body("[147].'region'", containsString("Europe"))
                .body("[147].'subregion'", containsString("Western Europe"))
                .body("[147].'population'", numberMatches(38400.0))
                .body("[147].'latlng'.size()", equalTo(2))
                .body("[147].'latlng'[0]", numberMatches(43.73333333))
                .body("[147].'latlng'[1]", numberMatches(7.4))
                .body("[147].'demonym'", containsString("Monegasque"))
                .body("[147].'area'", numberMatches(2.02))
                .body("[147].'gini'", nullValue())
                .body("[147].'timezones'.size()", equalTo(1))
                .body("[147].'timezones'", hasItems("UTC+01:00"))
                .body("[147].'borders'.size()", equalTo(1))
                .body("[147].'borders'", hasItems("FRA"))
                .body("[147].'nativeName'", containsString("Monaco"))
                .body("[147].'numericCode'", containsString("492"))
                .body("[147].'currencies'.size()", equalTo(1))
                .body("[147].'currencies'[0].'code'", containsString("EUR"))
                .body("[147].'currencies'[0].'name'", containsString("Euro"))
                .body("[147].'currencies'[0].'symbol'", containsString("€"))
                .body("[147].'languages'.size()", equalTo(1))
                .body("[147].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[147].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[147].'languages'[0].'name'", containsString("French"))
                .body("[147].'languages'[0].'nativeName'", containsString("français"))
                .body("[147].'translations'.'de'", containsString("Monaco"))
                .body("[147].'translations'.'es'", containsString("Mónaco"))
                .body("[147].'translations'.'fr'", containsString("Monaco"))
                .body("[147].'translations'.'ja'", containsString("モナコ"))
                .body("[147].'translations'.'it'", containsString("Principato di Monaco"))
                .body("[147].'translations'.'br'", containsString("Mônaco"))
                .body("[147].'translations'.'pt'", containsString("Mónaco"))
                .body("[147].'translations'.'nl'", containsString("Monaco"))
                .body("[147].'translations'.'hr'", containsString("Monako"))
                .body("[147].'translations'.'fa'", containsString("موناکو"))
                .body("[147].'flag'", containsString("https://restcountries.eu/data/mco.svg"))
                .body("[147].'regionalBlocs'.size()", equalTo(0))
                .body("[147].'cioc'", containsString("MON"))
                .body("[148].'name'", containsString("Mongolia"))
                .body("[148].'topLevelDomain'.size()", equalTo(1))
                .body("[148].'topLevelDomain'", hasItems(".mn"))
                .body("[148].'alpha2Code'", containsString("MN"))
                .body("[148].'alpha3Code'", containsString("MNG"))
                .body("[148].'callingCodes'.size()", equalTo(1))
                .body("[148].'callingCodes'", hasItems("976"))
                .body("[148].'capital'", containsString("Ulan Bator"))
                .body("[148].'altSpellings'.size()", equalTo(1))
                .body("[148].'altSpellings'", hasItems("MN"))
                .body("[148].'region'", containsString("Asia"))
                .body("[148].'subregion'", containsString("Eastern Asia"))
                .body("[148].'population'", numberMatches(3093100.0))
                .body("[148].'latlng'.size()", equalTo(2))
                .body("[148].'latlng'[0]", numberMatches(46.0))
                .body("[148].'latlng'[1]", numberMatches(105.0))
                .body("[148].'demonym'", containsString("Mongolian"))
                .body("[148].'area'", numberMatches(1564110.0))
                .body("[148].'gini'", numberMatches(36.5))
                .body("[148].'timezones'.size()", equalTo(2))
                .body("[148].'timezones'", hasItems("UTC+07:00", "UTC+08:00"))
                .body("[148].'borders'.size()", equalTo(2))
                .body("[148].'borders'", hasItems("CHN", "RUS"))
                .body("[148].'nativeName'", containsString("Монгол улс"))
                .body("[148].'numericCode'", containsString("496"))
                .body("[148].'currencies'.size()", equalTo(1))
                .body("[148].'currencies'[0].'code'", containsString("MNT"))
                .body("[148].'currencies'[0].'name'", containsString("Mongolian tögrög"))
                .body("[148].'currencies'[0].'symbol'", containsString("₮"))
                .body("[148].'languages'.size()", equalTo(1))
                .body("[148].'languages'[0].'iso639_1'", containsString("mn"))
                .body("[148].'languages'[0].'iso639_2'", containsString("mon"))
                .body("[148].'languages'[0].'name'", containsString("Mongolian"))
                .body("[148].'languages'[0].'nativeName'", containsString("Монгол хэл"))
                .body("[148].'translations'.'de'", containsString("Mongolei"))
                .body("[148].'translations'.'es'", containsString("Mongolia"))
                .body("[148].'translations'.'fr'", containsString("Mongolie"))
                .body("[148].'translations'.'ja'", containsString("モンゴル"))
                .body("[148].'translations'.'it'", containsString("Mongolia"))
                .body("[148].'translations'.'br'", containsString("Mongólia"))
                .body("[148].'translations'.'pt'", containsString("Mongólia"))
                .body("[148].'translations'.'nl'", containsString("Mongolië"))
                .body("[148].'translations'.'hr'", containsString("Mongolija"))
                .body("[148].'translations'.'fa'", containsString("مغولستان"))
                .body("[148].'flag'", containsString("https://restcountries.eu/data/mng.svg"))
                .body("[148].'regionalBlocs'.size()", equalTo(0))
                .body("[148].'cioc'", containsString("MGL"))
                .body("[149].'name'", containsString("Montenegro"))
                .body("[149].'topLevelDomain'.size()", equalTo(1))
                .body("[149].'topLevelDomain'", hasItems(".me"))
                .body("[149].'alpha2Code'", containsString("ME"))
                .body("[149].'alpha3Code'", containsString("MNE"))
                .body("[149].'callingCodes'.size()", equalTo(1))
                .body("[149].'callingCodes'", hasItems("382"))
                .body("[149].'capital'", containsString("Podgorica"))
                .body("[149].'altSpellings'.size()", equalTo(2))
                .body("[149].'altSpellings'", hasItems("ME", "Crna Gora"))
                .body("[149].'region'", containsString("Europe"))
                .body("[149].'subregion'", containsString("Southern Europe"))
                .body("[149].'population'", numberMatches(621810.0))
                .body("[149].'latlng'.size()", equalTo(2))
                .body("[149].'latlng'[0]", numberMatches(42.5))
                .body("[149].'latlng'[1]", numberMatches(19.3))
                .body("[149].'demonym'", containsString("Montenegrin"))
                .body("[149].'area'", numberMatches(13812.0))
                .body("[149].'gini'", numberMatches(30.0))
                .body("[149].'timezones'.size()", equalTo(1))
                .body("[149].'timezones'", hasItems("UTC+01:00"))
                .body("[149].'borders'.size()", equalTo(5))
                .body("[149].'borders'", hasItems("ALB", "BIH", "HRV", "KOS", "SRB"))
                .body("[149].'nativeName'", containsString("Црна Гора"))
                .body("[149].'numericCode'", containsString("499"))
                .body("[149].'currencies'.size()", equalTo(1))
                .body("[149].'currencies'[0].'code'", containsString("EUR"))
                .body("[149].'currencies'[0].'name'", containsString("Euro"))
                .body("[149].'currencies'[0].'symbol'", containsString("€"))
                .body("[149].'languages'.size()", equalTo(4))
                .body("[149].'languages'[0].'iso639_1'", containsString("sr"))
                .body("[149].'languages'[0].'iso639_2'", containsString("srp"))
                .body("[149].'languages'[0].'name'", containsString("Serbian"))
                .body("[149].'languages'[0].'nativeName'", containsString("српски језик"))
                .body("[149].'languages'[1].'iso639_1'", containsString("bs"))
                .body("[149].'languages'[1].'iso639_2'", containsString("bos"))
                .body("[149].'languages'[1].'name'", containsString("Bosnian"))
                .body("[149].'languages'[1].'nativeName'", containsString("bosanski jezik"))
                .body("[149].'languages'[2].'iso639_1'", containsString("sq"))
                .body("[149].'languages'[2].'iso639_2'", containsString("sqi"))
                .body("[149].'languages'[2].'name'", containsString("Albanian"))
                .body("[149].'languages'[2].'nativeName'", containsString("Shqip"))
                .body("[149].'languages'[3].'iso639_1'", containsString("hr"))
                .body("[149].'languages'[3].'iso639_2'", containsString("hrv"))
                .body("[149].'languages'[3].'name'", containsString("Croatian"))
                .body("[149].'languages'[3].'nativeName'", containsString("hrvatski jezik"))
                .body("[149].'translations'.'de'", containsString("Montenegro"))
                .body("[149].'translations'.'es'", containsString("Montenegro"))
                .body("[149].'translations'.'fr'", containsString("Monténégro"))
                .body("[149].'translations'.'ja'", containsString("モンテネグロ"))
                .body("[149].'translations'.'it'", containsString("Montenegro"))
                .body("[149].'translations'.'br'", containsString("Montenegro"))
                .body("[149].'translations'.'pt'", containsString("Montenegro"))
                .body("[149].'translations'.'nl'", containsString("Montenegro"))
                .body("[149].'translations'.'hr'", containsString("Crna Gora"))
                .body("[149].'translations'.'fa'", containsString("مونته‌نگرو"))
                .body("[149].'flag'", containsString("https://restcountries.eu/data/mne.svg"))
                .body("[149].'regionalBlocs'.size()", equalTo(1))
                .body("[149].'regionalBlocs'[0].'acronym'", containsString("CEFTA"))
                .body("[149].'regionalBlocs'[0].'name'", containsString("Central European Free Trade Agreement"))
                .body("[149].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[149].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[149].'cioc'", containsString("MNE"))
                .body("[150].'name'", containsString("Montserrat"))
                .body("[150].'topLevelDomain'.size()", equalTo(1))
                .body("[150].'topLevelDomain'", hasItems(".ms"))
                .body("[150].'alpha2Code'", containsString("MS"))
                .body("[150].'alpha3Code'", containsString("MSR"))
                .body("[150].'callingCodes'.size()", equalTo(1))
                .body("[150].'callingCodes'", hasItems("1"))
                .body("[150].'capital'", containsString("Plymouth"))
                .body("[150].'altSpellings'.size()", equalTo(1))
                .body("[150].'altSpellings'", hasItems("MS"))
                .body("[150].'region'", containsString("Americas"))
                .body("[150].'subregion'", containsString("Caribbean"))
                .body("[150].'population'", numberMatches(4922.0))
                .body("[150].'latlng'.size()", equalTo(2))
                .body("[150].'latlng'[0]", numberMatches(16.75))
                .body("[150].'latlng'[1]", numberMatches(-62.2))
                .body("[150].'demonym'", containsString("Montserratian"))
                .body("[150].'area'", numberMatches(102.0))
                .body("[150].'gini'", nullValue())
                .body("[150].'timezones'.size()", equalTo(1))
                .body("[150].'timezones'", hasItems("UTC-04:00"))
                .body("[150].'borders'.size()", equalTo(0))
                .body("[150].'nativeName'", containsString("Montserrat"))
                .body("[150].'numericCode'", containsString("500"))
                .body("[150].'currencies'.size()", equalTo(1))
                .body("[150].'currencies'[0].'code'", containsString("XCD"))
                .body("[150].'currencies'[0].'name'", containsString("East Caribbean dollar"))
                .body("[150].'currencies'[0].'symbol'", containsString("$"))
                .body("[150].'languages'.size()", equalTo(1))
                .body("[150].'languages'[0].'iso639_1'", containsString("en"))
                .body("[150].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[150].'languages'[0].'name'", containsString("English"))
                .body("[150].'languages'[0].'nativeName'", containsString("English"))
                .body("[150].'translations'.'de'", containsString("Montserrat"))
                .body("[150].'translations'.'es'", containsString("Montserrat"))
                .body("[150].'translations'.'fr'", containsString("Montserrat"))
                .body("[150].'translations'.'ja'", containsString("モントセラト"))
                .body("[150].'translations'.'it'", containsString("Montserrat"))
                .body("[150].'translations'.'br'", containsString("Montserrat"))
                .body("[150].'translations'.'pt'", containsString("Monserrate"))
                .body("[150].'translations'.'nl'", containsString("Montserrat"))
                .body("[150].'translations'.'hr'", containsString("Montserrat"))
                .body("[150].'translations'.'fa'", containsString("مایوت"))
                .body("[150].'flag'", containsString("https://restcountries.eu/data/msr.svg"))
                .body("[150].'regionalBlocs'.size()", equalTo(1))
                .body("[150].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[150].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[150].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[150].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[150].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[150].'cioc'", containsString(""))
                .body("[151].'name'", containsString("Morocco"))
                .body("[151].'topLevelDomain'.size()", equalTo(1))
                .body("[151].'topLevelDomain'", hasItems(".ma"))
                .body("[151].'alpha2Code'", containsString("MA"))
                .body("[151].'alpha3Code'", containsString("MAR"))
                .body("[151].'callingCodes'.size()", equalTo(1))
                .body("[151].'callingCodes'", hasItems("212"))
                .body("[151].'capital'", containsString("Rabat"))
                .body("[151].'altSpellings'.size()", equalTo(3))
                .body("[151].'altSpellings'", hasItems("MA", "Kingdom of Morocco", "Al-Mamlakah al-Maġribiyah"))
                .body("[151].'region'", containsString("Africa"))
                .body("[151].'subregion'", containsString("Northern Africa"))
                .body("[151].'population'", numberMatches(3.3337529E7))
                .body("[151].'latlng'.size()", equalTo(2))
                .body("[151].'latlng'[0]", numberMatches(32.0))
                .body("[151].'latlng'[1]", numberMatches(-5.0))
                .body("[151].'demonym'", containsString("Moroccan"))
                .body("[151].'area'", numberMatches(446550.0))
                .body("[151].'gini'", numberMatches(40.9))
                .body("[151].'timezones'.size()", equalTo(1))
                .body("[151].'timezones'", hasItems("UTC"))
                .body("[151].'borders'.size()", equalTo(3))
                .body("[151].'borders'", hasItems("DZA", "ESH", "ESP"))
                .body("[151].'nativeName'", containsString("المغرب"))
                .body("[151].'numericCode'", containsString("504"))
                .body("[151].'currencies'.size()", equalTo(1))
                .body("[151].'currencies'[0].'code'", containsString("MAD"))
                .body("[151].'currencies'[0].'name'", containsString("Moroccan dirham"))
                .body("[151].'currencies'[0].'symbol'", containsString("د.م."))
                .body("[151].'languages'.size()", equalTo(1))
                .body("[151].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[151].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[151].'languages'[0].'name'", containsString("Arabic"))
                .body("[151].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[151].'translations'.'de'", containsString("Marokko"))
                .body("[151].'translations'.'es'", containsString("Marruecos"))
                .body("[151].'translations'.'fr'", containsString("Maroc"))
                .body("[151].'translations'.'ja'", containsString("モロッコ"))
                .body("[151].'translations'.'it'", containsString("Marocco"))
                .body("[151].'translations'.'br'", containsString("Marrocos"))
                .body("[151].'translations'.'pt'", containsString("Marrocos"))
                .body("[151].'translations'.'nl'", containsString("Marokko"))
                .body("[151].'translations'.'hr'", containsString("Maroko"))
                .body("[151].'translations'.'fa'", containsString("مراکش"))
                .body("[151].'flag'", containsString("https://restcountries.eu/data/mar.svg"))
                .body("[151].'regionalBlocs'.size()", equalTo(2))
                .body("[151].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[151].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[151].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[151].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[151].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[151].'regionalBlocs'[1].'acronym'", containsString("AL"))
                .body("[151].'regionalBlocs'[1].'name'", containsString("Arab League"))
                .body("[151].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(0))
                .body("[151].'regionalBlocs'[1].'otherNames'.size()", equalTo(3))
                .body("[151].'regionalBlocs'[1].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[151].'cioc'", containsString("MAR"))
                .body("[152].'name'", containsString("Mozambique"))
                .body("[152].'topLevelDomain'.size()", equalTo(1))
                .body("[152].'topLevelDomain'", hasItems(".mz"))
                .body("[152].'alpha2Code'", containsString("MZ"))
                .body("[152].'alpha3Code'", containsString("MOZ"))
                .body("[152].'callingCodes'.size()", equalTo(1))
                .body("[152].'callingCodes'", hasItems("258"))
                .body("[152].'capital'", containsString("Maputo"))
                .body("[152].'altSpellings'.size()", equalTo(3))
                .body("[152].'altSpellings'", hasItems("MZ", "Republic of Mozambique", "República de Moçambique"))
                .body("[152].'region'", containsString("Africa"))
                .body("[152].'subregion'", containsString("Eastern Africa"))
                .body("[152].'population'", numberMatches(2.64237E7))
                .body("[152].'latlng'.size()", equalTo(2))
                .body("[152].'latlng'[0]", numberMatches(-18.25))
                .body("[152].'latlng'[1]", numberMatches(35.0))
                .body("[152].'demonym'", containsString("Mozambican"))
                .body("[152].'area'", numberMatches(801590.0))
                .body("[152].'gini'", numberMatches(45.7))
                .body("[152].'timezones'.size()", equalTo(1))
                .body("[152].'timezones'", hasItems("UTC+02:00"))
                .body("[152].'borders'.size()", equalTo(6))
                .body("[152].'borders'", hasItems("MWI", "ZAF", "SWZ", "TZA", "ZMB", "ZWE"))
                .body("[152].'nativeName'", containsString("Moçambique"))
                .body("[152].'numericCode'", containsString("508"))
                .body("[152].'currencies'.size()", equalTo(1))
                .body("[152].'currencies'[0].'code'", containsString("MZN"))
                .body("[152].'currencies'[0].'name'", containsString("Mozambican metical"))
                .body("[152].'currencies'[0].'symbol'", containsString("MT"))
                .body("[152].'languages'.size()", equalTo(1))
                .body("[152].'languages'[0].'iso639_1'", containsString("pt"))
                .body("[152].'languages'[0].'iso639_2'", containsString("por"))
                .body("[152].'languages'[0].'name'", containsString("Portuguese"))
                .body("[152].'languages'[0].'nativeName'", containsString("Português"))
                .body("[152].'translations'.'de'", containsString("Mosambik"))
                .body("[152].'translations'.'es'", containsString("Mozambique"))
                .body("[152].'translations'.'fr'", containsString("Mozambique"))
                .body("[152].'translations'.'ja'", containsString("モザンビーク"))
                .body("[152].'translations'.'it'", containsString("Mozambico"))
                .body("[152].'translations'.'br'", containsString("Moçambique"))
                .body("[152].'translations'.'pt'", containsString("Moçambique"))
                .body("[152].'translations'.'nl'", containsString("Mozambique"))
                .body("[152].'translations'.'hr'", containsString("Mozambik"))
                .body("[152].'translations'.'fa'", containsString("موزامبیک"))
                .body("[152].'flag'", containsString("https://restcountries.eu/data/moz.svg"))
                .body("[152].'regionalBlocs'.size()", equalTo(1))
                .body("[152].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[152].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[152].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[152].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[152].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[152].'cioc'", containsString("MOZ"))
                .body("[153].'name'", containsString("Myanmar"))
                .body("[153].'topLevelDomain'.size()", equalTo(1))
                .body("[153].'topLevelDomain'", hasItems(".mm"))
                .body("[153].'alpha2Code'", containsString("MM"))
                .body("[153].'alpha3Code'", containsString("MMR"))
                .body("[153].'callingCodes'.size()", equalTo(1))
                .body("[153].'callingCodes'", hasItems("95"))
                .body("[153].'capital'", containsString("Naypyidaw"))
                .body("[153].'altSpellings'.size()", equalTo(4))
                .body("[153].'altSpellings'", hasItems("MM", "Burma", "Republic of the Union of Myanmar", "Pyidaunzu Thanmăda Myăma Nainngandaw"))
                .body("[153].'region'", containsString("Asia"))
                .body("[153].'subregion'", containsString("South-Eastern Asia"))
                .body("[153].'population'", numberMatches(5.141942E7))
                .body("[153].'latlng'.size()", equalTo(2))
                .body("[153].'latlng'[0]", numberMatches(22.0))
                .body("[153].'latlng'[1]", numberMatches(98.0))
                .body("[153].'demonym'", containsString("Burmese"))
                .body("[153].'area'", numberMatches(676578.0))
                .body("[153].'gini'", nullValue())
                .body("[153].'timezones'.size()", equalTo(1))
                .body("[153].'timezones'", hasItems("UTC+06:30"))
                .body("[153].'borders'.size()", equalTo(5))
                .body("[153].'borders'", hasItems("BGD", "CHN", "IND", "LAO", "THA"))
                .body("[153].'nativeName'", containsString("Myanma"))
                .body("[153].'numericCode'", containsString("104"))
                .body("[153].'currencies'.size()", equalTo(1))
                .body("[153].'currencies'[0].'code'", containsString("MMK"))
                .body("[153].'currencies'[0].'name'", containsString("Burmese kyat"))
                .body("[153].'currencies'[0].'symbol'", containsString("Ks"))
                .body("[153].'languages'.size()", equalTo(1))
                .body("[153].'languages'[0].'iso639_1'", containsString("my"))
                .body("[153].'languages'[0].'iso639_2'", containsString("mya"))
                .body("[153].'languages'[0].'name'", containsString("Burmese"))
                .body("[153].'languages'[0].'nativeName'", containsString("ဗမာစာ"))
                .body("[153].'translations'.'de'", containsString("Myanmar"))
                .body("[153].'translations'.'es'", containsString("Myanmar"))
                .body("[153].'translations'.'fr'", containsString("Myanmar"))
                .body("[153].'translations'.'ja'", containsString("ミャンマー"))
                .body("[153].'translations'.'it'", containsString("Birmania"))
                .body("[153].'translations'.'br'", containsString("Myanmar"))
                .body("[153].'translations'.'pt'", containsString("Myanmar"))
                .body("[153].'translations'.'nl'", containsString("Myanmar"))
                .body("[153].'translations'.'hr'", containsString("Mijanmar"))
                .body("[153].'translations'.'fa'", containsString("میانمار"))
                .body("[153].'flag'", containsString("https://restcountries.eu/data/mmr.svg"))
                .body("[153].'regionalBlocs'.size()", equalTo(1))
                .body("[153].'regionalBlocs'[0].'acronym'", containsString("ASEAN"))
                .body("[153].'regionalBlocs'[0].'name'", containsString("Association of Southeast Asian Nations"))
                .body("[153].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[153].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[153].'cioc'", containsString("MYA"))
                .body("[154].'name'", containsString("Namibia"))
                .body("[154].'topLevelDomain'.size()", equalTo(1))
                .body("[154].'topLevelDomain'", hasItems(".na"))
                .body("[154].'alpha2Code'", containsString("NA"))
                .body("[154].'alpha3Code'", containsString("NAM"))
                .body("[154].'callingCodes'.size()", equalTo(1))
                .body("[154].'callingCodes'", hasItems("264"))
                .body("[154].'capital'", containsString("Windhoek"))
                .body("[154].'altSpellings'.size()", equalTo(3))
                .body("[154].'altSpellings'", hasItems("NA", "Namibië", "Republic of Namibia"))
                .body("[154].'region'", containsString("Africa"))
                .body("[154].'subregion'", containsString("Southern Africa"))
                .body("[154].'population'", numberMatches(2324388.0))
                .body("[154].'latlng'.size()", equalTo(2))
                .body("[154].'latlng'[0]", numberMatches(-22.0))
                .body("[154].'latlng'[1]", numberMatches(17.0))
                .body("[154].'demonym'", containsString("Namibian"))
                .body("[154].'area'", numberMatches(825615.0))
                .body("[154].'gini'", numberMatches(63.9))
                .body("[154].'timezones'.size()", equalTo(1))
                .body("[154].'timezones'", hasItems("UTC+01:00"))
                .body("[154].'borders'.size()", equalTo(4))
                .body("[154].'borders'", hasItems("AGO", "BWA", "ZAF", "ZMB"))
                .body("[154].'nativeName'", containsString("Namibia"))
                .body("[154].'numericCode'", containsString("516"))
                .body("[154].'currencies'.size()", equalTo(2))
                .body("[154].'currencies'[0].'code'", containsString("NAD"))
                .body("[154].'currencies'[0].'name'", containsString("Namibian dollar"))
                .body("[154].'currencies'[0].'symbol'", containsString("$"))
                .body("[154].'currencies'[1].'code'", containsString("ZAR"))
                .body("[154].'currencies'[1].'name'", containsString("South African rand"))
                .body("[154].'currencies'[1].'symbol'", containsString("R"))
                .body("[154].'languages'.size()", equalTo(2))
                .body("[154].'languages'[0].'iso639_1'", containsString("en"))
                .body("[154].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[154].'languages'[0].'name'", containsString("English"))
                .body("[154].'languages'[0].'nativeName'", containsString("English"))
                .body("[154].'languages'[1].'iso639_1'", containsString("af"))
                .body("[154].'languages'[1].'iso639_2'", containsString("afr"))
                .body("[154].'languages'[1].'name'", containsString("Afrikaans"))
                .body("[154].'languages'[1].'nativeName'", containsString("Afrikaans"))
                .body("[154].'translations'.'de'", containsString("Namibia"))
                .body("[154].'translations'.'es'", containsString("Namibia"))
                .body("[154].'translations'.'fr'", containsString("Namibie"))
                .body("[154].'translations'.'ja'", containsString("ナミビア"))
                .body("[154].'translations'.'it'", containsString("Namibia"))
                .body("[154].'translations'.'br'", containsString("Namíbia"))
                .body("[154].'translations'.'pt'", containsString("Namíbia"))
                .body("[154].'translations'.'nl'", containsString("Namibië"))
                .body("[154].'translations'.'hr'", containsString("Namibija"))
                .body("[154].'translations'.'fa'", containsString("نامیبیا"))
                .body("[154].'flag'", containsString("https://restcountries.eu/data/nam.svg"))
                .body("[154].'regionalBlocs'.size()", equalTo(1))
                .body("[154].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[154].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[154].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[154].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[154].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[154].'cioc'", containsString("NAM"))
                .body("[155].'name'", containsString("Nauru"))
                .body("[155].'topLevelDomain'.size()", equalTo(1))
                .body("[155].'topLevelDomain'", hasItems(".nr"))
                .body("[155].'alpha2Code'", containsString("NR"))
                .body("[155].'alpha3Code'", containsString("NRU"))
                .body("[155].'callingCodes'.size()", equalTo(1))
                .body("[155].'callingCodes'", hasItems("674"))
                .body("[155].'capital'", containsString("Yaren"))
                .body("[155].'altSpellings'.size()", equalTo(5))
                .body("[155].'altSpellings'", hasItems("NR", "Naoero", "Pleasant Island", "Republic of Nauru", "Ripublik Naoero"))
                .body("[155].'region'", containsString("Oceania"))
                .body("[155].'subregion'", containsString("Micronesia"))
                .body("[155].'population'", numberMatches(10084.0))
                .body("[155].'latlng'.size()", equalTo(2))
                .body("[155].'latlng'[0]", numberMatches(-0.53333333))
                .body("[155].'latlng'[1]", numberMatches(166.91666666))
                .body("[155].'demonym'", containsString("Nauruan"))
                .body("[155].'area'", numberMatches(21.0))
                .body("[155].'gini'", nullValue())
                .body("[155].'timezones'.size()", equalTo(1))
                .body("[155].'timezones'", hasItems("UTC+12:00"))
                .body("[155].'borders'.size()", equalTo(0))
                .body("[155].'nativeName'", containsString("Nauru"))
                .body("[155].'numericCode'", containsString("520"))
                .body("[155].'currencies'.size()", equalTo(2))
                .body("[155].'currencies'[0].'code'", containsString("AUD"))
                .body("[155].'currencies'[0].'name'", containsString("Australian dollar"))
                .body("[155].'currencies'[0].'symbol'", containsString("$"))
                .body("[155].'currencies'[1].'code'", containsString("(none)"))
                .body("[155].'currencies'[1].'name'", nullValue())
                .body("[155].'currencies'[1].'symbol'", containsString("$"))
                .body("[155].'languages'.size()", equalTo(2))
                .body("[155].'languages'[0].'iso639_1'", containsString("en"))
                .body("[155].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[155].'languages'[0].'name'", containsString("English"))
                .body("[155].'languages'[0].'nativeName'", containsString("English"))
                .body("[155].'languages'[1].'iso639_1'", containsString("na"))
                .body("[155].'languages'[1].'iso639_2'", containsString("nau"))
                .body("[155].'languages'[1].'name'", containsString("Nauruan"))
                .body("[155].'languages'[1].'nativeName'", containsString("Dorerin Naoero"))
                .body("[155].'translations'.'de'", containsString("Nauru"))
                .body("[155].'translations'.'es'", containsString("Nauru"))
                .body("[155].'translations'.'fr'", containsString("Nauru"))
                .body("[155].'translations'.'ja'", containsString("ナウル"))
                .body("[155].'translations'.'it'", containsString("Nauru"))
                .body("[155].'translations'.'br'", containsString("Nauru"))
                .body("[155].'translations'.'pt'", containsString("Nauru"))
                .body("[155].'translations'.'nl'", containsString("Nauru"))
                .body("[155].'translations'.'hr'", containsString("Nauru"))
                .body("[155].'translations'.'fa'", containsString("نائورو"))
                .body("[155].'flag'", containsString("https://restcountries.eu/data/nru.svg"))
                .body("[155].'regionalBlocs'.size()", equalTo(0))
                .body("[155].'cioc'", containsString("NRU"))
                .body("[156].'name'", containsString("Nepal"))
                .body("[156].'topLevelDomain'.size()", equalTo(1))
                .body("[156].'topLevelDomain'", hasItems(".np"))
                .body("[156].'alpha2Code'", containsString("NP"))
                .body("[156].'alpha3Code'", containsString("NPL"))
                .body("[156].'callingCodes'.size()", equalTo(1))
                .body("[156].'callingCodes'", hasItems("977"))
                .body("[156].'capital'", containsString("Kathmandu"))
                .body("[156].'altSpellings'.size()", equalTo(3))
                .body("[156].'altSpellings'", hasItems("NP", "Federal Democratic Republic of Nepal", "Loktāntrik Ganatantra Nepāl"))
                .body("[156].'region'", containsString("Asia"))
                .body("[156].'subregion'", containsString("Southern Asia"))
                .body("[156].'population'", numberMatches(2.84315E7))
                .body("[156].'latlng'.size()", equalTo(2))
                .body("[156].'latlng'[0]", numberMatches(28.0))
                .body("[156].'latlng'[1]", numberMatches(84.0))
                .body("[156].'demonym'", containsString("Nepalese"))
                .body("[156].'area'", numberMatches(147181.0))
                .body("[156].'gini'", numberMatches(32.8))
                .body("[156].'timezones'.size()", equalTo(1))
                .body("[156].'timezones'", hasItems("UTC+05:45"))
                .body("[156].'borders'.size()", equalTo(2))
                .body("[156].'borders'", hasItems("CHN", "IND"))
                .body("[156].'nativeName'", containsString("नेपाल"))
                .body("[156].'numericCode'", containsString("524"))
                .body("[156].'currencies'.size()", equalTo(1))
                .body("[156].'currencies'[0].'code'", containsString("NPR"))
                .body("[156].'currencies'[0].'name'", containsString("Nepalese rupee"))
                .body("[156].'currencies'[0].'symbol'", containsString("₨"))
                .body("[156].'languages'.size()", equalTo(1))
                .body("[156].'languages'[0].'iso639_1'", containsString("ne"))
                .body("[156].'languages'[0].'iso639_2'", containsString("nep"))
                .body("[156].'languages'[0].'name'", containsString("Nepali"))
                .body("[156].'languages'[0].'nativeName'", containsString("नेपाली"))
                .body("[156].'translations'.'de'", containsString("Népal"))
                .body("[156].'translations'.'es'", containsString("Nepal"))
                .body("[156].'translations'.'fr'", containsString("Népal"))
                .body("[156].'translations'.'ja'", containsString("ネパール"))
                .body("[156].'translations'.'it'", containsString("Nepal"))
                .body("[156].'translations'.'br'", containsString("Nepal"))
                .body("[156].'translations'.'pt'", containsString("Nepal"))
                .body("[156].'translations'.'nl'", containsString("Nepal"))
                .body("[156].'translations'.'hr'", containsString("Nepal"))
                .body("[156].'translations'.'fa'", containsString("نپال"))
                .body("[156].'flag'", containsString("https://restcountries.eu/data/npl.svg"))
                .body("[156].'regionalBlocs'.size()", equalTo(1))
                .body("[156].'regionalBlocs'[0].'acronym'", containsString("SAARC"))
                .body("[156].'regionalBlocs'[0].'name'", containsString("South Asian Association for Regional Cooperation"))
                .body("[156].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[156].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[156].'cioc'", containsString("NEP"))
                .body("[157].'name'", containsString("Netherlands"))
                .body("[157].'topLevelDomain'.size()", equalTo(1))
                .body("[157].'topLevelDomain'", hasItems(".nl"))
                .body("[157].'alpha2Code'", containsString("NL"))
                .body("[157].'alpha3Code'", containsString("NLD"))
                .body("[157].'callingCodes'.size()", equalTo(1))
                .body("[157].'callingCodes'", hasItems("31"))
                .body("[157].'capital'", containsString("Amsterdam"))
                .body("[157].'altSpellings'.size()", equalTo(3))
                .body("[157].'altSpellings'", hasItems("NL", "Holland", "Nederland"))
                .body("[157].'region'", containsString("Europe"))
                .body("[157].'subregion'", containsString("Western Europe"))
                .body("[157].'population'", numberMatches(1.70198E7))
                .body("[157].'latlng'.size()", equalTo(2))
                .body("[157].'latlng'[0]", numberMatches(52.5))
                .body("[157].'latlng'[1]", numberMatches(5.75))
                .body("[157].'demonym'", containsString("Dutch"))
                .body("[157].'area'", numberMatches(41850.0))
                .body("[157].'gini'", numberMatches(30.9))
                .body("[157].'timezones'.size()", equalTo(2))
                .body("[157].'timezones'", hasItems("UTC-04:00", "UTC+01:00"))
                .body("[157].'borders'.size()", equalTo(2))
                .body("[157].'borders'", hasItems("BEL", "DEU"))
                .body("[157].'nativeName'", containsString("Nederland"))
                .body("[157].'numericCode'", containsString("528"))
                .body("[157].'currencies'.size()", equalTo(1))
                .body("[157].'currencies'[0].'code'", containsString("EUR"))
                .body("[157].'currencies'[0].'name'", containsString("Euro"))
                .body("[157].'currencies'[0].'symbol'", containsString("€"))
                .body("[157].'languages'.size()", equalTo(1))
                .body("[157].'languages'[0].'iso639_1'", containsString("nl"))
                .body("[157].'languages'[0].'iso639_2'", containsString("nld"))
                .body("[157].'languages'[0].'name'", containsString("Dutch"))
                .body("[157].'languages'[0].'nativeName'", containsString("Nederlands"))
                .body("[157].'translations'.'de'", containsString("Niederlande"))
                .body("[157].'translations'.'es'", containsString("Países Bajos"))
                .body("[157].'translations'.'fr'", containsString("Pays-Bas"))
                .body("[157].'translations'.'ja'", containsString("オランダ"))
                .body("[157].'translations'.'it'", containsString("Paesi Bassi"))
                .body("[157].'translations'.'br'", containsString("Holanda"))
                .body("[157].'translations'.'pt'", containsString("Países Baixos"))
                .body("[157].'translations'.'nl'", containsString("Nederland"))
                .body("[157].'translations'.'hr'", containsString("Nizozemska"))
                .body("[157].'translations'.'fa'", containsString("پادشاهی هلند"))
                .body("[157].'flag'", containsString("https://restcountries.eu/data/nld.svg"))
                .body("[157].'regionalBlocs'.size()", equalTo(1))
                .body("[157].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[157].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[157].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[157].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[157].'cioc'", containsString("NED"))
                .body("[158].'name'", containsString("New Caledonia"))
                .body("[158].'topLevelDomain'.size()", equalTo(1))
                .body("[158].'topLevelDomain'", hasItems(".nc"))
                .body("[158].'alpha2Code'", containsString("NC"))
                .body("[158].'alpha3Code'", containsString("NCL"))
                .body("[158].'callingCodes'.size()", equalTo(1))
                .body("[158].'callingCodes'", hasItems("687"))
                .body("[158].'capital'", containsString("Nouméa"))
                .body("[158].'altSpellings'.size()", equalTo(1))
                .body("[158].'altSpellings'", hasItems("NC"))
                .body("[158].'region'", containsString("Oceania"))
                .body("[158].'subregion'", containsString("Melanesia"))
                .body("[158].'population'", numberMatches(268767.0))
                .body("[158].'latlng'.size()", equalTo(2))
                .body("[158].'latlng'[0]", numberMatches(-21.5))
                .body("[158].'latlng'[1]", numberMatches(165.5))
                .body("[158].'demonym'", containsString("New Caledonian"))
                .body("[158].'area'", numberMatches(18575.0))
                .body("[158].'gini'", nullValue())
                .body("[158].'timezones'.size()", equalTo(1))
                .body("[158].'timezones'", hasItems("UTC+11:00"))
                .body("[158].'borders'.size()", equalTo(0))
                .body("[158].'nativeName'", containsString("Nouvelle-Calédonie"))
                .body("[158].'numericCode'", containsString("540"))
                .body("[158].'currencies'.size()", equalTo(1))
                .body("[158].'currencies'[0].'code'", containsString("XPF"))
                .body("[158].'currencies'[0].'name'", containsString("CFP franc"))
                .body("[158].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[158].'languages'.size()", equalTo(1))
                .body("[158].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[158].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[158].'languages'[0].'name'", containsString("French"))
                .body("[158].'languages'[0].'nativeName'", containsString("français"))
                .body("[158].'translations'.'de'", containsString("Neukaledonien"))
                .body("[158].'translations'.'es'", containsString("Nueva Caledonia"))
                .body("[158].'translations'.'fr'", containsString("Nouvelle-Calédonie"))
                .body("[158].'translations'.'ja'", containsString("ニューカレドニア"))
                .body("[158].'translations'.'it'", containsString("Nuova Caledonia"))
                .body("[158].'translations'.'br'", containsString("Nova Caledônia"))
                .body("[158].'translations'.'pt'", containsString("Nova Caledónia"))
                .body("[158].'translations'.'nl'", containsString("Nieuw-Caledonië"))
                .body("[158].'translations'.'hr'", containsString("Nova Kaledonija"))
                .body("[158].'translations'.'fa'", containsString("کالدونیای جدید"))
                .body("[158].'flag'", containsString("https://restcountries.eu/data/ncl.svg"))
                .body("[158].'regionalBlocs'.size()", equalTo(0))
                .body("[158].'cioc'", containsString(""))
                .body("[159].'name'", containsString("New Zealand"))
                .body("[159].'topLevelDomain'.size()", equalTo(1))
                .body("[159].'topLevelDomain'", hasItems(".nz"))
                .body("[159].'alpha2Code'", containsString("NZ"))
                .body("[159].'alpha3Code'", containsString("NZL"))
                .body("[159].'callingCodes'.size()", equalTo(1))
                .body("[159].'callingCodes'", hasItems("64"))
                .body("[159].'capital'", containsString("Wellington"))
                .body("[159].'altSpellings'.size()", equalTo(2))
                .body("[159].'altSpellings'", hasItems("NZ", "Aotearoa"))
                .body("[159].'region'", containsString("Oceania"))
                .body("[159].'subregion'", containsString("Australia and New Zealand"))
                .body("[159].'population'", numberMatches(4697854.0))
                .body("[159].'latlng'.size()", equalTo(2))
                .body("[159].'latlng'[0]", numberMatches(-41.0))
                .body("[159].'latlng'[1]", numberMatches(174.0))
                .body("[159].'demonym'", containsString("New Zealander"))
                .body("[159].'area'", numberMatches(270467.0))
                .body("[159].'gini'", numberMatches(36.2))
                .body("[159].'timezones'.size()", equalTo(5))
                .body("[159].'timezones'", hasItems("UTC-11:00", "UTC-10:00", "UTC+12:00", "UTC+12:45", "UTC+13:00"))
                .body("[159].'borders'.size()", equalTo(0))
                .body("[159].'nativeName'", containsString("New Zealand"))
                .body("[159].'numericCode'", containsString("554"))
                .body("[159].'currencies'.size()", equalTo(1))
                .body("[159].'currencies'[0].'code'", containsString("NZD"))
                .body("[159].'currencies'[0].'name'", containsString("New Zealand dollar"))
                .body("[159].'currencies'[0].'symbol'", containsString("$"))
                .body("[159].'languages'.size()", equalTo(2))
                .body("[159].'languages'[0].'iso639_1'", containsString("en"))
                .body("[159].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[159].'languages'[0].'name'", containsString("English"))
                .body("[159].'languages'[0].'nativeName'", containsString("English"))
                .body("[159].'languages'[1].'iso639_1'", containsString("mi"))
                .body("[159].'languages'[1].'iso639_2'", containsString("mri"))
                .body("[159].'languages'[1].'name'", containsString("Māori"))
                .body("[159].'languages'[1].'nativeName'", containsString("te reo Māori"))
                .body("[159].'translations'.'de'", containsString("Neuseeland"))
                .body("[159].'translations'.'es'", containsString("Nueva Zelanda"))
                .body("[159].'translations'.'fr'", containsString("Nouvelle-Zélande"))
                .body("[159].'translations'.'ja'", containsString("ニュージーランド"))
                .body("[159].'translations'.'it'", containsString("Nuova Zelanda"))
                .body("[159].'translations'.'br'", containsString("Nova Zelândia"))
                .body("[159].'translations'.'pt'", containsString("Nova Zelândia"))
                .body("[159].'translations'.'nl'", containsString("Nieuw-Zeeland"))
                .body("[159].'translations'.'hr'", containsString("Novi Zeland"))
                .body("[159].'translations'.'fa'", containsString("نیوزیلند"))
                .body("[159].'flag'", containsString("https://restcountries.eu/data/nzl.svg"))
                .body("[159].'regionalBlocs'.size()", equalTo(0))
                .body("[159].'cioc'", containsString("NZL"))
                .body("[160].'name'", containsString("Nicaragua"))
                .body("[160].'topLevelDomain'.size()", equalTo(1))
                .body("[160].'topLevelDomain'", hasItems(".ni"))
                .body("[160].'alpha2Code'", containsString("NI"))
                .body("[160].'alpha3Code'", containsString("NIC"))
                .body("[160].'callingCodes'.size()", equalTo(1))
                .body("[160].'callingCodes'", hasItems("505"))
                .body("[160].'capital'", containsString("Managua"))
                .body("[160].'altSpellings'.size()", equalTo(3))
                .body("[160].'altSpellings'", hasItems("NI", "Republic of Nicaragua", "República de Nicaragua"))
                .body("[160].'region'", containsString("Americas"))
                .body("[160].'subregion'", containsString("Central America"))
                .body("[160].'population'", numberMatches(6262703.0))
                .body("[160].'latlng'.size()", equalTo(2))
                .body("[160].'latlng'[0]", numberMatches(13.0))
                .body("[160].'latlng'[1]", numberMatches(-85.0))
                .body("[160].'demonym'", containsString("Nicaraguan"))
                .body("[160].'area'", numberMatches(130373.0))
                .body("[160].'gini'", numberMatches(40.5))
                .body("[160].'timezones'.size()", equalTo(1))
                .body("[160].'timezones'", hasItems("UTC-06:00"))
                .body("[160].'borders'.size()", equalTo(2))
                .body("[160].'borders'", hasItems("CRI", "HND"))
                .body("[160].'nativeName'", containsString("Nicaragua"))
                .body("[160].'numericCode'", containsString("558"))
                .body("[160].'currencies'.size()", equalTo(1))
                .body("[160].'currencies'[0].'code'", containsString("NIO"))
                .body("[160].'currencies'[0].'name'", containsString("Nicaraguan córdoba"))
                .body("[160].'currencies'[0].'symbol'", containsString("C$"))
                .body("[160].'languages'.size()", equalTo(1))
                .body("[160].'languages'[0].'iso639_1'", containsString("es"))
                .body("[160].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[160].'languages'[0].'name'", containsString("Spanish"))
                .body("[160].'languages'[0].'nativeName'", containsString("Español"))
                .body("[160].'translations'.'de'", containsString("Nicaragua"))
                .body("[160].'translations'.'es'", containsString("Nicaragua"))
                .body("[160].'translations'.'fr'", containsString("Nicaragua"))
                .body("[160].'translations'.'ja'", containsString("ニカラグア"))
                .body("[160].'translations'.'it'", containsString("Nicaragua"))
                .body("[160].'translations'.'br'", containsString("Nicarágua"))
                .body("[160].'translations'.'pt'", containsString("Nicarágua"))
                .body("[160].'translations'.'nl'", containsString("Nicaragua"))
                .body("[160].'translations'.'hr'", containsString("Nikaragva"))
                .body("[160].'translations'.'fa'", containsString("نیکاراگوئه"))
                .body("[160].'flag'", containsString("https://restcountries.eu/data/nic.svg"))
                .body("[160].'regionalBlocs'.size()", equalTo(1))
                .body("[160].'regionalBlocs'[0].'acronym'", containsString("CAIS"))
                .body("[160].'regionalBlocs'[0].'name'", containsString("Central American Integration System"))
                .body("[160].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(1))
                .body("[160].'regionalBlocs'[0].'otherAcronyms'", hasItems("SICA"))
                .body("[160].'regionalBlocs'[0].'otherNames'.size()", equalTo(1))
                .body("[160].'regionalBlocs'[0].'otherNames'", hasItems("Sistema de la Integración Centroamericana,"))
                .body("[160].'cioc'", containsString("NCA"))
                .body("[161].'name'", containsString("Niger"))
                .body("[161].'topLevelDomain'.size()", equalTo(1))
                .body("[161].'topLevelDomain'", hasItems(".ne"))
                .body("[161].'alpha2Code'", containsString("NE"))
                .body("[161].'alpha3Code'", containsString("NER"))
                .body("[161].'callingCodes'.size()", equalTo(1))
                .body("[161].'callingCodes'", hasItems("227"))
                .body("[161].'capital'", containsString("Niamey"))
                .body("[161].'altSpellings'.size()", equalTo(4))
                .body("[161].'altSpellings'", hasItems("NE", "Nijar", "Republic of Niger", "République du Niger"))
                .body("[161].'region'", containsString("Africa"))
                .body("[161].'subregion'", containsString("Western Africa"))
                .body("[161].'population'", numberMatches(2.0715E7))
                .body("[161].'latlng'.size()", equalTo(2))
                .body("[161].'latlng'[0]", numberMatches(16.0))
                .body("[161].'latlng'[1]", numberMatches(8.0))
                .body("[161].'demonym'", containsString("Nigerien"))
                .body("[161].'area'", numberMatches(1267000.0))
                .body("[161].'gini'", numberMatches(34.6))
                .body("[161].'timezones'.size()", equalTo(1))
                .body("[161].'timezones'", hasItems("UTC+01:00"))
                .body("[161].'borders'.size()", equalTo(7))
                .body("[161].'borders'", hasItems("DZA", "BEN", "BFA", "TCD", "LBY", "MLI", "NGA"))
                .body("[161].'nativeName'", containsString("Niger"))
                .body("[161].'numericCode'", containsString("562"))
                .body("[161].'currencies'.size()", equalTo(1))
                .body("[161].'currencies'[0].'code'", containsString("XOF"))
                .body("[161].'currencies'[0].'name'", containsString("West African CFA franc"))
                .body("[161].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[161].'languages'.size()", equalTo(1))
                .body("[161].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[161].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[161].'languages'[0].'name'", containsString("French"))
                .body("[161].'languages'[0].'nativeName'", containsString("français"))
                .body("[161].'translations'.'de'", containsString("Niger"))
                .body("[161].'translations'.'es'", containsString("Níger"))
                .body("[161].'translations'.'fr'", containsString("Niger"))
                .body("[161].'translations'.'ja'", containsString("ニジェール"))
                .body("[161].'translations'.'it'", containsString("Niger"))
                .body("[161].'translations'.'br'", containsString("Níger"))
                .body("[161].'translations'.'pt'", containsString("Níger"))
                .body("[161].'translations'.'nl'", containsString("Niger"))
                .body("[161].'translations'.'hr'", containsString("Niger"))
                .body("[161].'translations'.'fa'", containsString("نیجر"))
                .body("[161].'flag'", containsString("https://restcountries.eu/data/ner.svg"))
                .body("[161].'regionalBlocs'.size()", equalTo(1))
                .body("[161].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[161].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[161].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[161].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[161].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[161].'cioc'", containsString("NIG"))
                .body("[162].'name'", containsString("Nigeria"))
                .body("[162].'topLevelDomain'.size()", equalTo(1))
                .body("[162].'topLevelDomain'", hasItems(".ng"))
                .body("[162].'alpha2Code'", containsString("NG"))
                .body("[162].'alpha3Code'", containsString("NGA"))
                .body("[162].'callingCodes'.size()", equalTo(1))
                .body("[162].'callingCodes'", hasItems("234"))
                .body("[162].'capital'", containsString("Abuja"))
                .body("[162].'altSpellings'.size()", equalTo(4))
                .body("[162].'altSpellings'", hasItems("NG", "Nijeriya", "Naíjíríà", "Federal Republic of Nigeria"))
                .body("[162].'region'", containsString("Africa"))
                .body("[162].'subregion'", containsString("Western Africa"))
                .body("[162].'population'", numberMatches(1.86988E8))
                .body("[162].'latlng'.size()", equalTo(2))
                .body("[162].'latlng'[0]", numberMatches(10.0))
                .body("[162].'latlng'[1]", numberMatches(8.0))
                .body("[162].'demonym'", containsString("Nigerian"))
                .body("[162].'area'", numberMatches(923768.0))
                .body("[162].'gini'", numberMatches(48.8))
                .body("[162].'timezones'.size()", equalTo(1))
                .body("[162].'timezones'", hasItems("UTC+01:00"))
                .body("[162].'borders'.size()", equalTo(4))
                .body("[162].'borders'", hasItems("BEN", "CMR", "TCD", "NER"))
                .body("[162].'nativeName'", containsString("Nigeria"))
                .body("[162].'numericCode'", containsString("566"))
                .body("[162].'currencies'.size()", equalTo(1))
                .body("[162].'currencies'[0].'code'", containsString("NGN"))
                .body("[162].'currencies'[0].'name'", containsString("Nigerian naira"))
                .body("[162].'currencies'[0].'symbol'", containsString("₦"))
                .body("[162].'languages'.size()", equalTo(1))
                .body("[162].'languages'[0].'iso639_1'", containsString("en"))
                .body("[162].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[162].'languages'[0].'name'", containsString("English"))
                .body("[162].'languages'[0].'nativeName'", containsString("English"))
                .body("[162].'translations'.'de'", containsString("Nigeria"))
                .body("[162].'translations'.'es'", containsString("Nigeria"))
                .body("[162].'translations'.'fr'", containsString("Nigéria"))
                .body("[162].'translations'.'ja'", containsString("ナイジェリア"))
                .body("[162].'translations'.'it'", containsString("Nigeria"))
                .body("[162].'translations'.'br'", containsString("Nigéria"))
                .body("[162].'translations'.'pt'", containsString("Nigéria"))
                .body("[162].'translations'.'nl'", containsString("Nigeria"))
                .body("[162].'translations'.'hr'", containsString("Nigerija"))
                .body("[162].'translations'.'fa'", containsString("نیجریه"))
                .body("[162].'flag'", containsString("https://restcountries.eu/data/nga.svg"))
                .body("[162].'regionalBlocs'.size()", equalTo(1))
                .body("[162].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[162].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[162].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[162].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[162].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[162].'cioc'", containsString("NGR"))
                .body("[163].'name'", containsString("Niue"))
                .body("[163].'topLevelDomain'.size()", equalTo(1))
                .body("[163].'topLevelDomain'", hasItems(".nu"))
                .body("[163].'alpha2Code'", containsString("NU"))
                .body("[163].'alpha3Code'", containsString("NIU"))
                .body("[163].'callingCodes'.size()", equalTo(1))
                .body("[163].'callingCodes'", hasItems("683"))
                .body("[163].'capital'", containsString("Alofi"))
                .body("[163].'altSpellings'.size()", equalTo(1))
                .body("[163].'altSpellings'", hasItems("NU"))
                .body("[163].'region'", containsString("Oceania"))
                .body("[163].'subregion'", containsString("Polynesia"))
                .body("[163].'population'", numberMatches(1470.0))
                .body("[163].'latlng'.size()", equalTo(2))
                .body("[163].'latlng'[0]", numberMatches(-19.03333333))
                .body("[163].'latlng'[1]", numberMatches(-169.86666666))
                .body("[163].'demonym'", containsString("Niuean"))
                .body("[163].'area'", numberMatches(260.0))
                .body("[163].'gini'", nullValue())
                .body("[163].'timezones'.size()", equalTo(1))
                .body("[163].'timezones'", hasItems("UTC-11:00"))
                .body("[163].'borders'.size()", equalTo(0))
                .body("[163].'nativeName'", containsString("Niuē"))
                .body("[163].'numericCode'", containsString("570"))
                .body("[163].'currencies'.size()", equalTo(2))
                .body("[163].'currencies'[0].'code'", containsString("NZD"))
                .body("[163].'currencies'[0].'name'", containsString("New Zealand dollar"))
                .body("[163].'currencies'[0].'symbol'", containsString("$"))
                .body("[163].'currencies'[1].'code'", containsString("(none)"))
                .body("[163].'currencies'[1].'name'", containsString("Niue dollar"))
                .body("[163].'currencies'[1].'symbol'", containsString("$"))
                .body("[163].'languages'.size()", equalTo(1))
                .body("[163].'languages'[0].'iso639_1'", containsString("en"))
                .body("[163].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[163].'languages'[0].'name'", containsString("English"))
                .body("[163].'languages'[0].'nativeName'", containsString("English"))
                .body("[163].'translations'.'de'", containsString("Niue"))
                .body("[163].'translations'.'es'", containsString("Niue"))
                .body("[163].'translations'.'fr'", containsString("Niue"))
                .body("[163].'translations'.'ja'", containsString("ニウエ"))
                .body("[163].'translations'.'it'", containsString("Niue"))
                .body("[163].'translations'.'br'", containsString("Niue"))
                .body("[163].'translations'.'pt'", containsString("Niue"))
                .body("[163].'translations'.'nl'", containsString("Niue"))
                .body("[163].'translations'.'hr'", containsString("Niue"))
                .body("[163].'translations'.'fa'", containsString("نیووی"))
                .body("[163].'flag'", containsString("https://restcountries.eu/data/niu.svg"))
                .body("[163].'regionalBlocs'.size()", equalTo(0))
                .body("[163].'cioc'", containsString(""))
                .body("[164].'name'", containsString("Norfolk Island"))
                .body("[164].'topLevelDomain'.size()", equalTo(1))
                .body("[164].'topLevelDomain'", hasItems(".nf"))
                .body("[164].'alpha2Code'", containsString("NF"))
                .body("[164].'alpha3Code'", containsString("NFK"))
                .body("[164].'callingCodes'.size()", equalTo(1))
                .body("[164].'callingCodes'", hasItems("672"))
                .body("[164].'capital'", containsString("Kingston"))
                .body("[164].'altSpellings'.size()", equalTo(3))
                .body("[164].'altSpellings'", hasItems("NF", "Territory of Norfolk Island", "Teratri of Norf'k Ailen"))
                .body("[164].'region'", containsString("Oceania"))
                .body("[164].'subregion'", containsString("Australia and New Zealand"))
                .body("[164].'population'", numberMatches(2302.0))
                .body("[164].'latlng'.size()", equalTo(2))
                .body("[164].'latlng'[0]", numberMatches(-29.03333333))
                .body("[164].'latlng'[1]", numberMatches(167.95))
                .body("[164].'demonym'", containsString("Norfolk Islander"))
                .body("[164].'area'", numberMatches(36.0))
                .body("[164].'gini'", nullValue())
                .body("[164].'timezones'.size()", equalTo(1))
                .body("[164].'timezones'", hasItems("UTC+11:30"))
                .body("[164].'borders'.size()", equalTo(0))
                .body("[164].'nativeName'", containsString("Norfolk Island"))
                .body("[164].'numericCode'", containsString("574"))
                .body("[164].'currencies'.size()", equalTo(1))
                .body("[164].'currencies'[0].'code'", containsString("AUD"))
                .body("[164].'currencies'[0].'name'", containsString("Australian dollar"))
                .body("[164].'currencies'[0].'symbol'", containsString("$"))
                .body("[164].'languages'.size()", equalTo(1))
                .body("[164].'languages'[0].'iso639_1'", containsString("en"))
                .body("[164].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[164].'languages'[0].'name'", containsString("English"))
                .body("[164].'languages'[0].'nativeName'", containsString("English"))
                .body("[164].'translations'.'de'", containsString("Norfolkinsel"))
                .body("[164].'translations'.'es'", containsString("Isla de Norfolk"))
                .body("[164].'translations'.'fr'", containsString("Île de Norfolk"))
                .body("[164].'translations'.'ja'", containsString("ノーフォーク島"))
                .body("[164].'translations'.'it'", containsString("Isola Norfolk"))
                .body("[164].'translations'.'br'", containsString("Ilha Norfolk"))
                .body("[164].'translations'.'pt'", containsString("Ilha Norfolk"))
                .body("[164].'translations'.'nl'", containsString("Norfolkeiland"))
                .body("[164].'translations'.'hr'", containsString("Otok Norfolk"))
                .body("[164].'translations'.'fa'", containsString("جزیره نورفک"))
                .body("[164].'flag'", containsString("https://restcountries.eu/data/nfk.svg"))
                .body("[164].'regionalBlocs'.size()", equalTo(0))
                .body("[164].'cioc'", containsString(""))
                .body("[165].'name'", containsString("Korea (Democratic People's Republic of)"))
                .body("[165].'topLevelDomain'.size()", equalTo(1))
                .body("[165].'topLevelDomain'", hasItems(".kp"))
                .body("[165].'alpha2Code'", containsString("KP"))
                .body("[165].'alpha3Code'", containsString("PRK"))
                .body("[165].'callingCodes'.size()", equalTo(1))
                .body("[165].'callingCodes'", hasItems("850"))
                .body("[165].'capital'", containsString("Pyongyang"))
                .body("[165].'altSpellings'.size()", equalTo(4))
                .body("[165].'altSpellings'", hasItems("KP", "Democratic People's Republic of Korea", "조선민주주의인민공화국", "Chosŏn Minjujuŭi Inmin Konghwaguk"))
                .body("[165].'region'", containsString("Asia"))
                .body("[165].'subregion'", containsString("Eastern Asia"))
                .body("[165].'population'", numberMatches(2.5281E7))
                .body("[165].'latlng'.size()", equalTo(2))
                .body("[165].'latlng'[0]", numberMatches(40.0))
                .body("[165].'latlng'[1]", numberMatches(127.0))
                .body("[165].'demonym'", containsString("North Korean"))
                .body("[165].'area'", numberMatches(120538.0))
                .body("[165].'gini'", nullValue())
                .body("[165].'timezones'.size()", equalTo(1))
                .body("[165].'timezones'", hasItems("UTC+09:00"))
                .body("[165].'borders'.size()", equalTo(3))
                .body("[165].'borders'", hasItems("CHN", "KOR", "RUS"))
                .body("[165].'nativeName'", containsString("북한"))
                .body("[165].'numericCode'", containsString("408"))
                .body("[165].'currencies'.size()", equalTo(1))
                .body("[165].'currencies'[0].'code'", containsString("KPW"))
                .body("[165].'currencies'[0].'name'", containsString("North Korean won"))
                .body("[165].'currencies'[0].'symbol'", containsString("₩"))
                .body("[165].'languages'.size()", equalTo(1))
                .body("[165].'languages'[0].'iso639_1'", containsString("ko"))
                .body("[165].'languages'[0].'iso639_2'", containsString("kor"))
                .body("[165].'languages'[0].'name'", containsString("Korean"))
                .body("[165].'languages'[0].'nativeName'", containsString("한국어"))
                .body("[165].'translations'.'de'", containsString("Nordkorea"))
                .body("[165].'translations'.'es'", containsString("Corea del Norte"))
                .body("[165].'translations'.'fr'", containsString("Corée du Nord"))
                .body("[165].'translations'.'ja'", containsString("朝鮮民主主義人民共和国"))
                .body("[165].'translations'.'it'", containsString("Corea del Nord"))
                .body("[165].'translations'.'br'", containsString("Coreia do Norte"))
                .body("[165].'translations'.'pt'", containsString("Coreia do Norte"))
                .body("[165].'translations'.'nl'", containsString("Noord-Korea"))
                .body("[165].'translations'.'hr'", containsString("Sjeverna Koreja"))
                .body("[165].'translations'.'fa'", containsString("کره جنوبی"))
                .body("[165].'flag'", containsString("https://restcountries.eu/data/prk.svg"))
                .body("[165].'regionalBlocs'.size()", equalTo(0))
                .body("[165].'cioc'", containsString("PRK"))
                .body("[166].'name'", containsString("Northern Mariana Islands"))
                .body("[166].'topLevelDomain'.size()", equalTo(1))
                .body("[166].'topLevelDomain'", hasItems(".mp"))
                .body("[166].'alpha2Code'", containsString("MP"))
                .body("[166].'alpha3Code'", containsString("MNP"))
                .body("[166].'callingCodes'.size()", equalTo(1))
                .body("[166].'callingCodes'", hasItems("1"))
                .body("[166].'capital'", containsString("Saipan"))
                .body("[166].'altSpellings'.size()", equalTo(3))
                .body("[166].'altSpellings'", hasItems("MP", "Commonwealth of the Northern Mariana Islands", "Sankattan Siha Na Islas Mariånas"))
                .body("[166].'region'", containsString("Oceania"))
                .body("[166].'subregion'", containsString("Micronesia"))
                .body("[166].'population'", numberMatches(56940.0))
                .body("[166].'latlng'.size()", equalTo(2))
                .body("[166].'latlng'[0]", numberMatches(15.2))
                .body("[166].'latlng'[1]", numberMatches(145.75))
                .body("[166].'demonym'", containsString("American"))
                .body("[166].'area'", numberMatches(464.0))
                .body("[166].'gini'", nullValue())
                .body("[166].'timezones'.size()", equalTo(1))
                .body("[166].'timezones'", hasItems("UTC+10:00"))
                .body("[166].'borders'.size()", equalTo(0))
                .body("[166].'nativeName'", containsString("Northern Mariana Islands"))
                .body("[166].'numericCode'", containsString("580"))
                .body("[166].'currencies'.size()", equalTo(1))
                .body("[166].'currencies'[0].'code'", containsString("USD"))
                .body("[166].'currencies'[0].'name'", containsString("United States dollar"))
                .body("[166].'currencies'[0].'symbol'", containsString("$"))
                .body("[166].'languages'.size()", equalTo(2))
                .body("[166].'languages'[0].'iso639_1'", containsString("en"))
                .body("[166].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[166].'languages'[0].'name'", containsString("English"))
                .body("[166].'languages'[0].'nativeName'", containsString("English"))
                .body("[166].'languages'[1].'iso639_1'", containsString("ch"))
                .body("[166].'languages'[1].'iso639_2'", containsString("cha"))
                .body("[166].'languages'[1].'name'", containsString("Chamorro"))
                .body("[166].'languages'[1].'nativeName'", containsString("Chamoru"))
                .body("[166].'translations'.'de'", containsString("Nördliche Marianen"))
                .body("[166].'translations'.'es'", containsString("Islas Marianas del Norte"))
                .body("[166].'translations'.'fr'", containsString("Îles Mariannes du Nord"))
                .body("[166].'translations'.'ja'", containsString("北マリアナ諸島"))
                .body("[166].'translations'.'it'", containsString("Isole Marianne Settentrionali"))
                .body("[166].'translations'.'br'", containsString("Ilhas Marianas"))
                .body("[166].'translations'.'pt'", containsString("Ilhas Marianas"))
                .body("[166].'translations'.'nl'", containsString("Noordelijke Marianeneilanden"))
                .body("[166].'translations'.'hr'", containsString("Sjevernomarijanski otoci"))
                .body("[166].'translations'.'fa'", containsString("جزایر ماریانای شمالی"))
                .body("[166].'flag'", containsString("https://restcountries.eu/data/mnp.svg"))
                .body("[166].'regionalBlocs'.size()", equalTo(0))
                .body("[166].'cioc'", containsString(""))
                .body("[167].'name'", containsString("Norway"))
                .body("[167].'topLevelDomain'.size()", equalTo(1))
                .body("[167].'topLevelDomain'", hasItems(".no"))
                .body("[167].'alpha2Code'", containsString("NO"))
                .body("[167].'alpha3Code'", containsString("NOR"))
                .body("[167].'callingCodes'.size()", equalTo(1))
                .body("[167].'callingCodes'", hasItems("47"))
                .body("[167].'capital'", containsString("Oslo"))
                .body("[167].'altSpellings'.size()", equalTo(6))
                .body("[167].'altSpellings'", hasItems("NO", "Norge", "Noreg", "Kingdom of Norway", "Kongeriket Norge", "Kongeriket Noreg"))
                .body("[167].'region'", containsString("Europe"))
                .body("[167].'subregion'", containsString("Northern Europe"))
                .body("[167].'population'", numberMatches(5223256.0))
                .body("[167].'latlng'.size()", equalTo(2))
                .body("[167].'latlng'[0]", numberMatches(62.0))
                .body("[167].'latlng'[1]", numberMatches(10.0))
                .body("[167].'demonym'", containsString("Norwegian"))
                .body("[167].'area'", numberMatches(323802.0))
                .body("[167].'gini'", numberMatches(25.8))
                .body("[167].'timezones'.size()", equalTo(1))
                .body("[167].'timezones'", hasItems("UTC+01:00"))
                .body("[167].'borders'.size()", equalTo(3))
                .body("[167].'borders'", hasItems("FIN", "SWE", "RUS"))
                .body("[167].'nativeName'", containsString("Norge"))
                .body("[167].'numericCode'", containsString("578"))
                .body("[167].'currencies'.size()", equalTo(1))
                .body("[167].'currencies'[0].'code'", containsString("NOK"))
                .body("[167].'currencies'[0].'name'", containsString("Norwegian krone"))
                .body("[167].'currencies'[0].'symbol'", containsString("kr"))
                .body("[167].'languages'.size()", equalTo(3))
                .body("[167].'languages'[0].'iso639_1'", containsString("no"))
                .body("[167].'languages'[0].'iso639_2'", containsString("nor"))
                .body("[167].'languages'[0].'name'", containsString("Norwegian"))
                .body("[167].'languages'[0].'nativeName'", containsString("Norsk"))
                .body("[167].'languages'[1].'iso639_1'", containsString("nb"))
                .body("[167].'languages'[1].'iso639_2'", containsString("nob"))
                .body("[167].'languages'[1].'name'", containsString("Norwegian Bokmål"))
                .body("[167].'languages'[1].'nativeName'", containsString("Norsk bokmål"))
                .body("[167].'languages'[2].'iso639_1'", containsString("nn"))
                .body("[167].'languages'[2].'iso639_2'", containsString("nno"))
                .body("[167].'languages'[2].'name'", containsString("Norwegian Nynorsk"))
                .body("[167].'languages'[2].'nativeName'", containsString("Norsk nynorsk"))
                .body("[167].'translations'.'de'", containsString("Norwegen"))
                .body("[167].'translations'.'es'", containsString("Noruega"))
                .body("[167].'translations'.'fr'", containsString("Norvège"))
                .body("[167].'translations'.'ja'", containsString("ノルウェー"))
                .body("[167].'translations'.'it'", containsString("Norvegia"))
                .body("[167].'translations'.'br'", containsString("Noruega"))
                .body("[167].'translations'.'pt'", containsString("Noruega"))
                .body("[167].'translations'.'nl'", containsString("Noorwegen"))
                .body("[167].'translations'.'hr'", containsString("Norveška"))
                .body("[167].'translations'.'fa'", containsString("نروژ"))
                .body("[167].'flag'", containsString("https://restcountries.eu/data/nor.svg"))
                .body("[167].'regionalBlocs'.size()", equalTo(1))
                .body("[167].'regionalBlocs'[0].'acronym'", containsString("EFTA"))
                .body("[167].'regionalBlocs'[0].'name'", containsString("European Free Trade Association"))
                .body("[167].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[167].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[167].'cioc'", containsString("NOR"))
                .body("[168].'name'", containsString("Oman"))
                .body("[168].'topLevelDomain'.size()", equalTo(1))
                .body("[168].'topLevelDomain'", hasItems(".om"))
                .body("[168].'alpha2Code'", containsString("OM"))
                .body("[168].'alpha3Code'", containsString("OMN"))
                .body("[168].'callingCodes'.size()", equalTo(1))
                .body("[168].'callingCodes'", hasItems("968"))
                .body("[168].'capital'", containsString("Muscat"))
                .body("[168].'altSpellings'.size()", equalTo(3))
                .body("[168].'altSpellings'", hasItems("OM", "Sultanate of Oman", "Salṭanat ʻUmān"))
                .body("[168].'region'", containsString("Asia"))
                .body("[168].'subregion'", containsString("Western Asia"))
                .body("[168].'population'", numberMatches(4420133.0))
                .body("[168].'latlng'.size()", equalTo(2))
                .body("[168].'latlng'[0]", numberMatches(21.0))
                .body("[168].'latlng'[1]", numberMatches(57.0))
                .body("[168].'demonym'", containsString("Omani"))
                .body("[168].'area'", numberMatches(309500.0))
                .body("[168].'gini'", nullValue())
                .body("[168].'timezones'.size()", equalTo(1))
                .body("[168].'timezones'", hasItems("UTC+04:00"))
                .body("[168].'borders'.size()", equalTo(3))
                .body("[168].'borders'", hasItems("SAU", "ARE", "YEM"))
                .body("[168].'nativeName'", containsString("عمان"))
                .body("[168].'numericCode'", containsString("512"))
                .body("[168].'currencies'.size()", equalTo(1))
                .body("[168].'currencies'[0].'code'", containsString("OMR"))
                .body("[168].'currencies'[0].'name'", containsString("Omani rial"))
                .body("[168].'currencies'[0].'symbol'", containsString("ر.ع."))
                .body("[168].'languages'.size()", equalTo(1))
                .body("[168].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[168].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[168].'languages'[0].'name'", containsString("Arabic"))
                .body("[168].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[168].'translations'.'de'", containsString("Oman"))
                .body("[168].'translations'.'es'", containsString("Omán"))
                .body("[168].'translations'.'fr'", containsString("Oman"))
                .body("[168].'translations'.'ja'", containsString("オマーン"))
                .body("[168].'translations'.'it'", containsString("oman"))
                .body("[168].'translations'.'br'", containsString("Omã"))
                .body("[168].'translations'.'pt'", containsString("Omã"))
                .body("[168].'translations'.'nl'", containsString("Oman"))
                .body("[168].'translations'.'hr'", containsString("Oman"))
                .body("[168].'translations'.'fa'", containsString("عمان"))
                .body("[168].'flag'", containsString("https://restcountries.eu/data/omn.svg"))
                .body("[168].'regionalBlocs'.size()", equalTo(1))
                .body("[168].'regionalBlocs'[0].'acronym'", containsString("AL"))
                .body("[168].'regionalBlocs'[0].'name'", containsString("Arab League"))
                .body("[168].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[168].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[168].'regionalBlocs'[0].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[168].'cioc'", containsString("OMA"))
                .body("[169].'name'", containsString("Pakistan"))
                .body("[169].'topLevelDomain'.size()", equalTo(1))
                .body("[169].'topLevelDomain'", hasItems(".pk"))
                .body("[169].'alpha2Code'", containsString("PK"))
                .body("[169].'alpha3Code'", containsString("PAK"))
                .body("[169].'callingCodes'.size()", equalTo(1))
                .body("[169].'callingCodes'", hasItems("92"))
                .body("[169].'capital'", containsString("Islamabad"))
                .body("[169].'altSpellings'.size()", equalTo(4))
                .body("[169].'altSpellings'", hasItems("PK", "Pākistān", "Islamic Republic of Pakistan", "Islāmī Jumhūriya'eh Pākistān"))
                .body("[169].'region'", containsString("Asia"))
                .body("[169].'subregion'", containsString("Southern Asia"))
                .body("[169].'population'", numberMatches(1.94125062E8))
                .body("[169].'latlng'.size()", equalTo(2))
                .body("[169].'latlng'[0]", numberMatches(30.0))
                .body("[169].'latlng'[1]", numberMatches(70.0))
                .body("[169].'demonym'", containsString("Pakistani"))
                .body("[169].'area'", numberMatches(881912.0))
                .body("[169].'gini'", numberMatches(30.0))
                .body("[169].'timezones'.size()", equalTo(1))
                .body("[169].'timezones'", hasItems("UTC+05:00"))
                .body("[169].'borders'.size()", equalTo(4))
                .body("[169].'borders'", hasItems("AFG", "CHN", "IND", "IRN"))
                .body("[169].'nativeName'", containsString("Pakistan"))
                .body("[169].'numericCode'", containsString("586"))
                .body("[169].'currencies'.size()", equalTo(1))
                .body("[169].'currencies'[0].'code'", containsString("PKR"))
                .body("[169].'currencies'[0].'name'", containsString("Pakistani rupee"))
                .body("[169].'currencies'[0].'symbol'", containsString("₨"))
                .body("[169].'languages'.size()", equalTo(2))
                .body("[169].'languages'[0].'iso639_1'", containsString("en"))
                .body("[169].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[169].'languages'[0].'name'", containsString("English"))
                .body("[169].'languages'[0].'nativeName'", containsString("English"))
                .body("[169].'languages'[1].'iso639_1'", containsString("ur"))
                .body("[169].'languages'[1].'iso639_2'", containsString("urd"))
                .body("[169].'languages'[1].'name'", containsString("Urdu"))
                .body("[169].'languages'[1].'nativeName'", containsString("اردو"))
                .body("[169].'translations'.'de'", containsString("Pakistan"))
                .body("[169].'translations'.'es'", containsString("Pakistán"))
                .body("[169].'translations'.'fr'", containsString("Pakistan"))
                .body("[169].'translations'.'ja'", containsString("パキスタン"))
                .body("[169].'translations'.'it'", containsString("Pakistan"))
                .body("[169].'translations'.'br'", containsString("Paquistão"))
                .body("[169].'translations'.'pt'", containsString("Paquistão"))
                .body("[169].'translations'.'nl'", containsString("Pakistan"))
                .body("[169].'translations'.'hr'", containsString("Pakistan"))
                .body("[169].'translations'.'fa'", containsString("پاکستان"))
                .body("[169].'flag'", containsString("https://restcountries.eu/data/pak.svg"))
                .body("[169].'regionalBlocs'.size()", equalTo(1))
                .body("[169].'regionalBlocs'[0].'acronym'", containsString("SAARC"))
                .body("[169].'regionalBlocs'[0].'name'", containsString("South Asian Association for Regional Cooperation"))
                .body("[169].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[169].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[169].'cioc'", containsString("PAK"))
                .body("[170].'name'", containsString("Palau"))
                .body("[170].'topLevelDomain'.size()", equalTo(1))
                .body("[170].'topLevelDomain'", hasItems(".pw"))
                .body("[170].'alpha2Code'", containsString("PW"))
                .body("[170].'alpha3Code'", containsString("PLW"))
                .body("[170].'callingCodes'.size()", equalTo(1))
                .body("[170].'callingCodes'", hasItems("680"))
                .body("[170].'capital'", containsString("Ngerulmud"))
                .body("[170].'altSpellings'.size()", equalTo(3))
                .body("[170].'altSpellings'", hasItems("PW", "Republic of Palau", "Beluu er a Belau"))
                .body("[170].'region'", containsString("Oceania"))
                .body("[170].'subregion'", containsString("Micronesia"))
                .body("[170].'population'", numberMatches(17950.0))
                .body("[170].'latlng'.size()", equalTo(2))
                .body("[170].'latlng'[0]", numberMatches(7.5))
                .body("[170].'latlng'[1]", numberMatches(134.5))
                .body("[170].'demonym'", containsString("Palauan"))
                .body("[170].'area'", numberMatches(459.0))
                .body("[170].'gini'", nullValue())
                .body("[170].'timezones'.size()", equalTo(1))
                .body("[170].'timezones'", hasItems("UTC+09:00"))
                .body("[170].'borders'.size()", equalTo(0))
                .body("[170].'nativeName'", containsString("Palau"))
                .body("[170].'numericCode'", containsString("585"))
                .body("[170].'currencies'.size()", equalTo(2))
                .body("[170].'currencies'[0].'code'", containsString("(none)"))
                .body("[170].'currencies'[0].'name'", containsString("[E]"))
                .body("[170].'currencies'[0].'symbol'", containsString("$"))
                .body("[170].'currencies'[1].'code'", containsString("USD"))
                .body("[170].'currencies'[1].'name'", containsString("United States dollar"))
                .body("[170].'currencies'[1].'symbol'", containsString("$"))
                .body("[170].'languages'.size()", equalTo(1))
                .body("[170].'languages'[0].'iso639_1'", containsString("en"))
                .body("[170].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[170].'languages'[0].'name'", containsString("English"))
                .body("[170].'languages'[0].'nativeName'", containsString("English"))
                .body("[170].'translations'.'de'", containsString("Palau"))
                .body("[170].'translations'.'es'", containsString("Palau"))
                .body("[170].'translations'.'fr'", containsString("Palaos"))
                .body("[170].'translations'.'ja'", containsString("パラオ"))
                .body("[170].'translations'.'it'", containsString("Palau"))
                .body("[170].'translations'.'br'", containsString("Palau"))
                .body("[170].'translations'.'pt'", containsString("Palau"))
                .body("[170].'translations'.'nl'", containsString("Palau"))
                .body("[170].'translations'.'hr'", containsString("Palau"))
                .body("[170].'translations'.'fa'", containsString("پالائو"))
                .body("[170].'flag'", containsString("https://restcountries.eu/data/plw.svg"))
                .body("[170].'regionalBlocs'.size()", equalTo(0))
                .body("[170].'cioc'", containsString("PLW"))
                .body("[171].'name'", containsString("Palestine, State of"))
                .body("[171].'topLevelDomain'.size()", equalTo(1))
                .body("[171].'topLevelDomain'", hasItems(".ps"))
                .body("[171].'alpha2Code'", containsString("PS"))
                .body("[171].'alpha3Code'", containsString("PSE"))
                .body("[171].'callingCodes'.size()", equalTo(1))
                .body("[171].'callingCodes'", hasItems("970"))
                .body("[171].'capital'", containsString("Ramallah"))
                .body("[171].'altSpellings'.size()", equalTo(3))
                .body("[171].'altSpellings'", hasItems("PS", "State of Palestine", "Dawlat Filasṭin"))
                .body("[171].'region'", containsString("Asia"))
                .body("[171].'subregion'", containsString("Western Asia"))
                .body("[171].'population'", numberMatches(4682467.0))
                .body("[171].'latlng'.size()", equalTo(2))
                .body("[171].'latlng'[0]", numberMatches(31.9))
                .body("[171].'latlng'[1]", numberMatches(35.2))
                .body("[171].'demonym'", containsString("Palestinian"))
                .body("[171].'area'", nullValue())
                .body("[171].'gini'", numberMatches(35.5))
                .body("[171].'timezones'.size()", equalTo(1))
                .body("[171].'timezones'", hasItems("UTC+02:00"))
                .body("[171].'borders'.size()", equalTo(3))
                .body("[171].'borders'", hasItems("ISR", "EGY", "JOR"))
                .body("[171].'nativeName'", containsString("فلسطين"))
                .body("[171].'numericCode'", containsString("275"))
                .body("[171].'currencies'.size()", equalTo(1))
                .body("[171].'currencies'[0].'code'", containsString("ILS"))
                .body("[171].'currencies'[0].'name'", containsString("Israeli new sheqel"))
                .body("[171].'currencies'[0].'symbol'", containsString("₪"))
                .body("[171].'languages'.size()", equalTo(1))
                .body("[171].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[171].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[171].'languages'[0].'name'", containsString("Arabic"))
                .body("[171].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[171].'translations'.'de'", containsString("Palästina"))
                .body("[171].'translations'.'es'", containsString("Palestina"))
                .body("[171].'translations'.'fr'", containsString("Palestine"))
                .body("[171].'translations'.'ja'", containsString("パレスチナ"))
                .body("[171].'translations'.'it'", containsString("Palestina"))
                .body("[171].'translations'.'br'", containsString("Palestina"))
                .body("[171].'translations'.'pt'", containsString("Palestina"))
                .body("[171].'translations'.'nl'", containsString("Palestijnse gebieden"))
                .body("[171].'translations'.'hr'", containsString("Palestina"))
                .body("[171].'translations'.'fa'", containsString("فلسطین"))
                .body("[171].'flag'", containsString("https://restcountries.eu/data/pse.svg"))
                .body("[171].'regionalBlocs'.size()", equalTo(1))
                .body("[171].'regionalBlocs'[0].'acronym'", containsString("AL"))
                .body("[171].'regionalBlocs'[0].'name'", containsString("Arab League"))
                .body("[171].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[171].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[171].'regionalBlocs'[0].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[171].'cioc'", containsString("PLE"))
                .body("[172].'name'", containsString("Panama"))
                .body("[172].'topLevelDomain'.size()", equalTo(1))
                .body("[172].'topLevelDomain'", hasItems(".pa"))
                .body("[172].'alpha2Code'", containsString("PA"))
                .body("[172].'alpha3Code'", containsString("PAN"))
                .body("[172].'callingCodes'.size()", equalTo(1))
                .body("[172].'callingCodes'", hasItems("507"))
                .body("[172].'capital'", containsString("Panama City"))
                .body("[172].'altSpellings'.size()", equalTo(3))
                .body("[172].'altSpellings'", hasItems("PA", "Republic of Panama", "República de Panamá"))
                .body("[172].'region'", containsString("Americas"))
                .body("[172].'subregion'", containsString("Central America"))
                .body("[172].'population'", numberMatches(3814672.0))
                .body("[172].'latlng'.size()", equalTo(2))
                .body("[172].'latlng'[0]", numberMatches(9.0))
                .body("[172].'latlng'[1]", numberMatches(-80.0))
                .body("[172].'demonym'", containsString("Panamanian"))
                .body("[172].'area'", numberMatches(75417.0))
                .body("[172].'gini'", numberMatches(51.9))
                .body("[172].'timezones'.size()", equalTo(1))
                .body("[172].'timezones'", hasItems("UTC-05:00"))
                .body("[172].'borders'.size()", equalTo(2))
                .body("[172].'borders'", hasItems("COL", "CRI"))
                .body("[172].'nativeName'", containsString("Panamá"))
                .body("[172].'numericCode'", containsString("591"))
                .body("[172].'currencies'.size()", equalTo(2))
                .body("[172].'currencies'[0].'code'", containsString("PAB"))
                .body("[172].'currencies'[0].'name'", containsString("Panamanian balboa"))
                .body("[172].'currencies'[0].'symbol'", containsString("B/."))
                .body("[172].'currencies'[1].'code'", containsString("USD"))
                .body("[172].'currencies'[1].'name'", containsString("United States dollar"))
                .body("[172].'currencies'[1].'symbol'", containsString("$"))
                .body("[172].'languages'.size()", equalTo(1))
                .body("[172].'languages'[0].'iso639_1'", containsString("es"))
                .body("[172].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[172].'languages'[0].'name'", containsString("Spanish"))
                .body("[172].'languages'[0].'nativeName'", containsString("Español"))
                .body("[172].'translations'.'de'", containsString("Panama"))
                .body("[172].'translations'.'es'", containsString("Panamá"))
                .body("[172].'translations'.'fr'", containsString("Panama"))
                .body("[172].'translations'.'ja'", containsString("パナマ"))
                .body("[172].'translations'.'it'", containsString("Panama"))
                .body("[172].'translations'.'br'", containsString("Panamá"))
                .body("[172].'translations'.'pt'", containsString("Panamá"))
                .body("[172].'translations'.'nl'", containsString("Panama"))
                .body("[172].'translations'.'hr'", containsString("Panama"))
                .body("[172].'translations'.'fa'", containsString("پاناما"))
                .body("[172].'flag'", containsString("https://restcountries.eu/data/pan.svg"))
                .body("[172].'regionalBlocs'.size()", equalTo(1))
                .body("[172].'regionalBlocs'[0].'acronym'", containsString("CAIS"))
                .body("[172].'regionalBlocs'[0].'name'", containsString("Central American Integration System"))
                .body("[172].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(1))
                .body("[172].'regionalBlocs'[0].'otherAcronyms'", hasItems("SICA"))
                .body("[172].'regionalBlocs'[0].'otherNames'.size()", equalTo(1))
                .body("[172].'regionalBlocs'[0].'otherNames'", hasItems("Sistema de la Integración Centroamericana,"))
                .body("[172].'cioc'", containsString("PAN"))
                .body("[173].'name'", containsString("Papua New Guinea"))
                .body("[173].'topLevelDomain'.size()", equalTo(1))
                .body("[173].'topLevelDomain'", hasItems(".pg"))
                .body("[173].'alpha2Code'", containsString("PG"))
                .body("[173].'alpha3Code'", containsString("PNG"))
                .body("[173].'callingCodes'.size()", equalTo(1))
                .body("[173].'callingCodes'", hasItems("675"))
                .body("[173].'capital'", containsString("Port Moresby"))
                .body("[173].'altSpellings'.size()", equalTo(3))
                .body("[173].'altSpellings'", hasItems("PG", "Independent State of Papua New Guinea", "Independen Stet bilong Papua Niugini"))
                .body("[173].'region'", containsString("Oceania"))
                .body("[173].'subregion'", containsString("Melanesia"))
                .body("[173].'population'", numberMatches(8083700.0))
                .body("[173].'latlng'.size()", equalTo(2))
                .body("[173].'latlng'[0]", numberMatches(-6.0))
                .body("[173].'latlng'[1]", numberMatches(147.0))
                .body("[173].'demonym'", containsString("Papua New Guinean"))
                .body("[173].'area'", numberMatches(462840.0))
                .body("[173].'gini'", numberMatches(50.9))
                .body("[173].'timezones'.size()", equalTo(1))
                .body("[173].'timezones'", hasItems("UTC+10:00"))
                .body("[173].'borders'.size()", equalTo(1))
                .body("[173].'borders'", hasItems("IDN"))
                .body("[173].'nativeName'", containsString("Papua Niugini"))
                .body("[173].'numericCode'", containsString("598"))
                .body("[173].'currencies'.size()", equalTo(1))
                .body("[173].'currencies'[0].'code'", containsString("PGK"))
                .body("[173].'currencies'[0].'name'", containsString("Papua New Guinean kina"))
                .body("[173].'currencies'[0].'symbol'", containsString("K"))
                .body("[173].'languages'.size()", equalTo(1))
                .body("[173].'languages'[0].'iso639_1'", containsString("en"))
                .body("[173].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[173].'languages'[0].'name'", containsString("English"))
                .body("[173].'languages'[0].'nativeName'", containsString("English"))
                .body("[173].'translations'.'de'", containsString("Papua-Neuguinea"))
                .body("[173].'translations'.'es'", containsString("Papúa Nueva Guinea"))
                .body("[173].'translations'.'fr'", containsString("Papouasie-Nouvelle-Guinée"))
                .body("[173].'translations'.'ja'", containsString("パプアニューギニア"))
                .body("[173].'translations'.'it'", containsString("Papua Nuova Guinea"))
                .body("[173].'translations'.'br'", containsString("Papua Nova Guiné"))
                .body("[173].'translations'.'pt'", containsString("Papua Nova Guiné"))
                .body("[173].'translations'.'nl'", containsString("Papoea-Nieuw-Guinea"))
                .body("[173].'translations'.'hr'", containsString("Papua Nova Gvineja"))
                .body("[173].'translations'.'fa'", containsString("پاپوآ گینه نو"))
                .body("[173].'flag'", containsString("https://restcountries.eu/data/png.svg"))
                .body("[173].'regionalBlocs'.size()", equalTo(0))
                .body("[173].'cioc'", containsString("PNG"))
                .body("[174].'name'", containsString("Paraguay"))
                .body("[174].'topLevelDomain'.size()", equalTo(1))
                .body("[174].'topLevelDomain'", hasItems(".py"))
                .body("[174].'alpha2Code'", containsString("PY"))
                .body("[174].'alpha3Code'", containsString("PRY"))
                .body("[174].'callingCodes'.size()", equalTo(1))
                .body("[174].'callingCodes'", hasItems("595"))
                .body("[174].'capital'", containsString("Asunción"))
                .body("[174].'altSpellings'.size()", equalTo(4))
                .body("[174].'altSpellings'", hasItems("PY", "Republic of Paraguay", "República del Paraguay", "Tetã Paraguái"))
                .body("[174].'region'", containsString("Americas"))
                .body("[174].'subregion'", containsString("South America"))
                .body("[174].'population'", numberMatches(6854536.0))
                .body("[174].'latlng'.size()", equalTo(2))
                .body("[174].'latlng'[0]", numberMatches(-23.0))
                .body("[174].'latlng'[1]", numberMatches(-58.0))
                .body("[174].'demonym'", containsString("Paraguayan"))
                .body("[174].'area'", numberMatches(406752.0))
                .body("[174].'gini'", numberMatches(52.4))
                .body("[174].'timezones'.size()", equalTo(1))
                .body("[174].'timezones'", hasItems("UTC-04:00"))
                .body("[174].'borders'.size()", equalTo(3))
                .body("[174].'borders'", hasItems("ARG", "BOL", "BRA"))
                .body("[174].'nativeName'", containsString("Paraguay"))
                .body("[174].'numericCode'", containsString("600"))
                .body("[174].'currencies'.size()", equalTo(1))
                .body("[174].'currencies'[0].'code'", containsString("PYG"))
                .body("[174].'currencies'[0].'name'", containsString("Paraguayan guaraní"))
                .body("[174].'currencies'[0].'symbol'", containsString("₲"))
                .body("[174].'languages'.size()", equalTo(2))
                .body("[174].'languages'[0].'iso639_1'", containsString("es"))
                .body("[174].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[174].'languages'[0].'name'", containsString("Spanish"))
                .body("[174].'languages'[0].'nativeName'", containsString("Español"))
                .body("[174].'languages'[1].'iso639_1'", containsString("gn"))
                .body("[174].'languages'[1].'iso639_2'", containsString("grn"))
                .body("[174].'languages'[1].'name'", containsString("Guaraní"))
                .body("[174].'languages'[1].'nativeName'", containsString("Avañe'ẽ"))
                .body("[174].'translations'.'de'", containsString("Paraguay"))
                .body("[174].'translations'.'es'", containsString("Paraguay"))
                .body("[174].'translations'.'fr'", containsString("Paraguay"))
                .body("[174].'translations'.'ja'", containsString("パラグアイ"))
                .body("[174].'translations'.'it'", containsString("Paraguay"))
                .body("[174].'translations'.'br'", containsString("Paraguai"))
                .body("[174].'translations'.'pt'", containsString("Paraguai"))
                .body("[174].'translations'.'nl'", containsString("Paraguay"))
                .body("[174].'translations'.'hr'", containsString("Paragvaj"))
                .body("[174].'translations'.'fa'", containsString("پاراگوئه"))
                .body("[174].'flag'", containsString("https://restcountries.eu/data/pry.svg"))
                .body("[174].'regionalBlocs'.size()", equalTo(1))
                .body("[174].'regionalBlocs'[0].'acronym'", containsString("USAN"))
                .body("[174].'regionalBlocs'[0].'name'", containsString("Union of South American Nations"))
                .body("[174].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(3))
                .body("[174].'regionalBlocs'[0].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[174].'regionalBlocs'[0].'otherNames'.size()", equalTo(4))
                .body("[174].'regionalBlocs'[0].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[174].'cioc'", containsString("PAR"))
                .body("[175].'name'", containsString("Peru"))
                .body("[175].'topLevelDomain'.size()", equalTo(1))
                .body("[175].'topLevelDomain'", hasItems(".pe"))
                .body("[175].'alpha2Code'", containsString("PE"))
                .body("[175].'alpha3Code'", containsString("PER"))
                .body("[175].'callingCodes'.size()", equalTo(1))
                .body("[175].'callingCodes'", hasItems("51"))
                .body("[175].'capital'", containsString("Lima"))
                .body("[175].'altSpellings'.size()", equalTo(3))
                .body("[175].'altSpellings'", hasItems("PE", "Republic of Peru", " República del Perú"))
                .body("[175].'region'", containsString("Americas"))
                .body("[175].'subregion'", containsString("South America"))
                .body("[175].'population'", numberMatches(3.14887E7))
                .body("[175].'latlng'.size()", equalTo(2))
                .body("[175].'latlng'[0]", numberMatches(-10.0))
                .body("[175].'latlng'[1]", numberMatches(-76.0))
                .body("[175].'demonym'", containsString("Peruvian"))
                .body("[175].'area'", numberMatches(1285216.0))
                .body("[175].'gini'", numberMatches(48.1))
                .body("[175].'timezones'.size()", equalTo(1))
                .body("[175].'timezones'", hasItems("UTC-05:00"))
                .body("[175].'borders'.size()", equalTo(5))
                .body("[175].'borders'", hasItems("BOL", "BRA", "CHL", "COL", "ECU"))
                .body("[175].'nativeName'", containsString("Perú"))
                .body("[175].'numericCode'", containsString("604"))
                .body("[175].'currencies'.size()", equalTo(1))
                .body("[175].'currencies'[0].'code'", containsString("PEN"))
                .body("[175].'currencies'[0].'name'", containsString("Peruvian sol"))
                .body("[175].'currencies'[0].'symbol'", containsString("S/."))
                .body("[175].'languages'.size()", equalTo(1))
                .body("[175].'languages'[0].'iso639_1'", containsString("es"))
                .body("[175].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[175].'languages'[0].'name'", containsString("Spanish"))
                .body("[175].'languages'[0].'nativeName'", containsString("Español"))
                .body("[175].'translations'.'de'", containsString("Peru"))
                .body("[175].'translations'.'es'", containsString("Perú"))
                .body("[175].'translations'.'fr'", containsString("Pérou"))
                .body("[175].'translations'.'ja'", containsString("ペルー"))
                .body("[175].'translations'.'it'", containsString("Perù"))
                .body("[175].'translations'.'br'", containsString("Peru"))
                .body("[175].'translations'.'pt'", containsString("Peru"))
                .body("[175].'translations'.'nl'", containsString("Peru"))
                .body("[175].'translations'.'hr'", containsString("Peru"))
                .body("[175].'translations'.'fa'", containsString("پرو"))
                .body("[175].'flag'", containsString("https://restcountries.eu/data/per.svg"))
                .body("[175].'regionalBlocs'.size()", equalTo(2))
                .body("[175].'regionalBlocs'[0].'acronym'", containsString("PA"))
                .body("[175].'regionalBlocs'[0].'name'", containsString("Pacific Alliance"))
                .body("[175].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[175].'regionalBlocs'[0].'otherNames'.size()", equalTo(1))
                .body("[175].'regionalBlocs'[0].'otherNames'", hasItems("Alianza del Pacífico"))
                .body("[175].'regionalBlocs'[1].'acronym'", containsString("USAN"))
                .body("[175].'regionalBlocs'[1].'name'", containsString("Union of South American Nations"))
                .body("[175].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(3))
                .body("[175].'regionalBlocs'[1].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[175].'regionalBlocs'[1].'otherNames'.size()", equalTo(4))
                .body("[175].'regionalBlocs'[1].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[175].'cioc'", containsString("PER"))
                .body("[176].'name'", containsString("Philippines"))
                .body("[176].'topLevelDomain'.size()", equalTo(1))
                .body("[176].'topLevelDomain'", hasItems(".ph"))
                .body("[176].'alpha2Code'", containsString("PH"))
                .body("[176].'alpha3Code'", containsString("PHL"))
                .body("[176].'callingCodes'.size()", equalTo(1))
                .body("[176].'callingCodes'", hasItems("63"))
                .body("[176].'capital'", containsString("Manila"))
                .body("[176].'altSpellings'.size()", equalTo(3))
                .body("[176].'altSpellings'", hasItems("PH", "Republic of the Philippines", "Repúblika ng Pilipinas"))
                .body("[176].'region'", containsString("Asia"))
                .body("[176].'subregion'", containsString("South-Eastern Asia"))
                .body("[176].'population'", numberMatches(1.032798E8))
                .body("[176].'latlng'.size()", equalTo(2))
                .body("[176].'latlng'[0]", numberMatches(13.0))
                .body("[176].'latlng'[1]", numberMatches(122.0))
                .body("[176].'demonym'", containsString("Filipino"))
                .body("[176].'area'", numberMatches(342353.0))
                .body("[176].'gini'", numberMatches(43.0))
                .body("[176].'timezones'.size()", equalTo(1))
                .body("[176].'timezones'", hasItems("UTC+08:00"))
                .body("[176].'borders'.size()", equalTo(0))
                .body("[176].'nativeName'", containsString("Pilipinas"))
                .body("[176].'numericCode'", containsString("608"))
                .body("[176].'currencies'.size()", equalTo(1))
                .body("[176].'currencies'[0].'code'", containsString("PHP"))
                .body("[176].'currencies'[0].'name'", containsString("Philippine peso"))
                .body("[176].'currencies'[0].'symbol'", containsString("₱"))
                .body("[176].'languages'.size()", equalTo(1))
                .body("[176].'languages'[0].'iso639_1'", containsString("en"))
                .body("[176].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[176].'languages'[0].'name'", containsString("English"))
                .body("[176].'languages'[0].'nativeName'", containsString("English"))
                .body("[176].'translations'.'de'", containsString("Philippinen"))
                .body("[176].'translations'.'es'", containsString("Filipinas"))
                .body("[176].'translations'.'fr'", containsString("Philippines"))
                .body("[176].'translations'.'ja'", containsString("フィリピン"))
                .body("[176].'translations'.'it'", containsString("Filippine"))
                .body("[176].'translations'.'br'", containsString("Filipinas"))
                .body("[176].'translations'.'pt'", containsString("Filipinas"))
                .body("[176].'translations'.'nl'", containsString("Filipijnen"))
                .body("[176].'translations'.'hr'", containsString("Filipini"))
                .body("[176].'translations'.'fa'", containsString("جزایر الندفیلیپین"))
                .body("[176].'flag'", containsString("https://restcountries.eu/data/phl.svg"))
                .body("[176].'regionalBlocs'.size()", equalTo(1))
                .body("[176].'regionalBlocs'[0].'acronym'", containsString("ASEAN"))
                .body("[176].'regionalBlocs'[0].'name'", containsString("Association of Southeast Asian Nations"))
                .body("[176].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[176].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[176].'cioc'", containsString("PHI"))
                .body("[177].'name'", containsString("Pitcairn"))
                .body("[177].'topLevelDomain'.size()", equalTo(1))
                .body("[177].'topLevelDomain'", hasItems(".pn"))
                .body("[177].'alpha2Code'", containsString("PN"))
                .body("[177].'alpha3Code'", containsString("PCN"))
                .body("[177].'callingCodes'.size()", equalTo(1))
                .body("[177].'callingCodes'", hasItems("64"))
                .body("[177].'capital'", containsString("Adamstown"))
                .body("[177].'altSpellings'.size()", equalTo(2))
                .body("[177].'altSpellings'", hasItems("PN", "Pitcairn Henderson Ducie and Oeno Islands"))
                .body("[177].'region'", containsString("Oceania"))
                .body("[177].'subregion'", containsString("Polynesia"))
                .body("[177].'population'", numberMatches(56.0))
                .body("[177].'latlng'.size()", equalTo(2))
                .body("[177].'latlng'[0]", numberMatches(-25.06666666))
                .body("[177].'latlng'[1]", numberMatches(-130.1))
                .body("[177].'demonym'", containsString("Pitcairn Islander"))
                .body("[177].'area'", numberMatches(47.0))
                .body("[177].'gini'", nullValue())
                .body("[177].'timezones'.size()", equalTo(1))
                .body("[177].'timezones'", hasItems("UTC-08:00"))
                .body("[177].'borders'.size()", equalTo(0))
                .body("[177].'nativeName'", containsString("Pitcairn Islands"))
                .body("[177].'numericCode'", containsString("612"))
                .body("[177].'currencies'.size()", equalTo(2))
                .body("[177].'currencies'[0].'code'", containsString("NZD"))
                .body("[177].'currencies'[0].'name'", containsString("New Zealand dollar"))
                .body("[177].'currencies'[0].'symbol'", containsString("$"))
                .body("[177].'currencies'[1].'code'", nullValue())
                .body("[177].'currencies'[1].'name'", containsString("Pitcairn Islands dollar"))
                .body("[177].'currencies'[1].'symbol'", containsString("$"))
                .body("[177].'languages'.size()", equalTo(1))
                .body("[177].'languages'[0].'iso639_1'", containsString("en"))
                .body("[177].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[177].'languages'[0].'name'", containsString("English"))
                .body("[177].'languages'[0].'nativeName'", containsString("English"))
                .body("[177].'translations'.'de'", containsString("Pitcairn"))
                .body("[177].'translations'.'es'", containsString("Islas Pitcairn"))
                .body("[177].'translations'.'fr'", containsString("Îles Pitcairn"))
                .body("[177].'translations'.'ja'", containsString("ピトケアン"))
                .body("[177].'translations'.'it'", containsString("Isole Pitcairn"))
                .body("[177].'translations'.'br'", containsString("Ilhas Pitcairn"))
                .body("[177].'translations'.'pt'", containsString("Ilhas Picárnia"))
                .body("[177].'translations'.'nl'", containsString("Pitcairneilanden"))
                .body("[177].'translations'.'hr'", containsString("Pitcairnovo otočje"))
                .body("[177].'translations'.'fa'", containsString("پیتکرن"))
                .body("[177].'flag'", containsString("https://restcountries.eu/data/pcn.svg"))
                .body("[177].'regionalBlocs'.size()", equalTo(0))
                .body("[177].'cioc'", containsString(""))
                .body("[178].'name'", containsString("Poland"))
                .body("[178].'topLevelDomain'.size()", equalTo(1))
                .body("[178].'topLevelDomain'", hasItems(".pl"))
                .body("[178].'alpha2Code'", containsString("PL"))
                .body("[178].'alpha3Code'", containsString("POL"))
                .body("[178].'callingCodes'.size()", equalTo(1))
                .body("[178].'callingCodes'", hasItems("48"))
                .body("[178].'capital'", containsString("Warsaw"))
                .body("[178].'altSpellings'.size()", equalTo(3))
                .body("[178].'altSpellings'", hasItems("PL", "Republic of Poland", "Rzeczpospolita Polska"))
                .body("[178].'region'", containsString("Europe"))
                .body("[178].'subregion'", containsString("Eastern Europe"))
                .body("[178].'population'", numberMatches(3.8437239E7))
                .body("[178].'latlng'.size()", equalTo(2))
                .body("[178].'latlng'[0]", numberMatches(52.0))
                .body("[178].'latlng'[1]", numberMatches(20.0))
                .body("[178].'demonym'", containsString("Polish"))
                .body("[178].'area'", numberMatches(312679.0))
                .body("[178].'gini'", numberMatches(34.1))
                .body("[178].'timezones'.size()", equalTo(1))
                .body("[178].'timezones'", hasItems("UTC+01:00"))
                .body("[178].'borders'.size()", equalTo(7))
                .body("[178].'borders'", hasItems("BLR", "CZE", "DEU", "LTU", "RUS", "SVK", "UKR"))
                .body("[178].'nativeName'", containsString("Polska"))
                .body("[178].'numericCode'", containsString("616"))
                .body("[178].'currencies'.size()", equalTo(1))
                .body("[178].'currencies'[0].'code'", containsString("PLN"))
                .body("[178].'currencies'[0].'name'", containsString("Polish złoty"))
                .body("[178].'currencies'[0].'symbol'", containsString("zł"))
                .body("[178].'languages'.size()", equalTo(1))
                .body("[178].'languages'[0].'iso639_1'", containsString("pl"))
                .body("[178].'languages'[0].'iso639_2'", containsString("pol"))
                .body("[178].'languages'[0].'name'", containsString("Polish"))
                .body("[178].'languages'[0].'nativeName'", containsString("język polski"))
                .body("[178].'translations'.'de'", containsString("Polen"))
                .body("[178].'translations'.'es'", containsString("Polonia"))
                .body("[178].'translations'.'fr'", containsString("Pologne"))
                .body("[178].'translations'.'ja'", containsString("ポーランド"))
                .body("[178].'translations'.'it'", containsString("Polonia"))
                .body("[178].'translations'.'br'", containsString("Polônia"))
                .body("[178].'translations'.'pt'", containsString("Polónia"))
                .body("[178].'translations'.'nl'", containsString("Polen"))
                .body("[178].'translations'.'hr'", containsString("Poljska"))
                .body("[178].'translations'.'fa'", containsString("لهستان"))
                .body("[178].'flag'", containsString("https://restcountries.eu/data/pol.svg"))
                .body("[178].'regionalBlocs'.size()", equalTo(1))
                .body("[178].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[178].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[178].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[178].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[178].'cioc'", containsString("POL"))
                .body("[179].'name'", containsString("Portugal"))
                .body("[179].'topLevelDomain'.size()", equalTo(1))
                .body("[179].'topLevelDomain'", hasItems(".pt"))
                .body("[179].'alpha2Code'", containsString("PT"))
                .body("[179].'alpha3Code'", containsString("PRT"))
                .body("[179].'callingCodes'.size()", equalTo(1))
                .body("[179].'callingCodes'", hasItems("351"))
                .body("[179].'capital'", containsString("Lisbon"))
                .body("[179].'altSpellings'.size()", equalTo(4))
                .body("[179].'altSpellings'", hasItems("PT", "Portuguesa", "Portuguese Republic", "República Portuguesa"))
                .body("[179].'region'", containsString("Europe"))
                .body("[179].'subregion'", containsString("Southern Europe"))
                .body("[179].'population'", numberMatches(1.0374822E7))
                .body("[179].'latlng'.size()", equalTo(2))
                .body("[179].'latlng'[0]", numberMatches(39.5))
                .body("[179].'latlng'[1]", numberMatches(-8.0))
                .body("[179].'demonym'", containsString("Portuguese"))
                .body("[179].'area'", numberMatches(92090.0))
                .body("[179].'gini'", numberMatches(38.5))
                .body("[179].'timezones'.size()", equalTo(2))
                .body("[179].'timezones'", hasItems("UTC-01:00", "UTC"))
                .body("[179].'borders'.size()", equalTo(1))
                .body("[179].'borders'", hasItems("ESP"))
                .body("[179].'nativeName'", containsString("Portugal"))
                .body("[179].'numericCode'", containsString("620"))
                .body("[179].'currencies'.size()", equalTo(1))
                .body("[179].'currencies'[0].'code'", containsString("EUR"))
                .body("[179].'currencies'[0].'name'", containsString("Euro"))
                .body("[179].'currencies'[0].'symbol'", containsString("€"))
                .body("[179].'languages'.size()", equalTo(1))
                .body("[179].'languages'[0].'iso639_1'", containsString("pt"))
                .body("[179].'languages'[0].'iso639_2'", containsString("por"))
                .body("[179].'languages'[0].'name'", containsString("Portuguese"))
                .body("[179].'languages'[0].'nativeName'", containsString("Português"))
                .body("[179].'translations'.'de'", containsString("Portugal"))
                .body("[179].'translations'.'es'", containsString("Portugal"))
                .body("[179].'translations'.'fr'", containsString("Portugal"))
                .body("[179].'translations'.'ja'", containsString("ポルトガル"))
                .body("[179].'translations'.'it'", containsString("Portogallo"))
                .body("[179].'translations'.'br'", containsString("Portugal"))
                .body("[179].'translations'.'pt'", containsString("Portugal"))
                .body("[179].'translations'.'nl'", containsString("Portugal"))
                .body("[179].'translations'.'hr'", containsString("Portugal"))
                .body("[179].'translations'.'fa'", containsString("پرتغال"))
                .body("[179].'flag'", containsString("https://restcountries.eu/data/prt.svg"))
                .body("[179].'regionalBlocs'.size()", equalTo(1))
                .body("[179].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[179].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[179].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[179].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[179].'cioc'", containsString("POR"))
                .body("[180].'name'", containsString("Puerto Rico"))
                .body("[180].'topLevelDomain'.size()", equalTo(1))
                .body("[180].'topLevelDomain'", hasItems(".pr"))
                .body("[180].'alpha2Code'", containsString("PR"))
                .body("[180].'alpha3Code'", containsString("PRI"))
                .body("[180].'callingCodes'.size()", equalTo(1))
                .body("[180].'callingCodes'", hasItems("1"))
                .body("[180].'capital'", containsString("San Juan"))
                .body("[180].'altSpellings'.size()", equalTo(3))
                .body("[180].'altSpellings'", hasItems("PR", "Commonwealth of Puerto Rico", "Estado Libre Asociado de Puerto Rico"))
                .body("[180].'region'", containsString("Americas"))
                .body("[180].'subregion'", containsString("Caribbean"))
                .body("[180].'population'", numberMatches(3474182.0))
                .body("[180].'latlng'.size()", equalTo(2))
                .body("[180].'latlng'[0]", numberMatches(18.25))
                .body("[180].'latlng'[1]", numberMatches(-66.5))
                .body("[180].'demonym'", containsString("Puerto Rican"))
                .body("[180].'area'", numberMatches(8870.0))
                .body("[180].'gini'", nullValue())
                .body("[180].'timezones'.size()", equalTo(1))
                .body("[180].'timezones'", hasItems("UTC-04:00"))
                .body("[180].'borders'.size()", equalTo(0))
                .body("[180].'nativeName'", containsString("Puerto Rico"))
                .body("[180].'numericCode'", containsString("630"))
                .body("[180].'currencies'.size()", equalTo(1))
                .body("[180].'currencies'[0].'code'", containsString("USD"))
                .body("[180].'currencies'[0].'name'", containsString("United States dollar"))
                .body("[180].'currencies'[0].'symbol'", containsString("$"))
                .body("[180].'languages'.size()", equalTo(2))
                .body("[180].'languages'[0].'iso639_1'", containsString("es"))
                .body("[180].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[180].'languages'[0].'name'", containsString("Spanish"))
                .body("[180].'languages'[0].'nativeName'", containsString("Español"))
                .body("[180].'languages'[1].'iso639_1'", containsString("en"))
                .body("[180].'languages'[1].'iso639_2'", containsString("eng"))
                .body("[180].'languages'[1].'name'", containsString("English"))
                .body("[180].'languages'[1].'nativeName'", containsString("English"))
                .body("[180].'translations'.'de'", containsString("Puerto Rico"))
                .body("[180].'translations'.'es'", containsString("Puerto Rico"))
                .body("[180].'translations'.'fr'", containsString("Porto Rico"))
                .body("[180].'translations'.'ja'", containsString("プエルトリコ"))
                .body("[180].'translations'.'it'", containsString("Porto Rico"))
                .body("[180].'translations'.'br'", containsString("Porto Rico"))
                .body("[180].'translations'.'pt'", containsString("Porto Rico"))
                .body("[180].'translations'.'nl'", containsString("Puerto Rico"))
                .body("[180].'translations'.'hr'", containsString("Portoriko"))
                .body("[180].'translations'.'fa'", containsString("پورتو ریکو"))
                .body("[180].'flag'", containsString("https://restcountries.eu/data/pri.svg"))
                .body("[180].'regionalBlocs'.size()", equalTo(0))
                .body("[180].'cioc'", containsString("PUR"))
                .body("[181].'name'", containsString("Qatar"))
                .body("[181].'topLevelDomain'.size()", equalTo(1))
                .body("[181].'topLevelDomain'", hasItems(".qa"))
                .body("[181].'alpha2Code'", containsString("QA"))
                .body("[181].'alpha3Code'", containsString("QAT"))
                .body("[181].'callingCodes'.size()", equalTo(1))
                .body("[181].'callingCodes'", hasItems("974"))
                .body("[181].'capital'", containsString("Doha"))
                .body("[181].'altSpellings'.size()", equalTo(3))
                .body("[181].'altSpellings'", hasItems("QA", "State of Qatar", "Dawlat Qaṭar"))
                .body("[181].'region'", containsString("Asia"))
                .body("[181].'subregion'", containsString("Western Asia"))
                .body("[181].'population'", numberMatches(2587564.0))
                .body("[181].'latlng'.size()", equalTo(2))
                .body("[181].'latlng'[0]", numberMatches(25.5))
                .body("[181].'latlng'[1]", numberMatches(51.25))
                .body("[181].'demonym'", containsString("Qatari"))
                .body("[181].'area'", numberMatches(11586.0))
                .body("[181].'gini'", numberMatches(41.1))
                .body("[181].'timezones'.size()", equalTo(1))
                .body("[181].'timezones'", hasItems("UTC+03:00"))
                .body("[181].'borders'.size()", equalTo(1))
                .body("[181].'borders'", hasItems("SAU"))
                .body("[181].'nativeName'", containsString("قطر"))
                .body("[181].'numericCode'", containsString("634"))
                .body("[181].'currencies'.size()", equalTo(1))
                .body("[181].'currencies'[0].'code'", containsString("QAR"))
                .body("[181].'currencies'[0].'name'", containsString("Qatari riyal"))
                .body("[181].'currencies'[0].'symbol'", containsString("ر.ق"))
                .body("[181].'languages'.size()", equalTo(1))
                .body("[181].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[181].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[181].'languages'[0].'name'", containsString("Arabic"))
                .body("[181].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[181].'translations'.'de'", containsString("Katar"))
                .body("[181].'translations'.'es'", containsString("Catar"))
                .body("[181].'translations'.'fr'", containsString("Qatar"))
                .body("[181].'translations'.'ja'", containsString("カタール"))
                .body("[181].'translations'.'it'", containsString("Qatar"))
                .body("[181].'translations'.'br'", containsString("Catar"))
                .body("[181].'translations'.'pt'", containsString("Catar"))
                .body("[181].'translations'.'nl'", containsString("Qatar"))
                .body("[181].'translations'.'hr'", containsString("Katar"))
                .body("[181].'translations'.'fa'", containsString("قطر"))
                .body("[181].'flag'", containsString("https://restcountries.eu/data/qat.svg"))
                .body("[181].'regionalBlocs'.size()", equalTo(1))
                .body("[181].'regionalBlocs'[0].'acronym'", containsString("AL"))
                .body("[181].'regionalBlocs'[0].'name'", containsString("Arab League"))
                .body("[181].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[181].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[181].'regionalBlocs'[0].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[181].'cioc'", containsString("QAT"))
                .body("[182].'name'", containsString("Republic of Kosovo"))
                .body("[182].'topLevelDomain'.size()", equalTo(1))
                .body("[182].'topLevelDomain'", hasItems(""))
                .body("[182].'alpha2Code'", containsString("XK"))
                .body("[182].'alpha3Code'", containsString("KOS"))
                .body("[182].'callingCodes'.size()", equalTo(1))
                .body("[182].'callingCodes'", hasItems("383"))
                .body("[182].'capital'", containsString("Pristina"))
                .body("[182].'altSpellings'.size()", equalTo(2))
                .body("[182].'altSpellings'", hasItems("XK", "Република Косово"))
                .body("[182].'region'", containsString("Europe"))
                .body("[182].'subregion'", containsString("Eastern Europe"))
                .body("[182].'population'", numberMatches(1733842.0))
                .body("[182].'latlng'.size()", equalTo(2))
                .body("[182].'latlng'[0]", numberMatches(42.666667))
                .body("[182].'latlng'[1]", numberMatches(21.166667))
                .body("[182].'demonym'", containsString("Kosovar"))
                .body("[182].'area'", numberMatches(10908.0))
                .body("[182].'gini'", nullValue())
                .body("[182].'timezones'.size()", equalTo(1))
                .body("[182].'timezones'", hasItems("UTC+01:00"))
                .body("[182].'borders'.size()", equalTo(4))
                .body("[182].'borders'", hasItems("ALB", "MKD", "MNE", "SRB"))
                .body("[182].'nativeName'", containsString("Republika e Kosovës"))
                .body("[182].'numericCode'", nullValue())
                .body("[182].'currencies'.size()", equalTo(1))
                .body("[182].'currencies'[0].'code'", containsString("EUR"))
                .body("[182].'currencies'[0].'name'", containsString("Euro"))
                .body("[182].'currencies'[0].'symbol'", containsString("€"))
                .body("[182].'languages'.size()", equalTo(2))
                .body("[182].'languages'[0].'iso639_1'", containsString("sq"))
                .body("[182].'languages'[0].'iso639_2'", containsString("sqi"))
                .body("[182].'languages'[0].'name'", containsString("Albanian"))
                .body("[182].'languages'[0].'nativeName'", containsString("Shqip"))
                .body("[182].'languages'[1].'iso639_1'", containsString("sr"))
                .body("[182].'languages'[1].'iso639_2'", containsString("srp"))
                .body("[182].'languages'[1].'name'", containsString("Serbian"))
                .body("[182].'languages'[1].'nativeName'", containsString("српски језик"))
                .body("[182].'translations'.'de'", nullValue())
                .body("[182].'translations'.'es'", containsString("Kosovo"))
                .body("[182].'translations'.'fr'", nullValue())
                .body("[182].'translations'.'ja'", nullValue())
                .body("[182].'translations'.'it'", nullValue())
                .body("[182].'translations'.'br'", containsString("Kosovo"))
                .body("[182].'translations'.'pt'", containsString("Kosovo"))
                .body("[182].'translations'.'nl'", nullValue())
                .body("[182].'translations'.'hr'", containsString("Kosovo"))
                .body("[182].'translations'.'fa'", containsString("کوزوو"))
                .body("[182].'flag'", containsString("https://restcountries.eu/data/kos.svg"))
                .body("[182].'regionalBlocs'.size()", equalTo(1))
                .body("[182].'regionalBlocs'[0].'acronym'", containsString("CEFTA"))
                .body("[182].'regionalBlocs'[0].'name'", containsString("Central European Free Trade Agreement"))
                .body("[182].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[182].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[182].'cioc'", nullValue())
                .body("[183].'name'", containsString("Réunion"))
                .body("[183].'topLevelDomain'.size()", equalTo(1))
                .body("[183].'topLevelDomain'", hasItems(".re"))
                .body("[183].'alpha2Code'", containsString("RE"))
                .body("[183].'alpha3Code'", containsString("REU"))
                .body("[183].'callingCodes'.size()", equalTo(1))
                .body("[183].'callingCodes'", hasItems("262"))
                .body("[183].'capital'", containsString("Saint-Denis"))
                .body("[183].'altSpellings'.size()", equalTo(2))
                .body("[183].'altSpellings'", hasItems("RE", "Reunion"))
                .body("[183].'region'", containsString("Africa"))
                .body("[183].'subregion'", containsString("Eastern Africa"))
                .body("[183].'population'", numberMatches(840974.0))
                .body("[183].'latlng'.size()", equalTo(2))
                .body("[183].'latlng'[0]", numberMatches(-21.15))
                .body("[183].'latlng'[1]", numberMatches(55.5))
                .body("[183].'demonym'", containsString("French"))
                .body("[183].'area'", nullValue())
                .body("[183].'gini'", nullValue())
                .body("[183].'timezones'.size()", equalTo(1))
                .body("[183].'timezones'", hasItems("UTC+04:00"))
                .body("[183].'borders'.size()", equalTo(0))
                .body("[183].'nativeName'", containsString("La Réunion"))
                .body("[183].'numericCode'", containsString("638"))
                .body("[183].'currencies'.size()", equalTo(1))
                .body("[183].'currencies'[0].'code'", containsString("EUR"))
                .body("[183].'currencies'[0].'name'", containsString("Euro"))
                .body("[183].'currencies'[0].'symbol'", containsString("€"))
                .body("[183].'languages'.size()", equalTo(1))
                .body("[183].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[183].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[183].'languages'[0].'name'", containsString("French"))
                .body("[183].'languages'[0].'nativeName'", containsString("français"))
                .body("[183].'translations'.'de'", containsString("Réunion"))
                .body("[183].'translations'.'es'", containsString("Reunión"))
                .body("[183].'translations'.'fr'", containsString("Réunion"))
                .body("[183].'translations'.'ja'", containsString("レユニオン"))
                .body("[183].'translations'.'it'", containsString("Riunione"))
                .body("[183].'translations'.'br'", containsString("Reunião"))
                .body("[183].'translations'.'pt'", containsString("Reunião"))
                .body("[183].'translations'.'nl'", containsString("Réunion"))
                .body("[183].'translations'.'hr'", containsString("Réunion"))
                .body("[183].'translations'.'fa'", containsString("رئونیون"))
                .body("[183].'flag'", containsString("https://restcountries.eu/data/reu.svg"))
                .body("[183].'regionalBlocs'.size()", equalTo(1))
                .body("[183].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[183].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[183].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[183].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[183].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[183].'cioc'", containsString(""))
                .body("[184].'name'", containsString("Romania"))
                .body("[184].'topLevelDomain'.size()", equalTo(1))
                .body("[184].'topLevelDomain'", hasItems(".ro"))
                .body("[184].'alpha2Code'", containsString("RO"))
                .body("[184].'alpha3Code'", containsString("ROU"))
                .body("[184].'callingCodes'.size()", equalTo(1))
                .body("[184].'callingCodes'", hasItems("40"))
                .body("[184].'capital'", containsString("Bucharest"))
                .body("[184].'altSpellings'.size()", equalTo(4))
                .body("[184].'altSpellings'", hasItems("RO", "Rumania", "Roumania", "România"))
                .body("[184].'region'", containsString("Europe"))
                .body("[184].'subregion'", containsString("Eastern Europe"))
                .body("[184].'population'", numberMatches(1.9861408E7))
                .body("[184].'latlng'.size()", equalTo(2))
                .body("[184].'latlng'[0]", numberMatches(46.0))
                .body("[184].'latlng'[1]", numberMatches(25.0))
                .body("[184].'demonym'", containsString("Romanian"))
                .body("[184].'area'", numberMatches(238391.0))
                .body("[184].'gini'", numberMatches(30.0))
                .body("[184].'timezones'.size()", equalTo(1))
                .body("[184].'timezones'", hasItems("UTC+02:00"))
                .body("[184].'borders'.size()", equalTo(5))
                .body("[184].'borders'", hasItems("BGR", "HUN", "MDA", "SRB", "UKR"))
                .body("[184].'nativeName'", containsString("România"))
                .body("[184].'numericCode'", containsString("642"))
                .body("[184].'currencies'.size()", equalTo(1))
                .body("[184].'currencies'[0].'code'", containsString("RON"))
                .body("[184].'currencies'[0].'name'", containsString("Romanian leu"))
                .body("[184].'currencies'[0].'symbol'", containsString("lei"))
                .body("[184].'languages'.size()", equalTo(1))
                .body("[184].'languages'[0].'iso639_1'", containsString("ro"))
                .body("[184].'languages'[0].'iso639_2'", containsString("ron"))
                .body("[184].'languages'[0].'name'", containsString("Romanian"))
                .body("[184].'languages'[0].'nativeName'", containsString("Română"))
                .body("[184].'translations'.'de'", containsString("Rumänien"))
                .body("[184].'translations'.'es'", containsString("Rumania"))
                .body("[184].'translations'.'fr'", containsString("Roumanie"))
                .body("[184].'translations'.'ja'", containsString("ルーマニア"))
                .body("[184].'translations'.'it'", containsString("Romania"))
                .body("[184].'translations'.'br'", containsString("Romênia"))
                .body("[184].'translations'.'pt'", containsString("Roménia"))
                .body("[184].'translations'.'nl'", containsString("Roemenië"))
                .body("[184].'translations'.'hr'", containsString("Rumunjska"))
                .body("[184].'translations'.'fa'", containsString("رومانی"))
                .body("[184].'flag'", containsString("https://restcountries.eu/data/rou.svg"))
                .body("[184].'regionalBlocs'.size()", equalTo(1))
                .body("[184].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[184].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[184].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[184].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[184].'cioc'", containsString("ROU"))
                .body("[185].'name'", containsString("Russian Federation"))
                .body("[185].'topLevelDomain'.size()", equalTo(1))
                .body("[185].'topLevelDomain'", hasItems(".ru"))
                .body("[185].'alpha2Code'", containsString("RU"))
                .body("[185].'alpha3Code'", containsString("RUS"))
                .body("[185].'callingCodes'.size()", equalTo(1))
                .body("[185].'callingCodes'", hasItems("7"))
                .body("[185].'capital'", containsString("Moscow"))
                .body("[185].'altSpellings'.size()", equalTo(5))
                .body("[185].'altSpellings'", hasItems("RU", "Rossiya", "Russian Federation", "Российская Федерация", "Rossiyskaya Federatsiya"))
                .body("[185].'region'", containsString("Europe"))
                .body("[185].'subregion'", containsString("Eastern Europe"))
                .body("[185].'population'", numberMatches(1.46599183E8))
                .body("[185].'latlng'.size()", equalTo(2))
                .body("[185].'latlng'[0]", numberMatches(60.0))
                .body("[185].'latlng'[1]", numberMatches(100.0))
                .body("[185].'demonym'", containsString("Russian"))
                .body("[185].'area'", numberMatches(1.7124442E7))
                .body("[185].'gini'", numberMatches(40.1))
                .body("[185].'timezones'.size()", equalTo(9))
                .body("[185].'timezones'", hasItems("UTC+03:00", "UTC+04:00", "UTC+06:00", "UTC+07:00", "UTC+08:00", "UTC+09:00", "UTC+10:00", "UTC+11:00", "UTC+12:00"))
                .body("[185].'borders'.size()", equalTo(14))
                .body("[185].'borders'", hasItems("AZE", "BLR", "CHN", "EST", "FIN", "GEO", "KAZ", "PRK", "LVA", "LTU", "MNG", "NOR", "POL", "UKR"))
                .body("[185].'nativeName'", containsString("Россия"))
                .body("[185].'numericCode'", containsString("643"))
                .body("[185].'currencies'.size()", equalTo(1))
                .body("[185].'currencies'[0].'code'", containsString("RUB"))
                .body("[185].'currencies'[0].'name'", containsString("Russian ruble"))
                .body("[185].'currencies'[0].'symbol'", containsString("₽"))
                .body("[185].'languages'.size()", equalTo(1))
                .body("[185].'languages'[0].'iso639_1'", containsString("ru"))
                .body("[185].'languages'[0].'iso639_2'", containsString("rus"))
                .body("[185].'languages'[0].'name'", containsString("Russian"))
                .body("[185].'languages'[0].'nativeName'", containsString("Русский"))
                .body("[185].'translations'.'de'", containsString("Russland"))
                .body("[185].'translations'.'es'", containsString("Rusia"))
                .body("[185].'translations'.'fr'", containsString("Russie"))
                .body("[185].'translations'.'ja'", containsString("ロシア連邦"))
                .body("[185].'translations'.'it'", containsString("Russia"))
                .body("[185].'translations'.'br'", containsString("Rússia"))
                .body("[185].'translations'.'pt'", containsString("Rússia"))
                .body("[185].'translations'.'nl'", containsString("Rusland"))
                .body("[185].'translations'.'hr'", containsString("Rusija"))
                .body("[185].'translations'.'fa'", containsString("روسیه"))
                .body("[185].'flag'", containsString("https://restcountries.eu/data/rus.svg"))
                .body("[185].'regionalBlocs'.size()", equalTo(1))
                .body("[185].'regionalBlocs'[0].'acronym'", containsString("EEU"))
                .body("[185].'regionalBlocs'[0].'name'", containsString("Eurasian Economic Union"))
                .body("[185].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(1))
                .body("[185].'regionalBlocs'[0].'otherAcronyms'", hasItems("EAEU"))
                .body("[185].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[185].'cioc'", containsString("RUS"))
                .body("[186].'name'", containsString("Rwanda"))
                .body("[186].'topLevelDomain'.size()", equalTo(1))
                .body("[186].'topLevelDomain'", hasItems(".rw"))
                .body("[186].'alpha2Code'", containsString("RW"))
                .body("[186].'alpha3Code'", containsString("RWA"))
                .body("[186].'callingCodes'.size()", equalTo(1))
                .body("[186].'callingCodes'", hasItems("250"))
                .body("[186].'capital'", containsString("Kigali"))
                .body("[186].'altSpellings'.size()", equalTo(4))
                .body("[186].'altSpellings'", hasItems("RW", "Republic of Rwanda", "Repubulika y'u Rwanda", "République du Rwanda"))
                .body("[186].'region'", containsString("Africa"))
                .body("[186].'subregion'", containsString("Eastern Africa"))
                .body("[186].'population'", numberMatches(1.1553188E7))
                .body("[186].'latlng'.size()", equalTo(2))
                .body("[186].'latlng'[0]", numberMatches(-2.0))
                .body("[186].'latlng'[1]", numberMatches(30.0))
                .body("[186].'demonym'", containsString("Rwandan"))
                .body("[186].'area'", numberMatches(26338.0))
                .body("[186].'gini'", numberMatches(50.8))
                .body("[186].'timezones'.size()", equalTo(1))
                .body("[186].'timezones'", hasItems("UTC+02:00"))
                .body("[186].'borders'.size()", equalTo(4))
                .body("[186].'borders'", hasItems("BDI", "COD", "TZA", "UGA"))
                .body("[186].'nativeName'", containsString("Rwanda"))
                .body("[186].'numericCode'", containsString("646"))
                .body("[186].'currencies'.size()", equalTo(1))
                .body("[186].'currencies'[0].'code'", containsString("RWF"))
                .body("[186].'currencies'[0].'name'", containsString("Rwandan franc"))
                .body("[186].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[186].'languages'.size()", equalTo(3))
                .body("[186].'languages'[0].'iso639_1'", containsString("rw"))
                .body("[186].'languages'[0].'iso639_2'", containsString("kin"))
                .body("[186].'languages'[0].'name'", containsString("Kinyarwanda"))
                .body("[186].'languages'[0].'nativeName'", containsString("Ikinyarwanda"))
                .body("[186].'languages'[1].'iso639_1'", containsString("en"))
                .body("[186].'languages'[1].'iso639_2'", containsString("eng"))
                .body("[186].'languages'[1].'name'", containsString("English"))
                .body("[186].'languages'[1].'nativeName'", containsString("English"))
                .body("[186].'languages'[2].'iso639_1'", containsString("fr"))
                .body("[186].'languages'[2].'iso639_2'", containsString("fra"))
                .body("[186].'languages'[2].'name'", containsString("French"))
                .body("[186].'languages'[2].'nativeName'", containsString("français"))
                .body("[186].'translations'.'de'", containsString("Ruanda"))
                .body("[186].'translations'.'es'", containsString("Ruanda"))
                .body("[186].'translations'.'fr'", containsString("Rwanda"))
                .body("[186].'translations'.'ja'", containsString("ルワンダ"))
                .body("[186].'translations'.'it'", containsString("Ruanda"))
                .body("[186].'translations'.'br'", containsString("Ruanda"))
                .body("[186].'translations'.'pt'", containsString("Ruanda"))
                .body("[186].'translations'.'nl'", containsString("Rwanda"))
                .body("[186].'translations'.'hr'", containsString("Ruanda"))
                .body("[186].'translations'.'fa'", containsString("رواندا"))
                .body("[186].'flag'", containsString("https://restcountries.eu/data/rwa.svg"))
                .body("[186].'regionalBlocs'.size()", equalTo(1))
                .body("[186].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[186].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[186].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[186].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[186].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[186].'cioc'", containsString("RWA"))
                .body("[187].'name'", containsString("Saint Barthélemy"))
                .body("[187].'topLevelDomain'.size()", equalTo(1))
                .body("[187].'topLevelDomain'", hasItems(".bl"))
                .body("[187].'alpha2Code'", containsString("BL"))
                .body("[187].'alpha3Code'", containsString("BLM"))
                .body("[187].'callingCodes'.size()", equalTo(1))
                .body("[187].'callingCodes'", hasItems("590"))
                .body("[187].'capital'", containsString("Gustavia"))
                .body("[187].'altSpellings'.size()", equalTo(4))
                .body("[187].'altSpellings'", hasItems("BL", "St. Barthelemy", "Collectivity of Saint Barthélemy", "Collectivité de Saint-Barthélemy"))
                .body("[187].'region'", containsString("Americas"))
                .body("[187].'subregion'", containsString("Caribbean"))
                .body("[187].'population'", numberMatches(9417.0))
                .body("[187].'latlng'.size()", equalTo(2))
                .body("[187].'latlng'[0]", numberMatches(18.5))
                .body("[187].'latlng'[1]", numberMatches(-63.41666666))
                .body("[187].'demonym'", containsString("Saint Barthélemy Islander"))
                .body("[187].'area'", numberMatches(21.0))
                .body("[187].'gini'", nullValue())
                .body("[187].'timezones'.size()", equalTo(1))
                .body("[187].'timezones'", hasItems("UTC-04:00"))
                .body("[187].'borders'.size()", equalTo(0))
                .body("[187].'nativeName'", containsString("Saint-Barthélemy"))
                .body("[187].'numericCode'", containsString("652"))
                .body("[187].'currencies'.size()", equalTo(1))
                .body("[187].'currencies'[0].'code'", containsString("EUR"))
                .body("[187].'currencies'[0].'name'", containsString("Euro"))
                .body("[187].'currencies'[0].'symbol'", containsString("€"))
                .body("[187].'languages'.size()", equalTo(1))
                .body("[187].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[187].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[187].'languages'[0].'name'", containsString("French"))
                .body("[187].'languages'[0].'nativeName'", containsString("français"))
                .body("[187].'translations'.'de'", containsString("Saint-Barthélemy"))
                .body("[187].'translations'.'es'", containsString("San Bartolomé"))
                .body("[187].'translations'.'fr'", containsString("Saint-Barthélemy"))
                .body("[187].'translations'.'ja'", containsString("サン・バルテルミー"))
                .body("[187].'translations'.'it'", containsString("Antille Francesi"))
                .body("[187].'translations'.'br'", containsString("São Bartolomeu"))
                .body("[187].'translations'.'pt'", containsString("São Bartolomeu"))
                .body("[187].'translations'.'nl'", containsString("Saint Barthélemy"))
                .body("[187].'translations'.'hr'", containsString("Saint Barthélemy"))
                .body("[187].'translations'.'fa'", containsString("سن-بارتلمی"))
                .body("[187].'flag'", containsString("https://restcountries.eu/data/blm.svg"))
                .body("[187].'regionalBlocs'.size()", equalTo(0))
                .body("[187].'cioc'", containsString(""))
                .body("[188].'name'", containsString("Saint Helena, Ascension and Tristan da Cunha"))
                .body("[188].'topLevelDomain'.size()", equalTo(1))
                .body("[188].'topLevelDomain'", hasItems(".sh"))
                .body("[188].'alpha2Code'", containsString("SH"))
                .body("[188].'alpha3Code'", containsString("SHN"))
                .body("[188].'callingCodes'.size()", equalTo(1))
                .body("[188].'callingCodes'", hasItems("290"))
                .body("[188].'capital'", containsString("Jamestown"))
                .body("[188].'altSpellings'.size()", equalTo(1))
                .body("[188].'altSpellings'", hasItems("SH"))
                .body("[188].'region'", containsString("Africa"))
                .body("[188].'subregion'", containsString("Western Africa"))
                .body("[188].'population'", numberMatches(4255.0))
                .body("[188].'latlng'.size()", equalTo(2))
                .body("[188].'latlng'[0]", numberMatches(-15.95))
                .body("[188].'latlng'[1]", numberMatches(-5.7))
                .body("[188].'demonym'", containsString("Saint Helenian"))
                .body("[188].'area'", nullValue())
                .body("[188].'gini'", nullValue())
                .body("[188].'timezones'.size()", equalTo(1))
                .body("[188].'timezones'", hasItems("UTC+00:00"))
                .body("[188].'borders'.size()", equalTo(0))
                .body("[188].'nativeName'", containsString("Saint Helena"))
                .body("[188].'numericCode'", containsString("654"))
                .body("[188].'currencies'.size()", equalTo(1))
                .body("[188].'currencies'[0].'code'", containsString("SHP"))
                .body("[188].'currencies'[0].'name'", containsString("Saint Helena pound"))
                .body("[188].'currencies'[0].'symbol'", containsString("£"))
                .body("[188].'languages'.size()", equalTo(1))
                .body("[188].'languages'[0].'iso639_1'", containsString("en"))
                .body("[188].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[188].'languages'[0].'name'", containsString("English"))
                .body("[188].'languages'[0].'nativeName'", containsString("English"))
                .body("[188].'translations'.'de'", containsString("Sankt Helena"))
                .body("[188].'translations'.'es'", containsString("Santa Helena"))
                .body("[188].'translations'.'fr'", containsString("Sainte-Hélène"))
                .body("[188].'translations'.'ja'", containsString("セントヘレナ・アセンションおよびトリスタンダクーニャ"))
                .body("[188].'translations'.'it'", containsString("Sant'Elena"))
                .body("[188].'translations'.'br'", containsString("Santa Helena"))
                .body("[188].'translations'.'pt'", containsString("Santa Helena"))
                .body("[188].'translations'.'nl'", containsString("Sint-Helena"))
                .body("[188].'translations'.'hr'", containsString("Sveta Helena"))
                .body("[188].'translations'.'fa'", containsString("سنت هلنا، اسنشن و تریستان دا کونا"))
                .body("[188].'flag'", containsString("https://restcountries.eu/data/shn.svg"))
                .body("[188].'regionalBlocs'.size()", equalTo(1))
                .body("[188].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[188].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[188].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[188].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[188].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[188].'cioc'", nullValue())
                .body("[189].'name'", containsString("Saint Kitts and Nevis"))
                .body("[189].'topLevelDomain'.size()", equalTo(1))
                .body("[189].'topLevelDomain'", hasItems(".kn"))
                .body("[189].'alpha2Code'", containsString("KN"))
                .body("[189].'alpha3Code'", containsString("KNA"))
                .body("[189].'callingCodes'.size()", equalTo(1))
                .body("[189].'callingCodes'", hasItems("1"))
                .body("[189].'capital'", containsString("Basseterre"))
                .body("[189].'altSpellings'.size()", equalTo(2))
                .body("[189].'altSpellings'", hasItems("KN", "Federation of Saint Christopher and Nevis"))
                .body("[189].'region'", containsString("Americas"))
                .body("[189].'subregion'", containsString("Caribbean"))
                .body("[189].'population'", numberMatches(46204.0))
                .body("[189].'latlng'.size()", equalTo(2))
                .body("[189].'latlng'[0]", numberMatches(17.33333333))
                .body("[189].'latlng'[1]", numberMatches(-62.75))
                .body("[189].'demonym'", containsString("Kittian and Nevisian"))
                .body("[189].'area'", numberMatches(261.0))
                .body("[189].'gini'", nullValue())
                .body("[189].'timezones'.size()", equalTo(1))
                .body("[189].'timezones'", hasItems("UTC-04:00"))
                .body("[189].'borders'.size()", equalTo(0))
                .body("[189].'nativeName'", containsString("Saint Kitts and Nevis"))
                .body("[189].'numericCode'", containsString("659"))
                .body("[189].'currencies'.size()", equalTo(1))
                .body("[189].'currencies'[0].'code'", containsString("XCD"))
                .body("[189].'currencies'[0].'name'", containsString("East Caribbean dollar"))
                .body("[189].'currencies'[0].'symbol'", containsString("$"))
                .body("[189].'languages'.size()", equalTo(1))
                .body("[189].'languages'[0].'iso639_1'", containsString("en"))
                .body("[189].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[189].'languages'[0].'name'", containsString("English"))
                .body("[189].'languages'[0].'nativeName'", containsString("English"))
                .body("[189].'translations'.'de'", containsString("St. Kitts und Nevis"))
                .body("[189].'translations'.'es'", containsString("San Cristóbal y Nieves"))
                .body("[189].'translations'.'fr'", containsString("Saint-Christophe-et-Niévès"))
                .body("[189].'translations'.'ja'", containsString("セントクリストファー・ネイビス"))
                .body("[189].'translations'.'it'", containsString("Saint Kitts e Nevis"))
                .body("[189].'translations'.'br'", containsString("São Cristóvão e Neves"))
                .body("[189].'translations'.'pt'", containsString("São Cristóvão e Neves"))
                .body("[189].'translations'.'nl'", containsString("Saint Kitts en Nevis"))
                .body("[189].'translations'.'hr'", containsString("Sveti Kristof i Nevis"))
                .body("[189].'translations'.'fa'", containsString("سنت کیتس و نویس"))
                .body("[189].'flag'", containsString("https://restcountries.eu/data/kna.svg"))
                .body("[189].'regionalBlocs'.size()", equalTo(1))
                .body("[189].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[189].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[189].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[189].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[189].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[189].'cioc'", containsString("SKN"))
                .body("[190].'name'", containsString("Saint Lucia"))
                .body("[190].'topLevelDomain'.size()", equalTo(1))
                .body("[190].'topLevelDomain'", hasItems(".lc"))
                .body("[190].'alpha2Code'", containsString("LC"))
                .body("[190].'alpha3Code'", containsString("LCA"))
                .body("[190].'callingCodes'.size()", equalTo(1))
                .body("[190].'callingCodes'", hasItems("1"))
                .body("[190].'capital'", containsString("Castries"))
                .body("[190].'altSpellings'.size()", equalTo(1))
                .body("[190].'altSpellings'", hasItems("LC"))
                .body("[190].'region'", containsString("Americas"))
                .body("[190].'subregion'", containsString("Caribbean"))
                .body("[190].'population'", numberMatches(186000.0))
                .body("[190].'latlng'.size()", equalTo(2))
                .body("[190].'latlng'[0]", numberMatches(13.88333333))
                .body("[190].'latlng'[1]", numberMatches(-60.96666666))
                .body("[190].'demonym'", containsString("Saint Lucian"))
                .body("[190].'area'", numberMatches(616.0))
                .body("[190].'gini'", numberMatches(42.6))
                .body("[190].'timezones'.size()", equalTo(1))
                .body("[190].'timezones'", hasItems("UTC-04:00"))
                .body("[190].'borders'.size()", equalTo(0))
                .body("[190].'nativeName'", containsString("Saint Lucia"))
                .body("[190].'numericCode'", containsString("662"))
                .body("[190].'currencies'.size()", equalTo(1))
                .body("[190].'currencies'[0].'code'", containsString("XCD"))
                .body("[190].'currencies'[0].'name'", containsString("East Caribbean dollar"))
                .body("[190].'currencies'[0].'symbol'", containsString("$"))
                .body("[190].'languages'.size()", equalTo(1))
                .body("[190].'languages'[0].'iso639_1'", containsString("en"))
                .body("[190].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[190].'languages'[0].'name'", containsString("English"))
                .body("[190].'languages'[0].'nativeName'", containsString("English"))
                .body("[190].'translations'.'de'", containsString("Saint Lucia"))
                .body("[190].'translations'.'es'", containsString("Santa Lucía"))
                .body("[190].'translations'.'fr'", containsString("Saint-Lucie"))
                .body("[190].'translations'.'ja'", containsString("セントルシア"))
                .body("[190].'translations'.'it'", containsString("Santa Lucia"))
                .body("[190].'translations'.'br'", containsString("Santa Lúcia"))
                .body("[190].'translations'.'pt'", containsString("Santa Lúcia"))
                .body("[190].'translations'.'nl'", containsString("Saint Lucia"))
                .body("[190].'translations'.'hr'", containsString("Sveta Lucija"))
                .body("[190].'translations'.'fa'", containsString("سنت لوسیا"))
                .body("[190].'flag'", containsString("https://restcountries.eu/data/lca.svg"))
                .body("[190].'regionalBlocs'.size()", equalTo(1))
                .body("[190].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[190].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[190].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[190].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[190].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[190].'cioc'", containsString("LCA"))
                .body("[191].'name'", containsString("Saint Martin (French part)"))
                .body("[191].'topLevelDomain'.size()", equalTo(3))
                .body("[191].'topLevelDomain'", hasItems(".mf", ".fr", ".gp"))
                .body("[191].'alpha2Code'", containsString("MF"))
                .body("[191].'alpha3Code'", containsString("MAF"))
                .body("[191].'callingCodes'.size()", equalTo(1))
                .body("[191].'callingCodes'", hasItems("590"))
                .body("[191].'capital'", containsString("Marigot"))
                .body("[191].'altSpellings'.size()", equalTo(3))
                .body("[191].'altSpellings'", hasItems("MF", "Collectivity of Saint Martin", "Collectivité de Saint-Martin"))
                .body("[191].'region'", containsString("Americas"))
                .body("[191].'subregion'", containsString("Caribbean"))
                .body("[191].'population'", numberMatches(36979.0))
                .body("[191].'latlng'.size()", equalTo(2))
                .body("[191].'latlng'[0]", numberMatches(18.08333333))
                .body("[191].'latlng'[1]", numberMatches(-63.95))
                .body("[191].'demonym'", containsString("Saint Martin Islander"))
                .body("[191].'area'", numberMatches(53.0))
                .body("[191].'gini'", nullValue())
                .body("[191].'timezones'.size()", equalTo(1))
                .body("[191].'timezones'", hasItems("UTC-04:00"))
                .body("[191].'borders'.size()", equalTo(2))
                .body("[191].'borders'", hasItems("SXM", "NLD"))
                .body("[191].'nativeName'", containsString("Saint-Martin"))
                .body("[191].'numericCode'", containsString("663"))
                .body("[191].'currencies'.size()", equalTo(1))
                .body("[191].'currencies'[0].'code'", containsString("EUR"))
                .body("[191].'currencies'[0].'name'", containsString("Euro"))
                .body("[191].'currencies'[0].'symbol'", containsString("€"))
                .body("[191].'languages'.size()", equalTo(3))
                .body("[191].'languages'[0].'iso639_1'", containsString("en"))
                .body("[191].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[191].'languages'[0].'name'", containsString("English"))
                .body("[191].'languages'[0].'nativeName'", containsString("English"))
                .body("[191].'languages'[1].'iso639_1'", containsString("fr"))
                .body("[191].'languages'[1].'iso639_2'", containsString("fra"))
                .body("[191].'languages'[1].'name'", containsString("French"))
                .body("[191].'languages'[1].'nativeName'", containsString("français"))
                .body("[191].'languages'[2].'iso639_1'", containsString("nl"))
                .body("[191].'languages'[2].'iso639_2'", containsString("nld"))
                .body("[191].'languages'[2].'name'", containsString("Dutch"))
                .body("[191].'languages'[2].'nativeName'", containsString("Nederlands"))
                .body("[191].'translations'.'de'", containsString("Saint Martin"))
                .body("[191].'translations'.'es'", containsString("Saint Martin"))
                .body("[191].'translations'.'fr'", containsString("Saint-Martin"))
                .body("[191].'translations'.'ja'", containsString("サン・マルタン（フランス領）"))
                .body("[191].'translations'.'it'", containsString("Saint Martin"))
                .body("[191].'translations'.'br'", containsString("Saint Martin"))
                .body("[191].'translations'.'pt'", containsString("Ilha São Martinho"))
                .body("[191].'translations'.'nl'", containsString("Saint-Martin"))
                .body("[191].'translations'.'hr'", containsString("Sveti Martin"))
                .body("[191].'translations'.'fa'", containsString("سینت مارتن"))
                .body("[191].'flag'", containsString("https://restcountries.eu/data/maf.svg"))
                .body("[191].'regionalBlocs'.size()", equalTo(0))
                .body("[191].'cioc'", containsString(""))
                .body("[192].'name'", containsString("Saint Pierre and Miquelon"))
                .body("[192].'topLevelDomain'.size()", equalTo(1))
                .body("[192].'topLevelDomain'", hasItems(".pm"))
                .body("[192].'alpha2Code'", containsString("PM"))
                .body("[192].'alpha3Code'", containsString("SPM"))
                .body("[192].'callingCodes'.size()", equalTo(1))
                .body("[192].'callingCodes'", hasItems("508"))
                .body("[192].'capital'", containsString("Saint-Pierre"))
                .body("[192].'altSpellings'.size()", equalTo(2))
                .body("[192].'altSpellings'", hasItems("PM", "Collectivité territoriale de Saint-Pierre-et-Miquelon"))
                .body("[192].'region'", containsString("Americas"))
                .body("[192].'subregion'", containsString("Northern America"))
                .body("[192].'population'", numberMatches(6069.0))
                .body("[192].'latlng'.size()", equalTo(2))
                .body("[192].'latlng'[0]", numberMatches(46.83333333))
                .body("[192].'latlng'[1]", numberMatches(-56.33333333))
                .body("[192].'demonym'", containsString("French"))
                .body("[192].'area'", numberMatches(242.0))
                .body("[192].'gini'", nullValue())
                .body("[192].'timezones'.size()", equalTo(1))
                .body("[192].'timezones'", hasItems("UTC-03:00"))
                .body("[192].'borders'.size()", equalTo(0))
                .body("[192].'nativeName'", containsString("Saint-Pierre-et-Miquelon"))
                .body("[192].'numericCode'", containsString("666"))
                .body("[192].'currencies'.size()", equalTo(1))
                .body("[192].'currencies'[0].'code'", containsString("EUR"))
                .body("[192].'currencies'[0].'name'", containsString("Euro"))
                .body("[192].'currencies'[0].'symbol'", containsString("€"))
                .body("[192].'languages'.size()", equalTo(1))
                .body("[192].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[192].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[192].'languages'[0].'name'", containsString("French"))
                .body("[192].'languages'[0].'nativeName'", containsString("français"))
                .body("[192].'translations'.'de'", containsString("Saint-Pierre und Miquelon"))
                .body("[192].'translations'.'es'", containsString("San Pedro y Miquelón"))
                .body("[192].'translations'.'fr'", containsString("Saint-Pierre-et-Miquelon"))
                .body("[192].'translations'.'ja'", containsString("サンピエール島・ミクロン島"))
                .body("[192].'translations'.'it'", containsString("Saint-Pierre e Miquelon"))
                .body("[192].'translations'.'br'", containsString("Saint-Pierre e Miquelon"))
                .body("[192].'translations'.'pt'", containsString("São Pedro e Miquelon"))
                .body("[192].'translations'.'nl'", containsString("Saint Pierre en Miquelon"))
                .body("[192].'translations'.'hr'", containsString("Sveti Petar i Mikelon"))
                .body("[192].'translations'.'fa'", containsString("سن پیر و میکلن"))
                .body("[192].'flag'", containsString("https://restcountries.eu/data/spm.svg"))
                .body("[192].'regionalBlocs'.size()", equalTo(0))
                .body("[192].'cioc'", containsString(""))
                .body("[193].'name'", containsString("Saint Vincent and the Grenadines"))
                .body("[193].'topLevelDomain'.size()", equalTo(1))
                .body("[193].'topLevelDomain'", hasItems(".vc"))
                .body("[193].'alpha2Code'", containsString("VC"))
                .body("[193].'alpha3Code'", containsString("VCT"))
                .body("[193].'callingCodes'.size()", equalTo(1))
                .body("[193].'callingCodes'", hasItems("1"))
                .body("[193].'capital'", containsString("Kingstown"))
                .body("[193].'altSpellings'.size()", equalTo(1))
                .body("[193].'altSpellings'", hasItems("VC"))
                .body("[193].'region'", containsString("Americas"))
                .body("[193].'subregion'", containsString("Caribbean"))
                .body("[193].'population'", numberMatches(109991.0))
                .body("[193].'latlng'.size()", equalTo(2))
                .body("[193].'latlng'[0]", numberMatches(13.25))
                .body("[193].'latlng'[1]", numberMatches(-61.2))
                .body("[193].'demonym'", containsString("Saint Vincentian"))
                .body("[193].'area'", numberMatches(389.0))
                .body("[193].'gini'", nullValue())
                .body("[193].'timezones'.size()", equalTo(1))
                .body("[193].'timezones'", hasItems("UTC-04:00"))
                .body("[193].'borders'.size()", equalTo(0))
                .body("[193].'nativeName'", containsString("Saint Vincent and the Grenadines"))
                .body("[193].'numericCode'", containsString("670"))
                .body("[193].'currencies'.size()", equalTo(1))
                .body("[193].'currencies'[0].'code'", containsString("XCD"))
                .body("[193].'currencies'[0].'name'", containsString("East Caribbean dollar"))
                .body("[193].'currencies'[0].'symbol'", containsString("$"))
                .body("[193].'languages'.size()", equalTo(1))
                .body("[193].'languages'[0].'iso639_1'", containsString("en"))
                .body("[193].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[193].'languages'[0].'name'", containsString("English"))
                .body("[193].'languages'[0].'nativeName'", containsString("English"))
                .body("[193].'translations'.'de'", containsString("Saint Vincent und die Grenadinen"))
                .body("[193].'translations'.'es'", containsString("San Vicente y Granadinas"))
                .body("[193].'translations'.'fr'", containsString("Saint-Vincent-et-les-Grenadines"))
                .body("[193].'translations'.'ja'", containsString("セントビンセントおよびグレナディーン諸島"))
                .body("[193].'translations'.'it'", containsString("Saint Vincent e Grenadine"))
                .body("[193].'translations'.'br'", containsString("São Vicente e Granadinas"))
                .body("[193].'translations'.'pt'", containsString("São Vicente e Granadinas"))
                .body("[193].'translations'.'nl'", containsString("Saint Vincent en de Grenadines"))
                .body("[193].'translations'.'hr'", containsString("Sveti Vincent i Grenadini"))
                .body("[193].'translations'.'fa'", containsString("سنت وینسنت و گرنادین‌ها"))
                .body("[193].'flag'", containsString("https://restcountries.eu/data/vct.svg"))
                .body("[193].'regionalBlocs'.size()", equalTo(1))
                .body("[193].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[193].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[193].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[193].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[193].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[193].'cioc'", containsString("VIN"))
                .body("[194].'name'", containsString("Samoa"))
                .body("[194].'topLevelDomain'.size()", equalTo(1))
                .body("[194].'topLevelDomain'", hasItems(".ws"))
                .body("[194].'alpha2Code'", containsString("WS"))
                .body("[194].'alpha3Code'", containsString("WSM"))
                .body("[194].'callingCodes'.size()", equalTo(1))
                .body("[194].'callingCodes'", hasItems("685"))
                .body("[194].'capital'", containsString("Apia"))
                .body("[194].'altSpellings'.size()", equalTo(3))
                .body("[194].'altSpellings'", hasItems("WS", "Independent State of Samoa", "Malo Saʻoloto Tutoʻatasi o Sāmoa"))
                .body("[194].'region'", containsString("Oceania"))
                .body("[194].'subregion'", containsString("Polynesia"))
                .body("[194].'population'", numberMatches(194899.0))
                .body("[194].'latlng'.size()", equalTo(2))
                .body("[194].'latlng'[0]", numberMatches(-13.58333333))
                .body("[194].'latlng'[1]", numberMatches(-172.33333333))
                .body("[194].'demonym'", containsString("Samoan"))
                .body("[194].'area'", numberMatches(2842.0))
                .body("[194].'gini'", nullValue())
                .body("[194].'timezones'.size()", equalTo(1))
                .body("[194].'timezones'", hasItems("UTC+13:00"))
                .body("[194].'borders'.size()", equalTo(0))
                .body("[194].'nativeName'", containsString("Samoa"))
                .body("[194].'numericCode'", containsString("882"))
                .body("[194].'currencies'.size()", equalTo(1))
                .body("[194].'currencies'[0].'code'", containsString("WST"))
                .body("[194].'currencies'[0].'name'", containsString("Samoan tālā"))
                .body("[194].'currencies'[0].'symbol'", containsString("T"))
                .body("[194].'languages'.size()", equalTo(2))
                .body("[194].'languages'[0].'iso639_1'", containsString("sm"))
                .body("[194].'languages'[0].'iso639_2'", containsString("smo"))
                .body("[194].'languages'[0].'name'", containsString("Samoan"))
                .body("[194].'languages'[0].'nativeName'", containsString("gagana fa'a Samoa"))
                .body("[194].'languages'[1].'iso639_1'", containsString("en"))
                .body("[194].'languages'[1].'iso639_2'", containsString("eng"))
                .body("[194].'languages'[1].'name'", containsString("English"))
                .body("[194].'languages'[1].'nativeName'", containsString("English"))
                .body("[194].'translations'.'de'", containsString("Samoa"))
                .body("[194].'translations'.'es'", containsString("Samoa"))
                .body("[194].'translations'.'fr'", containsString("Samoa"))
                .body("[194].'translations'.'ja'", containsString("サモア"))
                .body("[194].'translations'.'it'", containsString("Samoa"))
                .body("[194].'translations'.'br'", containsString("Samoa"))
                .body("[194].'translations'.'pt'", containsString("Samoa"))
                .body("[194].'translations'.'nl'", containsString("Samoa"))
                .body("[194].'translations'.'hr'", containsString("Samoa"))
                .body("[194].'translations'.'fa'", containsString("ساموآ"))
                .body("[194].'flag'", containsString("https://restcountries.eu/data/wsm.svg"))
                .body("[194].'regionalBlocs'.size()", equalTo(0))
                .body("[194].'cioc'", containsString("SAM"))
                .body("[195].'name'", containsString("San Marino"))
                .body("[195].'topLevelDomain'.size()", equalTo(1))
                .body("[195].'topLevelDomain'", hasItems(".sm"))
                .body("[195].'alpha2Code'", containsString("SM"))
                .body("[195].'alpha3Code'", containsString("SMR"))
                .body("[195].'callingCodes'.size()", equalTo(1))
                .body("[195].'callingCodes'", hasItems("378"))
                .body("[195].'capital'", containsString("City of San Marino"))
                .body("[195].'altSpellings'.size()", equalTo(3))
                .body("[195].'altSpellings'", hasItems("SM", "Republic of San Marino", "Repubblica di San Marino"))
                .body("[195].'region'", containsString("Europe"))
                .body("[195].'subregion'", containsString("Southern Europe"))
                .body("[195].'population'", numberMatches(33005.0))
                .body("[195].'latlng'.size()", equalTo(2))
                .body("[195].'latlng'[0]", numberMatches(43.76666666))
                .body("[195].'latlng'[1]", numberMatches(12.41666666))
                .body("[195].'demonym'", containsString("Sammarinese"))
                .body("[195].'area'", numberMatches(61.0))
                .body("[195].'gini'", nullValue())
                .body("[195].'timezones'.size()", equalTo(1))
                .body("[195].'timezones'", hasItems("UTC+01:00"))
                .body("[195].'borders'.size()", equalTo(1))
                .body("[195].'borders'", hasItems("ITA"))
                .body("[195].'nativeName'", containsString("San Marino"))
                .body("[195].'numericCode'", containsString("674"))
                .body("[195].'currencies'.size()", equalTo(1))
                .body("[195].'currencies'[0].'code'", containsString("EUR"))
                .body("[195].'currencies'[0].'name'", containsString("Euro"))
                .body("[195].'currencies'[0].'symbol'", containsString("€"))
                .body("[195].'languages'.size()", equalTo(1))
                .body("[195].'languages'[0].'iso639_1'", containsString("it"))
                .body("[195].'languages'[0].'iso639_2'", containsString("ita"))
                .body("[195].'languages'[0].'name'", containsString("Italian"))
                .body("[195].'languages'[0].'nativeName'", containsString("Italiano"))
                .body("[195].'translations'.'de'", containsString("San Marino"))
                .body("[195].'translations'.'es'", containsString("San Marino"))
                .body("[195].'translations'.'fr'", containsString("Saint-Marin"))
                .body("[195].'translations'.'ja'", containsString("サンマリノ"))
                .body("[195].'translations'.'it'", containsString("San Marino"))
                .body("[195].'translations'.'br'", containsString("San Marino"))
                .body("[195].'translations'.'pt'", containsString("São Marinho"))
                .body("[195].'translations'.'nl'", containsString("San Marino"))
                .body("[195].'translations'.'hr'", containsString("San Marino"))
                .body("[195].'translations'.'fa'", containsString("سان مارینو"))
                .body("[195].'flag'", containsString("https://restcountries.eu/data/smr.svg"))
                .body("[195].'regionalBlocs'.size()", equalTo(0))
                .body("[195].'cioc'", containsString("SMR"))
                .body("[196].'name'", containsString("Sao Tome and Principe"))
                .body("[196].'topLevelDomain'.size()", equalTo(1))
                .body("[196].'topLevelDomain'", hasItems(".st"))
                .body("[196].'alpha2Code'", containsString("ST"))
                .body("[196].'alpha3Code'", containsString("STP"))
                .body("[196].'callingCodes'.size()", equalTo(1))
                .body("[196].'callingCodes'", hasItems("239"))
                .body("[196].'capital'", containsString("São Tomé"))
                .body("[196].'altSpellings'.size()", equalTo(3))
                .body("[196].'altSpellings'", hasItems("ST", "Democratic Republic of São Tomé and Príncipe", "República Democrática de São Tomé e Príncipe"))
                .body("[196].'region'", containsString("Africa"))
                .body("[196].'subregion'", containsString("Middle Africa"))
                .body("[196].'population'", numberMatches(187356.0))
                .body("[196].'latlng'.size()", equalTo(2))
                .body("[196].'latlng'[0]", numberMatches(1.0))
                .body("[196].'latlng'[1]", numberMatches(7.0))
                .body("[196].'demonym'", containsString("Sao Tomean"))
                .body("[196].'area'", numberMatches(964.0))
                .body("[196].'gini'", numberMatches(50.8))
                .body("[196].'timezones'.size()", equalTo(1))
                .body("[196].'timezones'", hasItems("UTC"))
                .body("[196].'borders'.size()", equalTo(0))
                .body("[196].'nativeName'", containsString("São Tomé e Príncipe"))
                .body("[196].'numericCode'", containsString("678"))
                .body("[196].'currencies'.size()", equalTo(1))
                .body("[196].'currencies'[0].'code'", containsString("STD"))
                .body("[196].'currencies'[0].'name'", containsString("São Tomé and Príncipe dobra"))
                .body("[196].'currencies'[0].'symbol'", containsString("Db"))
                .body("[196].'languages'.size()", equalTo(1))
                .body("[196].'languages'[0].'iso639_1'", containsString("pt"))
                .body("[196].'languages'[0].'iso639_2'", containsString("por"))
                .body("[196].'languages'[0].'name'", containsString("Portuguese"))
                .body("[196].'languages'[0].'nativeName'", containsString("Português"))
                .body("[196].'translations'.'de'", containsString("São Tomé und Príncipe"))
                .body("[196].'translations'.'es'", containsString("Santo Tomé y Príncipe"))
                .body("[196].'translations'.'fr'", containsString("Sao Tomé-et-Principe"))
                .body("[196].'translations'.'ja'", containsString("サントメ・プリンシペ"))
                .body("[196].'translations'.'it'", containsString("São Tomé e Príncipe"))
                .body("[196].'translations'.'br'", containsString("São Tomé e Príncipe"))
                .body("[196].'translations'.'pt'", containsString("São Tomé e Príncipe"))
                .body("[196].'translations'.'nl'", containsString("Sao Tomé en Principe"))
                .body("[196].'translations'.'hr'", containsString("Sveti Toma i Princip"))
                .body("[196].'translations'.'fa'", containsString("کواترو دو فرویرو"))
                .body("[196].'flag'", containsString("https://restcountries.eu/data/stp.svg"))
                .body("[196].'regionalBlocs'.size()", equalTo(1))
                .body("[196].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[196].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[196].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[196].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[196].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[196].'cioc'", containsString("STP"))
                .body("[197].'name'", containsString("Saudi Arabia"))
                .body("[197].'topLevelDomain'.size()", equalTo(1))
                .body("[197].'topLevelDomain'", hasItems(".sa"))
                .body("[197].'alpha2Code'", containsString("SA"))
                .body("[197].'alpha3Code'", containsString("SAU"))
                .body("[197].'callingCodes'.size()", equalTo(1))
                .body("[197].'callingCodes'", hasItems("966"))
                .body("[197].'capital'", containsString("Riyadh"))
                .body("[197].'altSpellings'.size()", equalTo(3))
                .body("[197].'altSpellings'", hasItems("SA", "Kingdom of Saudi Arabia", "Al-Mamlakah al-‘Arabiyyah as-Su‘ūdiyyah"))
                .body("[197].'region'", containsString("Asia"))
                .body("[197].'subregion'", containsString("Western Asia"))
                .body("[197].'population'", numberMatches(3.22482E7))
                .body("[197].'latlng'.size()", equalTo(2))
                .body("[197].'latlng'[0]", numberMatches(25.0))
                .body("[197].'latlng'[1]", numberMatches(45.0))
                .body("[197].'demonym'", containsString("Saudi Arabian"))
                .body("[197].'area'", numberMatches(2149690.0))
                .body("[197].'gini'", nullValue())
                .body("[197].'timezones'.size()", equalTo(1))
                .body("[197].'timezones'", hasItems("UTC+03:00"))
                .body("[197].'borders'.size()", equalTo(7))
                .body("[197].'borders'", hasItems("IRQ", "JOR", "KWT", "OMN", "QAT", "ARE", "YEM"))
                .body("[197].'nativeName'", containsString("العربية السعودية"))
                .body("[197].'numericCode'", containsString("682"))
                .body("[197].'currencies'.size()", equalTo(1))
                .body("[197].'currencies'[0].'code'", containsString("SAR"))
                .body("[197].'currencies'[0].'name'", containsString("Saudi riyal"))
                .body("[197].'currencies'[0].'symbol'", containsString("ر.س"))
                .body("[197].'languages'.size()", equalTo(1))
                .body("[197].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[197].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[197].'languages'[0].'name'", containsString("Arabic"))
                .body("[197].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[197].'translations'.'de'", containsString("Saudi-Arabien"))
                .body("[197].'translations'.'es'", containsString("Arabia Saudí"))
                .body("[197].'translations'.'fr'", containsString("Arabie Saoudite"))
                .body("[197].'translations'.'ja'", containsString("サウジアラビア"))
                .body("[197].'translations'.'it'", containsString("Arabia Saudita"))
                .body("[197].'translations'.'br'", containsString("Arábia Saudita"))
                .body("[197].'translations'.'pt'", containsString("Arábia Saudita"))
                .body("[197].'translations'.'nl'", containsString("Saoedi-Arabië"))
                .body("[197].'translations'.'hr'", containsString("Saudijska Arabija"))
                .body("[197].'translations'.'fa'", containsString("عربستان سعودی"))
                .body("[197].'flag'", containsString("https://restcountries.eu/data/sau.svg"))
                .body("[197].'regionalBlocs'.size()", equalTo(1))
                .body("[197].'regionalBlocs'[0].'acronym'", containsString("AL"))
                .body("[197].'regionalBlocs'[0].'name'", containsString("Arab League"))
                .body("[197].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[197].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[197].'regionalBlocs'[0].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[197].'cioc'", containsString("KSA"))
                .body("[198].'name'", containsString("Senegal"))
                .body("[198].'topLevelDomain'.size()", equalTo(1))
                .body("[198].'topLevelDomain'", hasItems(".sn"))
                .body("[198].'alpha2Code'", containsString("SN"))
                .body("[198].'alpha3Code'", containsString("SEN"))
                .body("[198].'callingCodes'.size()", equalTo(1))
                .body("[198].'callingCodes'", hasItems("221"))
                .body("[198].'capital'", containsString("Dakar"))
                .body("[198].'altSpellings'.size()", equalTo(3))
                .body("[198].'altSpellings'", hasItems("SN", "Republic of Senegal", "République du Sénégal"))
                .body("[198].'region'", containsString("Africa"))
                .body("[198].'subregion'", containsString("Western Africa"))
                .body("[198].'population'", numberMatches(1.4799859E7))
                .body("[198].'latlng'.size()", equalTo(2))
                .body("[198].'latlng'[0]", numberMatches(14.0))
                .body("[198].'latlng'[1]", numberMatches(-14.0))
                .body("[198].'demonym'", containsString("Senegalese"))
                .body("[198].'area'", numberMatches(196722.0))
                .body("[198].'gini'", numberMatches(39.2))
                .body("[198].'timezones'.size()", equalTo(1))
                .body("[198].'timezones'", hasItems("UTC"))
                .body("[198].'borders'.size()", equalTo(5))
                .body("[198].'borders'", hasItems("GMB", "GIN", "GNB", "MLI", "MRT"))
                .body("[198].'nativeName'", containsString("Sénégal"))
                .body("[198].'numericCode'", containsString("686"))
                .body("[198].'currencies'.size()", equalTo(1))
                .body("[198].'currencies'[0].'code'", containsString("XOF"))
                .body("[198].'currencies'[0].'name'", containsString("West African CFA franc"))
                .body("[198].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[198].'languages'.size()", equalTo(1))
                .body("[198].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[198].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[198].'languages'[0].'name'", containsString("French"))
                .body("[198].'languages'[0].'nativeName'", containsString("français"))
                .body("[198].'translations'.'de'", containsString("Senegal"))
                .body("[198].'translations'.'es'", containsString("Senegal"))
                .body("[198].'translations'.'fr'", containsString("Sénégal"))
                .body("[198].'translations'.'ja'", containsString("セネガル"))
                .body("[198].'translations'.'it'", containsString("Senegal"))
                .body("[198].'translations'.'br'", containsString("Senegal"))
                .body("[198].'translations'.'pt'", containsString("Senegal"))
                .body("[198].'translations'.'nl'", containsString("Senegal"))
                .body("[198].'translations'.'hr'", containsString("Senegal"))
                .body("[198].'translations'.'fa'", containsString("سنگال"))
                .body("[198].'flag'", containsString("https://restcountries.eu/data/sen.svg"))
                .body("[198].'regionalBlocs'.size()", equalTo(1))
                .body("[198].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[198].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[198].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[198].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[198].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[198].'cioc'", containsString("SEN"))
                .body("[199].'name'", containsString("Serbia"))
                .body("[199].'topLevelDomain'.size()", equalTo(1))
                .body("[199].'topLevelDomain'", hasItems(".rs"))
                .body("[199].'alpha2Code'", containsString("RS"))
                .body("[199].'alpha3Code'", containsString("SRB"))
                .body("[199].'callingCodes'.size()", equalTo(1))
                .body("[199].'callingCodes'", hasItems("381"))
                .body("[199].'capital'", containsString("Belgrade"))
                .body("[199].'altSpellings'.size()", equalTo(5))
                .body("[199].'altSpellings'", hasItems("RS", "Srbija", "Republic of Serbia", "Република Србија", "Republika Srbija"))
                .body("[199].'region'", containsString("Europe"))
                .body("[199].'subregion'", containsString("Southern Europe"))
                .body("[199].'population'", numberMatches(7076372.0))
                .body("[199].'latlng'.size()", equalTo(2))
                .body("[199].'latlng'[0]", numberMatches(44.0))
                .body("[199].'latlng'[1]", numberMatches(21.0))
                .body("[199].'demonym'", containsString("Serbian"))
                .body("[199].'area'", numberMatches(88361.0))
                .body("[199].'gini'", numberMatches(27.8))
                .body("[199].'timezones'.size()", equalTo(1))
                .body("[199].'timezones'", hasItems("UTC+01:00"))
                .body("[199].'borders'.size()", equalTo(8))
                .body("[199].'borders'", hasItems("BIH", "BGR", "HRV", "HUN", "KOS", "MKD", "MNE", "ROU"))
                .body("[199].'nativeName'", containsString("Србија"))
                .body("[199].'numericCode'", containsString("688"))
                .body("[199].'currencies'.size()", equalTo(1))
                .body("[199].'currencies'[0].'code'", containsString("RSD"))
                .body("[199].'currencies'[0].'name'", containsString("Serbian dinar"))
                .body("[199].'currencies'[0].'symbol'", containsString("дин."))
                .body("[199].'languages'.size()", equalTo(1))
                .body("[199].'languages'[0].'iso639_1'", containsString("sr"))
                .body("[199].'languages'[0].'iso639_2'", containsString("srp"))
                .body("[199].'languages'[0].'name'", containsString("Serbian"))
                .body("[199].'languages'[0].'nativeName'", containsString("српски језик"))
                .body("[199].'translations'.'de'", containsString("Serbien"))
                .body("[199].'translations'.'es'", containsString("Serbia"))
                .body("[199].'translations'.'fr'", containsString("Serbie"))
                .body("[199].'translations'.'ja'", containsString("セルビア"))
                .body("[199].'translations'.'it'", containsString("Serbia"))
                .body("[199].'translations'.'br'", containsString("Sérvia"))
                .body("[199].'translations'.'pt'", containsString("Sérvia"))
                .body("[199].'translations'.'nl'", containsString("Servië"))
                .body("[199].'translations'.'hr'", containsString("Srbija"))
                .body("[199].'translations'.'fa'", containsString("صربستان"))
                .body("[199].'flag'", containsString("https://restcountries.eu/data/srb.svg"))
                .body("[199].'regionalBlocs'.size()", equalTo(1))
                .body("[199].'regionalBlocs'[0].'acronym'", containsString("CEFTA"))
                .body("[199].'regionalBlocs'[0].'name'", containsString("Central European Free Trade Agreement"))
                .body("[199].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[199].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[199].'cioc'", containsString("SRB"))
                .body("[200].'name'", containsString("Seychelles"))
                .body("[200].'topLevelDomain'.size()", equalTo(1))
                .body("[200].'topLevelDomain'", hasItems(".sc"))
                .body("[200].'alpha2Code'", containsString("SC"))
                .body("[200].'alpha3Code'", containsString("SYC"))
                .body("[200].'callingCodes'.size()", equalTo(1))
                .body("[200].'callingCodes'", hasItems("248"))
                .body("[200].'capital'", containsString("Victoria"))
                .body("[200].'altSpellings'.size()", equalTo(4))
                .body("[200].'altSpellings'", hasItems("SC", "Republic of Seychelles", "Repiblik Sesel", "République des Seychelles"))
                .body("[200].'region'", containsString("Africa"))
                .body("[200].'subregion'", containsString("Eastern Africa"))
                .body("[200].'population'", numberMatches(91400.0))
                .body("[200].'latlng'.size()", equalTo(2))
                .body("[200].'latlng'[0]", numberMatches(-4.58333333))
                .body("[200].'latlng'[1]", numberMatches(55.66666666))
                .body("[200].'demonym'", containsString("Seychellois"))
                .body("[200].'area'", numberMatches(452.0))
                .body("[200].'gini'", numberMatches(65.8))
                .body("[200].'timezones'.size()", equalTo(1))
                .body("[200].'timezones'", hasItems("UTC+04:00"))
                .body("[200].'borders'.size()", equalTo(0))
                .body("[200].'nativeName'", containsString("Seychelles"))
                .body("[200].'numericCode'", containsString("690"))
                .body("[200].'currencies'.size()", equalTo(1))
                .body("[200].'currencies'[0].'code'", containsString("SCR"))
                .body("[200].'currencies'[0].'name'", containsString("Seychellois rupee"))
                .body("[200].'currencies'[0].'symbol'", containsString("₨"))
                .body("[200].'languages'.size()", equalTo(2))
                .body("[200].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[200].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[200].'languages'[0].'name'", containsString("French"))
                .body("[200].'languages'[0].'nativeName'", containsString("français"))
                .body("[200].'languages'[1].'iso639_1'", containsString("en"))
                .body("[200].'languages'[1].'iso639_2'", containsString("eng"))
                .body("[200].'languages'[1].'name'", containsString("English"))
                .body("[200].'languages'[1].'nativeName'", containsString("English"))
                .body("[200].'translations'.'de'", containsString("Seychellen"))
                .body("[200].'translations'.'es'", containsString("Seychelles"))
                .body("[200].'translations'.'fr'", containsString("Seychelles"))
                .body("[200].'translations'.'ja'", containsString("セーシェル"))
                .body("[200].'translations'.'it'", containsString("Seychelles"))
                .body("[200].'translations'.'br'", containsString("Seicheles"))
                .body("[200].'translations'.'pt'", containsString("Seicheles"))
                .body("[200].'translations'.'nl'", containsString("Seychellen"))
                .body("[200].'translations'.'hr'", containsString("Sejšeli"))
                .body("[200].'translations'.'fa'", containsString("سیشل"))
                .body("[200].'flag'", containsString("https://restcountries.eu/data/syc.svg"))
                .body("[200].'regionalBlocs'.size()", equalTo(1))
                .body("[200].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[200].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[200].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[200].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[200].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[200].'cioc'", containsString("SEY"))
                .body("[201].'name'", containsString("Sierra Leone"))
                .body("[201].'topLevelDomain'.size()", equalTo(1))
                .body("[201].'topLevelDomain'", hasItems(".sl"))
                .body("[201].'alpha2Code'", containsString("SL"))
                .body("[201].'alpha3Code'", containsString("SLE"))
                .body("[201].'callingCodes'.size()", equalTo(1))
                .body("[201].'callingCodes'", hasItems("232"))
                .body("[201].'capital'", containsString("Freetown"))
                .body("[201].'altSpellings'.size()", equalTo(2))
                .body("[201].'altSpellings'", hasItems("SL", "Republic of Sierra Leone"))
                .body("[201].'region'", containsString("Africa"))
                .body("[201].'subregion'", containsString("Western Africa"))
                .body("[201].'population'", numberMatches(7075641.0))
                .body("[201].'latlng'.size()", equalTo(2))
                .body("[201].'latlng'[0]", numberMatches(8.5))
                .body("[201].'latlng'[1]", numberMatches(-11.5))
                .body("[201].'demonym'", containsString("Sierra Leonean"))
                .body("[201].'area'", numberMatches(71740.0))
                .body("[201].'gini'", numberMatches(42.5))
                .body("[201].'timezones'.size()", equalTo(1))
                .body("[201].'timezones'", hasItems("UTC"))
                .body("[201].'borders'.size()", equalTo(2))
                .body("[201].'borders'", hasItems("GIN", "LBR"))
                .body("[201].'nativeName'", containsString("Sierra Leone"))
                .body("[201].'numericCode'", containsString("694"))
                .body("[201].'currencies'.size()", equalTo(1))
                .body("[201].'currencies'[0].'code'", containsString("SLL"))
                .body("[201].'currencies'[0].'name'", containsString("Sierra Leonean leone"))
                .body("[201].'currencies'[0].'symbol'", containsString("Le"))
                .body("[201].'languages'.size()", equalTo(1))
                .body("[201].'languages'[0].'iso639_1'", containsString("en"))
                .body("[201].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[201].'languages'[0].'name'", containsString("English"))
                .body("[201].'languages'[0].'nativeName'", containsString("English"))
                .body("[201].'translations'.'de'", containsString("Sierra Leone"))
                .body("[201].'translations'.'es'", containsString("Sierra Leone"))
                .body("[201].'translations'.'fr'", containsString("Sierra Leone"))
                .body("[201].'translations'.'ja'", containsString("シエラレオネ"))
                .body("[201].'translations'.'it'", containsString("Sierra Leone"))
                .body("[201].'translations'.'br'", containsString("Serra Leoa"))
                .body("[201].'translations'.'pt'", containsString("Serra Leoa"))
                .body("[201].'translations'.'nl'", containsString("Sierra Leone"))
                .body("[201].'translations'.'hr'", containsString("Sijera Leone"))
                .body("[201].'translations'.'fa'", containsString("سیرالئون"))
                .body("[201].'flag'", containsString("https://restcountries.eu/data/sle.svg"))
                .body("[201].'regionalBlocs'.size()", equalTo(1))
                .body("[201].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[201].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[201].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[201].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[201].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[201].'cioc'", containsString("SLE"))
                .body("[202].'name'", containsString("Singapore"))
                .body("[202].'topLevelDomain'.size()", equalTo(1))
                .body("[202].'topLevelDomain'", hasItems(".sg"))
                .body("[202].'alpha2Code'", containsString("SG"))
                .body("[202].'alpha3Code'", containsString("SGP"))
                .body("[202].'callingCodes'.size()", equalTo(1))
                .body("[202].'callingCodes'", hasItems("65"))
                .body("[202].'capital'", containsString("Singapore"))
                .body("[202].'altSpellings'.size()", equalTo(4))
                .body("[202].'altSpellings'", hasItems("SG", "Singapura", "Republik Singapura", "新加坡共和国"))
                .body("[202].'region'", containsString("Asia"))
                .body("[202].'subregion'", containsString("South-Eastern Asia"))
                .body("[202].'population'", numberMatches(5535000.0))
                .body("[202].'latlng'.size()", equalTo(2))
                .body("[202].'latlng'[0]", numberMatches(1.36666666))
                .body("[202].'latlng'[1]", numberMatches(103.8))
                .body("[202].'demonym'", containsString("Singaporean"))
                .body("[202].'area'", numberMatches(710.0))
                .body("[202].'gini'", numberMatches(48.1))
                .body("[202].'timezones'.size()", equalTo(1))
                .body("[202].'timezones'", hasItems("UTC+08:00"))
                .body("[202].'borders'.size()", equalTo(0))
                .body("[202].'nativeName'", containsString("Singapore"))
                .body("[202].'numericCode'", containsString("702"))
                .body("[202].'currencies'.size()", equalTo(2))
                .body("[202].'currencies'[0].'code'", containsString("BND"))
                .body("[202].'currencies'[0].'name'", containsString("Brunei dollar"))
                .body("[202].'currencies'[0].'symbol'", containsString("$"))
                .body("[202].'currencies'[1].'code'", containsString("SGD"))
                .body("[202].'currencies'[1].'name'", containsString("Singapore dollar"))
                .body("[202].'currencies'[1].'symbol'", containsString("$"))
                .body("[202].'languages'.size()", equalTo(4))
                .body("[202].'languages'[0].'iso639_1'", containsString("en"))
                .body("[202].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[202].'languages'[0].'name'", containsString("English"))
                .body("[202].'languages'[0].'nativeName'", containsString("English"))
                .body("[202].'languages'[1].'iso639_1'", containsString("ms"))
                .body("[202].'languages'[1].'iso639_2'", containsString("msa"))
                .body("[202].'languages'[1].'name'", containsString("Malay"))
                .body("[202].'languages'[1].'nativeName'", containsString("bahasa Melayu"))
                .body("[202].'languages'[2].'iso639_1'", containsString("ta"))
                .body("[202].'languages'[2].'iso639_2'", containsString("tam"))
                .body("[202].'languages'[2].'name'", containsString("Tamil"))
                .body("[202].'languages'[2].'nativeName'", containsString("தமிழ்"))
                .body("[202].'languages'[3].'iso639_1'", containsString("zh"))
                .body("[202].'languages'[3].'iso639_2'", containsString("zho"))
                .body("[202].'languages'[3].'name'", containsString("Chinese"))
                .body("[202].'languages'[3].'nativeName'", containsString("中文 (Zhōngwén)"))
                .body("[202].'translations'.'de'", containsString("Singapur"))
                .body("[202].'translations'.'es'", containsString("Singapur"))
                .body("[202].'translations'.'fr'", containsString("Singapour"))
                .body("[202].'translations'.'ja'", containsString("シンガポール"))
                .body("[202].'translations'.'it'", containsString("Singapore"))
                .body("[202].'translations'.'br'", containsString("Singapura"))
                .body("[202].'translations'.'pt'", containsString("Singapura"))
                .body("[202].'translations'.'nl'", containsString("Singapore"))
                .body("[202].'translations'.'hr'", containsString("Singapur"))
                .body("[202].'translations'.'fa'", containsString("سنگاپور"))
                .body("[202].'flag'", containsString("https://restcountries.eu/data/sgp.svg"))
                .body("[202].'regionalBlocs'.size()", equalTo(1))
                .body("[202].'regionalBlocs'[0].'acronym'", containsString("ASEAN"))
                .body("[202].'regionalBlocs'[0].'name'", containsString("Association of Southeast Asian Nations"))
                .body("[202].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[202].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[202].'cioc'", containsString("SIN"))
                .body("[203].'name'", containsString("Sint Maarten (Dutch part)"))
                .body("[203].'topLevelDomain'.size()", equalTo(1))
                .body("[203].'topLevelDomain'", hasItems(".sx"))
                .body("[203].'alpha2Code'", containsString("SX"))
                .body("[203].'alpha3Code'", containsString("SXM"))
                .body("[203].'callingCodes'.size()", equalTo(1))
                .body("[203].'callingCodes'", hasItems("1"))
                .body("[203].'capital'", containsString("Philipsburg"))
                .body("[203].'altSpellings'.size()", equalTo(1))
                .body("[203].'altSpellings'", hasItems("SX"))
                .body("[203].'region'", containsString("Americas"))
                .body("[203].'subregion'", containsString("Caribbean"))
                .body("[203].'population'", numberMatches(38247.0))
                .body("[203].'latlng'.size()", equalTo(2))
                .body("[203].'latlng'[0]", numberMatches(18.033333))
                .body("[203].'latlng'[1]", numberMatches(-63.05))
                .body("[203].'demonym'", containsString("Dutch"))
                .body("[203].'area'", numberMatches(34.0))
                .body("[203].'gini'", nullValue())
                .body("[203].'timezones'.size()", equalTo(1))
                .body("[203].'timezones'", hasItems("UTC-04:00"))
                .body("[203].'borders'.size()", equalTo(1))
                .body("[203].'borders'", hasItems("MAF"))
                .body("[203].'nativeName'", containsString("Sint Maarten"))
                .body("[203].'numericCode'", containsString("534"))
                .body("[203].'currencies'.size()", equalTo(1))
                .body("[203].'currencies'[0].'code'", containsString("ANG"))
                .body("[203].'currencies'[0].'name'", containsString("Netherlands Antillean guilder"))
                .body("[203].'currencies'[0].'symbol'", containsString("ƒ"))
                .body("[203].'languages'.size()", equalTo(2))
                .body("[203].'languages'[0].'iso639_1'", containsString("nl"))
                .body("[203].'languages'[0].'iso639_2'", containsString("nld"))
                .body("[203].'languages'[0].'name'", containsString("Dutch"))
                .body("[203].'languages'[0].'nativeName'", containsString("Nederlands"))
                .body("[203].'languages'[1].'iso639_1'", containsString("en"))
                .body("[203].'languages'[1].'iso639_2'", containsString("eng"))
                .body("[203].'languages'[1].'name'", containsString("English"))
                .body("[203].'languages'[1].'nativeName'", containsString("English"))
                .body("[203].'translations'.'de'", containsString("Sint Maarten (niederl. Teil)"))
                .body("[203].'translations'.'es'", nullValue())
                .body("[203].'translations'.'fr'", containsString("Saint Martin (partie néerlandaise)"))
                .body("[203].'translations'.'ja'", nullValue())
                .body("[203].'translations'.'it'", containsString("Saint Martin (parte olandese)"))
                .body("[203].'translations'.'br'", containsString("Sint Maarten"))
                .body("[203].'translations'.'pt'", containsString("São Martinho"))
                .body("[203].'translations'.'nl'", containsString("Sint Maarten"))
                .body("[203].'translations'.'hr'", nullValue())
                .body("[203].'translations'.'fa'", containsString("سینت مارتن"))
                .body("[203].'flag'", containsString("https://restcountries.eu/data/sxm.svg"))
                .body("[203].'regionalBlocs'.size()", equalTo(0))
                .body("[203].'cioc'", containsString(""))
                .body("[204].'name'", containsString("Slovakia"))
                .body("[204].'topLevelDomain'.size()", equalTo(1))
                .body("[204].'topLevelDomain'", hasItems(".sk"))
                .body("[204].'alpha2Code'", containsString("SK"))
                .body("[204].'alpha3Code'", containsString("SVK"))
                .body("[204].'callingCodes'.size()", equalTo(1))
                .body("[204].'callingCodes'", hasItems("421"))
                .body("[204].'capital'", containsString("Bratislava"))
                .body("[204].'altSpellings'.size()", equalTo(3))
                .body("[204].'altSpellings'", hasItems("SK", "Slovak Republic", "Slovenská republika"))
                .body("[204].'region'", containsString("Europe"))
                .body("[204].'subregion'", containsString("Eastern Europe"))
                .body("[204].'population'", numberMatches(5426252.0))
                .body("[204].'latlng'.size()", equalTo(2))
                .body("[204].'latlng'[0]", numberMatches(48.66666666))
                .body("[204].'latlng'[1]", numberMatches(19.5))
                .body("[204].'demonym'", containsString("Slovak"))
                .body("[204].'area'", numberMatches(49037.0))
                .body("[204].'gini'", numberMatches(26.0))
                .body("[204].'timezones'.size()", equalTo(1))
                .body("[204].'timezones'", hasItems("UTC+01:00"))
                .body("[204].'borders'.size()", equalTo(5))
                .body("[204].'borders'", hasItems("AUT", "CZE", "HUN", "POL", "UKR"))
                .body("[204].'nativeName'", containsString("Slovensko"))
                .body("[204].'numericCode'", containsString("703"))
                .body("[204].'currencies'.size()", equalTo(1))
                .body("[204].'currencies'[0].'code'", containsString("EUR"))
                .body("[204].'currencies'[0].'name'", containsString("Euro"))
                .body("[204].'currencies'[0].'symbol'", containsString("€"))
                .body("[204].'languages'.size()", equalTo(1))
                .body("[204].'languages'[0].'iso639_1'", containsString("sk"))
                .body("[204].'languages'[0].'iso639_2'", containsString("slk"))
                .body("[204].'languages'[0].'name'", containsString("Slovak"))
                .body("[204].'languages'[0].'nativeName'", containsString("slovenčina"))
                .body("[204].'translations'.'de'", containsString("Slowakei"))
                .body("[204].'translations'.'es'", containsString("República Eslovaca"))
                .body("[204].'translations'.'fr'", containsString("Slovaquie"))
                .body("[204].'translations'.'ja'", containsString("スロバキア"))
                .body("[204].'translations'.'it'", containsString("Slovacchia"))
                .body("[204].'translations'.'br'", containsString("Eslováquia"))
                .body("[204].'translations'.'pt'", containsString("Eslováquia"))
                .body("[204].'translations'.'nl'", containsString("Slowakije"))
                .body("[204].'translations'.'hr'", containsString("Slovačka"))
                .body("[204].'translations'.'fa'", containsString("اسلواکی"))
                .body("[204].'flag'", containsString("https://restcountries.eu/data/svk.svg"))
                .body("[204].'regionalBlocs'.size()", equalTo(1))
                .body("[204].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[204].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[204].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[204].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[204].'cioc'", containsString("SVK"))
                .body("[205].'name'", containsString("Slovenia"))
                .body("[205].'topLevelDomain'.size()", equalTo(1))
                .body("[205].'topLevelDomain'", hasItems(".si"))
                .body("[205].'alpha2Code'", containsString("SI"))
                .body("[205].'alpha3Code'", containsString("SVN"))
                .body("[205].'callingCodes'.size()", equalTo(1))
                .body("[205].'callingCodes'", hasItems("386"))
                .body("[205].'capital'", containsString("Ljubljana"))
                .body("[205].'altSpellings'.size()", equalTo(3))
                .body("[205].'altSpellings'", hasItems("SI", "Republic of Slovenia", "Republika Slovenija"))
                .body("[205].'region'", containsString("Europe"))
                .body("[205].'subregion'", containsString("Southern Europe"))
                .body("[205].'population'", numberMatches(2064188.0))
                .body("[205].'latlng'.size()", equalTo(2))
                .body("[205].'latlng'[0]", numberMatches(46.11666666))
                .body("[205].'latlng'[1]", numberMatches(14.81666666))
                .body("[205].'demonym'", containsString("Slovene"))
                .body("[205].'area'", numberMatches(20273.0))
                .body("[205].'gini'", numberMatches(31.2))
                .body("[205].'timezones'.size()", equalTo(1))
                .body("[205].'timezones'", hasItems("UTC+01:00"))
                .body("[205].'borders'.size()", equalTo(4))
                .body("[205].'borders'", hasItems("AUT", "HRV", "ITA", "HUN"))
                .body("[205].'nativeName'", containsString("Slovenija"))
                .body("[205].'numericCode'", containsString("705"))
                .body("[205].'currencies'.size()", equalTo(1))
                .body("[205].'currencies'[0].'code'", containsString("EUR"))
                .body("[205].'currencies'[0].'name'", containsString("Euro"))
                .body("[205].'currencies'[0].'symbol'", containsString("€"))
                .body("[205].'languages'.size()", equalTo(1))
                .body("[205].'languages'[0].'iso639_1'", containsString("sl"))
                .body("[205].'languages'[0].'iso639_2'", containsString("slv"))
                .body("[205].'languages'[0].'name'", containsString("Slovene"))
                .body("[205].'languages'[0].'nativeName'", containsString("slovenski jezik"))
                .body("[205].'translations'.'de'", containsString("Slowenien"))
                .body("[205].'translations'.'es'", containsString("Eslovenia"))
                .body("[205].'translations'.'fr'", containsString("Slovénie"))
                .body("[205].'translations'.'ja'", containsString("スロベニア"))
                .body("[205].'translations'.'it'", containsString("Slovenia"))
                .body("[205].'translations'.'br'", containsString("Eslovênia"))
                .body("[205].'translations'.'pt'", containsString("Eslovénia"))
                .body("[205].'translations'.'nl'", containsString("Slovenië"))
                .body("[205].'translations'.'hr'", containsString("Slovenija"))
                .body("[205].'translations'.'fa'", containsString("اسلوونی"))
                .body("[205].'flag'", containsString("https://restcountries.eu/data/svn.svg"))
                .body("[205].'regionalBlocs'.size()", equalTo(1))
                .body("[205].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[205].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[205].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[205].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[205].'cioc'", containsString("SLO"))
                .body("[206].'name'", containsString("Solomon Islands"))
                .body("[206].'topLevelDomain'.size()", equalTo(1))
                .body("[206].'topLevelDomain'", hasItems(".sb"))
                .body("[206].'alpha2Code'", containsString("SB"))
                .body("[206].'alpha3Code'", containsString("SLB"))
                .body("[206].'callingCodes'.size()", equalTo(1))
                .body("[206].'callingCodes'", hasItems("677"))
                .body("[206].'capital'", containsString("Honiara"))
                .body("[206].'altSpellings'.size()", equalTo(1))
                .body("[206].'altSpellings'", hasItems("SB"))
                .body("[206].'region'", containsString("Oceania"))
                .body("[206].'subregion'", containsString("Melanesia"))
                .body("[206].'population'", numberMatches(642000.0))
                .body("[206].'latlng'.size()", equalTo(2))
                .body("[206].'latlng'[0]", numberMatches(-8.0))
                .body("[206].'latlng'[1]", numberMatches(159.0))
                .body("[206].'demonym'", containsString("Solomon Islander"))
                .body("[206].'area'", numberMatches(28896.0))
                .body("[206].'gini'", nullValue())
                .body("[206].'timezones'.size()", equalTo(1))
                .body("[206].'timezones'", hasItems("UTC+11:00"))
                .body("[206].'borders'.size()", equalTo(0))
                .body("[206].'nativeName'", containsString("Solomon Islands"))
                .body("[206].'numericCode'", containsString("090"))
                .body("[206].'currencies'.size()", equalTo(1))
                .body("[206].'currencies'[0].'code'", containsString("SBD"))
                .body("[206].'currencies'[0].'name'", containsString("Solomon Islands dollar"))
                .body("[206].'currencies'[0].'symbol'", containsString("$"))
                .body("[206].'languages'.size()", equalTo(1))
                .body("[206].'languages'[0].'iso639_1'", containsString("en"))
                .body("[206].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[206].'languages'[0].'name'", containsString("English"))
                .body("[206].'languages'[0].'nativeName'", containsString("English"))
                .body("[206].'translations'.'de'", containsString("Salomonen"))
                .body("[206].'translations'.'es'", containsString("Islas Salomón"))
                .body("[206].'translations'.'fr'", containsString("Îles Salomon"))
                .body("[206].'translations'.'ja'", containsString("ソロモン諸島"))
                .body("[206].'translations'.'it'", containsString("Isole Salomone"))
                .body("[206].'translations'.'br'", containsString("Ilhas Salomão"))
                .body("[206].'translations'.'pt'", containsString("Ilhas Salomão"))
                .body("[206].'translations'.'nl'", containsString("Salomonseilanden"))
                .body("[206].'translations'.'hr'", containsString("Solomonski Otoci"))
                .body("[206].'translations'.'fa'", containsString("جزایر سلیمان"))
                .body("[206].'flag'", containsString("https://restcountries.eu/data/slb.svg"))
                .body("[206].'regionalBlocs'.size()", equalTo(0))
                .body("[206].'cioc'", containsString("SOL"))
                .body("[207].'name'", containsString("Somalia"))
                .body("[207].'topLevelDomain'.size()", equalTo(1))
                .body("[207].'topLevelDomain'", hasItems(".so"))
                .body("[207].'alpha2Code'", containsString("SO"))
                .body("[207].'alpha3Code'", containsString("SOM"))
                .body("[207].'callingCodes'.size()", equalTo(1))
                .body("[207].'callingCodes'", hasItems("252"))
                .body("[207].'capital'", containsString("Mogadishu"))
                .body("[207].'altSpellings'.size()", equalTo(5))
                .body("[207].'altSpellings'", hasItems("SO", "aṣ-Ṣūmāl", "Federal Republic of Somalia", "Jamhuuriyadda Federaalka Soomaaliya", "Jumhūriyyat aṣ-Ṣūmāl al-Fiderāliyya"))
                .body("[207].'region'", containsString("Africa"))
                .body("[207].'subregion'", containsString("Eastern Africa"))
                .body("[207].'population'", numberMatches(1.1079E7))
                .body("[207].'latlng'.size()", equalTo(2))
                .body("[207].'latlng'[0]", numberMatches(10.0))
                .body("[207].'latlng'[1]", numberMatches(49.0))
                .body("[207].'demonym'", containsString("Somali"))
                .body("[207].'area'", numberMatches(637657.0))
                .body("[207].'gini'", nullValue())
                .body("[207].'timezones'.size()", equalTo(1))
                .body("[207].'timezones'", hasItems("UTC+03:00"))
                .body("[207].'borders'.size()", equalTo(3))
                .body("[207].'borders'", hasItems("DJI", "ETH", "KEN"))
                .body("[207].'nativeName'", containsString("Soomaaliya"))
                .body("[207].'numericCode'", containsString("706"))
                .body("[207].'currencies'.size()", equalTo(1))
                .body("[207].'currencies'[0].'code'", containsString("SOS"))
                .body("[207].'currencies'[0].'name'", containsString("Somali shilling"))
                .body("[207].'currencies'[0].'symbol'", containsString("Sh"))
                .body("[207].'languages'.size()", equalTo(2))
                .body("[207].'languages'[0].'iso639_1'", containsString("so"))
                .body("[207].'languages'[0].'iso639_2'", containsString("som"))
                .body("[207].'languages'[0].'name'", containsString("Somali"))
                .body("[207].'languages'[0].'nativeName'", containsString("Soomaaliga"))
                .body("[207].'languages'[1].'iso639_1'", containsString("ar"))
                .body("[207].'languages'[1].'iso639_2'", containsString("ara"))
                .body("[207].'languages'[1].'name'", containsString("Arabic"))
                .body("[207].'languages'[1].'nativeName'", containsString("العربية"))
                .body("[207].'translations'.'de'", containsString("Somalia"))
                .body("[207].'translations'.'es'", containsString("Somalia"))
                .body("[207].'translations'.'fr'", containsString("Somalie"))
                .body("[207].'translations'.'ja'", containsString("ソマリア"))
                .body("[207].'translations'.'it'", containsString("Somalia"))
                .body("[207].'translations'.'br'", containsString("Somália"))
                .body("[207].'translations'.'pt'", containsString("Somália"))
                .body("[207].'translations'.'nl'", containsString("Somalië"))
                .body("[207].'translations'.'hr'", containsString("Somalija"))
                .body("[207].'translations'.'fa'", containsString("سومالی"))
                .body("[207].'flag'", containsString("https://restcountries.eu/data/som.svg"))
                .body("[207].'regionalBlocs'.size()", equalTo(2))
                .body("[207].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[207].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[207].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[207].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[207].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[207].'regionalBlocs'[1].'acronym'", containsString("AL"))
                .body("[207].'regionalBlocs'[1].'name'", containsString("Arab League"))
                .body("[207].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(0))
                .body("[207].'regionalBlocs'[1].'otherNames'.size()", equalTo(3))
                .body("[207].'regionalBlocs'[1].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[207].'cioc'", containsString("SOM"))
                .body("[208].'name'", containsString("South Africa"))
                .body("[208].'topLevelDomain'.size()", equalTo(1))
                .body("[208].'topLevelDomain'", hasItems(".za"))
                .body("[208].'alpha2Code'", containsString("ZA"))
                .body("[208].'alpha3Code'", containsString("ZAF"))
                .body("[208].'callingCodes'.size()", equalTo(1))
                .body("[208].'callingCodes'", hasItems("27"))
                .body("[208].'capital'", containsString("Pretoria"))
                .body("[208].'altSpellings'.size()", equalTo(4))
                .body("[208].'altSpellings'", hasItems("ZA", "RSA", "Suid-Afrika", "Republic of South Africa"))
                .body("[208].'region'", containsString("Africa"))
                .body("[208].'subregion'", containsString("Southern Africa"))
                .body("[208].'population'", numberMatches(5.5653654E7))
                .body("[208].'latlng'.size()", equalTo(2))
                .body("[208].'latlng'[0]", numberMatches(-29.0))
                .body("[208].'latlng'[1]", numberMatches(24.0))
                .body("[208].'demonym'", containsString("South African"))
                .body("[208].'area'", numberMatches(1221037.0))
                .body("[208].'gini'", numberMatches(63.1))
                .body("[208].'timezones'.size()", equalTo(1))
                .body("[208].'timezones'", hasItems("UTC+02:00"))
                .body("[208].'borders'.size()", equalTo(6))
                .body("[208].'borders'", hasItems("BWA", "LSO", "MOZ", "NAM", "SWZ", "ZWE"))
                .body("[208].'nativeName'", containsString("South Africa"))
                .body("[208].'numericCode'", containsString("710"))
                .body("[208].'currencies'.size()", equalTo(1))
                .body("[208].'currencies'[0].'code'", containsString("ZAR"))
                .body("[208].'currencies'[0].'name'", containsString("South African rand"))
                .body("[208].'currencies'[0].'symbol'", containsString("R"))
                .body("[208].'languages'.size()", equalTo(10))
                .body("[208].'languages'[0].'iso639_1'", containsString("af"))
                .body("[208].'languages'[0].'iso639_2'", containsString("afr"))
                .body("[208].'languages'[0].'name'", containsString("Afrikaans"))
                .body("[208].'languages'[0].'nativeName'", containsString("Afrikaans"))
                .body("[208].'languages'[1].'iso639_1'", containsString("en"))
                .body("[208].'languages'[1].'iso639_2'", containsString("eng"))
                .body("[208].'languages'[1].'name'", containsString("English"))
                .body("[208].'languages'[1].'nativeName'", containsString("English"))
                .body("[208].'languages'[2].'iso639_1'", containsString("nr"))
                .body("[208].'languages'[2].'iso639_2'", containsString("nbl"))
                .body("[208].'languages'[2].'name'", containsString("Southern Ndebele"))
                .body("[208].'languages'[2].'nativeName'", containsString("isiNdebele"))
                .body("[208].'languages'[3].'iso639_1'", containsString("st"))
                .body("[208].'languages'[3].'iso639_2'", containsString("sot"))
                .body("[208].'languages'[3].'name'", containsString("Southern Sotho"))
                .body("[208].'languages'[3].'nativeName'", containsString("Sesotho"))
                .body("[208].'languages'[4].'iso639_1'", containsString("ss"))
                .body("[208].'languages'[4].'iso639_2'", containsString("ssw"))
                .body("[208].'languages'[4].'name'", containsString("Swati"))
                .body("[208].'languages'[4].'nativeName'", containsString("SiSwati"))
                .body("[208].'languages'[5].'iso639_1'", containsString("tn"))
                .body("[208].'languages'[5].'iso639_2'", containsString("tsn"))
                .body("[208].'languages'[5].'name'", containsString("Tswana"))
                .body("[208].'languages'[5].'nativeName'", containsString("Setswana"))
                .body("[208].'languages'[6].'iso639_1'", containsString("ts"))
                .body("[208].'languages'[6].'iso639_2'", containsString("tso"))
                .body("[208].'languages'[6].'name'", containsString("Tsonga"))
                .body("[208].'languages'[6].'nativeName'", containsString("Xitsonga"))
                .body("[208].'languages'[7].'iso639_1'", containsString("ve"))
                .body("[208].'languages'[7].'iso639_2'", containsString("ven"))
                .body("[208].'languages'[7].'name'", containsString("Venda"))
                .body("[208].'languages'[7].'nativeName'", containsString("Tshivenḓa"))
                .body("[208].'languages'[8].'iso639_1'", containsString("xh"))
                .body("[208].'languages'[8].'iso639_2'", containsString("xho"))
                .body("[208].'languages'[8].'name'", containsString("Xhosa"))
                .body("[208].'languages'[8].'nativeName'", containsString("isiXhosa"))
                .body("[208].'languages'[9].'iso639_1'", containsString("zu"))
                .body("[208].'languages'[9].'iso639_2'", containsString("zul"))
                .body("[208].'languages'[9].'name'", containsString("Zulu"))
                .body("[208].'languages'[9].'nativeName'", containsString("isiZulu"))
                .body("[208].'translations'.'de'", containsString("Republik Südafrika"))
                .body("[208].'translations'.'es'", containsString("República de Sudáfrica"))
                .body("[208].'translations'.'fr'", containsString("Afrique du Sud"))
                .body("[208].'translations'.'ja'", containsString("南アフリカ"))
                .body("[208].'translations'.'it'", containsString("Sud Africa"))
                .body("[208].'translations'.'br'", containsString("República Sul-Africana"))
                .body("[208].'translations'.'pt'", containsString("República Sul-Africana"))
                .body("[208].'translations'.'nl'", containsString("Zuid-Afrika"))
                .body("[208].'translations'.'hr'", containsString("Južnoafrička Republika"))
                .body("[208].'translations'.'fa'", containsString("آفریقای جنوبی"))
                .body("[208].'flag'", containsString("https://restcountries.eu/data/zaf.svg"))
                .body("[208].'regionalBlocs'.size()", equalTo(1))
                .body("[208].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[208].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[208].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[208].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[208].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[208].'cioc'", containsString("RSA"))
                .body("[209].'name'", containsString("South Georgia and the South Sandwich Islands"))
                .body("[209].'topLevelDomain'.size()", equalTo(1))
                .body("[209].'topLevelDomain'", hasItems(".gs"))
                .body("[209].'alpha2Code'", containsString("GS"))
                .body("[209].'alpha3Code'", containsString("SGS"))
                .body("[209].'callingCodes'.size()", equalTo(1))
                .body("[209].'callingCodes'", hasItems("500"))
                .body("[209].'capital'", containsString("King Edward Point"))
                .body("[209].'altSpellings'.size()", equalTo(2))
                .body("[209].'altSpellings'", hasItems("GS", "South Georgia and the South Sandwich Islands"))
                .body("[209].'region'", containsString("Americas"))
                .body("[209].'subregion'", containsString("South America"))
                .body("[209].'population'", numberMatches(30.0))
                .body("[209].'latlng'.size()", equalTo(2))
                .body("[209].'latlng'[0]", numberMatches(-54.5))
                .body("[209].'latlng'[1]", numberMatches(-37.0))
                .body("[209].'demonym'", containsString("South Georgia and the South Sandwich Islander"))
                .body("[209].'area'", nullValue())
                .body("[209].'gini'", nullValue())
                .body("[209].'timezones'.size()", equalTo(1))
                .body("[209].'timezones'", hasItems("UTC-02:00"))
                .body("[209].'borders'.size()", equalTo(0))
                .body("[209].'nativeName'", containsString("South Georgia"))
                .body("[209].'numericCode'", containsString("239"))
                .body("[209].'currencies'.size()", equalTo(2))
                .body("[209].'currencies'[0].'code'", containsString("GBP"))
                .body("[209].'currencies'[0].'name'", containsString("British pound"))
                .body("[209].'currencies'[0].'symbol'", containsString("£"))
                .body("[209].'currencies'[1].'code'", containsString("(none)"))
                .body("[209].'currencies'[1].'name'", nullValue())
                .body("[209].'currencies'[1].'symbol'", containsString("£"))
                .body("[209].'languages'.size()", equalTo(1))
                .body("[209].'languages'[0].'iso639_1'", containsString("en"))
                .body("[209].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[209].'languages'[0].'name'", containsString("English"))
                .body("[209].'languages'[0].'nativeName'", containsString("English"))
                .body("[209].'translations'.'de'", containsString("Südgeorgien und die Südlichen Sandwichinseln"))
                .body("[209].'translations'.'es'", containsString("Islas Georgias del Sur y Sandwich del Sur"))
                .body("[209].'translations'.'fr'", containsString("Géorgie du Sud-et-les Îles Sandwich du Sud"))
                .body("[209].'translations'.'ja'", containsString("サウスジョージア・サウスサンドウィッチ諸島"))
                .body("[209].'translations'.'it'", containsString("Georgia del Sud e Isole Sandwich Meridionali"))
                .body("[209].'translations'.'br'", containsString("Ilhas Geórgias do Sul e Sandwich do Sul"))
                .body("[209].'translations'.'pt'", containsString("Ilhas Geórgia do Sul e Sanduíche do Sul"))
                .body("[209].'translations'.'nl'", containsString("Zuid-Georgia en Zuidelijke Sandwicheilanden"))
                .body("[209].'translations'.'hr'", containsString("Južna Georgija i otočje Južni Sandwich"))
                .body("[209].'translations'.'fa'", containsString("جزایر جورجیای جنوبی و ساندویچ جنوبی"))
                .body("[209].'flag'", containsString("https://restcountries.eu/data/sgs.svg"))
                .body("[209].'regionalBlocs'.size()", equalTo(1))
                .body("[209].'regionalBlocs'[0].'acronym'", containsString("USAN"))
                .body("[209].'regionalBlocs'[0].'name'", containsString("Union of South American Nations"))
                .body("[209].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(3))
                .body("[209].'regionalBlocs'[0].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[209].'regionalBlocs'[0].'otherNames'.size()", equalTo(4))
                .body("[209].'regionalBlocs'[0].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[209].'cioc'", containsString(""))
                .body("[210].'name'", containsString("Korea (Republic of)"))
                .body("[210].'topLevelDomain'.size()", equalTo(1))
                .body("[210].'topLevelDomain'", hasItems(".kr"))
                .body("[210].'alpha2Code'", containsString("KR"))
                .body("[210].'alpha3Code'", containsString("KOR"))
                .body("[210].'callingCodes'.size()", equalTo(1))
                .body("[210].'callingCodes'", hasItems("82"))
                .body("[210].'capital'", containsString("Seoul"))
                .body("[210].'altSpellings'.size()", equalTo(2))
                .body("[210].'altSpellings'", hasItems("KR", "Republic of Korea"))
                .body("[210].'region'", containsString("Asia"))
                .body("[210].'subregion'", containsString("Eastern Asia"))
                .body("[210].'population'", numberMatches(5.0801405E7))
                .body("[210].'latlng'.size()", equalTo(2))
                .body("[210].'latlng'[0]", numberMatches(37.0))
                .body("[210].'latlng'[1]", numberMatches(127.5))
                .body("[210].'demonym'", containsString("South Korean"))
                .body("[210].'area'", numberMatches(100210.0))
                .body("[210].'gini'", numberMatches(31.3))
                .body("[210].'timezones'.size()", equalTo(1))
                .body("[210].'timezones'", hasItems("UTC+09:00"))
                .body("[210].'borders'.size()", equalTo(1))
                .body("[210].'borders'", hasItems("PRK"))
                .body("[210].'nativeName'", containsString("대한민국"))
                .body("[210].'numericCode'", containsString("410"))
                .body("[210].'currencies'.size()", equalTo(1))
                .body("[210].'currencies'[0].'code'", containsString("KRW"))
                .body("[210].'currencies'[0].'name'", containsString("South Korean won"))
                .body("[210].'currencies'[0].'symbol'", containsString("₩"))
                .body("[210].'languages'.size()", equalTo(1))
                .body("[210].'languages'[0].'iso639_1'", containsString("ko"))
                .body("[210].'languages'[0].'iso639_2'", containsString("kor"))
                .body("[210].'languages'[0].'name'", containsString("Korean"))
                .body("[210].'languages'[0].'nativeName'", containsString("한국어"))
                .body("[210].'translations'.'de'", containsString("Südkorea"))
                .body("[210].'translations'.'es'", containsString("Corea del Sur"))
                .body("[210].'translations'.'fr'", containsString("Corée du Sud"))
                .body("[210].'translations'.'ja'", containsString("大韓民国"))
                .body("[210].'translations'.'it'", containsString("Corea del Sud"))
                .body("[210].'translations'.'br'", containsString("Coreia do Sul"))
                .body("[210].'translations'.'pt'", containsString("Coreia do Sul"))
                .body("[210].'translations'.'nl'", containsString("Zuid-Korea"))
                .body("[210].'translations'.'hr'", containsString("Južna Koreja"))
                .body("[210].'translations'.'fa'", containsString("کره شمالی"))
                .body("[210].'flag'", containsString("https://restcountries.eu/data/kor.svg"))
                .body("[210].'regionalBlocs'.size()", equalTo(0))
                .body("[210].'cioc'", containsString("KOR"))
                .body("[211].'name'", containsString("South Sudan"))
                .body("[211].'topLevelDomain'.size()", equalTo(1))
                .body("[211].'topLevelDomain'", hasItems(".ss"))
                .body("[211].'alpha2Code'", containsString("SS"))
                .body("[211].'alpha3Code'", containsString("SSD"))
                .body("[211].'callingCodes'.size()", equalTo(1))
                .body("[211].'callingCodes'", hasItems("211"))
                .body("[211].'capital'", containsString("Juba"))
                .body("[211].'altSpellings'.size()", equalTo(1))
                .body("[211].'altSpellings'", hasItems("SS"))
                .body("[211].'region'", containsString("Africa"))
                .body("[211].'subregion'", containsString("Middle Africa"))
                .body("[211].'population'", numberMatches(1.2131E7))
                .body("[211].'latlng'.size()", equalTo(2))
                .body("[211].'latlng'[0]", numberMatches(7.0))
                .body("[211].'latlng'[1]", numberMatches(30.0))
                .body("[211].'demonym'", containsString("South Sudanese"))
                .body("[211].'area'", numberMatches(619745.0))
                .body("[211].'gini'", numberMatches(45.5))
                .body("[211].'timezones'.size()", equalTo(1))
                .body("[211].'timezones'", hasItems("UTC+03:00"))
                .body("[211].'borders'.size()", equalTo(6))
                .body("[211].'borders'", hasItems("CAF", "COD", "ETH", "KEN", "SDN", "UGA"))
                .body("[211].'nativeName'", containsString("South Sudan"))
                .body("[211].'numericCode'", containsString("728"))
                .body("[211].'currencies'.size()", equalTo(1))
                .body("[211].'currencies'[0].'code'", containsString("SSP"))
                .body("[211].'currencies'[0].'name'", containsString("South Sudanese pound"))
                .body("[211].'currencies'[0].'symbol'", containsString("£"))
                .body("[211].'languages'.size()", equalTo(1))
                .body("[211].'languages'[0].'iso639_1'", containsString("en"))
                .body("[211].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[211].'languages'[0].'name'", containsString("English"))
                .body("[211].'languages'[0].'nativeName'", containsString("English"))
                .body("[211].'translations'.'de'", containsString("Südsudan"))
                .body("[211].'translations'.'es'", containsString("Sudán del Sur"))
                .body("[211].'translations'.'fr'", containsString("Soudan du Sud"))
                .body("[211].'translations'.'ja'", containsString("南スーダン"))
                .body("[211].'translations'.'it'", containsString("Sudan del sud"))
                .body("[211].'translations'.'br'", containsString("Sudão do Sul"))
                .body("[211].'translations'.'pt'", containsString("Sudão do Sul"))
                .body("[211].'translations'.'nl'", containsString("Zuid-Soedan"))
                .body("[211].'translations'.'hr'", containsString("Južni Sudan"))
                .body("[211].'translations'.'fa'", containsString("سودان جنوبی"))
                .body("[211].'flag'", containsString("https://restcountries.eu/data/ssd.svg"))
                .body("[211].'regionalBlocs'.size()", equalTo(1))
                .body("[211].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[211].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[211].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[211].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[211].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[211].'cioc'", containsString(""))
                .body("[212].'name'", containsString("Spain"))
                .body("[212].'topLevelDomain'.size()", equalTo(1))
                .body("[212].'topLevelDomain'", hasItems(".es"))
                .body("[212].'alpha2Code'", containsString("ES"))
                .body("[212].'alpha3Code'", containsString("ESP"))
                .body("[212].'callingCodes'.size()", equalTo(1))
                .body("[212].'callingCodes'", hasItems("34"))
                .body("[212].'capital'", containsString("Madrid"))
                .body("[212].'altSpellings'.size()", equalTo(3))
                .body("[212].'altSpellings'", hasItems("ES", "Kingdom of Spain", "Reino de España"))
                .body("[212].'region'", containsString("Europe"))
                .body("[212].'subregion'", containsString("Southern Europe"))
                .body("[212].'population'", numberMatches(4.6438422E7))
                .body("[212].'latlng'.size()", equalTo(2))
                .body("[212].'latlng'[0]", numberMatches(40.0))
                .body("[212].'latlng'[1]", numberMatches(-4.0))
                .body("[212].'demonym'", containsString("Spanish"))
                .body("[212].'area'", numberMatches(505992.0))
                .body("[212].'gini'", numberMatches(34.7))
                .body("[212].'timezones'.size()", equalTo(2))
                .body("[212].'timezones'", hasItems("UTC", "UTC+01:00"))
                .body("[212].'borders'.size()", equalTo(5))
                .body("[212].'borders'", hasItems("AND", "FRA", "GIB", "PRT", "MAR"))
                .body("[212].'nativeName'", containsString("España"))
                .body("[212].'numericCode'", containsString("724"))
                .body("[212].'currencies'.size()", equalTo(1))
                .body("[212].'currencies'[0].'code'", containsString("EUR"))
                .body("[212].'currencies'[0].'name'", containsString("Euro"))
                .body("[212].'currencies'[0].'symbol'", containsString("€"))
                .body("[212].'languages'.size()", equalTo(1))
                .body("[212].'languages'[0].'iso639_1'", containsString("es"))
                .body("[212].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[212].'languages'[0].'name'", containsString("Spanish"))
                .body("[212].'languages'[0].'nativeName'", containsString("Español"))
                .body("[212].'translations'.'de'", containsString("Spanien"))
                .body("[212].'translations'.'es'", containsString("España"))
                .body("[212].'translations'.'fr'", containsString("Espagne"))
                .body("[212].'translations'.'ja'", containsString("スペイン"))
                .body("[212].'translations'.'it'", containsString("Spagna"))
                .body("[212].'translations'.'br'", containsString("Espanha"))
                .body("[212].'translations'.'pt'", containsString("Espanha"))
                .body("[212].'translations'.'nl'", containsString("Spanje"))
                .body("[212].'translations'.'hr'", containsString("Španjolska"))
                .body("[212].'translations'.'fa'", containsString("اسپانیا"))
                .body("[212].'flag'", containsString("https://restcountries.eu/data/esp.svg"))
                .body("[212].'regionalBlocs'.size()", equalTo(1))
                .body("[212].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[212].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[212].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[212].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[212].'cioc'", containsString("ESP"))
                .body("[213].'name'", containsString("Sri Lanka"))
                .body("[213].'topLevelDomain'.size()", equalTo(1))
                .body("[213].'topLevelDomain'", hasItems(".lk"))
                .body("[213].'alpha2Code'", containsString("LK"))
                .body("[213].'alpha3Code'", containsString("LKA"))
                .body("[213].'callingCodes'.size()", equalTo(1))
                .body("[213].'callingCodes'", hasItems("94"))
                .body("[213].'capital'", containsString("Colombo"))
                .body("[213].'altSpellings'.size()", equalTo(3))
                .body("[213].'altSpellings'", hasItems("LK", "ilaṅkai", "Democratic Socialist Republic of Sri Lanka"))
                .body("[213].'region'", containsString("Asia"))
                .body("[213].'subregion'", containsString("Southern Asia"))
                .body("[213].'population'", numberMatches(2.0966E7))
                .body("[213].'latlng'.size()", equalTo(2))
                .body("[213].'latlng'[0]", numberMatches(7.0))
                .body("[213].'latlng'[1]", numberMatches(81.0))
                .body("[213].'demonym'", containsString("Sri Lankan"))
                .body("[213].'area'", numberMatches(65610.0))
                .body("[213].'gini'", numberMatches(40.3))
                .body("[213].'timezones'.size()", equalTo(1))
                .body("[213].'timezones'", hasItems("UTC+05:30"))
                .body("[213].'borders'.size()", equalTo(1))
                .body("[213].'borders'", hasItems("IND"))
                .body("[213].'nativeName'", containsString("śrī laṃkāva"))
                .body("[213].'numericCode'", containsString("144"))
                .body("[213].'currencies'.size()", equalTo(1))
                .body("[213].'currencies'[0].'code'", containsString("LKR"))
                .body("[213].'currencies'[0].'name'", containsString("Sri Lankan rupee"))
                .body("[213].'currencies'[0].'symbol'", containsString("Rs"))
                .body("[213].'languages'.size()", equalTo(2))
                .body("[213].'languages'[0].'iso639_1'", containsString("si"))
                .body("[213].'languages'[0].'iso639_2'", containsString("sin"))
                .body("[213].'languages'[0].'name'", containsString("Sinhalese"))
                .body("[213].'languages'[0].'nativeName'", containsString("සිංහල"))
                .body("[213].'languages'[1].'iso639_1'", containsString("ta"))
                .body("[213].'languages'[1].'iso639_2'", containsString("tam"))
                .body("[213].'languages'[1].'name'", containsString("Tamil"))
                .body("[213].'languages'[1].'nativeName'", containsString("தமிழ்"))
                .body("[213].'translations'.'de'", containsString("Sri Lanka"))
                .body("[213].'translations'.'es'", containsString("Sri Lanka"))
                .body("[213].'translations'.'fr'", containsString("Sri Lanka"))
                .body("[213].'translations'.'ja'", containsString("スリランカ"))
                .body("[213].'translations'.'it'", containsString("Sri Lanka"))
                .body("[213].'translations'.'br'", containsString("Sri Lanka"))
                .body("[213].'translations'.'pt'", containsString("Sri Lanka"))
                .body("[213].'translations'.'nl'", containsString("Sri Lanka"))
                .body("[213].'translations'.'hr'", containsString("Šri Lanka"))
                .body("[213].'translations'.'fa'", containsString("سری‌لانکا"))
                .body("[213].'flag'", containsString("https://restcountries.eu/data/lka.svg"))
                .body("[213].'regionalBlocs'.size()", equalTo(1))
                .body("[213].'regionalBlocs'[0].'acronym'", containsString("SAARC"))
                .body("[213].'regionalBlocs'[0].'name'", containsString("South Asian Association for Regional Cooperation"))
                .body("[213].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[213].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[213].'cioc'", containsString("SRI"))
                .body("[214].'name'", containsString("Sudan"))
                .body("[214].'topLevelDomain'.size()", equalTo(1))
                .body("[214].'topLevelDomain'", hasItems(".sd"))
                .body("[214].'alpha2Code'", containsString("SD"))
                .body("[214].'alpha3Code'", containsString("SDN"))
                .body("[214].'callingCodes'.size()", equalTo(1))
                .body("[214].'callingCodes'", hasItems("249"))
                .body("[214].'capital'", containsString("Khartoum"))
                .body("[214].'altSpellings'.size()", equalTo(3))
                .body("[214].'altSpellings'", hasItems("SD", "Republic of the Sudan", "Jumhūrīyat as-Sūdān"))
                .body("[214].'region'", containsString("Africa"))
                .body("[214].'subregion'", containsString("Northern Africa"))
                .body("[214].'population'", numberMatches(3.95987E7))
                .body("[214].'latlng'.size()", equalTo(2))
                .body("[214].'latlng'[0]", numberMatches(15.0))
                .body("[214].'latlng'[1]", numberMatches(30.0))
                .body("[214].'demonym'", containsString("Sudanese"))
                .body("[214].'area'", numberMatches(1886068.0))
                .body("[214].'gini'", numberMatches(35.3))
                .body("[214].'timezones'.size()", equalTo(1))
                .body("[214].'timezones'", hasItems("UTC+03:00"))
                .body("[214].'borders'.size()", equalTo(7))
                .body("[214].'borders'", hasItems("CAF", "TCD", "EGY", "ERI", "ETH", "LBY", "SSD"))
                .body("[214].'nativeName'", containsString("السودان"))
                .body("[214].'numericCode'", containsString("729"))
                .body("[214].'currencies'.size()", equalTo(1))
                .body("[214].'currencies'[0].'code'", containsString("SDG"))
                .body("[214].'currencies'[0].'name'", containsString("Sudanese pound"))
                .body("[214].'currencies'[0].'symbol'", containsString("ج.س."))
                .body("[214].'languages'.size()", equalTo(2))
                .body("[214].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[214].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[214].'languages'[0].'name'", containsString("Arabic"))
                .body("[214].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[214].'languages'[1].'iso639_1'", containsString("en"))
                .body("[214].'languages'[1].'iso639_2'", containsString("eng"))
                .body("[214].'languages'[1].'name'", containsString("English"))
                .body("[214].'languages'[1].'nativeName'", containsString("English"))
                .body("[214].'translations'.'de'", containsString("Sudan"))
                .body("[214].'translations'.'es'", containsString("Sudán"))
                .body("[214].'translations'.'fr'", containsString("Soudan"))
                .body("[214].'translations'.'ja'", containsString("スーダン"))
                .body("[214].'translations'.'it'", containsString("Sudan"))
                .body("[214].'translations'.'br'", containsString("Sudão"))
                .body("[214].'translations'.'pt'", containsString("Sudão"))
                .body("[214].'translations'.'nl'", containsString("Soedan"))
                .body("[214].'translations'.'hr'", containsString("Sudan"))
                .body("[214].'translations'.'fa'", containsString("سودان"))
                .body("[214].'flag'", containsString("https://restcountries.eu/data/sdn.svg"))
                .body("[214].'regionalBlocs'.size()", equalTo(2))
                .body("[214].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[214].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[214].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[214].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[214].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[214].'regionalBlocs'[1].'acronym'", containsString("AL"))
                .body("[214].'regionalBlocs'[1].'name'", containsString("Arab League"))
                .body("[214].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(0))
                .body("[214].'regionalBlocs'[1].'otherNames'.size()", equalTo(3))
                .body("[214].'regionalBlocs'[1].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[214].'cioc'", containsString("SUD"))
                .body("[215].'name'", containsString("Suriname"))
                .body("[215].'topLevelDomain'.size()", equalTo(1))
                .body("[215].'topLevelDomain'", hasItems(".sr"))
                .body("[215].'alpha2Code'", containsString("SR"))
                .body("[215].'alpha3Code'", containsString("SUR"))
                .body("[215].'callingCodes'.size()", equalTo(1))
                .body("[215].'callingCodes'", hasItems("597"))
                .body("[215].'capital'", containsString("Paramaribo"))
                .body("[215].'altSpellings'.size()", equalTo(5))
                .body("[215].'altSpellings'", hasItems("SR", "Sarnam", "Sranangron", "Republic of Suriname", "Republiek Suriname"))
                .body("[215].'region'", containsString("Americas"))
                .body("[215].'subregion'", containsString("South America"))
                .body("[215].'population'", numberMatches(541638.0))
                .body("[215].'latlng'.size()", equalTo(2))
                .body("[215].'latlng'[0]", numberMatches(4.0))
                .body("[215].'latlng'[1]", numberMatches(-56.0))
                .body("[215].'demonym'", containsString("Surinamer"))
                .body("[215].'area'", numberMatches(163820.0))
                .body("[215].'gini'", numberMatches(52.9))
                .body("[215].'timezones'.size()", equalTo(1))
                .body("[215].'timezones'", hasItems("UTC-03:00"))
                .body("[215].'borders'.size()", equalTo(4))
                .body("[215].'borders'", hasItems("BRA", "GUF", "FRA", "GUY"))
                .body("[215].'nativeName'", containsString("Suriname"))
                .body("[215].'numericCode'", containsString("740"))
                .body("[215].'currencies'.size()", equalTo(1))
                .body("[215].'currencies'[0].'code'", containsString("SRD"))
                .body("[215].'currencies'[0].'name'", containsString("Surinamese dollar"))
                .body("[215].'currencies'[0].'symbol'", containsString("$"))
                .body("[215].'languages'.size()", equalTo(1))
                .body("[215].'languages'[0].'iso639_1'", containsString("nl"))
                .body("[215].'languages'[0].'iso639_2'", containsString("nld"))
                .body("[215].'languages'[0].'name'", containsString("Dutch"))
                .body("[215].'languages'[0].'nativeName'", containsString("Nederlands"))
                .body("[215].'translations'.'de'", containsString("Suriname"))
                .body("[215].'translations'.'es'", containsString("Surinam"))
                .body("[215].'translations'.'fr'", containsString("Surinam"))
                .body("[215].'translations'.'ja'", containsString("スリナム"))
                .body("[215].'translations'.'it'", containsString("Suriname"))
                .body("[215].'translations'.'br'", containsString("Suriname"))
                .body("[215].'translations'.'pt'", containsString("Suriname"))
                .body("[215].'translations'.'nl'", containsString("Suriname"))
                .body("[215].'translations'.'hr'", containsString("Surinam"))
                .body("[215].'translations'.'fa'", containsString("سورینام"))
                .body("[215].'flag'", containsString("https://restcountries.eu/data/sur.svg"))
                .body("[215].'regionalBlocs'.size()", equalTo(2))
                .body("[215].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[215].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[215].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[215].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[215].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[215].'regionalBlocs'[1].'acronym'", containsString("USAN"))
                .body("[215].'regionalBlocs'[1].'name'", containsString("Union of South American Nations"))
                .body("[215].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(3))
                .body("[215].'regionalBlocs'[1].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[215].'regionalBlocs'[1].'otherNames'.size()", equalTo(4))
                .body("[215].'regionalBlocs'[1].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[215].'cioc'", containsString("SUR"))
                .body("[216].'name'", containsString("Svalbard and Jan Mayen"))
                .body("[216].'topLevelDomain'.size()", equalTo(1))
                .body("[216].'topLevelDomain'", hasItems(".sj"))
                .body("[216].'alpha2Code'", containsString("SJ"))
                .body("[216].'alpha3Code'", containsString("SJM"))
                .body("[216].'callingCodes'.size()", equalTo(1))
                .body("[216].'callingCodes'", hasItems("47"))
                .body("[216].'capital'", containsString("Longyearbyen"))
                .body("[216].'altSpellings'.size()", equalTo(2))
                .body("[216].'altSpellings'", hasItems("SJ", "Svalbard and Jan Mayen Islands"))
                .body("[216].'region'", containsString("Europe"))
                .body("[216].'subregion'", containsString("Northern Europe"))
                .body("[216].'population'", numberMatches(2562.0))
                .body("[216].'latlng'.size()", equalTo(2))
                .body("[216].'latlng'[0]", numberMatches(78.0))
                .body("[216].'latlng'[1]", numberMatches(20.0))
                .body("[216].'demonym'", containsString("Norwegian"))
                .body("[216].'area'", nullValue())
                .body("[216].'gini'", nullValue())
                .body("[216].'timezones'.size()", equalTo(1))
                .body("[216].'timezones'", hasItems("UTC+01:00"))
                .body("[216].'borders'.size()", equalTo(0))
                .body("[216].'nativeName'", containsString("Svalbard og Jan Mayen"))
                .body("[216].'numericCode'", containsString("744"))
                .body("[216].'currencies'.size()", equalTo(1))
                .body("[216].'currencies'[0].'code'", containsString("NOK"))
                .body("[216].'currencies'[0].'name'", containsString("Norwegian krone"))
                .body("[216].'currencies'[0].'symbol'", containsString("kr"))
                .body("[216].'languages'.size()", equalTo(1))
                .body("[216].'languages'[0].'iso639_1'", containsString("no"))
                .body("[216].'languages'[0].'iso639_2'", containsString("nor"))
                .body("[216].'languages'[0].'name'", containsString("Norwegian"))
                .body("[216].'languages'[0].'nativeName'", containsString("Norsk"))
                .body("[216].'translations'.'de'", containsString("Svalbard und Jan Mayen"))
                .body("[216].'translations'.'es'", containsString("Islas Svalbard y Jan Mayen"))
                .body("[216].'translations'.'fr'", containsString("Svalbard et Jan Mayen"))
                .body("[216].'translations'.'ja'", containsString("スヴァールバル諸島およびヤンマイエン島"))
                .body("[216].'translations'.'it'", containsString("Svalbard e Jan Mayen"))
                .body("[216].'translations'.'br'", containsString("Svalbard"))
                .body("[216].'translations'.'pt'", containsString("Svalbard"))
                .body("[216].'translations'.'nl'", containsString("Svalbard en Jan Mayen"))
                .body("[216].'translations'.'hr'", containsString("Svalbard i Jan Mayen"))
                .body("[216].'translations'.'fa'", containsString("سوالبارد و یان ماین"))
                .body("[216].'flag'", containsString("https://restcountries.eu/data/sjm.svg"))
                .body("[216].'regionalBlocs'.size()", equalTo(0))
                .body("[216].'cioc'", containsString(""))
                .body("[217].'name'", containsString("Swaziland"))
                .body("[217].'topLevelDomain'.size()", equalTo(1))
                .body("[217].'topLevelDomain'", hasItems(".sz"))
                .body("[217].'alpha2Code'", containsString("SZ"))
                .body("[217].'alpha3Code'", containsString("SWZ"))
                .body("[217].'callingCodes'.size()", equalTo(1))
                .body("[217].'callingCodes'", hasItems("268"))
                .body("[217].'capital'", containsString("Lobamba"))
                .body("[217].'altSpellings'.size()", equalTo(6))
                .body("[217].'altSpellings'", hasItems("SZ", "weSwatini", "Swatini", "Ngwane", "Kingdom of Swaziland", "Umbuso waseSwatini"))
                .body("[217].'region'", containsString("Africa"))
                .body("[217].'subregion'", containsString("Southern Africa"))
                .body("[217].'population'", numberMatches(1132657.0))
                .body("[217].'latlng'.size()", equalTo(2))
                .body("[217].'latlng'[0]", numberMatches(-26.5))
                .body("[217].'latlng'[1]", numberMatches(31.5))
                .body("[217].'demonym'", containsString("Swazi"))
                .body("[217].'area'", numberMatches(17364.0))
                .body("[217].'gini'", numberMatches(51.5))
                .body("[217].'timezones'.size()", equalTo(1))
                .body("[217].'timezones'", hasItems("UTC+02:00"))
                .body("[217].'borders'.size()", equalTo(2))
                .body("[217].'borders'", hasItems("MOZ", "ZAF"))
                .body("[217].'nativeName'", containsString("Swaziland"))
                .body("[217].'numericCode'", containsString("748"))
                .body("[217].'currencies'.size()", equalTo(1))
                .body("[217].'currencies'[0].'code'", containsString("SZL"))
                .body("[217].'currencies'[0].'name'", containsString("Swazi lilangeni"))
                .body("[217].'currencies'[0].'symbol'", containsString("L"))
                .body("[217].'languages'.size()", equalTo(2))
                .body("[217].'languages'[0].'iso639_1'", containsString("en"))
                .body("[217].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[217].'languages'[0].'name'", containsString("English"))
                .body("[217].'languages'[0].'nativeName'", containsString("English"))
                .body("[217].'languages'[1].'iso639_1'", containsString("ss"))
                .body("[217].'languages'[1].'iso639_2'", containsString("ssw"))
                .body("[217].'languages'[1].'name'", containsString("Swati"))
                .body("[217].'languages'[1].'nativeName'", containsString("SiSwati"))
                .body("[217].'translations'.'de'", containsString("Swasiland"))
                .body("[217].'translations'.'es'", containsString("Suazilandia"))
                .body("[217].'translations'.'fr'", containsString("Swaziland"))
                .body("[217].'translations'.'ja'", containsString("スワジランド"))
                .body("[217].'translations'.'it'", containsString("Swaziland"))
                .body("[217].'translations'.'br'", containsString("Suazilândia"))
                .body("[217].'translations'.'pt'", containsString("Suazilândia"))
                .body("[217].'translations'.'nl'", containsString("Swaziland"))
                .body("[217].'translations'.'hr'", containsString("Svazi"))
                .body("[217].'translations'.'fa'", containsString("سوازیلند"))
                .body("[217].'flag'", containsString("https://restcountries.eu/data/swz.svg"))
                .body("[217].'regionalBlocs'.size()", equalTo(1))
                .body("[217].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[217].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[217].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[217].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[217].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[217].'cioc'", containsString("SWZ"))
                .body("[218].'name'", containsString("Sweden"))
                .body("[218].'topLevelDomain'.size()", equalTo(1))
                .body("[218].'topLevelDomain'", hasItems(".se"))
                .body("[218].'alpha2Code'", containsString("SE"))
                .body("[218].'alpha3Code'", containsString("SWE"))
                .body("[218].'callingCodes'.size()", equalTo(1))
                .body("[218].'callingCodes'", hasItems("46"))
                .body("[218].'capital'", containsString("Stockholm"))
                .body("[218].'altSpellings'.size()", equalTo(3))
                .body("[218].'altSpellings'", hasItems("SE", "Kingdom of Sweden", "Konungariket Sverige"))
                .body("[218].'region'", containsString("Europe"))
                .body("[218].'subregion'", containsString("Northern Europe"))
                .body("[218].'population'", numberMatches(9894888.0))
                .body("[218].'latlng'.size()", equalTo(2))
                .body("[218].'latlng'[0]", numberMatches(62.0))
                .body("[218].'latlng'[1]", numberMatches(15.0))
                .body("[218].'demonym'", containsString("Swedish"))
                .body("[218].'area'", numberMatches(450295.0))
                .body("[218].'gini'", numberMatches(25.0))
                .body("[218].'timezones'.size()", equalTo(1))
                .body("[218].'timezones'", hasItems("UTC+01:00"))
                .body("[218].'borders'.size()", equalTo(2))
                .body("[218].'borders'", hasItems("FIN", "NOR"))
                .body("[218].'nativeName'", containsString("Sverige"))
                .body("[218].'numericCode'", containsString("752"))
                .body("[218].'currencies'.size()", equalTo(1))
                .body("[218].'currencies'[0].'code'", containsString("SEK"))
                .body("[218].'currencies'[0].'name'", containsString("Swedish krona"))
                .body("[218].'currencies'[0].'symbol'", containsString("kr"))
                .body("[218].'languages'.size()", equalTo(1))
                .body("[218].'languages'[0].'iso639_1'", containsString("sv"))
                .body("[218].'languages'[0].'iso639_2'", containsString("swe"))
                .body("[218].'languages'[0].'name'", containsString("Swedish"))
                .body("[218].'languages'[0].'nativeName'", containsString("svenska"))
                .body("[218].'translations'.'de'", containsString("Schweden"))
                .body("[218].'translations'.'es'", containsString("Suecia"))
                .body("[218].'translations'.'fr'", containsString("Suède"))
                .body("[218].'translations'.'ja'", containsString("スウェーデン"))
                .body("[218].'translations'.'it'", containsString("Svezia"))
                .body("[218].'translations'.'br'", containsString("Suécia"))
                .body("[218].'translations'.'pt'", containsString("Suécia"))
                .body("[218].'translations'.'nl'", containsString("Zweden"))
                .body("[218].'translations'.'hr'", containsString("Švedska"))
                .body("[218].'translations'.'fa'", containsString("سوئد"))
                .body("[218].'flag'", containsString("https://restcountries.eu/data/swe.svg"))
                .body("[218].'regionalBlocs'.size()", equalTo(1))
                .body("[218].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[218].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[218].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[218].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[218].'cioc'", containsString("SWE"))
                .body("[219].'name'", containsString("Switzerland"))
                .body("[219].'topLevelDomain'.size()", equalTo(1))
                .body("[219].'topLevelDomain'", hasItems(".ch"))
                .body("[219].'alpha2Code'", containsString("CH"))
                .body("[219].'alpha3Code'", containsString("CHE"))
                .body("[219].'callingCodes'.size()", equalTo(1))
                .body("[219].'callingCodes'", hasItems("41"))
                .body("[219].'capital'", containsString("Bern"))
                .body("[219].'altSpellings'.size()", equalTo(6))
                .body("[219].'altSpellings'", hasItems("CH", "Swiss Confederation", "Schweiz", "Suisse", "Svizzera", "Svizra"))
                .body("[219].'region'", containsString("Europe"))
                .body("[219].'subregion'", containsString("Western Europe"))
                .body("[219].'population'", numberMatches(8341600.0))
                .body("[219].'latlng'.size()", equalTo(2))
                .body("[219].'latlng'[0]", numberMatches(47.0))
                .body("[219].'latlng'[1]", numberMatches(8.0))
                .body("[219].'demonym'", containsString("Swiss"))
                .body("[219].'area'", numberMatches(41284.0))
                .body("[219].'gini'", numberMatches(33.7))
                .body("[219].'timezones'.size()", equalTo(1))
                .body("[219].'timezones'", hasItems("UTC+01:00"))
                .body("[219].'borders'.size()", equalTo(5))
                .body("[219].'borders'", hasItems("AUT", "FRA", "ITA", "LIE", "DEU"))
                .body("[219].'nativeName'", containsString("Schweiz"))
                .body("[219].'numericCode'", containsString("756"))
                .body("[219].'currencies'.size()", equalTo(1))
                .body("[219].'currencies'[0].'code'", containsString("CHF"))
                .body("[219].'currencies'[0].'name'", containsString("Swiss franc"))
                .body("[219].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[219].'languages'.size()", equalTo(3))
                .body("[219].'languages'[0].'iso639_1'", containsString("de"))
                .body("[219].'languages'[0].'iso639_2'", containsString("deu"))
                .body("[219].'languages'[0].'name'", containsString("German"))
                .body("[219].'languages'[0].'nativeName'", containsString("Deutsch"))
                .body("[219].'languages'[1].'iso639_1'", containsString("fr"))
                .body("[219].'languages'[1].'iso639_2'", containsString("fra"))
                .body("[219].'languages'[1].'name'", containsString("French"))
                .body("[219].'languages'[1].'nativeName'", containsString("français"))
                .body("[219].'languages'[2].'iso639_1'", containsString("it"))
                .body("[219].'languages'[2].'iso639_2'", containsString("ita"))
                .body("[219].'languages'[2].'name'", containsString("Italian"))
                .body("[219].'languages'[2].'nativeName'", containsString("Italiano"))
                .body("[219].'translations'.'de'", containsString("Schweiz"))
                .body("[219].'translations'.'es'", containsString("Suiza"))
                .body("[219].'translations'.'fr'", containsString("Suisse"))
                .body("[219].'translations'.'ja'", containsString("スイス"))
                .body("[219].'translations'.'it'", containsString("Svizzera"))
                .body("[219].'translations'.'br'", containsString("Suíça"))
                .body("[219].'translations'.'pt'", containsString("Suíça"))
                .body("[219].'translations'.'nl'", containsString("Zwitserland"))
                .body("[219].'translations'.'hr'", containsString("Švicarska"))
                .body("[219].'translations'.'fa'", containsString("سوئیس"))
                .body("[219].'flag'", containsString("https://restcountries.eu/data/che.svg"))
                .body("[219].'regionalBlocs'.size()", equalTo(1))
                .body("[219].'regionalBlocs'[0].'acronym'", containsString("EFTA"))
                .body("[219].'regionalBlocs'[0].'name'", containsString("European Free Trade Association"))
                .body("[219].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[219].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[219].'cioc'", containsString("SUI"))
                .body("[220].'name'", containsString("Syrian Arab Republic"))
                .body("[220].'topLevelDomain'.size()", equalTo(1))
                .body("[220].'topLevelDomain'", hasItems(".sy"))
                .body("[220].'alpha2Code'", containsString("SY"))
                .body("[220].'alpha3Code'", containsString("SYR"))
                .body("[220].'callingCodes'.size()", equalTo(1))
                .body("[220].'callingCodes'", hasItems("963"))
                .body("[220].'capital'", containsString("Damascus"))
                .body("[220].'altSpellings'.size()", equalTo(3))
                .body("[220].'altSpellings'", hasItems("SY", "Syrian Arab Republic", "Al-Jumhūrīyah Al-ʻArabīyah As-Sūrīyah"))
                .body("[220].'region'", containsString("Asia"))
                .body("[220].'subregion'", containsString("Western Asia"))
                .body("[220].'population'", numberMatches(1.8564E7))
                .body("[220].'latlng'.size()", equalTo(2))
                .body("[220].'latlng'[0]", numberMatches(35.0))
                .body("[220].'latlng'[1]", numberMatches(38.0))
                .body("[220].'demonym'", containsString("Syrian"))
                .body("[220].'area'", numberMatches(185180.0))
                .body("[220].'gini'", numberMatches(35.8))
                .body("[220].'timezones'.size()", equalTo(1))
                .body("[220].'timezones'", hasItems("UTC+02:00"))
                .body("[220].'borders'.size()", equalTo(5))
                .body("[220].'borders'", hasItems("IRQ", "ISR", "JOR", "LBN", "TUR"))
                .body("[220].'nativeName'", containsString("سوريا"))
                .body("[220].'numericCode'", containsString("760"))
                .body("[220].'currencies'.size()", equalTo(1))
                .body("[220].'currencies'[0].'code'", containsString("SYP"))
                .body("[220].'currencies'[0].'name'", containsString("Syrian pound"))
                .body("[220].'currencies'[0].'symbol'", containsString("£"))
                .body("[220].'languages'.size()", equalTo(1))
                .body("[220].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[220].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[220].'languages'[0].'name'", containsString("Arabic"))
                .body("[220].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[220].'translations'.'de'", containsString("Syrien"))
                .body("[220].'translations'.'es'", containsString("Siria"))
                .body("[220].'translations'.'fr'", containsString("Syrie"))
                .body("[220].'translations'.'ja'", containsString("シリア・アラブ共和国"))
                .body("[220].'translations'.'it'", containsString("Siria"))
                .body("[220].'translations'.'br'", containsString("Síria"))
                .body("[220].'translations'.'pt'", containsString("Síria"))
                .body("[220].'translations'.'nl'", containsString("Syrië"))
                .body("[220].'translations'.'hr'", containsString("Sirija"))
                .body("[220].'translations'.'fa'", containsString("سوریه"))
                .body("[220].'flag'", containsString("https://restcountries.eu/data/syr.svg"))
                .body("[220].'regionalBlocs'.size()", equalTo(1))
                .body("[220].'regionalBlocs'[0].'acronym'", containsString("AL"))
                .body("[220].'regionalBlocs'[0].'name'", containsString("Arab League"))
                .body("[220].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[220].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[220].'regionalBlocs'[0].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[220].'cioc'", containsString("SYR"))
                .body("[221].'name'", containsString("Taiwan"))
                .body("[221].'topLevelDomain'.size()", equalTo(1))
                .body("[221].'topLevelDomain'", hasItems(".tw"))
                .body("[221].'alpha2Code'", containsString("TW"))
                .body("[221].'alpha3Code'", containsString("TWN"))
                .body("[221].'callingCodes'.size()", equalTo(1))
                .body("[221].'callingCodes'", hasItems("886"))
                .body("[221].'capital'", containsString("Taipei"))
                .body("[221].'altSpellings'.size()", equalTo(5))
                .body("[221].'altSpellings'", hasItems("TW", "Táiwān", "Republic of China", "中華民國", "Zhōnghuá Mínguó"))
                .body("[221].'region'", containsString("Asia"))
                .body("[221].'subregion'", containsString("Eastern Asia"))
                .body("[221].'population'", numberMatches(2.3503349E7))
                .body("[221].'latlng'.size()", equalTo(2))
                .body("[221].'latlng'[0]", numberMatches(23.5))
                .body("[221].'latlng'[1]", numberMatches(121.0))
                .body("[221].'demonym'", containsString("Taiwanese"))
                .body("[221].'area'", numberMatches(36193.0))
                .body("[221].'gini'", nullValue())
                .body("[221].'timezones'.size()", equalTo(1))
                .body("[221].'timezones'", hasItems("UTC+08:00"))
                .body("[221].'borders'.size()", equalTo(0))
                .body("[221].'nativeName'", containsString("臺灣"))
                .body("[221].'numericCode'", containsString("158"))
                .body("[221].'currencies'.size()", equalTo(1))
                .body("[221].'currencies'[0].'code'", containsString("TWD"))
                .body("[221].'currencies'[0].'name'", containsString("New Taiwan dollar"))
                .body("[221].'currencies'[0].'symbol'", containsString("$"))
                .body("[221].'languages'.size()", equalTo(1))
                .body("[221].'languages'[0].'iso639_1'", containsString("zh"))
                .body("[221].'languages'[0].'iso639_2'", containsString("zho"))
                .body("[221].'languages'[0].'name'", containsString("Chinese"))
                .body("[221].'languages'[0].'nativeName'", containsString("中文 (Zhōngwén)"))
                .body("[221].'translations'.'de'", containsString("Taiwan"))
                .body("[221].'translations'.'es'", containsString("Taiwán"))
                .body("[221].'translations'.'fr'", containsString("Taïwan"))
                .body("[221].'translations'.'ja'", containsString("台湾（中華民国）"))
                .body("[221].'translations'.'it'", containsString("Taiwan"))
                .body("[221].'translations'.'br'", containsString("Taiwan"))
                .body("[221].'translations'.'pt'", containsString("Taiwan"))
                .body("[221].'translations'.'nl'", containsString("Taiwan"))
                .body("[221].'translations'.'hr'", containsString("Tajvan"))
                .body("[221].'translations'.'fa'", containsString("تایوان"))
                .body("[221].'flag'", containsString("https://restcountries.eu/data/twn.svg"))
                .body("[221].'regionalBlocs'.size()", equalTo(0))
                .body("[221].'cioc'", containsString("TPE"))
                .body("[222].'name'", containsString("Tajikistan"))
                .body("[222].'topLevelDomain'.size()", equalTo(1))
                .body("[222].'topLevelDomain'", hasItems(".tj"))
                .body("[222].'alpha2Code'", containsString("TJ"))
                .body("[222].'alpha3Code'", containsString("TJK"))
                .body("[222].'callingCodes'.size()", equalTo(1))
                .body("[222].'callingCodes'", hasItems("992"))
                .body("[222].'capital'", containsString("Dushanbe"))
                .body("[222].'altSpellings'.size()", equalTo(5))
                .body("[222].'altSpellings'", hasItems("TJ", "Toçikiston", "Republic of Tajikistan", "Ҷумҳурии Тоҷикистон", "Çumhuriyi Toçikiston"))
                .body("[222].'region'", containsString("Asia"))
                .body("[222].'subregion'", containsString("Central Asia"))
                .body("[222].'population'", numberMatches(8593600.0))
                .body("[222].'latlng'.size()", equalTo(2))
                .body("[222].'latlng'[0]", numberMatches(39.0))
                .body("[222].'latlng'[1]", numberMatches(71.0))
                .body("[222].'demonym'", containsString("Tadzhik"))
                .body("[222].'area'", numberMatches(143100.0))
                .body("[222].'gini'", numberMatches(30.8))
                .body("[222].'timezones'.size()", equalTo(1))
                .body("[222].'timezones'", hasItems("UTC+05:00"))
                .body("[222].'borders'.size()", equalTo(4))
                .body("[222].'borders'", hasItems("AFG", "CHN", "KGZ", "UZB"))
                .body("[222].'nativeName'", containsString("Тоҷикистон"))
                .body("[222].'numericCode'", containsString("762"))
                .body("[222].'currencies'.size()", equalTo(1))
                .body("[222].'currencies'[0].'code'", containsString("TJS"))
                .body("[222].'currencies'[0].'name'", containsString("Tajikistani somoni"))
                .body("[222].'currencies'[0].'symbol'", containsString("ЅМ"))
                .body("[222].'languages'.size()", equalTo(2))
                .body("[222].'languages'[0].'iso639_1'", containsString("tg"))
                .body("[222].'languages'[0].'iso639_2'", containsString("tgk"))
                .body("[222].'languages'[0].'name'", containsString("Tajik"))
                .body("[222].'languages'[0].'nativeName'", containsString("тоҷикӣ"))
                .body("[222].'languages'[1].'iso639_1'", containsString("ru"))
                .body("[222].'languages'[1].'iso639_2'", containsString("rus"))
                .body("[222].'languages'[1].'name'", containsString("Russian"))
                .body("[222].'languages'[1].'nativeName'", containsString("Русский"))
                .body("[222].'translations'.'de'", containsString("Tadschikistan"))
                .body("[222].'translations'.'es'", containsString("Tayikistán"))
                .body("[222].'translations'.'fr'", containsString("Tadjikistan"))
                .body("[222].'translations'.'ja'", containsString("タジキスタン"))
                .body("[222].'translations'.'it'", containsString("Tagikistan"))
                .body("[222].'translations'.'br'", containsString("Tajiquistão"))
                .body("[222].'translations'.'pt'", containsString("Tajiquistão"))
                .body("[222].'translations'.'nl'", containsString("Tadzjikistan"))
                .body("[222].'translations'.'hr'", containsString("Tađikistan"))
                .body("[222].'translations'.'fa'", containsString("تاجیکستان"))
                .body("[222].'flag'", containsString("https://restcountries.eu/data/tjk.svg"))
                .body("[222].'regionalBlocs'.size()", equalTo(0))
                .body("[222].'cioc'", containsString("TJK"))
                .body("[223].'name'", containsString("Tanzania, United Republic of"))
                .body("[223].'topLevelDomain'.size()", equalTo(1))
                .body("[223].'topLevelDomain'", hasItems(".tz"))
                .body("[223].'alpha2Code'", containsString("TZ"))
                .body("[223].'alpha3Code'", containsString("TZA"))
                .body("[223].'callingCodes'.size()", equalTo(1))
                .body("[223].'callingCodes'", hasItems("255"))
                .body("[223].'capital'", containsString("Dodoma"))
                .body("[223].'altSpellings'.size()", equalTo(3))
                .body("[223].'altSpellings'", hasItems("TZ", "United Republic of Tanzania", "Jamhuri ya Muungano wa Tanzania"))
                .body("[223].'region'", containsString("Africa"))
                .body("[223].'subregion'", containsString("Eastern Africa"))
                .body("[223].'population'", numberMatches(5.5155E7))
                .body("[223].'latlng'.size()", equalTo(2))
                .body("[223].'latlng'[0]", numberMatches(-6.0))
                .body("[223].'latlng'[1]", numberMatches(35.0))
                .body("[223].'demonym'", containsString("Tanzanian"))
                .body("[223].'area'", numberMatches(945087.0))
                .body("[223].'gini'", numberMatches(37.6))
                .body("[223].'timezones'.size()", equalTo(1))
                .body("[223].'timezones'", hasItems("UTC+03:00"))
                .body("[223].'borders'.size()", equalTo(8))
                .body("[223].'borders'", hasItems("BDI", "COD", "KEN", "MWI", "MOZ", "RWA", "UGA", "ZMB"))
                .body("[223].'nativeName'", containsString("Tanzania"))
                .body("[223].'numericCode'", containsString("834"))
                .body("[223].'currencies'.size()", equalTo(1))
                .body("[223].'currencies'[0].'code'", containsString("TZS"))
                .body("[223].'currencies'[0].'name'", containsString("Tanzanian shilling"))
                .body("[223].'currencies'[0].'symbol'", containsString("Sh"))
                .body("[223].'languages'.size()", equalTo(2))
                .body("[223].'languages'[0].'iso639_1'", containsString("sw"))
                .body("[223].'languages'[0].'iso639_2'", containsString("swa"))
                .body("[223].'languages'[0].'name'", containsString("Swahili"))
                .body("[223].'languages'[0].'nativeName'", containsString("Kiswahili"))
                .body("[223].'languages'[1].'iso639_1'", containsString("en"))
                .body("[223].'languages'[1].'iso639_2'", containsString("eng"))
                .body("[223].'languages'[1].'name'", containsString("English"))
                .body("[223].'languages'[1].'nativeName'", containsString("English"))
                .body("[223].'translations'.'de'", containsString("Tansania"))
                .body("[223].'translations'.'es'", containsString("Tanzania"))
                .body("[223].'translations'.'fr'", containsString("Tanzanie"))
                .body("[223].'translations'.'ja'", containsString("タンザニア"))
                .body("[223].'translations'.'it'", containsString("Tanzania"))
                .body("[223].'translations'.'br'", containsString("Tanzânia"))
                .body("[223].'translations'.'pt'", containsString("Tanzânia"))
                .body("[223].'translations'.'nl'", containsString("Tanzania"))
                .body("[223].'translations'.'hr'", containsString("Tanzanija"))
                .body("[223].'translations'.'fa'", containsString("تانزانیا"))
                .body("[223].'flag'", containsString("https://restcountries.eu/data/tza.svg"))
                .body("[223].'regionalBlocs'.size()", equalTo(1))
                .body("[223].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[223].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[223].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[223].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[223].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[223].'cioc'", containsString("TAN"))
                .body("[224].'name'", containsString("Thailand"))
                .body("[224].'topLevelDomain'.size()", equalTo(1))
                .body("[224].'topLevelDomain'", hasItems(".th"))
                .body("[224].'alpha2Code'", containsString("TH"))
                .body("[224].'alpha3Code'", containsString("THA"))
                .body("[224].'callingCodes'.size()", equalTo(1))
                .body("[224].'callingCodes'", hasItems("66"))
                .body("[224].'capital'", containsString("Bangkok"))
                .body("[224].'altSpellings'.size()", equalTo(6))
                .body("[224].'altSpellings'", hasItems("TH", "Prathet", "Thai", "Kingdom of Thailand", "ราชอาณาจักรไทย", "Ratcha Anachak Thai"))
                .body("[224].'region'", containsString("Asia"))
                .body("[224].'subregion'", containsString("South-Eastern Asia"))
                .body("[224].'population'", numberMatches(6.5327652E7))
                .body("[224].'latlng'.size()", equalTo(2))
                .body("[224].'latlng'[0]", numberMatches(15.0))
                .body("[224].'latlng'[1]", numberMatches(100.0))
                .body("[224].'demonym'", containsString("Thai"))
                .body("[224].'area'", numberMatches(513120.0))
                .body("[224].'gini'", numberMatches(40.0))
                .body("[224].'timezones'.size()", equalTo(1))
                .body("[224].'timezones'", hasItems("UTC+07:00"))
                .body("[224].'borders'.size()", equalTo(4))
                .body("[224].'borders'", hasItems("MMR", "KHM", "LAO", "MYS"))
                .body("[224].'nativeName'", containsString("ประเทศไทย"))
                .body("[224].'numericCode'", containsString("764"))
                .body("[224].'currencies'.size()", equalTo(1))
                .body("[224].'currencies'[0].'code'", containsString("THB"))
                .body("[224].'currencies'[0].'name'", containsString("Thai baht"))
                .body("[224].'currencies'[0].'symbol'", containsString("฿"))
                .body("[224].'languages'.size()", equalTo(1))
                .body("[224].'languages'[0].'iso639_1'", containsString("th"))
                .body("[224].'languages'[0].'iso639_2'", containsString("tha"))
                .body("[224].'languages'[0].'name'", containsString("Thai"))
                .body("[224].'languages'[0].'nativeName'", containsString("ไทย"))
                .body("[224].'translations'.'de'", containsString("Thailand"))
                .body("[224].'translations'.'es'", containsString("Tailandia"))
                .body("[224].'translations'.'fr'", containsString("Thaïlande"))
                .body("[224].'translations'.'ja'", containsString("タイ"))
                .body("[224].'translations'.'it'", containsString("Tailandia"))
                .body("[224].'translations'.'br'", containsString("Tailândia"))
                .body("[224].'translations'.'pt'", containsString("Tailândia"))
                .body("[224].'translations'.'nl'", containsString("Thailand"))
                .body("[224].'translations'.'hr'", containsString("Tajland"))
                .body("[224].'translations'.'fa'", containsString("تایلند"))
                .body("[224].'flag'", containsString("https://restcountries.eu/data/tha.svg"))
                .body("[224].'regionalBlocs'.size()", equalTo(1))
                .body("[224].'regionalBlocs'[0].'acronym'", containsString("ASEAN"))
                .body("[224].'regionalBlocs'[0].'name'", containsString("Association of Southeast Asian Nations"))
                .body("[224].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[224].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[224].'cioc'", containsString("THA"))
                .body("[225].'name'", containsString("Timor-Leste"))
                .body("[225].'topLevelDomain'.size()", equalTo(1))
                .body("[225].'topLevelDomain'", hasItems(".tl"))
                .body("[225].'alpha2Code'", containsString("TL"))
                .body("[225].'alpha3Code'", containsString("TLS"))
                .body("[225].'callingCodes'.size()", equalTo(1))
                .body("[225].'callingCodes'", hasItems("670"))
                .body("[225].'capital'", containsString("Dili"))
                .body("[225].'altSpellings'.size()", equalTo(5))
                .body("[225].'altSpellings'", hasItems("TL", "East Timor", "Democratic Republic of Timor-Leste", "República Democrática de Timor-Leste", "Repúblika Demokrátika Timór-Leste"))
                .body("[225].'region'", containsString("Asia"))
                .body("[225].'subregion'", containsString("South-Eastern Asia"))
                .body("[225].'population'", numberMatches(1167242.0))
                .body("[225].'latlng'.size()", equalTo(2))
                .body("[225].'latlng'[0]", numberMatches(-8.83333333))
                .body("[225].'latlng'[1]", numberMatches(125.91666666))
                .body("[225].'demonym'", containsString("East Timorese"))
                .body("[225].'area'", numberMatches(14874.0))
                .body("[225].'gini'", numberMatches(31.9))
                .body("[225].'timezones'.size()", equalTo(1))
                .body("[225].'timezones'", hasItems("UTC+09:00"))
                .body("[225].'borders'.size()", equalTo(1))
                .body("[225].'borders'", hasItems("IDN"))
                .body("[225].'nativeName'", containsString("Timor-Leste"))
                .body("[225].'numericCode'", containsString("626"))
                .body("[225].'currencies'.size()", equalTo(2))
                .body("[225].'currencies'[0].'code'", containsString("USD"))
                .body("[225].'currencies'[0].'name'", containsString("United States dollar"))
                .body("[225].'currencies'[0].'symbol'", containsString("$"))
                .body("[225].'currencies'[1].'code'", nullValue())
                .body("[225].'currencies'[1].'name'", nullValue())
                .body("[225].'currencies'[1].'symbol'", nullValue())
                .body("[225].'languages'.size()", equalTo(1))
                .body("[225].'languages'[0].'iso639_1'", containsString("pt"))
                .body("[225].'languages'[0].'iso639_2'", containsString("por"))
                .body("[225].'languages'[0].'name'", containsString("Portuguese"))
                .body("[225].'languages'[0].'nativeName'", containsString("Português"))
                .body("[225].'translations'.'de'", containsString("Timor-Leste"))
                .body("[225].'translations'.'es'", containsString("Timor Oriental"))
                .body("[225].'translations'.'fr'", containsString("Timor oriental"))
                .body("[225].'translations'.'ja'", containsString("東ティモール"))
                .body("[225].'translations'.'it'", containsString("Timor Est"))
                .body("[225].'translations'.'br'", containsString("Timor Leste"))
                .body("[225].'translations'.'pt'", containsString("Timor Leste"))
                .body("[225].'translations'.'nl'", containsString("Oost-Timor"))
                .body("[225].'translations'.'hr'", containsString("Istočni Timor"))
                .body("[225].'translations'.'fa'", containsString("تیمور شرقی"))
                .body("[225].'flag'", containsString("https://restcountries.eu/data/tls.svg"))
                .body("[225].'regionalBlocs'.size()", equalTo(0))
                .body("[225].'cioc'", containsString("TLS"))
                .body("[226].'name'", containsString("Togo"))
                .body("[226].'topLevelDomain'.size()", equalTo(1))
                .body("[226].'topLevelDomain'", hasItems(".tg"))
                .body("[226].'alpha2Code'", containsString("TG"))
                .body("[226].'alpha3Code'", containsString("TGO"))
                .body("[226].'callingCodes'.size()", equalTo(1))
                .body("[226].'callingCodes'", hasItems("228"))
                .body("[226].'capital'", containsString("Lomé"))
                .body("[226].'altSpellings'.size()", equalTo(4))
                .body("[226].'altSpellings'", hasItems("TG", "Togolese", "Togolese Republic", "République Togolaise"))
                .body("[226].'region'", containsString("Africa"))
                .body("[226].'subregion'", containsString("Western Africa"))
                .body("[226].'population'", numberMatches(7143000.0))
                .body("[226].'latlng'.size()", equalTo(2))
                .body("[226].'latlng'[0]", numberMatches(8.0))
                .body("[226].'latlng'[1]", numberMatches(1.16666666))
                .body("[226].'demonym'", containsString("Togolese"))
                .body("[226].'area'", numberMatches(56785.0))
                .body("[226].'gini'", numberMatches(34.4))
                .body("[226].'timezones'.size()", equalTo(1))
                .body("[226].'timezones'", hasItems("UTC"))
                .body("[226].'borders'.size()", equalTo(3))
                .body("[226].'borders'", hasItems("BEN", "BFA", "GHA"))
                .body("[226].'nativeName'", containsString("Togo"))
                .body("[226].'numericCode'", containsString("768"))
                .body("[226].'currencies'.size()", equalTo(1))
                .body("[226].'currencies'[0].'code'", containsString("XOF"))
                .body("[226].'currencies'[0].'name'", containsString("West African CFA franc"))
                .body("[226].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[226].'languages'.size()", equalTo(1))
                .body("[226].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[226].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[226].'languages'[0].'name'", containsString("French"))
                .body("[226].'languages'[0].'nativeName'", containsString("français"))
                .body("[226].'translations'.'de'", containsString("Togo"))
                .body("[226].'translations'.'es'", containsString("Togo"))
                .body("[226].'translations'.'fr'", containsString("Togo"))
                .body("[226].'translations'.'ja'", containsString("トーゴ"))
                .body("[226].'translations'.'it'", containsString("Togo"))
                .body("[226].'translations'.'br'", containsString("Togo"))
                .body("[226].'translations'.'pt'", containsString("Togo"))
                .body("[226].'translations'.'nl'", containsString("Togo"))
                .body("[226].'translations'.'hr'", containsString("Togo"))
                .body("[226].'translations'.'fa'", containsString("توگو"))
                .body("[226].'flag'", containsString("https://restcountries.eu/data/tgo.svg"))
                .body("[226].'regionalBlocs'.size()", equalTo(1))
                .body("[226].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[226].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[226].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[226].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[226].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[226].'cioc'", containsString("TOG"))
                .body("[227].'name'", containsString("Tokelau"))
                .body("[227].'topLevelDomain'.size()", equalTo(1))
                .body("[227].'topLevelDomain'", hasItems(".tk"))
                .body("[227].'alpha2Code'", containsString("TK"))
                .body("[227].'alpha3Code'", containsString("TKL"))
                .body("[227].'callingCodes'.size()", equalTo(1))
                .body("[227].'callingCodes'", hasItems("690"))
                .body("[227].'capital'", containsString("Fakaofo"))
                .body("[227].'altSpellings'.size()", equalTo(1))
                .body("[227].'altSpellings'", hasItems("TK"))
                .body("[227].'region'", containsString("Oceania"))
                .body("[227].'subregion'", containsString("Polynesia"))
                .body("[227].'population'", numberMatches(1411.0))
                .body("[227].'latlng'.size()", equalTo(2))
                .body("[227].'latlng'[0]", numberMatches(-9.0))
                .body("[227].'latlng'[1]", numberMatches(-172.0))
                .body("[227].'demonym'", containsString("Tokelauan"))
                .body("[227].'area'", numberMatches(12.0))
                .body("[227].'gini'", nullValue())
                .body("[227].'timezones'.size()", equalTo(1))
                .body("[227].'timezones'", hasItems("UTC+13:00"))
                .body("[227].'borders'.size()", equalTo(0))
                .body("[227].'nativeName'", containsString("Tokelau"))
                .body("[227].'numericCode'", containsString("772"))
                .body("[227].'currencies'.size()", equalTo(1))
                .body("[227].'currencies'[0].'code'", containsString("NZD"))
                .body("[227].'currencies'[0].'name'", containsString("New Zealand dollar"))
                .body("[227].'currencies'[0].'symbol'", containsString("$"))
                .body("[227].'languages'.size()", equalTo(1))
                .body("[227].'languages'[0].'iso639_1'", containsString("en"))
                .body("[227].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[227].'languages'[0].'name'", containsString("English"))
                .body("[227].'languages'[0].'nativeName'", containsString("English"))
                .body("[227].'translations'.'de'", containsString("Tokelau"))
                .body("[227].'translations'.'es'", containsString("Islas Tokelau"))
                .body("[227].'translations'.'fr'", containsString("Tokelau"))
                .body("[227].'translations'.'ja'", containsString("トケラウ"))
                .body("[227].'translations'.'it'", containsString("Isole Tokelau"))
                .body("[227].'translations'.'br'", containsString("Tokelau"))
                .body("[227].'translations'.'pt'", containsString("Toquelau"))
                .body("[227].'translations'.'nl'", containsString("Tokelau"))
                .body("[227].'translations'.'hr'", containsString("Tokelau"))
                .body("[227].'translations'.'fa'", containsString("توکلائو"))
                .body("[227].'flag'", containsString("https://restcountries.eu/data/tkl.svg"))
                .body("[227].'regionalBlocs'.size()", equalTo(0))
                .body("[227].'cioc'", containsString(""))
                .body("[228].'name'", containsString("Tonga"))
                .body("[228].'topLevelDomain'.size()", equalTo(1))
                .body("[228].'topLevelDomain'", hasItems(".to"))
                .body("[228].'alpha2Code'", containsString("TO"))
                .body("[228].'alpha3Code'", containsString("TON"))
                .body("[228].'callingCodes'.size()", equalTo(1))
                .body("[228].'callingCodes'", hasItems("676"))
                .body("[228].'capital'", containsString("Nuku'alofa"))
                .body("[228].'altSpellings'.size()", equalTo(1))
                .body("[228].'altSpellings'", hasItems("TO"))
                .body("[228].'region'", containsString("Oceania"))
                .body("[228].'subregion'", containsString("Polynesia"))
                .body("[228].'population'", numberMatches(103252.0))
                .body("[228].'latlng'.size()", equalTo(2))
                .body("[228].'latlng'[0]", numberMatches(-20.0))
                .body("[228].'latlng'[1]", numberMatches(-175.0))
                .body("[228].'demonym'", containsString("Tongan"))
                .body("[228].'area'", numberMatches(747.0))
                .body("[228].'gini'", nullValue())
                .body("[228].'timezones'.size()", equalTo(1))
                .body("[228].'timezones'", hasItems("UTC+13:00"))
                .body("[228].'borders'.size()", equalTo(0))
                .body("[228].'nativeName'", containsString("Tonga"))
                .body("[228].'numericCode'", containsString("776"))
                .body("[228].'currencies'.size()", equalTo(1))
                .body("[228].'currencies'[0].'code'", containsString("TOP"))
                .body("[228].'currencies'[0].'name'", containsString("Tongan paʻanga"))
                .body("[228].'currencies'[0].'symbol'", containsString("T$"))
                .body("[228].'languages'.size()", equalTo(2))
                .body("[228].'languages'[0].'iso639_1'", containsString("en"))
                .body("[228].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[228].'languages'[0].'name'", containsString("English"))
                .body("[228].'languages'[0].'nativeName'", containsString("English"))
                .body("[228].'languages'[1].'iso639_1'", containsString("to"))
                .body("[228].'languages'[1].'iso639_2'", containsString("ton"))
                .body("[228].'languages'[1].'name'", containsString("Tonga (Tonga Islands)"))
                .body("[228].'languages'[1].'nativeName'", containsString("faka Tonga"))
                .body("[228].'translations'.'de'", containsString("Tonga"))
                .body("[228].'translations'.'es'", containsString("Tonga"))
                .body("[228].'translations'.'fr'", containsString("Tonga"))
                .body("[228].'translations'.'ja'", containsString("トンガ"))
                .body("[228].'translations'.'it'", containsString("Tonga"))
                .body("[228].'translations'.'br'", containsString("Tonga"))
                .body("[228].'translations'.'pt'", containsString("Tonga"))
                .body("[228].'translations'.'nl'", containsString("Tonga"))
                .body("[228].'translations'.'hr'", containsString("Tonga"))
                .body("[228].'translations'.'fa'", containsString("تونگا"))
                .body("[228].'flag'", containsString("https://restcountries.eu/data/ton.svg"))
                .body("[228].'regionalBlocs'.size()", equalTo(0))
                .body("[228].'cioc'", containsString("TGA"))
                .body("[229].'name'", containsString("Trinidad and Tobago"))
                .body("[229].'topLevelDomain'.size()", equalTo(1))
                .body("[229].'topLevelDomain'", hasItems(".tt"))
                .body("[229].'alpha2Code'", containsString("TT"))
                .body("[229].'alpha3Code'", containsString("TTO"))
                .body("[229].'callingCodes'.size()", equalTo(1))
                .body("[229].'callingCodes'", hasItems("1"))
                .body("[229].'capital'", containsString("Port of Spain"))
                .body("[229].'altSpellings'.size()", equalTo(2))
                .body("[229].'altSpellings'", hasItems("TT", "Republic of Trinidad and Tobago"))
                .body("[229].'region'", containsString("Americas"))
                .body("[229].'subregion'", containsString("Caribbean"))
                .body("[229].'population'", numberMatches(1349667.0))
                .body("[229].'latlng'.size()", equalTo(2))
                .body("[229].'latlng'[0]", numberMatches(11.0))
                .body("[229].'latlng'[1]", numberMatches(-61.0))
                .body("[229].'demonym'", containsString("Trinidadian"))
                .body("[229].'area'", numberMatches(5130.0))
                .body("[229].'gini'", numberMatches(40.3))
                .body("[229].'timezones'.size()", equalTo(1))
                .body("[229].'timezones'", hasItems("UTC-04:00"))
                .body("[229].'borders'.size()", equalTo(0))
                .body("[229].'nativeName'", containsString("Trinidad and Tobago"))
                .body("[229].'numericCode'", containsString("780"))
                .body("[229].'currencies'.size()", equalTo(1))
                .body("[229].'currencies'[0].'code'", containsString("TTD"))
                .body("[229].'currencies'[0].'name'", containsString("Trinidad and Tobago dollar"))
                .body("[229].'currencies'[0].'symbol'", containsString("$"))
                .body("[229].'languages'.size()", equalTo(1))
                .body("[229].'languages'[0].'iso639_1'", containsString("en"))
                .body("[229].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[229].'languages'[0].'name'", containsString("English"))
                .body("[229].'languages'[0].'nativeName'", containsString("English"))
                .body("[229].'translations'.'de'", containsString("Trinidad und Tobago"))
                .body("[229].'translations'.'es'", containsString("Trinidad y Tobago"))
                .body("[229].'translations'.'fr'", containsString("Trinité et Tobago"))
                .body("[229].'translations'.'ja'", containsString("トリニダード・トバゴ"))
                .body("[229].'translations'.'it'", containsString("Trinidad e Tobago"))
                .body("[229].'translations'.'br'", containsString("Trinidad e Tobago"))
                .body("[229].'translations'.'pt'", containsString("Trindade e Tobago"))
                .body("[229].'translations'.'nl'", containsString("Trinidad en Tobago"))
                .body("[229].'translations'.'hr'", containsString("Trinidad i Tobago"))
                .body("[229].'translations'.'fa'", containsString("ترینیداد و توباگو"))
                .body("[229].'flag'", containsString("https://restcountries.eu/data/tto.svg"))
                .body("[229].'regionalBlocs'.size()", equalTo(1))
                .body("[229].'regionalBlocs'[0].'acronym'", containsString("CARICOM"))
                .body("[229].'regionalBlocs'[0].'name'", containsString("Caribbean Community"))
                .body("[229].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[229].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[229].'regionalBlocs'[0].'otherNames'", hasItems("Comunidad del Caribe", "Communauté Caribéenne", "Caribische Gemeenschap"))
                .body("[229].'cioc'", containsString("TTO"))
                .body("[230].'name'", containsString("Tunisia"))
                .body("[230].'topLevelDomain'.size()", equalTo(1))
                .body("[230].'topLevelDomain'", hasItems(".tn"))
                .body("[230].'alpha2Code'", containsString("TN"))
                .body("[230].'alpha3Code'", containsString("TUN"))
                .body("[230].'callingCodes'.size()", equalTo(1))
                .body("[230].'callingCodes'", hasItems("216"))
                .body("[230].'capital'", containsString("Tunis"))
                .body("[230].'altSpellings'.size()", equalTo(3))
                .body("[230].'altSpellings'", hasItems("TN", "Republic of Tunisia", "al-Jumhūriyyah at-Tūnisiyyah"))
                .body("[230].'region'", containsString("Africa"))
                .body("[230].'subregion'", containsString("Northern Africa"))
                .body("[230].'population'", numberMatches(1.11544E7))
                .body("[230].'latlng'.size()", equalTo(2))
                .body("[230].'latlng'[0]", numberMatches(34.0))
                .body("[230].'latlng'[1]", numberMatches(9.0))
                .body("[230].'demonym'", containsString("Tunisian"))
                .body("[230].'area'", numberMatches(163610.0))
                .body("[230].'gini'", numberMatches(41.4))
                .body("[230].'timezones'.size()", equalTo(1))
                .body("[230].'timezones'", hasItems("UTC+01:00"))
                .body("[230].'borders'.size()", equalTo(2))
                .body("[230].'borders'", hasItems("DZA", "LBY"))
                .body("[230].'nativeName'", containsString("تونس"))
                .body("[230].'numericCode'", containsString("788"))
                .body("[230].'currencies'.size()", equalTo(1))
                .body("[230].'currencies'[0].'code'", containsString("TND"))
                .body("[230].'currencies'[0].'name'", containsString("Tunisian dinar"))
                .body("[230].'currencies'[0].'symbol'", containsString("د.ت"))
                .body("[230].'languages'.size()", equalTo(1))
                .body("[230].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[230].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[230].'languages'[0].'name'", containsString("Arabic"))
                .body("[230].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[230].'translations'.'de'", containsString("Tunesien"))
                .body("[230].'translations'.'es'", containsString("Túnez"))
                .body("[230].'translations'.'fr'", containsString("Tunisie"))
                .body("[230].'translations'.'ja'", containsString("チュニジア"))
                .body("[230].'translations'.'it'", containsString("Tunisia"))
                .body("[230].'translations'.'br'", containsString("Tunísia"))
                .body("[230].'translations'.'pt'", containsString("Tunísia"))
                .body("[230].'translations'.'nl'", containsString("Tunesië"))
                .body("[230].'translations'.'hr'", containsString("Tunis"))
                .body("[230].'translations'.'fa'", containsString("تونس"))
                .body("[230].'flag'", containsString("https://restcountries.eu/data/tun.svg"))
                .body("[230].'regionalBlocs'.size()", equalTo(2))
                .body("[230].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[230].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[230].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[230].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[230].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[230].'regionalBlocs'[1].'acronym'", containsString("AL"))
                .body("[230].'regionalBlocs'[1].'name'", containsString("Arab League"))
                .body("[230].'regionalBlocs'[1].'otherAcronyms'.size()", equalTo(0))
                .body("[230].'regionalBlocs'[1].'otherNames'.size()", equalTo(3))
                .body("[230].'regionalBlocs'[1].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[230].'cioc'", containsString("TUN"))
                .body("[231].'name'", containsString("Turkey"))
                .body("[231].'topLevelDomain'.size()", equalTo(1))
                .body("[231].'topLevelDomain'", hasItems(".tr"))
                .body("[231].'alpha2Code'", containsString("TR"))
                .body("[231].'alpha3Code'", containsString("TUR"))
                .body("[231].'callingCodes'.size()", equalTo(1))
                .body("[231].'callingCodes'", hasItems("90"))
                .body("[231].'capital'", containsString("Ankara"))
                .body("[231].'altSpellings'.size()", equalTo(4))
                .body("[231].'altSpellings'", hasItems("TR", "Turkiye", "Republic of Turkey", "Türkiye Cumhuriyeti"))
                .body("[231].'region'", containsString("Asia"))
                .body("[231].'subregion'", containsString("Western Asia"))
                .body("[231].'population'", numberMatches(7.8741053E7))
                .body("[231].'latlng'.size()", equalTo(2))
                .body("[231].'latlng'[0]", numberMatches(39.0))
                .body("[231].'latlng'[1]", numberMatches(35.0))
                .body("[231].'demonym'", containsString("Turkish"))
                .body("[231].'area'", numberMatches(783562.0))
                .body("[231].'gini'", numberMatches(39.0))
                .body("[231].'timezones'.size()", equalTo(1))
                .body("[231].'timezones'", hasItems("UTC+03:00"))
                .body("[231].'borders'.size()", equalTo(8))
                .body("[231].'borders'", hasItems("ARM", "AZE", "BGR", "GEO", "GRC", "IRN", "IRQ", "SYR"))
                .body("[231].'nativeName'", containsString("Türkiye"))
                .body("[231].'numericCode'", containsString("792"))
                .body("[231].'currencies'.size()", equalTo(1))
                .body("[231].'currencies'[0].'code'", containsString("TRY"))
                .body("[231].'currencies'[0].'name'", containsString("Turkish lira"))
                .body("[231].'currencies'[0].'symbol'", nullValue())
                .body("[231].'languages'.size()", equalTo(1))
                .body("[231].'languages'[0].'iso639_1'", containsString("tr"))
                .body("[231].'languages'[0].'iso639_2'", containsString("tur"))
                .body("[231].'languages'[0].'name'", containsString("Turkish"))
                .body("[231].'languages'[0].'nativeName'", containsString("Türkçe"))
                .body("[231].'translations'.'de'", containsString("Türkei"))
                .body("[231].'translations'.'es'", containsString("Turquía"))
                .body("[231].'translations'.'fr'", containsString("Turquie"))
                .body("[231].'translations'.'ja'", containsString("トルコ"))
                .body("[231].'translations'.'it'", containsString("Turchia"))
                .body("[231].'translations'.'br'", containsString("Turquia"))
                .body("[231].'translations'.'pt'", containsString("Turquia"))
                .body("[231].'translations'.'nl'", containsString("Turkije"))
                .body("[231].'translations'.'hr'", containsString("Turska"))
                .body("[231].'translations'.'fa'", containsString("ترکیه"))
                .body("[231].'flag'", containsString("https://restcountries.eu/data/tur.svg"))
                .body("[231].'regionalBlocs'.size()", equalTo(0))
                .body("[231].'cioc'", containsString("TUR"))
                .body("[232].'name'", containsString("Turkmenistan"))
                .body("[232].'topLevelDomain'.size()", equalTo(1))
                .body("[232].'topLevelDomain'", hasItems(".tm"))
                .body("[232].'alpha2Code'", containsString("TM"))
                .body("[232].'alpha3Code'", containsString("TKM"))
                .body("[232].'callingCodes'.size()", equalTo(1))
                .body("[232].'callingCodes'", hasItems("993"))
                .body("[232].'capital'", containsString("Ashgabat"))
                .body("[232].'altSpellings'.size()", equalTo(1))
                .body("[232].'altSpellings'", hasItems("TM"))
                .body("[232].'region'", containsString("Asia"))
                .body("[232].'subregion'", containsString("Central Asia"))
                .body("[232].'population'", numberMatches(4751120.0))
                .body("[232].'latlng'.size()", equalTo(2))
                .body("[232].'latlng'[0]", numberMatches(40.0))
                .body("[232].'latlng'[1]", numberMatches(60.0))
                .body("[232].'demonym'", containsString("Turkmen"))
                .body("[232].'area'", numberMatches(488100.0))
                .body("[232].'gini'", numberMatches(40.8))
                .body("[232].'timezones'.size()", equalTo(1))
                .body("[232].'timezones'", hasItems("UTC+05:00"))
                .body("[232].'borders'.size()", equalTo(4))
                .body("[232].'borders'", hasItems("AFG", "IRN", "KAZ", "UZB"))
                .body("[232].'nativeName'", containsString("Türkmenistan"))
                .body("[232].'numericCode'", containsString("795"))
                .body("[232].'currencies'.size()", equalTo(1))
                .body("[232].'currencies'[0].'code'", containsString("TMT"))
                .body("[232].'currencies'[0].'name'", containsString("Turkmenistan manat"))
                .body("[232].'currencies'[0].'symbol'", containsString("m"))
                .body("[232].'languages'.size()", equalTo(2))
                .body("[232].'languages'[0].'iso639_1'", containsString("tk"))
                .body("[232].'languages'[0].'iso639_2'", containsString("tuk"))
                .body("[232].'languages'[0].'name'", containsString("Turkmen"))
                .body("[232].'languages'[0].'nativeName'", containsString("Türkmen"))
                .body("[232].'languages'[1].'iso639_1'", containsString("ru"))
                .body("[232].'languages'[1].'iso639_2'", containsString("rus"))
                .body("[232].'languages'[1].'name'", containsString("Russian"))
                .body("[232].'languages'[1].'nativeName'", containsString("Русский"))
                .body("[232].'translations'.'de'", containsString("Turkmenistan"))
                .body("[232].'translations'.'es'", containsString("Turkmenistán"))
                .body("[232].'translations'.'fr'", containsString("Turkménistan"))
                .body("[232].'translations'.'ja'", containsString("トルクメニスタン"))
                .body("[232].'translations'.'it'", containsString("Turkmenistan"))
                .body("[232].'translations'.'br'", containsString("Turcomenistão"))
                .body("[232].'translations'.'pt'", containsString("Turquemenistão"))
                .body("[232].'translations'.'nl'", containsString("Turkmenistan"))
                .body("[232].'translations'.'hr'", containsString("Turkmenistan"))
                .body("[232].'translations'.'fa'", containsString("ترکمنستان"))
                .body("[232].'flag'", containsString("https://restcountries.eu/data/tkm.svg"))
                .body("[232].'regionalBlocs'.size()", equalTo(0))
                .body("[232].'cioc'", containsString("TKM"))
                .body("[233].'name'", containsString("Turks and Caicos Islands"))
                .body("[233].'topLevelDomain'.size()", equalTo(1))
                .body("[233].'topLevelDomain'", hasItems(".tc"))
                .body("[233].'alpha2Code'", containsString("TC"))
                .body("[233].'alpha3Code'", containsString("TCA"))
                .body("[233].'callingCodes'.size()", equalTo(1))
                .body("[233].'callingCodes'", hasItems("1"))
                .body("[233].'capital'", containsString("Cockburn Town"))
                .body("[233].'altSpellings'.size()", equalTo(1))
                .body("[233].'altSpellings'", hasItems("TC"))
                .body("[233].'region'", containsString("Americas"))
                .body("[233].'subregion'", containsString("Caribbean"))
                .body("[233].'population'", numberMatches(31458.0))
                .body("[233].'latlng'.size()", equalTo(2))
                .body("[233].'latlng'[0]", numberMatches(21.75))
                .body("[233].'latlng'[1]", numberMatches(-71.58333333))
                .body("[233].'demonym'", containsString("Turks and Caicos Islander"))
                .body("[233].'area'", numberMatches(948.0))
                .body("[233].'gini'", nullValue())
                .body("[233].'timezones'.size()", equalTo(1))
                .body("[233].'timezones'", hasItems("UTC-04:00"))
                .body("[233].'borders'.size()", equalTo(0))
                .body("[233].'nativeName'", containsString("Turks and Caicos Islands"))
                .body("[233].'numericCode'", containsString("796"))
                .body("[233].'currencies'.size()", equalTo(1))
                .body("[233].'currencies'[0].'code'", containsString("USD"))
                .body("[233].'currencies'[0].'name'", containsString("United States dollar"))
                .body("[233].'currencies'[0].'symbol'", containsString("$"))
                .body("[233].'languages'.size()", equalTo(1))
                .body("[233].'languages'[0].'iso639_1'", containsString("en"))
                .body("[233].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[233].'languages'[0].'name'", containsString("English"))
                .body("[233].'languages'[0].'nativeName'", containsString("English"))
                .body("[233].'translations'.'de'", containsString("Turks- und Caicosinseln"))
                .body("[233].'translations'.'es'", containsString("Islas Turks y Caicos"))
                .body("[233].'translations'.'fr'", containsString("Îles Turques-et-Caïques"))
                .body("[233].'translations'.'ja'", containsString("タークス・カイコス諸島"))
                .body("[233].'translations'.'it'", containsString("Isole Turks e Caicos"))
                .body("[233].'translations'.'br'", containsString("Ilhas Turcas e Caicos"))
                .body("[233].'translations'.'pt'", containsString("Ilhas Turcas e Caicos"))
                .body("[233].'translations'.'nl'", containsString("Turks- en Caicoseilanden"))
                .body("[233].'translations'.'hr'", containsString("Otoci Turks i Caicos"))
                .body("[233].'translations'.'fa'", containsString("جزایر تورکس و کایکوس"))
                .body("[233].'flag'", containsString("https://restcountries.eu/data/tca.svg"))
                .body("[233].'regionalBlocs'.size()", equalTo(0))
                .body("[233].'cioc'", containsString(""))
                .body("[234].'name'", containsString("Tuvalu"))
                .body("[234].'topLevelDomain'.size()", equalTo(1))
                .body("[234].'topLevelDomain'", hasItems(".tv"))
                .body("[234].'alpha2Code'", containsString("TV"))
                .body("[234].'alpha3Code'", containsString("TUV"))
                .body("[234].'callingCodes'.size()", equalTo(1))
                .body("[234].'callingCodes'", hasItems("688"))
                .body("[234].'capital'", containsString("Funafuti"))
                .body("[234].'altSpellings'.size()", equalTo(1))
                .body("[234].'altSpellings'", hasItems("TV"))
                .body("[234].'region'", containsString("Oceania"))
                .body("[234].'subregion'", containsString("Polynesia"))
                .body("[234].'population'", numberMatches(10640.0))
                .body("[234].'latlng'.size()", equalTo(2))
                .body("[234].'latlng'[0]", numberMatches(-8.0))
                .body("[234].'latlng'[1]", numberMatches(178.0))
                .body("[234].'demonym'", containsString("Tuvaluan"))
                .body("[234].'area'", numberMatches(26.0))
                .body("[234].'gini'", nullValue())
                .body("[234].'timezones'.size()", equalTo(1))
                .body("[234].'timezones'", hasItems("UTC+12:00"))
                .body("[234].'borders'.size()", equalTo(0))
                .body("[234].'nativeName'", containsString("Tuvalu"))
                .body("[234].'numericCode'", containsString("798"))
                .body("[234].'currencies'.size()", equalTo(2))
                .body("[234].'currencies'[0].'code'", containsString("AUD"))
                .body("[234].'currencies'[0].'name'", containsString("Australian dollar"))
                .body("[234].'currencies'[0].'symbol'", containsString("$"))
                .body("[234].'currencies'[1].'code'", containsString("TVD[G]"))
                .body("[234].'currencies'[1].'name'", containsString("Tuvaluan dollar"))
                .body("[234].'currencies'[1].'symbol'", containsString("$"))
                .body("[234].'languages'.size()", equalTo(1))
                .body("[234].'languages'[0].'iso639_1'", containsString("en"))
                .body("[234].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[234].'languages'[0].'name'", containsString("English"))
                .body("[234].'languages'[0].'nativeName'", containsString("English"))
                .body("[234].'translations'.'de'", containsString("Tuvalu"))
                .body("[234].'translations'.'es'", containsString("Tuvalu"))
                .body("[234].'translations'.'fr'", containsString("Tuvalu"))
                .body("[234].'translations'.'ja'", containsString("ツバル"))
                .body("[234].'translations'.'it'", containsString("Tuvalu"))
                .body("[234].'translations'.'br'", containsString("Tuvalu"))
                .body("[234].'translations'.'pt'", containsString("Tuvalu"))
                .body("[234].'translations'.'nl'", containsString("Tuvalu"))
                .body("[234].'translations'.'hr'", containsString("Tuvalu"))
                .body("[234].'translations'.'fa'", containsString("تووالو"))
                .body("[234].'flag'", containsString("https://restcountries.eu/data/tuv.svg"))
                .body("[234].'regionalBlocs'.size()", equalTo(0))
                .body("[234].'cioc'", containsString("TUV"))
                .body("[235].'name'", containsString("Uganda"))
                .body("[235].'topLevelDomain'.size()", equalTo(1))
                .body("[235].'topLevelDomain'", hasItems(".ug"))
                .body("[235].'alpha2Code'", containsString("UG"))
                .body("[235].'alpha3Code'", containsString("UGA"))
                .body("[235].'callingCodes'.size()", equalTo(1))
                .body("[235].'callingCodes'", hasItems("256"))
                .body("[235].'capital'", containsString("Kampala"))
                .body("[235].'altSpellings'.size()", equalTo(3))
                .body("[235].'altSpellings'", hasItems("UG", "Republic of Uganda", "Jamhuri ya Uganda"))
                .body("[235].'region'", containsString("Africa"))
                .body("[235].'subregion'", containsString("Eastern Africa"))
                .body("[235].'population'", numberMatches(3.38607E7))
                .body("[235].'latlng'.size()", equalTo(2))
                .body("[235].'latlng'[0]", numberMatches(1.0))
                .body("[235].'latlng'[1]", numberMatches(32.0))
                .body("[235].'demonym'", containsString("Ugandan"))
                .body("[235].'area'", numberMatches(241550.0))
                .body("[235].'gini'", numberMatches(44.3))
                .body("[235].'timezones'.size()", equalTo(1))
                .body("[235].'timezones'", hasItems("UTC+03:00"))
                .body("[235].'borders'.size()", equalTo(5))
                .body("[235].'borders'", hasItems("COD", "KEN", "RWA", "SSD", "TZA"))
                .body("[235].'nativeName'", containsString("Uganda"))
                .body("[235].'numericCode'", containsString("800"))
                .body("[235].'currencies'.size()", equalTo(1))
                .body("[235].'currencies'[0].'code'", containsString("UGX"))
                .body("[235].'currencies'[0].'name'", containsString("Ugandan shilling"))
                .body("[235].'currencies'[0].'symbol'", containsString("Sh"))
                .body("[235].'languages'.size()", equalTo(2))
                .body("[235].'languages'[0].'iso639_1'", containsString("en"))
                .body("[235].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[235].'languages'[0].'name'", containsString("English"))
                .body("[235].'languages'[0].'nativeName'", containsString("English"))
                .body("[235].'languages'[1].'iso639_1'", containsString("sw"))
                .body("[235].'languages'[1].'iso639_2'", containsString("swa"))
                .body("[235].'languages'[1].'name'", containsString("Swahili"))
                .body("[235].'languages'[1].'nativeName'", containsString("Kiswahili"))
                .body("[235].'translations'.'de'", containsString("Uganda"))
                .body("[235].'translations'.'es'", containsString("Uganda"))
                .body("[235].'translations'.'fr'", containsString("Uganda"))
                .body("[235].'translations'.'ja'", containsString("ウガンダ"))
                .body("[235].'translations'.'it'", containsString("Uganda"))
                .body("[235].'translations'.'br'", containsString("Uganda"))
                .body("[235].'translations'.'pt'", containsString("Uganda"))
                .body("[235].'translations'.'nl'", containsString("Oeganda"))
                .body("[235].'translations'.'hr'", containsString("Uganda"))
                .body("[235].'translations'.'fa'", containsString("اوگاندا"))
                .body("[235].'flag'", containsString("https://restcountries.eu/data/uga.svg"))
                .body("[235].'regionalBlocs'.size()", equalTo(1))
                .body("[235].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[235].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[235].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[235].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[235].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[235].'cioc'", containsString("UGA"))
                .body("[236].'name'", containsString("Ukraine"))
                .body("[236].'topLevelDomain'.size()", equalTo(1))
                .body("[236].'topLevelDomain'", hasItems(".ua"))
                .body("[236].'alpha2Code'", containsString("UA"))
                .body("[236].'alpha3Code'", containsString("UKR"))
                .body("[236].'callingCodes'.size()", equalTo(1))
                .body("[236].'callingCodes'", hasItems("380"))
                .body("[236].'capital'", containsString("Kiev"))
                .body("[236].'altSpellings'.size()", equalTo(2))
                .body("[236].'altSpellings'", hasItems("UA", "Ukrayina"))
                .body("[236].'region'", containsString("Europe"))
                .body("[236].'subregion'", containsString("Eastern Europe"))
                .body("[236].'population'", numberMatches(4.2692393E7))
                .body("[236].'latlng'.size()", equalTo(2))
                .body("[236].'latlng'[0]", numberMatches(49.0))
                .body("[236].'latlng'[1]", numberMatches(32.0))
                .body("[236].'demonym'", containsString("Ukrainian"))
                .body("[236].'area'", numberMatches(603700.0))
                .body("[236].'gini'", numberMatches(26.4))
                .body("[236].'timezones'.size()", equalTo(1))
                .body("[236].'timezones'", hasItems("UTC+02:00"))
                .body("[236].'borders'.size()", equalTo(7))
                .body("[236].'borders'", hasItems("BLR", "HUN", "MDA", "POL", "ROU", "RUS", "SVK"))
                .body("[236].'nativeName'", containsString("Україна"))
                .body("[236].'numericCode'", containsString("804"))
                .body("[236].'currencies'.size()", equalTo(1))
                .body("[236].'currencies'[0].'code'", containsString("UAH"))
                .body("[236].'currencies'[0].'name'", containsString("Ukrainian hryvnia"))
                .body("[236].'currencies'[0].'symbol'", containsString("₴"))
                .body("[236].'languages'.size()", equalTo(1))
                .body("[236].'languages'[0].'iso639_1'", containsString("uk"))
                .body("[236].'languages'[0].'iso639_2'", containsString("ukr"))
                .body("[236].'languages'[0].'name'", containsString("Ukrainian"))
                .body("[236].'languages'[0].'nativeName'", containsString("Українська"))
                .body("[236].'translations'.'de'", containsString("Ukraine"))
                .body("[236].'translations'.'es'", containsString("Ucrania"))
                .body("[236].'translations'.'fr'", containsString("Ukraine"))
                .body("[236].'translations'.'ja'", containsString("ウクライナ"))
                .body("[236].'translations'.'it'", containsString("Ucraina"))
                .body("[236].'translations'.'br'", containsString("Ucrânia"))
                .body("[236].'translations'.'pt'", containsString("Ucrânia"))
                .body("[236].'translations'.'nl'", containsString("Oekraïne"))
                .body("[236].'translations'.'hr'", containsString("Ukrajina"))
                .body("[236].'translations'.'fa'", containsString("وکراین"))
                .body("[236].'flag'", containsString("https://restcountries.eu/data/ukr.svg"))
                .body("[236].'regionalBlocs'.size()", equalTo(0))
                .body("[236].'cioc'", containsString("UKR"))
                .body("[237].'name'", containsString("United Arab Emirates"))
                .body("[237].'topLevelDomain'.size()", equalTo(1))
                .body("[237].'topLevelDomain'", hasItems(".ae"))
                .body("[237].'alpha2Code'", containsString("AE"))
                .body("[237].'alpha3Code'", containsString("ARE"))
                .body("[237].'callingCodes'.size()", equalTo(1))
                .body("[237].'callingCodes'", hasItems("971"))
                .body("[237].'capital'", containsString("Abu Dhabi"))
                .body("[237].'altSpellings'.size()", equalTo(2))
                .body("[237].'altSpellings'", hasItems("AE", "UAE"))
                .body("[237].'region'", containsString("Asia"))
                .body("[237].'subregion'", containsString("Western Asia"))
                .body("[237].'population'", numberMatches(9856000.0))
                .body("[237].'latlng'.size()", equalTo(2))
                .body("[237].'latlng'[0]", numberMatches(24.0))
                .body("[237].'latlng'[1]", numberMatches(54.0))
                .body("[237].'demonym'", containsString("Emirati"))
                .body("[237].'area'", numberMatches(83600.0))
                .body("[237].'gini'", nullValue())
                .body("[237].'timezones'.size()", equalTo(1))
                .body("[237].'timezones'", hasItems("UTC+04"))
                .body("[237].'borders'.size()", equalTo(2))
                .body("[237].'borders'", hasItems("OMN", "SAU"))
                .body("[237].'nativeName'", containsString("دولة الإمارات العربية المتحدة"))
                .body("[237].'numericCode'", containsString("784"))
                .body("[237].'currencies'.size()", equalTo(1))
                .body("[237].'currencies'[0].'code'", containsString("AED"))
                .body("[237].'currencies'[0].'name'", containsString("United Arab Emirates dirham"))
                .body("[237].'currencies'[0].'symbol'", containsString("د.إ"))
                .body("[237].'languages'.size()", equalTo(1))
                .body("[237].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[237].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[237].'languages'[0].'name'", containsString("Arabic"))
                .body("[237].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[237].'translations'.'de'", containsString("Vereinigte Arabische Emirate"))
                .body("[237].'translations'.'es'", containsString("Emiratos Árabes Unidos"))
                .body("[237].'translations'.'fr'", containsString("Émirats arabes unis"))
                .body("[237].'translations'.'ja'", containsString("アラブ首長国連邦"))
                .body("[237].'translations'.'it'", containsString("Emirati Arabi Uniti"))
                .body("[237].'translations'.'br'", containsString("Emirados árabes Unidos"))
                .body("[237].'translations'.'pt'", containsString("Emirados árabes Unidos"))
                .body("[237].'translations'.'nl'", containsString("Verenigde Arabische Emiraten"))
                .body("[237].'translations'.'hr'", containsString("Ujedinjeni Arapski Emirati"))
                .body("[237].'translations'.'fa'", containsString("امارات متحده عربی"))
                .body("[237].'flag'", containsString("https://restcountries.eu/data/are.svg"))
                .body("[237].'regionalBlocs'.size()", equalTo(1))
                .body("[237].'regionalBlocs'[0].'acronym'", containsString("AL"))
                .body("[237].'regionalBlocs'[0].'name'", containsString("Arab League"))
                .body("[237].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[237].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[237].'regionalBlocs'[0].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[237].'cioc'", containsString("UAE"))
                .body("[238].'name'", containsString("United Kingdom of Great Britain and Northern Ireland"))
                .body("[238].'topLevelDomain'.size()", equalTo(1))
                .body("[238].'topLevelDomain'", hasItems(".uk"))
                .body("[238].'alpha2Code'", containsString("GB"))
                .body("[238].'alpha3Code'", containsString("GBR"))
                .body("[238].'callingCodes'.size()", equalTo(1))
                .body("[238].'callingCodes'", hasItems("44"))
                .body("[238].'capital'", containsString("London"))
                .body("[238].'altSpellings'.size()", equalTo(3))
                .body("[238].'altSpellings'", hasItems("GB", "UK", "Great Britain"))
                .body("[238].'region'", containsString("Europe"))
                .body("[238].'subregion'", containsString("Northern Europe"))
                .body("[238].'population'", numberMatches(6.511E7))
                .body("[238].'latlng'.size()", equalTo(2))
                .body("[238].'latlng'[0]", numberMatches(54.0))
                .body("[238].'latlng'[1]", numberMatches(-2.0))
                .body("[238].'demonym'", containsString("British"))
                .body("[238].'area'", numberMatches(242900.0))
                .body("[238].'gini'", numberMatches(34.0))
                .body("[238].'timezones'.size()", equalTo(9))
                .body("[238].'timezones'", hasItems("UTC-08:00", "UTC-05:00", "UTC-04:00", "UTC-03:00", "UTC-02:00", "UTC", "UTC+01:00", "UTC+02:00", "UTC+06:00"))
                .body("[238].'borders'.size()", equalTo(1))
                .body("[238].'borders'", hasItems("IRL"))
                .body("[238].'nativeName'", containsString("United Kingdom"))
                .body("[238].'numericCode'", containsString("826"))
                .body("[238].'currencies'.size()", equalTo(1))
                .body("[238].'currencies'[0].'code'", containsString("GBP"))
                .body("[238].'currencies'[0].'name'", containsString("British pound"))
                .body("[238].'currencies'[0].'symbol'", containsString("£"))
                .body("[238].'languages'.size()", equalTo(1))
                .body("[238].'languages'[0].'iso639_1'", containsString("en"))
                .body("[238].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[238].'languages'[0].'name'", containsString("English"))
                .body("[238].'languages'[0].'nativeName'", containsString("English"))
                .body("[238].'translations'.'de'", containsString("Vereinigtes Königreich"))
                .body("[238].'translations'.'es'", containsString("Reino Unido"))
                .body("[238].'translations'.'fr'", containsString("Royaume-Uni"))
                .body("[238].'translations'.'ja'", containsString("イギリス"))
                .body("[238].'translations'.'it'", containsString("Regno Unito"))
                .body("[238].'translations'.'br'", containsString("Reino Unido"))
                .body("[238].'translations'.'pt'", containsString("Reino Unido"))
                .body("[238].'translations'.'nl'", containsString("Verenigd Koninkrijk"))
                .body("[238].'translations'.'hr'", containsString("Ujedinjeno Kraljevstvo"))
                .body("[238].'translations'.'fa'", containsString("بریتانیای کبیر و ایرلند شمالی"))
                .body("[238].'flag'", containsString("https://restcountries.eu/data/gbr.svg"))
                .body("[238].'regionalBlocs'.size()", equalTo(1))
                .body("[238].'regionalBlocs'[0].'acronym'", containsString("EU"))
                .body("[238].'regionalBlocs'[0].'name'", containsString("European Union"))
                .body("[238].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[238].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[238].'cioc'", containsString("GBR"))
                .body("[239].'name'", containsString("United States of America"))
                .body("[239].'topLevelDomain'.size()", equalTo(1))
                .body("[239].'topLevelDomain'", hasItems(".us"))
                .body("[239].'alpha2Code'", containsString("US"))
                .body("[239].'alpha3Code'", containsString("USA"))
                .body("[239].'callingCodes'.size()", equalTo(1))
                .body("[239].'callingCodes'", hasItems("1"))
                .body("[239].'capital'", containsString("Washington, D.C."))
                .body("[239].'altSpellings'.size()", equalTo(3))
                .body("[239].'altSpellings'", hasItems("US", "USA", "United States of America"))
                .body("[239].'region'", containsString("Americas"))
                .body("[239].'subregion'", containsString("Northern America"))
                .body("[239].'population'", numberMatches(3.23947E8))
                .body("[239].'latlng'.size()", equalTo(2))
                .body("[239].'latlng'[0]", numberMatches(38.0))
                .body("[239].'latlng'[1]", numberMatches(-97.0))
                .body("[239].'demonym'", containsString("American"))
                .body("[239].'area'", numberMatches(9629091.0))
                .body("[239].'gini'", numberMatches(48.0))
                .body("[239].'timezones'.size()", equalTo(11))
                .body("[239].'timezones'", hasItems("UTC-12:00", "UTC-11:00", "UTC-10:00", "UTC-09:00", "UTC-08:00", "UTC-07:00", "UTC-06:00", "UTC-05:00", "UTC-04:00", "UTC+10:00", "UTC+12:00"))
                .body("[239].'borders'.size()", equalTo(2))
                .body("[239].'borders'", hasItems("CAN", "MEX"))
                .body("[239].'nativeName'", containsString("United States"))
                .body("[239].'numericCode'", containsString("840"))
                .body("[239].'currencies'.size()", equalTo(1))
                .body("[239].'currencies'[0].'code'", containsString("USD"))
                .body("[239].'currencies'[0].'name'", containsString("United States dollar"))
                .body("[239].'currencies'[0].'symbol'", containsString("$"))
                .body("[239].'languages'.size()", equalTo(1))
                .body("[239].'languages'[0].'iso639_1'", containsString("en"))
                .body("[239].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[239].'languages'[0].'name'", containsString("English"))
                .body("[239].'languages'[0].'nativeName'", containsString("English"))
                .body("[239].'translations'.'de'", containsString("Vereinigte Staaten von Amerika"))
                .body("[239].'translations'.'es'", containsString("Estados Unidos"))
                .body("[239].'translations'.'fr'", containsString("États-Unis"))
                .body("[239].'translations'.'ja'", containsString("アメリカ合衆国"))
                .body("[239].'translations'.'it'", containsString("Stati Uniti D'America"))
                .body("[239].'translations'.'br'", containsString("Estados Unidos"))
                .body("[239].'translations'.'pt'", containsString("Estados Unidos"))
                .body("[239].'translations'.'nl'", containsString("Verenigde Staten"))
                .body("[239].'translations'.'hr'", containsString("Sjedinjene Američke Države"))
                .body("[239].'translations'.'fa'", containsString("ایالات متحده آمریکا"))
                .body("[239].'flag'", containsString("https://restcountries.eu/data/usa.svg"))
                .body("[239].'regionalBlocs'.size()", equalTo(1))
                .body("[239].'regionalBlocs'[0].'acronym'", containsString("NAFTA"))
                .body("[239].'regionalBlocs'[0].'name'", containsString("North American Free Trade Agreement"))
                .body("[239].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[239].'regionalBlocs'[0].'otherNames'.size()", equalTo(2))
                .body("[239].'regionalBlocs'[0].'otherNames'", hasItems("Tratado de Libre Comercio de América del Norte", "Accord de Libre-échange Nord-Américain"))
                .body("[239].'cioc'", containsString("USA"))
                .body("[240].'name'", containsString("Uruguay"))
                .body("[240].'topLevelDomain'.size()", equalTo(1))
                .body("[240].'topLevelDomain'", hasItems(".uy"))
                .body("[240].'alpha2Code'", containsString("UY"))
                .body("[240].'alpha3Code'", containsString("URY"))
                .body("[240].'callingCodes'.size()", equalTo(1))
                .body("[240].'callingCodes'", hasItems("598"))
                .body("[240].'capital'", containsString("Montevideo"))
                .body("[240].'altSpellings'.size()", equalTo(3))
                .body("[240].'altSpellings'", hasItems("UY", "Oriental Republic of Uruguay", "República Oriental del Uruguay"))
                .body("[240].'region'", containsString("Americas"))
                .body("[240].'subregion'", containsString("South America"))
                .body("[240].'population'", numberMatches(3480222.0))
                .body("[240].'latlng'.size()", equalTo(2))
                .body("[240].'latlng'[0]", numberMatches(-33.0))
                .body("[240].'latlng'[1]", numberMatches(-56.0))
                .body("[240].'demonym'", containsString("Uruguayan"))
                .body("[240].'area'", numberMatches(181034.0))
                .body("[240].'gini'", numberMatches(39.7))
                .body("[240].'timezones'.size()", equalTo(1))
                .body("[240].'timezones'", hasItems("UTC-03:00"))
                .body("[240].'borders'.size()", equalTo(2))
                .body("[240].'borders'", hasItems("ARG", "BRA"))
                .body("[240].'nativeName'", containsString("Uruguay"))
                .body("[240].'numericCode'", containsString("858"))
                .body("[240].'currencies'.size()", equalTo(1))
                .body("[240].'currencies'[0].'code'", containsString("UYU"))
                .body("[240].'currencies'[0].'name'", containsString("Uruguayan peso"))
                .body("[240].'currencies'[0].'symbol'", containsString("$"))
                .body("[240].'languages'.size()", equalTo(1))
                .body("[240].'languages'[0].'iso639_1'", containsString("es"))
                .body("[240].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[240].'languages'[0].'name'", containsString("Spanish"))
                .body("[240].'languages'[0].'nativeName'", containsString("Español"))
                .body("[240].'translations'.'de'", containsString("Uruguay"))
                .body("[240].'translations'.'es'", containsString("Uruguay"))
                .body("[240].'translations'.'fr'", containsString("Uruguay"))
                .body("[240].'translations'.'ja'", containsString("ウルグアイ"))
                .body("[240].'translations'.'it'", containsString("Uruguay"))
                .body("[240].'translations'.'br'", containsString("Uruguai"))
                .body("[240].'translations'.'pt'", containsString("Uruguai"))
                .body("[240].'translations'.'nl'", containsString("Uruguay"))
                .body("[240].'translations'.'hr'", containsString("Urugvaj"))
                .body("[240].'translations'.'fa'", containsString("اروگوئه"))
                .body("[240].'flag'", containsString("https://restcountries.eu/data/ury.svg"))
                .body("[240].'regionalBlocs'.size()", equalTo(1))
                .body("[240].'regionalBlocs'[0].'acronym'", containsString("USAN"))
                .body("[240].'regionalBlocs'[0].'name'", containsString("Union of South American Nations"))
                .body("[240].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(3))
                .body("[240].'regionalBlocs'[0].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[240].'regionalBlocs'[0].'otherNames'.size()", equalTo(4))
                .body("[240].'regionalBlocs'[0].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[240].'cioc'", containsString("URU"))
                .body("[241].'name'", containsString("Uzbekistan"))
                .body("[241].'topLevelDomain'.size()", equalTo(1))
                .body("[241].'topLevelDomain'", hasItems(".uz"))
                .body("[241].'alpha2Code'", containsString("UZ"))
                .body("[241].'alpha3Code'", containsString("UZB"))
                .body("[241].'callingCodes'.size()", equalTo(1))
                .body("[241].'callingCodes'", hasItems("998"))
                .body("[241].'capital'", containsString("Tashkent"))
                .body("[241].'altSpellings'.size()", equalTo(4))
                .body("[241].'altSpellings'", hasItems("UZ", "Republic of Uzbekistan", "O‘zbekiston Respublikasi", "Ўзбекистон Республикаси"))
                .body("[241].'region'", containsString("Asia"))
                .body("[241].'subregion'", containsString("Central Asia"))
                .body("[241].'population'", numberMatches(3.15764E7))
                .body("[241].'latlng'.size()", equalTo(2))
                .body("[241].'latlng'[0]", numberMatches(41.0))
                .body("[241].'latlng'[1]", numberMatches(64.0))
                .body("[241].'demonym'", containsString("Uzbekistani"))
                .body("[241].'area'", numberMatches(447400.0))
                .body("[241].'gini'", numberMatches(36.7))
                .body("[241].'timezones'.size()", equalTo(1))
                .body("[241].'timezones'", hasItems("UTC+05:00"))
                .body("[241].'borders'.size()", equalTo(5))
                .body("[241].'borders'", hasItems("AFG", "KAZ", "KGZ", "TJK", "TKM"))
                .body("[241].'nativeName'", containsString("O‘zbekiston"))
                .body("[241].'numericCode'", containsString("860"))
                .body("[241].'currencies'.size()", equalTo(1))
                .body("[241].'currencies'[0].'code'", containsString("UZS"))
                .body("[241].'currencies'[0].'name'", containsString("Uzbekistani so'm"))
                .body("[241].'currencies'[0].'symbol'", nullValue())
                .body("[241].'languages'.size()", equalTo(2))
                .body("[241].'languages'[0].'iso639_1'", containsString("uz"))
                .body("[241].'languages'[0].'iso639_2'", containsString("uzb"))
                .body("[241].'languages'[0].'name'", containsString("Uzbek"))
                .body("[241].'languages'[0].'nativeName'", containsString("Oʻzbek"))
                .body("[241].'languages'[1].'iso639_1'", containsString("ru"))
                .body("[241].'languages'[1].'iso639_2'", containsString("rus"))
                .body("[241].'languages'[1].'name'", containsString("Russian"))
                .body("[241].'languages'[1].'nativeName'", containsString("Русский"))
                .body("[241].'translations'.'de'", containsString("Usbekistan"))
                .body("[241].'translations'.'es'", containsString("Uzbekistán"))
                .body("[241].'translations'.'fr'", containsString("Ouzbékistan"))
                .body("[241].'translations'.'ja'", containsString("ウズベキスタン"))
                .body("[241].'translations'.'it'", containsString("Uzbekistan"))
                .body("[241].'translations'.'br'", containsString("Uzbequistão"))
                .body("[241].'translations'.'pt'", containsString("Usbequistão"))
                .body("[241].'translations'.'nl'", containsString("Oezbekistan"))
                .body("[241].'translations'.'hr'", containsString("Uzbekistan"))
                .body("[241].'translations'.'fa'", containsString("ازبکستان"))
                .body("[241].'flag'", containsString("https://restcountries.eu/data/uzb.svg"))
                .body("[241].'regionalBlocs'.size()", equalTo(0))
                .body("[241].'cioc'", containsString("UZB"))
                .body("[242].'name'", containsString("Vanuatu"))
                .body("[242].'topLevelDomain'.size()", equalTo(1))
                .body("[242].'topLevelDomain'", hasItems(".vu"))
                .body("[242].'alpha2Code'", containsString("VU"))
                .body("[242].'alpha3Code'", containsString("VUT"))
                .body("[242].'callingCodes'.size()", equalTo(1))
                .body("[242].'callingCodes'", hasItems("678"))
                .body("[242].'capital'", containsString("Port Vila"))
                .body("[242].'altSpellings'.size()", equalTo(4))
                .body("[242].'altSpellings'", hasItems("VU", "Republic of Vanuatu", "Ripablik blong Vanuatu", "République de Vanuatu"))
                .body("[242].'region'", containsString("Oceania"))
                .body("[242].'subregion'", containsString("Melanesia"))
                .body("[242].'population'", numberMatches(277500.0))
                .body("[242].'latlng'.size()", equalTo(2))
                .body("[242].'latlng'[0]", numberMatches(-16.0))
                .body("[242].'latlng'[1]", numberMatches(167.0))
                .body("[242].'demonym'", containsString("Ni-Vanuatu"))
                .body("[242].'area'", numberMatches(12189.0))
                .body("[242].'gini'", nullValue())
                .body("[242].'timezones'.size()", equalTo(1))
                .body("[242].'timezones'", hasItems("UTC+11:00"))
                .body("[242].'borders'.size()", equalTo(0))
                .body("[242].'nativeName'", containsString("Vanuatu"))
                .body("[242].'numericCode'", containsString("548"))
                .body("[242].'currencies'.size()", equalTo(1))
                .body("[242].'currencies'[0].'code'", containsString("VUV"))
                .body("[242].'currencies'[0].'name'", containsString("Vanuatu vatu"))
                .body("[242].'currencies'[0].'symbol'", containsString("Vt"))
                .body("[242].'languages'.size()", equalTo(3))
                .body("[242].'languages'[0].'iso639_1'", containsString("bi"))
                .body("[242].'languages'[0].'iso639_2'", containsString("bis"))
                .body("[242].'languages'[0].'name'", containsString("Bislama"))
                .body("[242].'languages'[0].'nativeName'", containsString("Bislama"))
                .body("[242].'languages'[1].'iso639_1'", containsString("en"))
                .body("[242].'languages'[1].'iso639_2'", containsString("eng"))
                .body("[242].'languages'[1].'name'", containsString("English"))
                .body("[242].'languages'[1].'nativeName'", containsString("English"))
                .body("[242].'languages'[2].'iso639_1'", containsString("fr"))
                .body("[242].'languages'[2].'iso639_2'", containsString("fra"))
                .body("[242].'languages'[2].'name'", containsString("French"))
                .body("[242].'languages'[2].'nativeName'", containsString("français"))
                .body("[242].'translations'.'de'", containsString("Vanuatu"))
                .body("[242].'translations'.'es'", containsString("Vanuatu"))
                .body("[242].'translations'.'fr'", containsString("Vanuatu"))
                .body("[242].'translations'.'ja'", containsString("バヌアツ"))
                .body("[242].'translations'.'it'", containsString("Vanuatu"))
                .body("[242].'translations'.'br'", containsString("Vanuatu"))
                .body("[242].'translations'.'pt'", containsString("Vanuatu"))
                .body("[242].'translations'.'nl'", containsString("Vanuatu"))
                .body("[242].'translations'.'hr'", containsString("Vanuatu"))
                .body("[242].'translations'.'fa'", containsString("وانواتو"))
                .body("[242].'flag'", containsString("https://restcountries.eu/data/vut.svg"))
                .body("[242].'regionalBlocs'.size()", equalTo(0))
                .body("[242].'cioc'", containsString("VAN"))
                .body("[243].'name'", containsString("Venezuela (Bolivarian Republic of)"))
                .body("[243].'topLevelDomain'.size()", equalTo(1))
                .body("[243].'topLevelDomain'", hasItems(".ve"))
                .body("[243].'alpha2Code'", containsString("VE"))
                .body("[243].'alpha3Code'", containsString("VEN"))
                .body("[243].'callingCodes'.size()", equalTo(1))
                .body("[243].'callingCodes'", hasItems("58"))
                .body("[243].'capital'", containsString("Caracas"))
                .body("[243].'altSpellings'.size()", equalTo(3))
                .body("[243].'altSpellings'", hasItems("VE", "Bolivarian Republic of Venezuela", "República Bolivariana de Venezuela"))
                .body("[243].'region'", containsString("Americas"))
                .body("[243].'subregion'", containsString("South America"))
                .body("[243].'population'", numberMatches(3.10287E7))
                .body("[243].'latlng'.size()", equalTo(2))
                .body("[243].'latlng'[0]", numberMatches(8.0))
                .body("[243].'latlng'[1]", numberMatches(-66.0))
                .body("[243].'demonym'", containsString("Venezuelan"))
                .body("[243].'area'", numberMatches(916445.0))
                .body("[243].'gini'", numberMatches(44.8))
                .body("[243].'timezones'.size()", equalTo(1))
                .body("[243].'timezones'", hasItems("UTC-04:00"))
                .body("[243].'borders'.size()", equalTo(3))
                .body("[243].'borders'", hasItems("BRA", "COL", "GUY"))
                .body("[243].'nativeName'", containsString("Venezuela"))
                .body("[243].'numericCode'", containsString("862"))
                .body("[243].'currencies'.size()", equalTo(1))
                .body("[243].'currencies'[0].'code'", containsString("VEF"))
                .body("[243].'currencies'[0].'name'", containsString("Venezuelan bolívar"))
                .body("[243].'currencies'[0].'symbol'", containsString("Bs F"))
                .body("[243].'languages'.size()", equalTo(1))
                .body("[243].'languages'[0].'iso639_1'", containsString("es"))
                .body("[243].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[243].'languages'[0].'name'", containsString("Spanish"))
                .body("[243].'languages'[0].'nativeName'", containsString("Español"))
                .body("[243].'translations'.'de'", containsString("Venezuela"))
                .body("[243].'translations'.'es'", containsString("Venezuela"))
                .body("[243].'translations'.'fr'", containsString("Venezuela"))
                .body("[243].'translations'.'ja'", containsString("ベネズエラ・ボリバル共和国"))
                .body("[243].'translations'.'it'", containsString("Venezuela"))
                .body("[243].'translations'.'br'", containsString("Venezuela"))
                .body("[243].'translations'.'pt'", containsString("Venezuela"))
                .body("[243].'translations'.'nl'", containsString("Venezuela"))
                .body("[243].'translations'.'hr'", containsString("Venezuela"))
                .body("[243].'translations'.'fa'", containsString("ونزوئلا"))
                .body("[243].'flag'", containsString("https://restcountries.eu/data/ven.svg"))
                .body("[243].'regionalBlocs'.size()", equalTo(1))
                .body("[243].'regionalBlocs'[0].'acronym'", containsString("USAN"))
                .body("[243].'regionalBlocs'[0].'name'", containsString("Union of South American Nations"))
                .body("[243].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(3))
                .body("[243].'regionalBlocs'[0].'otherAcronyms'", hasItems("UNASUR", "UNASUL", "UZAN"))
                .body("[243].'regionalBlocs'[0].'otherNames'.size()", equalTo(4))
                .body("[243].'regionalBlocs'[0].'otherNames'", hasItems("Unión de Naciones Suramericanas", "União de Nações Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"))
                .body("[243].'cioc'", containsString("VEN"))
                .body("[244].'name'", containsString("Viet Nam"))
                .body("[244].'topLevelDomain'.size()", equalTo(1))
                .body("[244].'topLevelDomain'", hasItems(".vn"))
                .body("[244].'alpha2Code'", containsString("VN"))
                .body("[244].'alpha3Code'", containsString("VNM"))
                .body("[244].'callingCodes'.size()", equalTo(1))
                .body("[244].'callingCodes'", hasItems("84"))
                .body("[244].'capital'", containsString("Hanoi"))
                .body("[244].'altSpellings'.size()", equalTo(3))
                .body("[244].'altSpellings'", hasItems("VN", "Socialist Republic of Vietnam", "Cộng hòa Xã hội chủ nghĩa Việt Nam"))
                .body("[244].'region'", containsString("Asia"))
                .body("[244].'subregion'", containsString("South-Eastern Asia"))
                .body("[244].'population'", numberMatches(9.27E7))
                .body("[244].'latlng'.size()", equalTo(2))
                .body("[244].'latlng'[0]", numberMatches(16.16666666))
                .body("[244].'latlng'[1]", numberMatches(107.83333333))
                .body("[244].'demonym'", containsString("Vietnamese"))
                .body("[244].'area'", numberMatches(331212.0))
                .body("[244].'gini'", numberMatches(35.6))
                .body("[244].'timezones'.size()", equalTo(1))
                .body("[244].'timezones'", hasItems("UTC+07:00"))
                .body("[244].'borders'.size()", equalTo(3))
                .body("[244].'borders'", hasItems("KHM", "CHN", "LAO"))
                .body("[244].'nativeName'", containsString("Việt Nam"))
                .body("[244].'numericCode'", containsString("704"))
                .body("[244].'currencies'.size()", equalTo(1))
                .body("[244].'currencies'[0].'code'", containsString("VND"))
                .body("[244].'currencies'[0].'name'", containsString("Vietnamese đồng"))
                .body("[244].'currencies'[0].'symbol'", containsString("₫"))
                .body("[244].'languages'.size()", equalTo(1))
                .body("[244].'languages'[0].'iso639_1'", containsString("vi"))
                .body("[244].'languages'[0].'iso639_2'", containsString("vie"))
                .body("[244].'languages'[0].'name'", containsString("Vietnamese"))
                .body("[244].'languages'[0].'nativeName'", containsString("Tiếng Việt"))
                .body("[244].'translations'.'de'", containsString("Vietnam"))
                .body("[244].'translations'.'es'", containsString("Vietnam"))
                .body("[244].'translations'.'fr'", containsString("Viêt Nam"))
                .body("[244].'translations'.'ja'", containsString("ベトナム"))
                .body("[244].'translations'.'it'", containsString("Vietnam"))
                .body("[244].'translations'.'br'", containsString("Vietnã"))
                .body("[244].'translations'.'pt'", containsString("Vietname"))
                .body("[244].'translations'.'nl'", containsString("Vietnam"))
                .body("[244].'translations'.'hr'", containsString("Vijetnam"))
                .body("[244].'translations'.'fa'", containsString("ویتنام"))
                .body("[244].'flag'", containsString("https://restcountries.eu/data/vnm.svg"))
                .body("[244].'regionalBlocs'.size()", equalTo(1))
                .body("[244].'regionalBlocs'[0].'acronym'", containsString("ASEAN"))
                .body("[244].'regionalBlocs'[0].'name'", containsString("Association of Southeast Asian Nations"))
                .body("[244].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[244].'regionalBlocs'[0].'otherNames'.size()", equalTo(0))
                .body("[244].'cioc'", containsString("VIE"))
                .body("[245].'name'", containsString("Wallis and Futuna"))
                .body("[245].'topLevelDomain'.size()", equalTo(1))
                .body("[245].'topLevelDomain'", hasItems(".wf"))
                .body("[245].'alpha2Code'", containsString("WF"))
                .body("[245].'alpha3Code'", containsString("WLF"))
                .body("[245].'callingCodes'.size()", equalTo(1))
                .body("[245].'callingCodes'", hasItems("681"))
                .body("[245].'capital'", containsString("Mata-Utu"))
                .body("[245].'altSpellings'.size()", equalTo(3))
                .body("[245].'altSpellings'", hasItems("WF", "Territory of the Wallis and Futuna Islands", "Territoire des îles Wallis et Futuna"))
                .body("[245].'region'", containsString("Oceania"))
                .body("[245].'subregion'", containsString("Polynesia"))
                .body("[245].'population'", numberMatches(11750.0))
                .body("[245].'latlng'.size()", equalTo(2))
                .body("[245].'latlng'[0]", numberMatches(-13.3))
                .body("[245].'latlng'[1]", numberMatches(-176.2))
                .body("[245].'demonym'", containsString("Wallis and Futuna Islander"))
                .body("[245].'area'", numberMatches(142.0))
                .body("[245].'gini'", nullValue())
                .body("[245].'timezones'.size()", equalTo(1))
                .body("[245].'timezones'", hasItems("UTC+12:00"))
                .body("[245].'borders'.size()", equalTo(0))
                .body("[245].'nativeName'", containsString("Wallis et Futuna"))
                .body("[245].'numericCode'", containsString("876"))
                .body("[245].'currencies'.size()", equalTo(1))
                .body("[245].'currencies'[0].'code'", containsString("XPF"))
                .body("[245].'currencies'[0].'name'", containsString("CFP franc"))
                .body("[245].'currencies'[0].'symbol'", containsString("Fr"))
                .body("[245].'languages'.size()", equalTo(1))
                .body("[245].'languages'[0].'iso639_1'", containsString("fr"))
                .body("[245].'languages'[0].'iso639_2'", containsString("fra"))
                .body("[245].'languages'[0].'name'", containsString("French"))
                .body("[245].'languages'[0].'nativeName'", containsString("français"))
                .body("[245].'translations'.'de'", containsString("Wallis und Futuna"))
                .body("[245].'translations'.'es'", containsString("Wallis y Futuna"))
                .body("[245].'translations'.'fr'", containsString("Wallis-et-Futuna"))
                .body("[245].'translations'.'ja'", containsString("ウォリス・フツナ"))
                .body("[245].'translations'.'it'", containsString("Wallis e Futuna"))
                .body("[245].'translations'.'br'", containsString("Wallis e Futuna"))
                .body("[245].'translations'.'pt'", containsString("Wallis e Futuna"))
                .body("[245].'translations'.'nl'", containsString("Wallis en Futuna"))
                .body("[245].'translations'.'hr'", containsString("Wallis i Fortuna"))
                .body("[245].'translations'.'fa'", containsString("والیس و فوتونا"))
                .body("[245].'flag'", containsString("https://restcountries.eu/data/wlf.svg"))
                .body("[245].'regionalBlocs'.size()", equalTo(0))
                .body("[245].'cioc'", containsString(""))
                .body("[246].'name'", containsString("Western Sahara"))
                .body("[246].'topLevelDomain'.size()", equalTo(1))
                .body("[246].'topLevelDomain'", hasItems(".eh"))
                .body("[246].'alpha2Code'", containsString("EH"))
                .body("[246].'alpha3Code'", containsString("ESH"))
                .body("[246].'callingCodes'.size()", equalTo(1))
                .body("[246].'callingCodes'", hasItems("212"))
                .body("[246].'capital'", containsString("El Aaiún"))
                .body("[246].'altSpellings'.size()", equalTo(2))
                .body("[246].'altSpellings'", hasItems("EH", "Taneẓroft Tutrimt"))
                .body("[246].'region'", containsString("Africa"))
                .body("[246].'subregion'", containsString("Northern Africa"))
                .body("[246].'population'", numberMatches(510713.0))
                .body("[246].'latlng'.size()", equalTo(2))
                .body("[246].'latlng'[0]", numberMatches(24.5))
                .body("[246].'latlng'[1]", numberMatches(-13.0))
                .body("[246].'demonym'", containsString("Sahrawi"))
                .body("[246].'area'", numberMatches(266000.0))
                .body("[246].'gini'", nullValue())
                .body("[246].'timezones'.size()", equalTo(1))
                .body("[246].'timezones'", hasItems("UTC+00:00"))
                .body("[246].'borders'.size()", equalTo(3))
                .body("[246].'borders'", hasItems("DZA", "MRT", "MAR"))
                .body("[246].'nativeName'", containsString("الصحراء الغربية"))
                .body("[246].'numericCode'", containsString("732"))
                .body("[246].'currencies'.size()", equalTo(2))
                .body("[246].'currencies'[0].'code'", containsString("MAD"))
                .body("[246].'currencies'[0].'name'", containsString("Moroccan dirham"))
                .body("[246].'currencies'[0].'symbol'", containsString("د.م."))
                .body("[246].'currencies'[1].'code'", containsString("DZD"))
                .body("[246].'currencies'[1].'name'", containsString("Algerian dinar"))
                .body("[246].'currencies'[1].'symbol'", containsString("د.ج"))
                .body("[246].'languages'.size()", equalTo(1))
                .body("[246].'languages'[0].'iso639_1'", containsString("es"))
                .body("[246].'languages'[0].'iso639_2'", containsString("spa"))
                .body("[246].'languages'[0].'name'", containsString("Spanish"))
                .body("[246].'languages'[0].'nativeName'", containsString("Español"))
                .body("[246].'translations'.'de'", containsString("Westsahara"))
                .body("[246].'translations'.'es'", containsString("Sahara Occidental"))
                .body("[246].'translations'.'fr'", containsString("Sahara Occidental"))
                .body("[246].'translations'.'ja'", containsString("西サハラ"))
                .body("[246].'translations'.'it'", containsString("Sahara Occidentale"))
                .body("[246].'translations'.'br'", containsString("Saara Ocidental"))
                .body("[246].'translations'.'pt'", containsString("Saara Ocidental"))
                .body("[246].'translations'.'nl'", containsString("Westelijke Sahara"))
                .body("[246].'translations'.'hr'", containsString("Zapadna Sahara"))
                .body("[246].'translations'.'fa'", containsString("جمهوری دموکراتیک عربی صحرا"))
                .body("[246].'flag'", containsString("https://restcountries.eu/data/esh.svg"))
                .body("[246].'regionalBlocs'.size()", equalTo(1))
                .body("[246].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[246].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[246].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[246].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[246].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[246].'cioc'", containsString(""))
                .body("[247].'name'", containsString("Yemen"))
                .body("[247].'topLevelDomain'.size()", equalTo(1))
                .body("[247].'topLevelDomain'", hasItems(".ye"))
                .body("[247].'alpha2Code'", containsString("YE"))
                .body("[247].'alpha3Code'", containsString("YEM"))
                .body("[247].'callingCodes'.size()", equalTo(1))
                .body("[247].'callingCodes'", hasItems("967"))
                .body("[247].'capital'", containsString("Sana'a"))
                .body("[247].'altSpellings'.size()", equalTo(3))
                .body("[247].'altSpellings'", hasItems("YE", "Yemeni Republic", "al-Jumhūriyyah al-Yamaniyyah"))
                .body("[247].'region'", containsString("Asia"))
                .body("[247].'subregion'", containsString("Western Asia"))
                .body("[247].'population'", numberMatches(2.7478E7))
                .body("[247].'latlng'.size()", equalTo(2))
                .body("[247].'latlng'[0]", numberMatches(15.0))
                .body("[247].'latlng'[1]", numberMatches(48.0))
                .body("[247].'demonym'", containsString("Yemeni"))
                .body("[247].'area'", numberMatches(527968.0))
                .body("[247].'gini'", numberMatches(37.7))
                .body("[247].'timezones'.size()", equalTo(1))
                .body("[247].'timezones'", hasItems("UTC+03:00"))
                .body("[247].'borders'.size()", equalTo(2))
                .body("[247].'borders'", hasItems("OMN", "SAU"))
                .body("[247].'nativeName'", containsString("اليَمَن"))
                .body("[247].'numericCode'", containsString("887"))
                .body("[247].'currencies'.size()", equalTo(1))
                .body("[247].'currencies'[0].'code'", containsString("YER"))
                .body("[247].'currencies'[0].'name'", containsString("Yemeni rial"))
                .body("[247].'currencies'[0].'symbol'", containsString("﷼"))
                .body("[247].'languages'.size()", equalTo(1))
                .body("[247].'languages'[0].'iso639_1'", containsString("ar"))
                .body("[247].'languages'[0].'iso639_2'", containsString("ara"))
                .body("[247].'languages'[0].'name'", containsString("Arabic"))
                .body("[247].'languages'[0].'nativeName'", containsString("العربية"))
                .body("[247].'translations'.'de'", containsString("Jemen"))
                .body("[247].'translations'.'es'", containsString("Yemen"))
                .body("[247].'translations'.'fr'", containsString("Yémen"))
                .body("[247].'translations'.'ja'", containsString("イエメン"))
                .body("[247].'translations'.'it'", containsString("Yemen"))
                .body("[247].'translations'.'br'", containsString("Iêmen"))
                .body("[247].'translations'.'pt'", containsString("Iémen"))
                .body("[247].'translations'.'nl'", containsString("Jemen"))
                .body("[247].'translations'.'hr'", containsString("Jemen"))
                .body("[247].'translations'.'fa'", containsString("یمن"))
                .body("[247].'flag'", containsString("https://restcountries.eu/data/yem.svg"))
                .body("[247].'regionalBlocs'.size()", equalTo(1))
                .body("[247].'regionalBlocs'[0].'acronym'", containsString("AL"))
                .body("[247].'regionalBlocs'[0].'name'", containsString("Arab League"))
                .body("[247].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[247].'regionalBlocs'[0].'otherNames'.size()", equalTo(3))
                .body("[247].'regionalBlocs'[0].'otherNames'", hasItems("جامعة الدول العربية", "Jāmiʻat ad-Duwal al-ʻArabīyah", "League of Arab States"))
                .body("[247].'cioc'", containsString("YEM"))
                .body("[248].'name'", containsString("Zambia"))
                .body("[248].'topLevelDomain'.size()", equalTo(1))
                .body("[248].'topLevelDomain'", hasItems(".zm"))
                .body("[248].'alpha2Code'", containsString("ZM"))
                .body("[248].'alpha3Code'", containsString("ZMB"))
                .body("[248].'callingCodes'.size()", equalTo(1))
                .body("[248].'callingCodes'", hasItems("260"))
                .body("[248].'capital'", containsString("Lusaka"))
                .body("[248].'altSpellings'.size()", equalTo(2))
                .body("[248].'altSpellings'", hasItems("ZM", "Republic of Zambia"))
                .body("[248].'region'", containsString("Africa"))
                .body("[248].'subregion'", containsString("Eastern Africa"))
                .body("[248].'population'", numberMatches(1.5933883E7))
                .body("[248].'latlng'.size()", equalTo(2))
                .body("[248].'latlng'[0]", numberMatches(-15.0))
                .body("[248].'latlng'[1]", numberMatches(30.0))
                .body("[248].'demonym'", containsString("Zambian"))
                .body("[248].'area'", numberMatches(752612.0))
                .body("[248].'gini'", numberMatches(54.6))
                .body("[248].'timezones'.size()", equalTo(1))
                .body("[248].'timezones'", hasItems("UTC+02:00"))
                .body("[248].'borders'.size()", equalTo(8))
                .body("[248].'borders'", hasItems("AGO", "BWA", "COD", "MWI", "MOZ", "NAM", "TZA", "ZWE"))
                .body("[248].'nativeName'", containsString("Zambia"))
                .body("[248].'numericCode'", containsString("894"))
                .body("[248].'currencies'.size()", equalTo(1))
                .body("[248].'currencies'[0].'code'", containsString("ZMW"))
                .body("[248].'currencies'[0].'name'", containsString("Zambian kwacha"))
                .body("[248].'currencies'[0].'symbol'", containsString("ZK"))
                .body("[248].'languages'.size()", equalTo(1))
                .body("[248].'languages'[0].'iso639_1'", containsString("en"))
                .body("[248].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[248].'languages'[0].'name'", containsString("English"))
                .body("[248].'languages'[0].'nativeName'", containsString("English"))
                .body("[248].'translations'.'de'", containsString("Sambia"))
                .body("[248].'translations'.'es'", containsString("Zambia"))
                .body("[248].'translations'.'fr'", containsString("Zambie"))
                .body("[248].'translations'.'ja'", containsString("ザンビア"))
                .body("[248].'translations'.'it'", containsString("Zambia"))
                .body("[248].'translations'.'br'", containsString("Zâmbia"))
                .body("[248].'translations'.'pt'", containsString("Zâmbia"))
                .body("[248].'translations'.'nl'", containsString("Zambia"))
                .body("[248].'translations'.'hr'", containsString("Zambija"))
                .body("[248].'translations'.'fa'", containsString("زامبیا"))
                .body("[248].'flag'", containsString("https://restcountries.eu/data/zmb.svg"))
                .body("[248].'regionalBlocs'.size()", equalTo(1))
                .body("[248].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[248].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[248].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[248].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[248].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[248].'cioc'", containsString("ZAM"))
                .body("[249].'name'", containsString("Zimbabwe"))
                .body("[249].'topLevelDomain'.size()", equalTo(1))
                .body("[249].'topLevelDomain'", hasItems(".zw"))
                .body("[249].'alpha2Code'", containsString("ZW"))
                .body("[249].'alpha3Code'", containsString("ZWE"))
                .body("[249].'callingCodes'.size()", equalTo(1))
                .body("[249].'callingCodes'", hasItems("263"))
                .body("[249].'capital'", containsString("Harare"))
                .body("[249].'altSpellings'.size()", equalTo(2))
                .body("[249].'altSpellings'", hasItems("ZW", "Republic of Zimbabwe"))
                .body("[249].'region'", containsString("Africa"))
                .body("[249].'subregion'", containsString("Eastern Africa"))
                .body("[249].'population'", numberMatches(1.4240168E7))
                .body("[249].'latlng'.size()", equalTo(2))
                .body("[249].'latlng'[0]", numberMatches(-20.0))
                .body("[249].'latlng'[1]", numberMatches(30.0))
                .body("[249].'demonym'", containsString("Zimbabwean"))
                .body("[249].'area'", numberMatches(390757.0))
                .body("[249].'gini'", nullValue())
                .body("[249].'timezones'.size()", equalTo(1))
                .body("[249].'timezones'", hasItems("UTC+02:00"))
                .body("[249].'borders'.size()", equalTo(4))
                .body("[249].'borders'", hasItems("BWA", "MOZ", "ZAF", "ZMB"))
                .body("[249].'nativeName'", containsString("Zimbabwe"))
                .body("[249].'numericCode'", containsString("716"))
                .body("[249].'currencies'.size()", equalTo(9))
                .body("[249].'currencies'[0].'code'", containsString("BWP"))
                .body("[249].'currencies'[0].'name'", containsString("Botswana pula"))
                .body("[249].'currencies'[0].'symbol'", containsString("P"))
                .body("[249].'currencies'[1].'code'", containsString("GBP"))
                .body("[249].'currencies'[1].'name'", containsString("British pound"))
                .body("[249].'currencies'[1].'symbol'", containsString("£"))
                .body("[249].'currencies'[2].'code'", containsString("CNY"))
                .body("[249].'currencies'[2].'name'", containsString("Chinese yuan"))
                .body("[249].'currencies'[2].'symbol'", containsString("¥"))
                .body("[249].'currencies'[3].'code'", containsString("EUR"))
                .body("[249].'currencies'[3].'name'", containsString("Euro"))
                .body("[249].'currencies'[3].'symbol'", containsString("€"))
                .body("[249].'currencies'[4].'code'", containsString("INR"))
                .body("[249].'currencies'[4].'name'", containsString("Indian rupee"))
                .body("[249].'currencies'[4].'symbol'", containsString("₹"))
                .body("[249].'currencies'[5].'code'", containsString("JPY"))
                .body("[249].'currencies'[5].'name'", containsString("Japanese yen"))
                .body("[249].'currencies'[5].'symbol'", containsString("¥"))
                .body("[249].'currencies'[6].'code'", containsString("ZAR"))
                .body("[249].'currencies'[6].'name'", containsString("South African rand"))
                .body("[249].'currencies'[6].'symbol'", containsString("Rs"))
                .body("[249].'currencies'[7].'code'", containsString("USD"))
                .body("[249].'currencies'[7].'name'", containsString("United States dollar"))
                .body("[249].'currencies'[7].'symbol'", containsString("$"))
                .body("[249].'currencies'[8].'code'", containsString("(none)"))
                .body("[249].'currencies'[8].'name'", nullValue())
                .body("[249].'currencies'[8].'symbol'", nullValue())
                .body("[249].'languages'.size()", equalTo(3))
                .body("[249].'languages'[0].'iso639_1'", containsString("en"))
                .body("[249].'languages'[0].'iso639_2'", containsString("eng"))
                .body("[249].'languages'[0].'name'", containsString("English"))
                .body("[249].'languages'[0].'nativeName'", containsString("English"))
                .body("[249].'languages'[1].'iso639_1'", containsString("sn"))
                .body("[249].'languages'[1].'iso639_2'", containsString("sna"))
                .body("[249].'languages'[1].'name'", containsString("Shona"))
                .body("[249].'languages'[1].'nativeName'", containsString("chiShona"))
                .body("[249].'languages'[2].'iso639_1'", containsString("nd"))
                .body("[249].'languages'[2].'iso639_2'", containsString("nde"))
                .body("[249].'languages'[2].'name'", containsString("Northern Ndebele"))
                .body("[249].'languages'[2].'nativeName'", containsString("isiNdebele"))
                .body("[249].'translations'.'de'", containsString("Simbabwe"))
                .body("[249].'translations'.'es'", containsString("Zimbabue"))
                .body("[249].'translations'.'fr'", containsString("Zimbabwe"))
                .body("[249].'translations'.'ja'", containsString("ジンバブエ"))
                .body("[249].'translations'.'it'", containsString("Zimbabwe"))
                .body("[249].'translations'.'br'", containsString("Zimbabwe"))
                .body("[249].'translations'.'pt'", containsString("Zimbabué"))
                .body("[249].'translations'.'nl'", containsString("Zimbabwe"))
                .body("[249].'translations'.'hr'", containsString("Zimbabve"))
                .body("[249].'translations'.'fa'", containsString("زیمباوه"))
                .body("[249].'flag'", containsString("https://restcountries.eu/data/zwe.svg"))
                .body("[249].'regionalBlocs'.size()", equalTo(1))
                .body("[249].'regionalBlocs'[0].'acronym'", containsString("AU"))
                .body("[249].'regionalBlocs'[0].'name'", containsString("African Union"))
                .body("[249].'regionalBlocs'[0].'otherAcronyms'.size()", equalTo(0))
                .body("[249].'regionalBlocs'[0].'otherNames'.size()", equalTo(5))
                .body("[249].'regionalBlocs'[0].'otherNames'", hasItems("الاتحاد الأفريقي", "Union africaine", "União Africana", "Unión Africana", "Umoja wa Afrika"))
                .body("[249].'cioc'", containsString("ZIM"));
        
    }
    
    
    @Test
    public void test_7() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha?codes=dW")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(1))
                .body("[0]", nullValue());
        
    }


}
