import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import static org.evomaster.client.java.controller.db.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import  java.util.List;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2022-03-11T01:32:35.736470-08:00[America/Los_Angeles]
 * <br>
 * The generated test suite contains 25 tests
 * <br>
 * Covered targets: 670
 * <br>
 * Used time: 0h 0m 11s
 * <br>
 * Needed budget for current results: 99%
 * <br>
 * This file contains test cases that represent failed calls, but not indicative of faults.
 */
public class EvoMaster_others_Test {

    
    private static final SutHandler controller = new em.embedded.eu.fayder.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test
    public void test_0() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha/I")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_1() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha/c")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_2() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha?codes=s")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_3() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/currency/KB8J228oKT")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_4() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/currency/8tRL8EPE?fields=pG1vH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_5() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha?codes=MYxg9696D1nrWpdo")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_6() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha/0mFASSEAcRhqzH6?fields=KIY")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_7() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha/Z1nTurOqKLIb")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_8() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha/KIY?fields=KIY")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_9() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/name/UCJUKUXEp7Ld?fields=fJuiHCsEO")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_10() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/callingcode/Uzl")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_11() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/capital/VrBWEpSAqxoIge?fields=rqkf")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_12() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/region/3QUYMbT11uhStbVM?fields=oQInAA1jVXsA")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_13() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/subregion/hI2j4wsG3QyC?fields=HXlWy23kpcngyRL4")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_14() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha/RZQ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_15() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/demonym/U1EY10x82g1DL?fields=veEc0xac")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_16() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/region/alSDjoEMQAYRItTA")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_17() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/subregion/3doSts_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_18() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/capital/Ls806Rxa3u")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_19() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/callingcode/JbrjP")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_20() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/lang/6rgqadK")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_21() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/name/3dDJC?fullText=true")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_22() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/lang/sO1")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_23() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/regionalbloc/BUAi7atVy1?fields=i2tKhw")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_24() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/name/3dDFC?fullText=false")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }


}
