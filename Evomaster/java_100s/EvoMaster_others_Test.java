import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import static org.evomaster.client.java.controller.db.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import  java.util.List;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2022-03-11T01:37:42.306831-08:00[America/Los_Angeles]
 * <br>
 * The generated test suite contains 37 tests
 * <br>
 * Covered targets: 806
 * <br>
 * Used time: 0h 1m 40s
 * <br>
 * Needed budget for current results: 57%
 * <br>
 * This file contains test cases that represent failed calls, but not indicative of faults.
 */
public class EvoMaster_others_Test {

    
    private static final SutHandler controller = new em.embedded.eu.fayder.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test
    public void test_0() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/lang/%5Cb7J?fields=B5qcKUfMACxmc")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test
    public void test_1() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/subregion/o%5CQ?fields=nX__xqI7k02K")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test
    public void test_2() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/callingcode/x%5Cj2ke3x_xL?fields=_EM_1072_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test
    public void test_3() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/region/%5CDI%608Z7N?fields=6pO9KQLVsjSIRi")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test
    public void test_4() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha?codes=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_5() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha/t")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_6() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha?" + 
                    "fields=hyF7K87g7h8nwt&" + 
                    "codes=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_7() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha/2")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_8() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha?codes=T")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_9() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha?" + 
                    "fields=hyF7K87g7h8nwt&" + 
                    "codes=N")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_10() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/currency/agKlh1eBd")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_11() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/currency/LJK5eFHKJK_v0cS?fields=LFYi5pSLgRh8L")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_12() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha?codes=IegU3cy__SEkrdVy")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_13() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha?codes=Xpj3F9")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_14() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha/Vd7DV1Sxib")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_15() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha/xJw30eVpnMiI")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_16() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/region/;U")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test
    public void test_17() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha/Iyl")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_18() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/callingcode/t_PlbOZGIm?fields=8WeMBw82kyJII")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_19() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/capital/UtNQAru?fields=mNpcdxcxugKk")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_20() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/region/Be6BV?fields=oxFIOExHQv7m")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_21() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/subregion/o?fields=ibOGKlS9zIA2VbT")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_22() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha/CQ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_23() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/lang/RS?fields=thean3SDRwTgi9u")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_24() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/lang/RhH?fields=PQNAijBahQlc_seb")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_25() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/lang/WWQwa?fields=iycSO8pmBxm_hE")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_26() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/demonym/nSxjGGoFX?fields=")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_27() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/currency/HBp")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_28() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/region/ZnSWBS9xcTEOWMxS")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_29() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/subregion/0Y")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_30() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/capital/y3qEKUh2kYEL9srF")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_31() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/currency/beo?fields=k1czhoF0QDQ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_32() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/callingcode/hxOuErnyC7aS_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_33() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/lang/bBZY")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_34() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/regionalbloc/ujxZG?fields=i9")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_35() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/name/OGSYADcNRTy9CKN?fullText=true")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_36() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/name/AjGRcQRVkg5nV")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }


}
