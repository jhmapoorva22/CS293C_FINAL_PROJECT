import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import static org.evomaster.client.java.controller.db.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import  java.util.List;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2022-03-11T01:23:56.469443-08:00[America/Los_Angeles]
 * <br>
 * The generated test suite contains 41 tests
 * <br>
 * Covered targets: 829
 * <br>
 * Used time: 0h 5m 0s
 * <br>
 * Needed budget for current results: 86%
 * <br>
 * This file contains test cases that represent failed calls, but not indicative of faults.
 */
public class EvoMaster_others_Test {

    
    private static final SutHandler controller = new em.embedded.eu.fayder.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test
    public void test_0() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/lang/%5CiX?fields=Cxrg")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test
    public void test_1() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/callingcode/xwY%5C4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test
    public void test_2() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/region/I%5CxSG?fields=l9KOSKv2Xd")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test
    public void test_3() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/callingcode/%5CzDduWH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test
    public void test_4() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/capital/%5CU")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test
    public void test_5() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/subregion/A%5CK?fields=0KYgpmrem5omc")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test
    public void test_6() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/name/%5CL?fullText=true")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/html");
        
    }
    
    
    @Test
    public void test_7() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha?codes=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_8() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha/e")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_9() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha?codes=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_10() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha/Q")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_11() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha?codes=k")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_12() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha?" + 
                    "fields=n79Mx&" + 
                    "codes=B")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_13() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/currency/9eRDFwO")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_14() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/currency/PWkiRreJ9REVo49T")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_15() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha?codes=88e5_wg47RXSfFzM")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_16() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha?" + 
                    "fields=PH&" + 
                    "codes=H0_zBLEKWBLPIf")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_17() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha/9oI8kkhnhc")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_18() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha/2UI87hGp3k")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Bad Request"));
        
    }
    
    
    @Test
    public void test_19() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/currency/;Js")
                .then()
                .statusCode(404)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test
    public void test_20() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha/Q_S?fields=t7")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_21() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/alpha/M5")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_22() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/callingcode/FBn?fields=PW8oQZka7ayF")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_23() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/capital/WLitMlLjfdbvqi")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_24() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/region/F6B?fields=Z_WK")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_25() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/subregion/J?fields=LTK0w59jk_dVkh2Q")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_26() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/lang/Yp")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_27() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/lang/7lK?fields=PF4pFUVRUNO")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_28() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/lang/lYIdy3m1Kjll1n?fields=FnkHZf")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_29() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/alpha/Y_?fields=t7")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_30() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/demonym/jeqokLN1Lkgdzmh?fields=rVEoghimrbOAJxB")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_31() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/currency/t4t")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_32() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/region/yaFhhe2V6TOSZ")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_33() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/subregion/4jVvhAF5R4")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_34() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/capital/bZaBm5iGfp805R5")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_35() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/currency/Tk_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_36() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/callingcode/ReASs")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_37() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/lang/p1s4YWQ269Ys")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_38() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/regionalbloc/BQE4TIK7id9hk6Na")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_39() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v2/name/zWjuw3CGFoj4t?fullText=true")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }
    
    
    @Test
    public void test_40() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/v1/name/ZY")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'message'", containsString("Not Found"));
        
    }


}
